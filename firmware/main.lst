   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.text
  11               	.Ltext0:
  12               		.cfi_sections	.debug_frame
  13               	.global	EVENT_USB_Device_ConfigurationChanged
  15               	EVENT_USB_Device_ConfigurationChanged:
  16               	.LFB57:
  17               		.file 1 "Framework.h"
   1:Framework.h   **** #pragma once
   2:Framework.h   **** #define F_CPU 32000000UL
   3:Framework.h   **** 
   4:Framework.h   **** // includes
   5:Framework.h   **** #include <avr/interrupt.h>
   6:Framework.h   **** #include <util/delay.h>
   7:Framework.h   **** #include "Descriptors.h"
   8:Framework.h   **** #include "usb/usb.h"
   9:Framework.h   **** #include "usb/usb_pipe.h"
  10:Framework.h   **** #include <avr/eeprom.h>
  11:Framework.h   **** #include <avr/io.h>
  12:Framework.h   **** 
  13:Framework.h   **** USB_PIPE(ep_in, 0x81 | USB_EP_PP, USB_EP_TYPE_BULK_gc, 64, 8, PIPE_ENABLE_FLUSH);
  14:Framework.h   **** 
  15:Framework.h   **** bool timeout_or_sampling_no_longer_enabled = 0;
  16:Framework.h   **** 
  17:Framework.h   **** // Queue a byte to be sent over the bulk EP. Blocks if the buffer is full
  18:Framework.h   **** static inline void send_byte(uint8_t byte){
  19:Framework.h   ****     // this should never actually block if your buffer is big enough
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
  21:Framework.h   **** 	usb_pipe_write_byte(&ep_in, byte);
  22:Framework.h   **** }
  23:Framework.h   **** 
  24:Framework.h   **** // Sends a break to end the USB read and flushes the USB pipe
  25:Framework.h   **** static inline void break_and_flush(){
  26:Framework.h   ****     usb_pipe_flush(&ep_in);
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
  30:Framework.h   ****             usb_pipe_reset(&ep_in);
  31:Framework.h   ****             return;
  32:Framework.h   ****         }
  33:Framework.h   ****     }
  34:Framework.h   **** } 
  35:Framework.h   **** 
  36:Framework.h   **** void EVENT_USB_Device_ConfigurationChanged(uint8_t config){
  18               		.loc 1 36 0
  19               		.cfi_startproc
  20               	.LVL0:
  21               	/* prologue: function */
  22               	/* frame size = 0 */
  23               	/* stack size = 0 */
  24               	.L__stack_usage = 0
  25               	.LBB388:
  26               	.LBB389:
  27               		.file 2 "usb/usb_pipe.h"
   1:usb/usb_pipe.h **** #include "pipe.h"
   2:usb/usb_pipe.h **** #include "usb.h"
   3:usb/usb_pipe.h **** 
   4:usb/usb_pipe.h **** #include <util/atomic.h>
   5:usb/usb_pipe.h **** #ifndef PIPE_ATOMIC
   6:usb/usb_pipe.h **** #define PIPE_ATOMIC ATOMIC_RESTORESTATE
   7:usb/usb_pipe.h **** #endif 
   8:usb/usb_pipe.h **** 
   9:usb/usb_pipe.h **** typedef struct USB_Pipe_data{
  10:usb/usb_pipe.h **** 	bool bank;
  11:usb/usb_pipe.h **** 	uint8_t flush;
  12:usb/usb_pipe.h **** 	uint16_t packet_offset; // Index into current packet for byte mode
  13:usb/usb_pipe.h **** } USB_Pipe_data;
  14:usb/usb_pipe.h **** 
  15:usb/usb_pipe.h **** // Immutable part, constant-folded at compile time
  16:usb/usb_pipe.h **** typedef struct USB_Pipe{
  17:usb/usb_pipe.h **** 	uint8_t ep;
  18:usb/usb_pipe.h **** 	uint8_t type;
  19:usb/usb_pipe.h **** 	USB_Pipe_data* data;
  20:usb/usb_pipe.h **** 	const Pipe* pipe;
  21:usb/usb_pipe.h **** 	uint8_t features;
  22:usb/usb_pipe.h **** } USB_Pipe;
  23:usb/usb_pipe.h **** 
  24:usb/usb_pipe.h **** #define PIPE_ENABLE_FLUSH (1<<0)
  25:usb/usb_pipe.h **** 
  26:usb/usb_pipe.h **** #define USB_PIPE(NAME, EPNO, TYPE, PACKET_SIZE, BUFFER_PACKETS, FEATURES) \
  27:usb/usb_pipe.h **** 	PIPE(NAME##_pipe, (BUFFER_PACKETS), (PACKET_SIZE),               \
  28:usb/usb_pipe.h **** 		((EPNO)&USB_EP_IN)?0:2,                      \
  29:usb/usb_pipe.h **** 		((EPNO)&USB_EP_IN)?2:0                       \
  30:usb/usb_pipe.h **** 	);                                               \
  31:usb/usb_pipe.h **** 	USB_Pipe_data NAME##_data = {      \
  32:usb/usb_pipe.h **** 		.bank = 0,                   \
  33:usb/usb_pipe.h **** 		.flush = 0,                    \
  34:usb/usb_pipe.h **** 	};                                 \
  35:usb/usb_pipe.h **** 	const static USB_Pipe NAME = {     \
  36:usb/usb_pipe.h **** 		.ep = (EPNO),                  \
  37:usb/usb_pipe.h **** 		.type = (TYPE),                \
  38:usb/usb_pipe.h **** 		.data = &(NAME##_data),        \
  39:usb/usb_pipe.h **** 		.pipe = &(NAME##_pipe),        \
  40:usb/usb_pipe.h **** 		.features = (FEATURES),        \
  41:usb/usb_pipe.h **** 	};                                 \
  42:usb/usb_pipe.h **** 
  43:usb/usb_pipe.h **** static inline void usb_pipe_init(const USB_Pipe* p){
  44:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
  28               		.loc 2 44 0
  29 0000 2FB7      		in r18,__SREG__
  30               	.LVL1:
  31               	.LBB390:
  32               	.LBB391:
  33               		.file 3 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h"
   1:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    All rights reserved.
   3:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
   4:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
   7:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  10:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      the documentation and/or other materials provided with the
  13:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      distribution.
  14:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  15:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      from this software without specific prior written permission.
  18:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  19:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** */
  31:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  32:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** /* $Id: atomic.h 2158 2010-06-10 15:48:28Z joerg_wunsch $ */
  33:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  34:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  37:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #include <avr/io.h>
  38:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #include <avr/interrupt.h>
  39:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  40:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #if !defined(__DOXYGEN__)
  41:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** /* Internal helper functions. */
  42:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  44:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     sei();
  45:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     return 1;
  46:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  47:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  48:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  49:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
  34               		.loc 3 50 0
  35               	/* #APP */
  36               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
  37 0002 F894      		cli
  38               	 ;  0 "" 2
  39               	.LVL2:
  40               	/* #NOAPP */
  41               	.LBE391:
  42               	.LBE390:
  43               	.LBB392:
  44               	.LBB393:
  45               		.file 4 "usb/pipe.h"
   1:usb/pipe.h    **** // Ring buffer that takes heavy advantage of constant folding
   2:usb/pipe.h    **** #pragma once
   3:usb/pipe.h    **** 
   4:usb/pipe.h    **** #include "Common.h"
   5:usb/pipe.h    **** 
   6:usb/pipe.h    **** // Mutable part, becomes an actual struct
   7:usb/pipe.h    **** typedef struct Pipe_data{
   8:usb/pipe.h    **** 	uint8_t* read_ptr;
   9:usb/pipe.h    **** 	uint8_t* write_ptr;
  10:usb/pipe.h    **** 	int8_t count; // available slots
  11:usb/pipe.h    **** } Pipe_data;
  12:usb/pipe.h    **** 
  13:usb/pipe.h    **** // Immutable part, constant-folded at compile time
  14:usb/pipe.h    **** typedef struct Pipe{
  15:usb/pipe.h    **** 	Pipe_data* data;
  16:usb/pipe.h    **** 	uint8_t* buffer;
  17:usb/pipe.h    **** 	uint8_t  slots;         // Number of slots in the buffer
  18:usb/pipe.h    **** 	uint8_t reserve_read;  // Slots to prevent reading so they are available to writer
  19:usb/pipe.h    **** 	uint8_t reserve_write; // Slots to prevent writing so they are available to reader
  20:usb/pipe.h    **** 	uint16_t size;          // Size of a buffer slot in bytes
  21:usb/pipe.h    **** } Pipe;
  22:usb/pipe.h    **** 
  23:usb/pipe.h    **** #define PIPE_H(NAME, SLOTS, SIZE, RESERVE_READ, RESERVE_WRITE)       \
  24:usb/pipe.h    **** 	extern Pipe_data NAME##_data;         \
  25:usb/pipe.h    **** 	extern uint8_t NAME##_buffer[(SLOTS)*(SIZE)]; \
  26:usb/pipe.h    **** 	const static Pipe NAME = {            \
  27:usb/pipe.h    **** 		.data = &(NAME##_data),           \
  28:usb/pipe.h    **** 		.buffer = &((NAME##_buffer)[0]),  \
  29:usb/pipe.h    **** 		.slots = (SLOTS),                 \
  30:usb/pipe.h    **** 		.size = (SIZE),                   \
  31:usb/pipe.h    **** 		.reserve_read = (RESERVE_READ),   \
  32:usb/pipe.h    **** 		.reserve_write = (RESERVE_WRITE), \
  33:usb/pipe.h    **** 	};
  34:usb/pipe.h    **** 
  35:usb/pipe.h    **** 
  36:usb/pipe.h    **** #define PIPE_C(NAME, SLOTS, SIZE)                   \
  37:usb/pipe.h    **** 	uint8_t NAME##_buffer[(SLOTS)*(SIZE)];           \
  38:usb/pipe.h    **** 	Pipe_data NAME##_data = {                \
  39:usb/pipe.h    **** 		.count = 0,                          \
  40:usb/pipe.h    **** 		.read_ptr = &((NAME##_buffer)[0]),                       \
  41:usb/pipe.h    **** 		.write_ptr = &((NAME##_buffer)[0]),                      \
  42:usb/pipe.h    **** 	};
  43:usb/pipe.h    **** 
  44:usb/pipe.h    **** #define PIPE(NAME, SLOTS, SIZE, RESERVE_READ, RESERVE_WRITE) \
  45:usb/pipe.h    **** 	PIPE_H(NAME, SLOTS, SIZE, RESERVE_READ, RESERVE_WRITE)   \
  46:usb/pipe.h    **** 	PIPE_C(NAME, SLOTS, SIZE)
  47:usb/pipe.h    **** 
  48:usb/pipe.h    **** // Number of slots available to read
  49:usb/pipe.h    **** static inline int8_t pipe_can_read(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  50:usb/pipe.h    **** static inline int8_t pipe_can_read(const Pipe* pipe){
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
  52:usb/pipe.h    **** }
  53:usb/pipe.h    **** 
  54:usb/pipe.h    **** // Number of slots available to write
  55:usb/pipe.h    **** static inline int8_t pipe_can_write(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  56:usb/pipe.h    **** static inline int8_t pipe_can_write(const Pipe* pipe){
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
  58:usb/pipe.h    **** }
  59:usb/pipe.h    **** 
  60:usb/pipe.h    **** static inline uint8_t* pipe_read_ptr(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  61:usb/pipe.h    **** static inline uint8_t* pipe_read_ptr(const Pipe* pipe){
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
  63:usb/pipe.h    **** }
  64:usb/pipe.h    **** 
  65:usb/pipe.h    **** static inline uint8_t* pipe_write_ptr(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  66:usb/pipe.h    **** static inline uint8_t* pipe_write_ptr(const Pipe* pipe){
  67:usb/pipe.h    **** 	return pipe->data->write_ptr;
  68:usb/pipe.h    **** }
  69:usb/pipe.h    **** 
  70:usb/pipe.h    **** static inline void pipe_done_read(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  71:usb/pipe.h    **** static inline void pipe_done_read(const Pipe* pipe){
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
  74:usb/pipe.h    **** 	// Assumes buffer_size % slot_size == 0 and all accesses aligned
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
  77:usb/pipe.h    **** }
  78:usb/pipe.h    **** 
  79:usb/pipe.h    **** static inline void pipe_done_write(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  80:usb/pipe.h    **** static inline void pipe_done_write(const Pipe* pipe){
  81:usb/pipe.h    **** 	pipe->data->count += 1;
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
  83:usb/pipe.h    **** 	// Assumes buffer_size % slot_size == 0 and all accesses aligned
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
  86:usb/pipe.h    **** }
  87:usb/pipe.h    **** 
  88:usb/pipe.h    **** static inline void pipe_reset(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  89:usb/pipe.h    **** static inline void pipe_reset(const Pipe* pipe){
  90:usb/pipe.h    **** 	pipe->data->count = 0;
  46               		.loc 4 90 0
  47 0004 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
  91:usb/pipe.h    **** 	pipe->data->read_ptr = pipe->data->write_ptr = pipe->buffer;
  48               		.loc 4 91 0
  49 0008 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
  50 000a 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
  51               	.LVL3:
  52 000c 8093 0000 		sts ep_in_pipe_data+2,r24
  53 0010 9093 0000 		sts ep_in_pipe_data+2+1,r25
  54 0014 8093 0000 		sts ep_in_pipe_data,r24
  55 0018 9093 0000 		sts ep_in_pipe_data+1,r25
  56               	.LVL4:
  57               	.LBE393:
  58               	.LBE392:
  59               	.LBB394:
  60               	.LBB395:
  61               	.LBB396:
  62               		.file 5 "usb/usb.h"
   1:usb/usb.h     **** // Minimal USB Stack for ATxmega32a4u and related
   2:usb/usb.h     **** // http://nonolithlabs.com
   3:usb/usb.h     **** // (C) 2011 Kevin Mehall (Nonolith Labs) <km@kevinmehall.net>
   4:usb/usb.h     **** //
   5:usb/usb.h     **** // Heavily borrows from LUFA
   6:usb/usb.h     **** // Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
   7:usb/usb.h     **** //
   8:usb/usb.h     **** // Licensed under the terms of the GNU GPLv3+
   9:usb/usb.h     **** 
  10:usb/usb.h     **** #pragma once
  11:usb/usb.h     **** 
  12:usb/usb.h     **** #include <avr/io.h>
  13:usb/usb.h     **** 
  14:usb/usb.h     **** #define CPU_TO_LE16(x) x
  15:usb/usb.h     **** 
  16:usb/usb.h     **** struct USB_Request_Header;
  17:usb/usb.h     **** typedef struct USB_Request_Header USB_Requst_Header_t;
  18:usb/usb.h     **** 
  19:usb/usb.h     **** #include "StdDescriptors.h"
  20:usb/usb.h     **** #include "StdRequestType.h"
  21:usb/usb.h     **** #include "Events.h"
  22:usb/usb.h     **** 
  23:usb/usb.h     **** #ifndef USB_MAXEP
  24:usb/usb.h     **** 	#define USB_MAXEP 1
  25:usb/usb.h     **** #endif
  26:usb/usb.h     **** 
  27:usb/usb.h     **** #ifndef USB_EP0SIZE
  28:usb/usb.h     **** 	#define EP0SIZE 64
  29:usb/usb.h     **** #endif
  30:usb/usb.h     **** 
  31:usb/usb.h     **** typedef union USB_EP_pair{
  32:usb/usb.h     **** 	union{
  33:usb/usb.h     **** 		struct{
  34:usb/usb.h     **** 			USB_EP_t out;
  35:usb/usb.h     **** 			USB_EP_t in;
  36:usb/usb.h     **** 		};
  37:usb/usb.h     **** 		USB_EP_t ep[2];
  38:usb/usb.h     **** 	};
  39:usb/usb.h     **** } ATTR_PACKED USB_EP_pair_t;
  40:usb/usb.h     **** 
  41:usb/usb.h     **** extern uint8_t ep0_buf_in[USB_EP0SIZE];
  42:usb/usb.h     **** extern uint8_t ep0_buf_out[USB_EP0SIZE];
  43:usb/usb.h     **** extern USB_EP_pair_t endpoints[USB_MAXEP+1];
  44:usb/usb.h     **** 
  45:usb/usb.h     **** /** String descriptor index for the device's unique serial number string descriptor within the devi
  46:usb/usb.h     ****  *  This unique serial number is used by the host to associate resources to the device (such as dri
  47:usb/usb.h     ****  *  number allocations) to a device regardless of the port it is plugged in to on the host. Some mi
  48:usb/usb.h     ****  *  a unique serial number internally, and setting the device descriptors serial number string inde
  49:usb/usb.h     ****  *  will cause it to use the internal serial number.
  50:usb/usb.h     ****  *
  51:usb/usb.h     ****  *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host to 
  52:usb/usb.h     ****  *  number for the device.
  53:usb/usb.h     ****  */
  54:usb/usb.h     **** #define USE_INTERNAL_SERIAL            0xDC
  55:usb/usb.h     **** 
  56:usb/usb.h     **** /** Length of the device's unique internal serial number, in bits, if present on the selected micro
  57:usb/usb.h     ****  *  model.
  58:usb/usb.h     ****  */
  59:usb/usb.h     **** #define INTERNAL_SERIAL_LENGTH_BITS    (8 * (1 + (offsetof(NVM_PROD_SIGNATURES_t, COORDY1) - offset
  60:usb/usb.h     **** 
  61:usb/usb.h     **** /** Start address of the internal serial number, in the appropriate address space, if present on th
  62:usb/usb.h     ****  *  model.
  63:usb/usb.h     ****  */
  64:usb/usb.h     **** #define INTERNAL_SERIAL_START_ADDRESS  offsetof(NVM_PROD_SIGNATURES_t, LOTNUM0)
  65:usb/usb.h     **** 
  66:usb/usb.h     **** /* Enums: */
  67:usb/usb.h     **** 	/** Enum for the various states of the USB Device state machine. Only some states are
  68:usb/usb.h     **** 	 *  implemented in the LUFA library - other states are left to the user to implement.
  69:usb/usb.h     **** 	 *
  70:usb/usb.h     **** 	 *  For information on each possible USB device state, refer to the USB 2.0 specification.
  71:usb/usb.h     **** 	 *
  72:usb/usb.h     **** 	 *  \see \ref USB_DeviceState, which stores the current device state machine state.
  73:usb/usb.h     **** 	 */
  74:usb/usb.h     **** 	enum USB_Device_States_t
  75:usb/usb.h     **** 	{
  76:usb/usb.h     **** 		DEVICE_STATE_Unattached                   = 0, /**< Internally implemented by the library. This s
  77:usb/usb.h     **** 		                                                *   that the device is not currently connected to
  78:usb/usb.h     **** 		                                                */
  79:usb/usb.h     **** 		DEVICE_STATE_Powered                      = 1, /**< Internally implemented by the library. This s
  80:usb/usb.h     **** 		                                                *   that the device is connected to a host, but e
  81:usb/usb.h     **** 		                                                *   yet begun.
  82:usb/usb.h     **** 		                                                */
  83:usb/usb.h     **** 		DEVICE_STATE_Default                      = 2, /**< Internally implemented by the library. This s
  84:usb/usb.h     **** 		                                                *   that the device's USB bus has been reset by t
  85:usb/usb.h     **** 		                                                *   now waiting for the host to begin the enumera
  86:usb/usb.h     **** 		                                                */
  87:usb/usb.h     **** 		DEVICE_STATE_Addressed                    = 3, /**< Internally implemented by the library. This s
  88:usb/usb.h     **** 		                                                *   that the device has been addressed by the USB
  89:usb/usb.h     **** 		                                                *   yet configured.
  90:usb/usb.h     **** 		                                                */
  91:usb/usb.h     **** 		DEVICE_STATE_Configured                   = 4, /**< May be implemented by the user project. This 
  92:usb/usb.h     **** 		                                                *   that the device has been enumerated by the ho
  93:usb/usb.h     **** 		                                                *   for USB communications to begin.
  94:usb/usb.h     **** 		                                                */
  95:usb/usb.h     **** 		DEVICE_STATE_Suspended                    = 5, /**< May be implemented by the user project. This 
  96:usb/usb.h     **** 		                                                *   that the USB bus has been suspended by the ho
  97:usb/usb.h     **** 		                                                *   should power down to a minimal power level un
  98:usb/usb.h     **** 		                                                *   resumed.
  99:usb/usb.h     **** 		                                                */
 100:usb/usb.h     **** 	};
 101:usb/usb.h     **** 
 102:usb/usb.h     **** #define USB_EP_size_to_gc(x)  ((x <= 8   )?USB_EP_BUFSIZE_8_gc:\
 103:usb/usb.h     ****                                (x <= 16  )?USB_EP_BUFSIZE_16_gc:\
 104:usb/usb.h     ****                                (x <= 32  )?USB_EP_BUFSIZE_32_gc:\
 105:usb/usb.h     ****                                (x <= 64  )?USB_EP_BUFSIZE_64_gc:\
 106:usb/usb.h     ****                                (x <= 128 )?USB_EP_BUFSIZE_128_gc:\
 107:usb/usb.h     ****                                (x <= 256 )?USB_EP_BUFSIZE_256_gc:\
 108:usb/usb.h     ****                                (x <= 512 )?USB_EP_BUFSIZE_512_gc:\
 109:usb/usb.h     ****                                            USB_EP_BUFSIZE_1023_gc)
 110:usb/usb.h     **** 
 111:usb/usb.h     **** #define USB_EP_IN 0x80
 112:usb/usb.h     **** 
 113:usb/usb.h     **** // Flag in the endpoint address to indicate that the endpoint should use
 114:usb/usb.h     **** // PingPong (double buffer) mode. This is not actually part of the endpoint
 115:usb/usb.h     **** // address as seen by the host. If PP is enabled, this flag needs to be part
 116:usb/usb.h     **** // of the address passed to all USB_EP_* functions.
 117:usb/usb.h     **** #define USB_EP_PP 0x40
 118:usb/usb.h     **** 	
 119:usb/usb.h     **** extern volatile uint8_t USB_DeviceState;
 120:usb/usb.h     **** extern volatile uint8_t USB_Device_ConfigurationNumber;
 121:usb/usb.h     **** 
 122:usb/usb.h     **** /** Configure the XMEGA's clock for use with USB.  */
 123:usb/usb.h     **** void USB_ConfigureClock(void);
 124:usb/usb.h     **** 
 125:usb/usb.h     **** /** Initialize USB functionality */
 126:usb/usb.h     **** void USB_Init(void);
 127:usb/usb.h     **** void USB_ResetInterface(void);
 128:usb/usb.h     **** 
 129:usb/usb.h     **** #define _USB_EP(epaddr) \
 130:usb/usb.h     **** 	USB_EP_pair_t* pair = &endpoints[(epaddr & 0x3F)]; \
 131:usb/usb.h     **** 	USB_EP_t* e __attribute__ ((unused)) = &pair->ep[!!(epaddr&0x80)]; \
 132:usb/usb.h     **** 	
 133:usb/usb.h     **** #define _USB_EP_OTHER(epaddr) \
 134:usb/usb.h     **** 	USB_EP_t* other = &pair->ep[!(epaddr&0x80)]
 135:usb/usb.h     **** 	
 136:usb/usb.h     **** #define _USB_EP_BANK(epaddr, bank) \
 137:usb/usb.h     **** 	USB_EP_t* b = &pair->ep[!!(epaddr&0x80) != bank]
 138:usb/usb.h     **** 
 139:usb/usb.h     **** inline void USB_ep_init(uint8_t ep, uint8_t type, uint16_t bufsize) ATTR_ALWAYS_INLINE;
 140:usb/usb.h     **** inline void USB_ep_init(uint8_t ep, uint8_t type, uint16_t bufsize){
 141:usb/usb.h     **** 	_USB_EP(ep);
 142:usb/usb.h     **** 	if (ep & USB_EP_PP){
 143:usb/usb.h     **** 		_USB_EP_OTHER(ep);
 144:usb/usb.h     **** 		e->STATUS = USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm;
  63               		.loc 5 144 0
  64 001c 80E0      		ldi r24,lo8(endpoints+24)
  65 001e 90E0      		ldi r25,hi8(endpoints+24)
  66 0020 36E0      		ldi r19,lo8(6)
  67 0022 3093 0000 		sts endpoints+24,r19
 145:usb/usb.h     **** 		e->CTRL = type | USB_EP_size_to_gc(bufsize) | USB_EP_PINGPONG_bm;
  68               		.loc 5 145 0
  69 0026 33E9      		ldi r19,lo8(-109)
  70 0028 3093 0000 		sts endpoints+25,r19
 146:usb/usb.h     **** 		other->CTRL = 0;
  71               		.loc 5 146 0
  72 002c FC01      		movw r30,r24
  73 002e 3797      		sbiw r30,7
  74 0030 1082      		st Z,__zero_reg__
 147:usb/usb.h     **** 		other->STATUS = USB_EP_BUSNACK0_bm;
  75               		.loc 5 147 0
  76 0032 0897      		sbiw r24,8
  77 0034 32E0      		ldi r19,lo8(2)
  78 0036 FC01      		movw r30,r24
  79 0038 3083      		st Z,r19
  80               	.LBE396:
  81               	.LBE395:
  82               	.LBE394:
  45:usb/usb_pipe.h **** 		pipe_reset(p->pipe);
  46:usb/usb_pipe.h **** 		USB_ep_init(p->ep, p->type, p->pipe->size);
  47:usb/usb_pipe.h **** 		p->data->bank = 0;
  83               		.loc 2 47 0
  84 003a 1092 0000 		sts ep_in_data,__zero_reg__
  48:usb/usb_pipe.h **** 		p->data->flush = 0;
  85               		.loc 2 48 0
  86 003e 1092 0000 		sts ep_in_data+1,__zero_reg__
  49:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
  87               		.loc 2 49 0
  88 0042 1092 0000 		sts ep_in_data+2,__zero_reg__
  89 0046 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  90               	.LVL5:
  91               	.LBB397:
  92               	.LBB398:
  51:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     return 1;
  52:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  53:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  54:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  56:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     sei();
  57:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  58:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     (void)__s;
  59:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  60:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  61:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ void __iCliParam(const uint8_t *__s)
  62:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  63:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
  64:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  65:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     (void)__s;
  66:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  67:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  68:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ void __iRestore(const  uint8_t *__s)
  69:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
  93               		.loc 3 70 0
  94 004a 2FBF      		out __SREG__,r18
  71:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  95               		.loc 3 71 0
  96               	/* epilogue start */
  97               	.LBE398:
  98               	.LBE397:
  99               	.LBE389:
 100               	.LBE388:
  37:Framework.h   **** 	usb_pipe_init(&ep_in);
  38:Framework.h   **** }
 101               		.loc 1 38 0
 102 004c 0895      		ret
 103               		.cfi_endproc
 104               	.LFE57:
 106               	.global	__vector_125
 108               	__vector_125:
 109               	.LFB58:
  39:Framework.h   **** 
  40:Framework.h   **** ISR(USB_BUSEVENT_vect){
 110               		.loc 1 40 0
 111               		.cfi_startproc
 112 004e 1F92      		push r1
 113               	.LCFI0:
 114               		.cfi_def_cfa_offset 3
 115               		.cfi_offset 1, -2
 116 0050 0F92      		push r0
 117               	.LCFI1:
 118               		.cfi_def_cfa_offset 4
 119               		.cfi_offset 0, -3
 120 0052 0FB6      		in r0,__SREG__
 121 0054 0F92      		push r0
 122 0056 1124      		clr __zero_reg__
 123 0058 2F93      		push r18
 124               	.LCFI2:
 125               		.cfi_def_cfa_offset 5
 126               		.cfi_offset 18, -4
 127 005a 3F93      		push r19
 128               	.LCFI3:
 129               		.cfi_def_cfa_offset 6
 130               		.cfi_offset 19, -5
 131 005c 4F93      		push r20
 132               	.LCFI4:
 133               		.cfi_def_cfa_offset 7
 134               		.cfi_offset 20, -6
 135 005e 5F93      		push r21
 136               	.LCFI5:
 137               		.cfi_def_cfa_offset 8
 138               		.cfi_offset 21, -7
 139 0060 6F93      		push r22
 140               	.LCFI6:
 141               		.cfi_def_cfa_offset 9
 142               		.cfi_offset 22, -8
 143 0062 7F93      		push r23
 144               	.LCFI7:
 145               		.cfi_def_cfa_offset 10
 146               		.cfi_offset 23, -9
 147 0064 8F93      		push r24
 148               	.LCFI8:
 149               		.cfi_def_cfa_offset 11
 150               		.cfi_offset 24, -10
 151 0066 9F93      		push r25
 152               	.LCFI9:
 153               		.cfi_def_cfa_offset 12
 154               		.cfi_offset 25, -11
 155 0068 AF93      		push r26
 156               	.LCFI10:
 157               		.cfi_def_cfa_offset 13
 158               		.cfi_offset 26, -12
 159 006a BF93      		push r27
 160               	.LCFI11:
 161               		.cfi_def_cfa_offset 14
 162               		.cfi_offset 27, -13
 163 006c EF93      		push r30
 164               	.LCFI12:
 165               		.cfi_def_cfa_offset 15
 166               		.cfi_offset 30, -14
 167 006e FF93      		push r31
 168               	.LCFI13:
 169               		.cfi_def_cfa_offset 16
 170               		.cfi_offset 31, -15
 171               	/* prologue: Signal */
 172               	/* frame size = 0 */
 173               	/* stack size = 15 */
 174               	.L__stack_usage = 15
  41:Framework.h   **** 	if (USB.INTFLAGSACLR & USB_SOFIF_bm){
 175               		.loc 1 41 0
 176 0070 E0EC      		ldi r30,lo8(1216)
 177 0072 F4E0      		ldi r31,hi8(1216)
 178 0074 8091 CA04 		lds r24,1226
 179 0078 87FD      		sbrc r24,7
 180 007a 00C0      		rjmp .L8
  42:Framework.h   **** 		USB.INTFLAGSACLR = USB_SOFIF_bm;
  43:Framework.h   **** 	}else if (USB.INTFLAGSACLR & (USB_CRCIF_bm | USB_UNFIF_bm | USB_OVFIF_bm)){
 181               		.loc 1 43 0
 182 007c 8091 CA04 		lds r24,1226
 183 0080 8E70      		andi r24,lo8(14)
 184 0082 01F4      		brne .L9
  44:Framework.h   **** 		USB.INTFLAGSACLR = (USB_CRCIF_bm | USB_UNFIF_bm | USB_OVFIF_bm);
  45:Framework.h   **** 	}else if (USB.INTFLAGSACLR & USB_STALLIF_bm){
 185               		.loc 1 45 0
 186 0084 8091 CA04 		lds r24,1226
 187 0088 80FD      		sbrc r24,0
 188 008a 00C0      		rjmp .L10
  46:Framework.h   **** 		USB.INTFLAGSACLR = USB_STALLIF_bm;
  47:Framework.h   **** 	}else{
  48:Framework.h   **** 		USB.INTFLAGSACLR = USB_SUSPENDIF_bm | USB_RESUMEIF_bm | USB_RSTIF_bm;
 189               		.loc 1 48 0
 190 008c 80E7      		ldi r24,lo8(112)
 191 008e 8287      		std Z+10,r24
 192               	.LBB399:
 193               	.LBB400:
 148:usb/usb.h     **** 	}else{
 149:usb/usb.h     **** 		e->STATUS = USB_EP_BUSNACK0_bm;
 150:usb/usb.h     **** 		e->CTRL = type | USB_EP_size_to_gc(bufsize);
 151:usb/usb.h     **** 	}
 152:usb/usb.h     **** }
 153:usb/usb.h     **** 
 154:usb/usb.h     **** inline void USB_ep_cancel(uint8_t ep) ATTR_ALWAYS_INLINE;
 155:usb/usb.h     **** inline void USB_ep_cancel(uint8_t ep){
 156:usb/usb.h     **** 	_USB_EP(ep);
 157:usb/usb.h     **** 	if (ep & USB_EP_PP){
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 160:usb/usb.h     **** 	}else{
 161:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm);
 162:usb/usb.h     **** 	}
 163:usb/usb.h     **** }
 164:usb/usb.h     **** 
 165:usb/usb.h     **** inline void USB_ep_start_bank(uint8_t ep, uint8_t bank, uint8_t* addr, uint16_t size){
 166:usb/usb.h     **** 	_USB_EP(ep);
 167:usb/usb.h     **** 	_USB_EP_BANK(ep, bank);
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 170:usb/usb.h     **** 	
 171:usb/usb.h     **** 	//TODO: the OVF, STALL, and TRNCOMPL flags are in b->STATUS. Clear them if anyone cares.
 172:usb/usb.h     **** 
 173:usb/usb.h     **** 	if (bank==0){
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 175:usb/usb.h     **** 	}else{
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 177:usb/usb.h     **** 	}
 178:usb/usb.h     **** }
 179:usb/usb.h     **** 
 180:usb/usb.h     **** inline void USB_ep_out_start(uint8_t ep, uint8_t* addr) ATTR_ALWAYS_INLINE;
 181:usb/usb.h     **** inline void USB_ep_out_start(uint8_t ep, uint8_t* addr){
 182:usb/usb.h     **** 	USB_ep_start_bank(ep, 0, addr, 0);
 183:usb/usb.h     **** }
 184:usb/usb.h     **** 
 185:usb/usb.h     **** inline void USB_ep_in_start(uint8_t ep, uint8_t* addr, uint16_t size) ATTR_ALWAYS_INLINE;
 186:usb/usb.h     **** inline void USB_ep_in_start(uint8_t ep, uint8_t* addr, uint16_t size){
 187:usb/usb.h     **** 	USB_ep_start_bank(ep, 0, addr, size);
 188:usb/usb.h     **** }
 189:usb/usb.h     **** 
 190:usb/usb.h     **** inline bool USB_ep_done_bank(uint8_t ep, uint8_t bank){
 191:usb/usb.h     **** 	_USB_EP(ep);
 192:usb/usb.h     **** 	return e->STATUS & (bank?USB_EP_TRNCOMPL1_bm:USB_EP_TRNCOMPL0_bm);
 193:usb/usb.h     **** }
 194:usb/usb.h     **** 
 195:usb/usb.h     **** inline bool USB_ep_done(uint8_t ep) ATTR_ALWAYS_INLINE;
 196:usb/usb.h     **** inline bool USB_ep_done(uint8_t ep){
 197:usb/usb.h     **** 	_USB_EP(ep);
 198:usb/usb.h     **** 	if (ep & USB_EP_PP){
 199:usb/usb.h     **** 		return e->STATUS & (USB_EP_TRNCOMPL0_bm|USB_EP_TRNCOMPL1_bm);
 200:usb/usb.h     **** 	}else{
 201:usb/usb.h     **** 		// Because for ep0, TRNCOMPL1 is SETUP
 202:usb/usb.h     **** 		return e->STATUS & USB_EP_TRNCOMPL0_bm;
 203:usb/usb.h     **** 	}
 204:usb/usb.h     **** }
 205:usb/usb.h     **** 
 206:usb/usb.h     **** inline void USB_ep_clear_done(uint8_t ep) ATTR_ALWAYS_INLINE;
 207:usb/usb.h     **** inline void USB_ep_clear_done(uint8_t ep){
 208:usb/usb.h     **** 	_USB_EP(ep);
 209:usb/usb.h     **** 	if (ep & USB_EP_PP){
 210:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_TRNCOMPL0_bm|USB_EP_TRNCOMPL1_bm);
 211:usb/usb.h     **** 	}else{
 212:usb/usb.h     **** 		// Because for ep0, TRNCOMPL1 is SETUP
 213:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_TRNCOMPL0_bm);
 214:usb/usb.h     **** 	}
 215:usb/usb.h     **** }
 216:usb/usb.h     **** 
 217:usb/usb.h     **** inline bool USB_ep_ready(uint8_t ep) ATTR_ALWAYS_INLINE;
 218:usb/usb.h     **** inline bool USB_ep_ready(uint8_t ep){
 219:usb/usb.h     **** 	_USB_EP(ep);
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 221:usb/usb.h     **** }
 222:usb/usb.h     **** 
 223:usb/usb.h     **** inline bool USB_ep_empty(uint8_t ep) ATTR_ALWAYS_INLINE;
 224:usb/usb.h     **** inline bool USB_ep_empty(uint8_t ep){
 225:usb/usb.h     **** 	_USB_EP(ep);
 226:usb/usb.h     **** 	if (ep & USB_EP_PP){
 227:usb/usb.h     **** 		const uint8_t mask = (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 229:usb/usb.h     **** 	}else{
 230:usb/usb.h     **** 		return e->STATUS & USB_EP_BUSNACK0_bm;
 231:usb/usb.h     **** 	}
 232:usb/usb.h     **** }
 233:usb/usb.h     **** 
 234:usb/usb.h     **** inline uint16_t USB_ep_count_bank(uint8_t ep, uint8_t bank) ATTR_ALWAYS_INLINE;
 235:usb/usb.h     **** inline uint16_t USB_ep_count_bank(uint8_t ep, uint8_t bank){
 236:usb/usb.h     **** 	_USB_EP(ep);
 237:usb/usb.h     **** 	_USB_EP_BANK(ep, bank);
 238:usb/usb.h     **** 	return b->CNT;
 239:usb/usb.h     **** }
 240:usb/usb.h     **** 
 241:usb/usb.h     **** inline uint16_t USB_ep_count(uint8_t ep) ATTR_ALWAYS_INLINE;
 242:usb/usb.h     **** inline uint16_t USB_ep_count(uint8_t ep){
 243:usb/usb.h     **** 	return USB_ep_count_bank(ep, 0);
 244:usb/usb.h     **** }
 245:usb/usb.h     **** 
 246:usb/usb.h     **** inline void USB_ep0_send(uint8_t size){
 247:usb/usb.h     **** 	USB_ep_in_start(0x80, ep0_buf_in, size);
 248:usb/usb.h     **** }
 249:usb/usb.h     **** void USB_ep0_send_progmem(const uint8_t* addr, uint16_t size);
 250:usb/usb.h     **** 
 251:usb/usb.h     **** inline void USB_ep_wait(uint8_t ep) ATTR_ALWAYS_INLINE;
 252:usb/usb.h     **** inline void USB_ep_wait(uint8_t ep){
 253:usb/usb.h     **** 	while (!USB_ep_done(ep)){};
 254:usb/usb.h     **** }
 255:usb/usb.h     **** 
 256:usb/usb.h     **** /// Select a certain bank of an endpoint for the next transfer
 257:usb/usb.h     **** inline void USB_ep_set_bank(uint8_t ep, uint8_t bank) ATTR_ALWAYS_INLINE;
 258:usb/usb.h     **** inline void USB_ep_set_bank(uint8_t ep, uint8_t bank){
 259:usb/usb.h     **** 	_USB_EP(ep);
 260:usb/usb.h     **** 	if (bank){
 261:usb/usb.h     **** 		LASR16(&(e->STATUS), USB_EP_BANK_bm);
 262:usb/usb.h     **** 	}else{
 263:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BANK_bm);
 264:usb/usb.h     **** 	}
 265:usb/usb.h     **** }
 266:usb/usb.h     **** 
 267:usb/usb.h     **** /// Get the bank 0/1 which will handle the next request on this endpoint
 268:usb/usb.h     **** inline uint8_t USB_ep_get_bank(uint8_t ep) ATTR_ALWAYS_INLINE;
 269:usb/usb.h     **** inline uint8_t USB_ep_get_bank(uint8_t ep){
 270:usb/usb.h     **** 	_USB_EP(ep);
 271:usb/usb.h     **** 	return !!(e->STATUS & USB_EP_BANK_bm);
 272:usb/usb.h     **** }
 273:usb/usb.h     **** 
 274:usb/usb.h     **** 
 275:usb/usb.h     **** // Enable the OUT stage on the default control pipe. This happens automatically
 276:usb/usb.h     **** // upon the return of HandleSetup, but use this function if it needs to happen
 277:usb/usb.h     **** // before returning (e.g. with USB_ep_wait()).
 278:usb/usb.h     **** inline void USB_ep0_enableOut(void) ATTR_ALWAYS_INLINE;
 279:usb/usb.h     **** inline void USB_ep0_enableOut(void){
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 281:usb/usb.h     **** }
 282:usb/usb.h     **** 
 283:usb/usb.h     **** bool USB_HandleSetup(void);
 284:usb/usb.h     **** 
 285:usb/usb.h     **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 286:usb/usb.h     ****                                     const uint8_t wIndex,
 287:usb/usb.h     ****                                     const void** const DescriptorAddress);
 288:usb/usb.h     **** 
 289:usb/usb.h     **** /** Detaches the device from the USB bus. This has the effect of removing the device from any
 290:usb/usb.h     ****  *  attached host, ceasing USB communications. If no host is present, this prevents any host from
 291:usb/usb.h     ****  *  enumerating the device once attached until \ref USB_Attach() is called.
 292:usb/usb.h     ****  */
 293:usb/usb.h     **** static inline void USB_Detach(void) ATTR_ALWAYS_INLINE;
 294:usb/usb.h     **** static inline void USB_Detach(void)
 295:usb/usb.h     **** {
 296:usb/usb.h     **** 	USB.CTRLB &= ~USB_ATTACH_bm;
 297:usb/usb.h     **** }
 298:usb/usb.h     **** 
 299:usb/usb.h     **** /** Attaches the device to the USB bus. This announces the device's presence to any attached
 300:usb/usb.h     ****  *  USB host, starting the enumeration process. If no host is present, attaching the device
 301:usb/usb.h     ****  *  will allow for enumeration once a host is connected to the device.
 302:usb/usb.h     ****  */
 303:usb/usb.h     **** static inline void USB_Attach(void) ATTR_ALWAYS_INLINE;
 304:usb/usb.h     **** static inline void USB_Attach(void)
 305:usb/usb.h     **** {
 306:usb/usb.h     **** 	USB.CTRLB |= USB_ATTACH_bm;
 307:usb/usb.h     **** }
 308:usb/usb.h     **** 
 309:usb/usb.h     **** inline void USB_Evt_Task(void) ATTR_ALWAYS_INLINE;
 310:usb/usb.h     **** inline void USB_Evt_Task(void){
 311:usb/usb.h     **** 	if (USB.STATUS & USB_BUSRST_bm){
 194               		.loc 5 311 0
 195 0090 8091 C204 		lds r24,1218
 196 0094 80FF      		sbrs r24,0
 197 0096 00C0      		rjmp .L2
 312:usb/usb.h     **** 		USB.STATUS &= ~USB_BUSRST_bm;
 198               		.loc 5 312 0
 199 0098 8091 C204 		lds r24,1218
 200 009c 8E7F      		andi r24,lo8(-2)
 201 009e 8283      		std Z+2,r24
 313:usb/usb.h     **** 		USB_Init();
 202               		.loc 5 313 0
 203 00a0 0E94 0000 		call USB_Init
 204 00a4 00C0      		rjmp .L2
 205               	.L9:
 206               	.LBE400:
 207               	.LBE399:
  44:Framework.h   **** 		USB.INTFLAGSACLR = (USB_CRCIF_bm | USB_UNFIF_bm | USB_OVFIF_bm);
 208               		.loc 1 44 0
 209 00a6 8EE0      		ldi r24,lo8(14)
 210 00a8 8287      		std Z+10,r24
 211               	.L2:
 212               	/* epilogue start */
  49:Framework.h   **** 		USB_Evt_Task();
  50:Framework.h   **** 	}
  51:Framework.h   **** }
 213               		.loc 1 51 0
 214 00aa FF91      		pop r31
 215 00ac EF91      		pop r30
 216 00ae BF91      		pop r27
 217 00b0 AF91      		pop r26
 218 00b2 9F91      		pop r25
 219 00b4 8F91      		pop r24
 220 00b6 7F91      		pop r23
 221 00b8 6F91      		pop r22
 222 00ba 5F91      		pop r21
 223 00bc 4F91      		pop r20
 224 00be 3F91      		pop r19
 225 00c0 2F91      		pop r18
 226 00c2 0F90      		pop r0
 227 00c4 0FBE      		out __SREG__,r0
 228 00c6 0F90      		pop r0
 229 00c8 1F90      		pop r1
 230 00ca 1895      		reti
 231               	.L10:
  46:Framework.h   **** 		USB.INTFLAGSACLR = USB_STALLIF_bm;
 232               		.loc 1 46 0
 233 00cc 81E0      		ldi r24,lo8(1)
 234 00ce 8287      		std Z+10,r24
 235 00d0 00C0      		rjmp .L2
 236               	.L8:
  42:Framework.h   **** 		USB.INTFLAGSACLR = USB_SOFIF_bm;
 237               		.loc 1 42 0
 238 00d2 80E8      		ldi r24,lo8(-128)
 239 00d4 8287      		std Z+10,r24
 240 00d6 00C0      		rjmp .L2
 241               		.cfi_endproc
 242               	.LFE58:
 244               	.global	__vector_126
 246               	__vector_126:
 247               	.LFB59:
  52:Framework.h   **** 
  53:Framework.h   **** ISR(USB_TRNCOMPL_vect){
 248               		.loc 1 53 0
 249               		.cfi_startproc
 250 00d8 1F92      		push r1
 251               	.LCFI14:
 252               		.cfi_def_cfa_offset 3
 253               		.cfi_offset 1, -2
 254 00da 0F92      		push r0
 255               	.LCFI15:
 256               		.cfi_def_cfa_offset 4
 257               		.cfi_offset 0, -3
 258 00dc 0FB6      		in r0,__SREG__
 259 00de 0F92      		push r0
 260 00e0 1124      		clr __zero_reg__
 261 00e2 0F93      		push r16
 262               	.LCFI16:
 263               		.cfi_def_cfa_offset 5
 264               		.cfi_offset 16, -4
 265 00e4 2F93      		push r18
 266               	.LCFI17:
 267               		.cfi_def_cfa_offset 6
 268               		.cfi_offset 18, -5
 269 00e6 3F93      		push r19
 270               	.LCFI18:
 271               		.cfi_def_cfa_offset 7
 272               		.cfi_offset 19, -6
 273 00e8 4F93      		push r20
 274               	.LCFI19:
 275               		.cfi_def_cfa_offset 8
 276               		.cfi_offset 20, -7
 277 00ea 5F93      		push r21
 278               	.LCFI20:
 279               		.cfi_def_cfa_offset 9
 280               		.cfi_offset 21, -8
 281 00ec 6F93      		push r22
 282               	.LCFI21:
 283               		.cfi_def_cfa_offset 10
 284               		.cfi_offset 22, -9
 285 00ee 7F93      		push r23
 286               	.LCFI22:
 287               		.cfi_def_cfa_offset 11
 288               		.cfi_offset 23, -10
 289 00f0 8F93      		push r24
 290               	.LCFI23:
 291               		.cfi_def_cfa_offset 12
 292               		.cfi_offset 24, -11
 293 00f2 9F93      		push r25
 294               	.LCFI24:
 295               		.cfi_def_cfa_offset 13
 296               		.cfi_offset 25, -12
 297 00f4 AF93      		push r26
 298               	.LCFI25:
 299               		.cfi_def_cfa_offset 14
 300               		.cfi_offset 26, -13
 301 00f6 BF93      		push r27
 302               	.LCFI26:
 303               		.cfi_def_cfa_offset 15
 304               		.cfi_offset 27, -14
 305 00f8 EF93      		push r30
 306               	.LCFI27:
 307               		.cfi_def_cfa_offset 16
 308               		.cfi_offset 30, -15
 309 00fa FF93      		push r31
 310               	.LCFI28:
 311               		.cfi_def_cfa_offset 17
 312               		.cfi_offset 31, -16
 313               	/* prologue: Signal */
 314               	/* frame size = 0 */
 315               	/* stack size = 16 */
 316               	.L__stack_usage = 16
  54:Framework.h   **** 	USB.FIFOWP = 0;
 317               		.loc 1 54 0
 318 00fc E0EC      		ldi r30,lo8(1216)
 319 00fe F4E0      		ldi r31,hi8(1216)
 320 0100 1482      		std Z+4,__zero_reg__
  55:Framework.h   **** 	USB.INTFLAGSBCLR = USB_SETUPIF_bm | USB_TRNIF_bm;
 321               		.loc 1 55 0
 322 0102 83E0      		ldi r24,lo8(3)
 323 0104 8487      		std Z+12,r24
 324               	.LVL6:
 325               	.LBB457:
 326               	.LBB458:
 327               	.LBB459:
  50:usb/usb_pipe.h **** 	}
  51:usb/usb_pipe.h **** }
  52:usb/usb_pipe.h **** 
  53:usb/usb_pipe.h **** static inline void usb_pipe_reset(const USB_Pipe* p){
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
  55:usb/usb_pipe.h **** 		pipe_reset(p->pipe);
  56:usb/usb_pipe.h **** 		USB_ep_cancel(p->ep);
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
  60:usb/usb_pipe.h **** 	}
  61:usb/usb_pipe.h **** }
  62:usb/usb_pipe.h **** 
  63:usb/usb_pipe.h **** static inline void _usb_pipe_ep_start(const USB_Pipe* p, uint8_t* data, uint16_t size) ATTR_ALWAYS_
  64:usb/usb_pipe.h **** static inline void _usb_pipe_ep_start(const USB_Pipe* p, uint8_t* data, uint16_t size){
  65:usb/usb_pipe.h **** 	bool bank = 0;
  66:usb/usb_pipe.h **** 
  67:usb/usb_pipe.h **** 	if (p->ep & USB_EP_PP){
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
  70:usb/usb_pipe.h **** 	}
  71:usb/usb_pipe.h **** 
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
  73:usb/usb_pipe.h **** 		USB_ep_start_bank(p->ep, 0, data, size);
  74:usb/usb_pipe.h **** 	}else{
  75:usb/usb_pipe.h **** 		USB_ep_start_bank(p->ep, 1, data, size);
  76:usb/usb_pipe.h **** 	}
  77:usb/usb_pipe.h **** }
  78:usb/usb_pipe.h **** 
  79:usb/usb_pipe.h **** static inline void usb_pipe_handle(const USB_Pipe* p){
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 328               		.loc 2 80 0
 329 0106 2FB7      		in r18,__SREG__
 330               	.LVL7:
 331               	.LBB460:
 332               	.LBB461:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 333               		.loc 3 50 0
 334               	/* #APP */
 335               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 336 0108 F894      		cli
 337               	 ;  0 "" 2
 338               	.LVL8:
 339               	/* #NOAPP */
 340               	.LBE461:
 341               	.LBE460:
 342               	.LBB462:
 343               	.LBB463:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 344               		.loc 5 220 0
 345 010a 8091 0000 		lds r24,endpoints+24
 346 010e 8670      		andi r24,lo8(6)
 347               	.LBE463:
 348               	.LBE462:
  81:usb/usb_pipe.h **** 		if (p->ep & USB_EP_IN){
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 349               		.loc 2 82 0
 350 0110 01F4      		brne .L26
 351               	.LVL9:
 352               	.L12:
 353               	.LBB464:
 354               	.LBB465:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 355               		.loc 3 70 0
 356 0112 2FBF      		out __SREG__,r18
 357               		.loc 3 71 0
 358               	.LBE465:
 359               	.LBE464:
 360               	.LBE459:
 361               	.LBE458:
 362               	.LBE457:
 363               	.LBB503:
 364               	.LBB504:
 314:usb/usb.h     **** 	}
 315:usb/usb.h     **** }
 316:usb/usb.h     **** 
 317:usb/usb.h     **** inline void USB_Task(void) ATTR_ALWAYS_INLINE;
 318:usb/usb.h     **** inline void USB_Task(void){
 319:usb/usb.h     **** 	// Read once to prevent race condition where SETUP packet is interpreted as OUT
 320:usb/usb.h     **** 	uint8_t status = endpoints[0].out.STATUS;
 365               		.loc 5 320 0
 366 0114 8091 0000 		lds r24,endpoints
 367               	.LVL10:
 321:usb/usb.h     **** 
 322:usb/usb.h     **** 	if (status & USB_EP_SETUP_bm){
 368               		.loc 5 322 0
 369 0118 84FD      		sbrc r24,4
 370 011a 00C0      		rjmp .L27
 371               	.L21:
 323:usb/usb.h     **** 		if (!USB_HandleSetup()){
 324:usb/usb.h     **** 			endpoints[0].out.CTRL |= USB_EP_STALL_bm;
 325:usb/usb.h     **** 			endpoints[0].in.CTRL |= USB_EP_STALL_bm; 
 326:usb/usb.h     **** 		}
 327:usb/usb.h     **** 		USB_ep0_enableOut();
 328:usb/usb.h     **** 	}else if(status & USB_EP_TRNCOMPL0_bm){
 372               		.loc 5 328 0
 373 011c 85FD      		sbrc r24,5
 374 011e 00C0      		rjmp .L28
 375               	.LVL11:
 376               	.L11:
 377               	/* epilogue start */
 378               	.LBE504:
 379               	.LBE503:
  56:Framework.h   **** 	usb_pipe_handle(&ep_in);
  57:Framework.h   **** 	USB_Task();
  58:Framework.h   **** }
 380               		.loc 1 58 0
 381 0120 FF91      		pop r31
 382 0122 EF91      		pop r30
 383 0124 BF91      		pop r27
 384 0126 AF91      		pop r26
 385 0128 9F91      		pop r25
 386 012a 8F91      		pop r24
 387 012c 7F91      		pop r23
 388 012e 6F91      		pop r22
 389 0130 5F91      		pop r21
 390 0132 4F91      		pop r20
 391 0134 3F91      		pop r19
 392 0136 2F91      		pop r18
 393 0138 0F91      		pop r16
 394 013a 0F90      		pop r0
 395 013c 0FBE      		out __SREG__,r0
 396 013e 0F90      		pop r0
 397 0140 1F90      		pop r1
 398 0142 1895      		reti
 399               	.LVL12:
 400               	.L26:
 401               	.LBB513:
 402               	.LBB500:
 403               	.LBB497:
 404               	.LBB467:
 405               	.LBB468:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 406               		.loc 4 51 0
 407 0144 3091 0000 		lds r19,ep_in_pipe_data+4
 408               	.LBE468:
 409               	.LBE467:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 410               		.loc 2 83 0
 411 0148 1316      		cp __zero_reg__,r19
 412 014a 04F0      		brlt .+2
 413 014c 00C0      		rjmp .L13
 414               	.LBB469:
 415               	.LBB470:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 416               		.loc 4 62 0
 417 014e 8091 0000 		lds r24,ep_in_pipe_data
 418 0152 9091 0000 		lds r25,ep_in_pipe_data+1
 419               	.LVL13:
 420               	.LBE470:
 421               	.LBE469:
 422               	.LBB471:
 423               	.LBB472:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 424               		.loc 2 68 0
 425 0156 4091 0000 		lds r20,ep_in_data
 426               	.LVL14:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 427               		.loc 2 69 0
 428 015a 51E0      		ldi r21,lo8(1)
 429 015c 4130      		cpi r20,lo8(1)
 430 015e 01F4      		brne .+2
 431 0160 00C0      		rjmp .L29
 432 0162 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 433               		.loc 2 72 0
 434 0166 4423      		tst r20
 435 0168 01F4      		brne .+2
 436 016a 00C0      		rjmp .L30
 437               	.L15:
 438               	.LVL15:
 439               	.LBB473:
 440               	.LBB474:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 441               		.loc 5 168 0
 442 016c 8093 0000 		sts endpoints+20,r24
 443 0170 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 444               		.loc 5 169 0
 445 0174 40E4      		ldi r20,lo8(64)
 446 0176 50E0      		ldi r21,hi8(64)
 447 0178 4093 0000 		sts endpoints+18,r20
 448 017c 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 449               		.loc 5 176 0
 450 0180 E0E0      		ldi r30,lo8(endpoints+24)
 451 0182 F0E0      		ldi r31,hi8(endpoints+24)
 452               	/* #APP */
 453               	 ;  176 "usb/usb.h" 1
 454 0184 04E1      		ldi r16, 20
 455 0186 0693      		.dc.w 0x9306
 456               		
 457               	 ;  0 "" 2
 458               	.LVL16:
 459               	/* #NOAPP */
 460               	.L16:
 461               	.LBE474:
 462               	.LBE473:
 463               	.LBE472:
 464               	.LBE471:
 465               	.LBB478:
 466               	.LBB479:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 467               		.loc 4 72 0
 468 0188 3150      		subi r19,lo8(-(-1))
 469 018a 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 470               		.loc 4 73 0
 471 018e 805C      		subi r24,lo8(-(64))
 472 0190 9F4F      		sbci r25,hi8(-(64))
 473 0192 8093 0000 		sts ep_in_pipe_data,r24
 474 0196 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 475               		.loc 4 75 0
 476 019a 30E0      		ldi r19,hi8(ep_in_pipe_buffer+512)
 477 019c 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 478 019e 9307      		cpc r25,r19
 479 01a0 01F0      		breq .+2
 480 01a2 00C0      		rjmp .L12
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 481               		.loc 4 76 0
 482 01a4 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 483 01a6 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 484 01a8 8093 0000 		sts ep_in_pipe_data,r24
 485 01ac 9093 0000 		sts ep_in_pipe_data+1,r25
 486               	.LBE479:
 487               	.LBE478:
 488               	.LBB480:
 489               	.LBB466:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 490               		.loc 3 70 0
 491 01b0 2FBF      		out __SREG__,r18
 492               		.loc 3 71 0
 493               	.LBE466:
 494               	.LBE480:
 495               	.LBE497:
 496               	.LBE500:
 497               	.LBE513:
 498               	.LBB514:
 499               	.LBB511:
 320:usb/usb.h     **** 	uint8_t status = endpoints[0].out.STATUS;
 500               		.loc 5 320 0
 501 01b2 8091 0000 		lds r24,endpoints
 502               	.LVL17:
 322:usb/usb.h     **** 	if (status & USB_EP_SETUP_bm){
 503               		.loc 5 322 0
 504 01b6 84FF      		sbrs r24,4
 505 01b8 00C0      		rjmp .L21
 506               	.LVL18:
 507               	.L27:
 323:usb/usb.h     **** 		if (!USB_HandleSetup()){
 508               		.loc 5 323 0
 509 01ba 0E94 0000 		call USB_HandleSetup
 510               	.LVL19:
 511 01be 8823      		tst r24
 512 01c0 01F4      		brne .L24
 324:usb/usb.h     **** 			endpoints[0].out.CTRL |= USB_EP_STALL_bm;
 513               		.loc 5 324 0
 514 01c2 8091 0000 		lds r24,endpoints+1
 515 01c6 8460      		ori r24,lo8(4)
 516 01c8 8093 0000 		sts endpoints+1,r24
 325:usb/usb.h     **** 			endpoints[0].in.CTRL |= USB_EP_STALL_bm; 
 517               		.loc 5 325 0
 518 01cc 8091 0000 		lds r24,endpoints+9
 519 01d0 8460      		ori r24,lo8(4)
 520 01d2 8093 0000 		sts endpoints+9,r24
 521               	.L24:
 522               	.LBB505:
 523               	.LBB506:
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 524               		.loc 5 280 0
 525 01d6 E0E0      		ldi r30,lo8(endpoints)
 526 01d8 F0E0      		ldi r31,hi8(endpoints)
 527               	/* #APP */
 528               	 ;  280 "usb/usb.h" 1
 529 01da 02E7      		ldi r16, 114
 530 01dc 0693      		.dc.w 0x9306
 531               		
 532               	 ;  0 "" 2
 533               	/* #NOAPP */
 534 01de 00C0      		rjmp .L11
 535               	.LVL20:
 536               	.L29:
 537               	.LBE506:
 538               	.LBE505:
 539               	.LBE511:
 540               	.LBE514:
 541               	.LBB515:
 542               	.LBB501:
 543               	.LBB498:
 544               	.LBB481:
 545               	.LBB477:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 546               		.loc 2 69 0
 547 01e0 50E0      		ldi r21,lo8(0)
 548 01e2 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 549               		.loc 2 72 0
 550 01e6 4423      		tst r20
 551 01e8 01F0      		breq .+2
 552 01ea 00C0      		rjmp .L15
 553               	.L30:
 554               	.LVL21:
 555               	.LBB475:
 556               	.LBB476:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 557               		.loc 5 168 0
 558 01ec 8093 0000 		sts endpoints+28,r24
 559 01f0 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 560               		.loc 5 169 0
 561 01f4 40E4      		ldi r20,lo8(64)
 562 01f6 50E0      		ldi r21,hi8(64)
 563               	.LVL22:
 564 01f8 4093 0000 		sts endpoints+26,r20
 565 01fc 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 566               		.loc 5 174 0
 567 0200 E0E0      		ldi r30,lo8(endpoints+24)
 568 0202 F0E0      		ldi r31,hi8(endpoints+24)
 569               	.LVL23:
 570               	/* #APP */
 571               	 ;  174 "usb/usb.h" 1
 572 0204 02E2      		ldi r16, 34
 573 0206 0693      		.dc.w 0x9306
 574               		
 575               	 ;  0 "" 2
 576               	/* #NOAPP */
 577 0208 00C0      		rjmp .L16
 578               	.LVL24:
 579               	.L28:
 580               	.LBE476:
 581               	.LBE475:
 582               	.LBE477:
 583               	.LBE481:
 584               	.LBE498:
 585               	.LBE501:
 586               	.LBE515:
 587               	.LBB516:
 588               	.LBB512:
 329:usb/usb.h     **** 		EVENT_USB_Device_ControlOUT((uint8_t *) ep0_buf_out, endpoints[0].out.CNT);
 589               		.loc 5 329 0
 590 020a 4091 0000 		lds r20,endpoints+2
 591 020e 5091 0000 		lds r21,endpoints+2+1
 592               	.LVL25:
 593               	.LBB508:
 594               	.LBB509:
 595               		.file 6 "main.c"
   1:main.c        **** #include "Framework.h"
   2:main.c        **** #include <avr/io.h>
   3:main.c        **** #include <inttypes.h>
   4:main.c        **** #include <stdio.h> 
   5:main.c        **** #include <stdlib.h>
   6:main.c        **** #include <util/delay.h>
   7:main.c        **** #include <string.h> 
   8:main.c        **** #include <math.h>
   9:main.c        **** #include "concat/concat.h"
  10:main.c        **** #include "nmea/nmea.h"
  11:main.c        **** #include "uart/uart.h"
  12:main.c        **** #include "gps/gps.h"
  13:main.c        **** #include "gprs/gprs.h"
  14:main.c        **** #include "sms/sms.h"
  15:main.c        **** 
  16:main.c        **** //sample nmea strings for testing parser
  17:main.c        **** char* twilio_number = "+13042493059";
  18:main.c        **** char *message;
  19:main.c        **** bool updating = false;
  20:main.c        **** 
  21:main.c        **** int main(void){
  22:main.c        **** 
  23:main.c        ****   //usb configuration
  24:main.c        **** 	USB_ConfigureClock();
  25:main.c        **** 	USB_Init();
  26:main.c        **** 	USB.INTCTRLA = USB_BUSEVIE_bm | USB_INTLVL_MED_gc;
  27:main.c        **** 	USB.INTCTRLB = USB_TRNIE_bm | USB_SETUPIE_bm;
  28:main.c        **** 	PMIC.CTRL = PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm;
  29:main.c        **** 	sei();
  30:main.c        **** 
  31:main.c        ****   //uart init code -- change condition to true when we're ready to communicate with the gps
  32:main.c        **** 	if (false) {
  33:main.c        **** 		gps_init();
  34:main.c        **** 	}
  35:main.c        **** 
  36:main.c        ****   if (true) {
  37:main.c        ****     gprs_init();
  38:main.c        ****   }
  39:main.c        **** 
  40:main.c        ****   //call break and flush to make sure the buffer is cleared
  41:main.c        **** 	break_and_flush();
  42:main.c        **** 
  43:main.c        ****   // parse nmea string and send result over usb
  44:main.c        ****   // char* text_message = parse_nmea();
  45:main.c        **** 
  46:main.c        ****   // char* phonenumber = "+15402095219";
  47:main.c        ****   // send_message(phonenumber, text_message, &USARTD0);
  48:main.c        ****   // send_message(twilio_number, text_message, &USARTD0);
  49:main.c        ****   send_string("Begin");
  50:main.c        ****   SimpleReceive(&USARTD0);
  51:main.c        **** 
  52:main.c        **** 	for (;;){
  53:main.c        ****     //heart of the firmware logic goes here
  54:main.c        **** 	}
  55:main.c        **** }
  56:main.c        **** 
  57:main.c        **** #define stringify(s) #s
  58:main.c        **** 
  59:main.c        **** const char PROGMEM hwversion[] = stringify(HW_VERSION);
  60:main.c        **** const char PROGMEM fwversion[] = stringify(FW_VERSION);
  61:main.c        **** 
  62:main.c        **** uint8_t usb_cmd = 0;
  63:main.c        **** uint8_t cmd_data = 0;
  64:main.c        **** 
  65:main.c        **** // void send_usb_data(char *message) {
  66:main.c        **** // 	for (uint8_t = 0; i < 64; i++) ep0_buf_in[i] = 0;
  67:main.c        **** // 	int l = strlen(message);
  68:main.c        **** // 	for (int i=0; i<l; i++) {
  69:main.c        **** // 		ep0_buf_in[i] = message[i];
  70:main.c        **** // 	}
  71:main.c        **** // }
  72:main.c        **** 
  73:main.c        **** /** Event handler for the library USB Control Request reception event. */
  74:main.c        **** bool EVENT_USB_Device_ControlRequest(USB_Request_Header_t* req){
  75:main.c        **** 	// zero out ep0_buf_in
  76:main.c        **** 	for (uint8_t i = 0; i < 64; i++) ep0_buf_in[i] = 0;
  77:main.c        **** 	usb_cmd = 0;
  78:main.c        **** 	if ((req->bmRequestType & CONTROL_REQTYPE_TYPE) == REQTYPE_VENDOR){
  79:main.c        **** 		switch(req->bRequest){
  80:main.c        **** 			case 0x00: // Info
  81:main.c        **** 				if (req->wIndex == 0){
  82:main.c        **** 					USB_ep0_send_progmem((uint8_t*)hwversion, sizeof(hwversion));
  83:main.c        **** 				}else if (req->wIndex == 1){
  84:main.c        **** 					USB_ep0_send_progmem((uint8_t*)fwversion, sizeof(fwversion));
  85:main.c        **** 				}
  86:main.c        **** 				return true;
  87:main.c        **** 			case 0x02:
  88:main.c        **** 				{
  89:main.c        **** 					int l = strlen(message);
  90:main.c        **** 					for (uint8_t i=0; i<64; i++) {
  91:main.c        **** 						ep0_buf_in[i] = message[i];
  92:main.c        **** 					}
  93:main.c        **** 					USB_ep0_send(l);
  94:main.c        **** 					return true;
  95:main.c        **** 				}
  96:main.c        **** 			case 0x08:
  97:main.c        **** 				* ((uint8_t *) req->wIndex) = req->wValue;
  98:main.c        **** 				USB_ep0_send(0);
  99:main.c        **** 				return true;
 100:main.c        **** 			case 0x09:
 101:main.c        **** 				ep0_buf_in[0] = * ((uint8_t *) req->wIndex);
 102:main.c        **** 				USB_ep0_send(1);
 103:main.c        **** 				return true;
 104:main.c        **** 			case 0x16:
 105:main.c        **** 				* ((uint16_t *) req->wIndex) = req->wValue;
 106:main.c        **** 				USB_ep0_send(0);
 107:main.c        **** 				return true;
 108:main.c        **** 			case 0x17:{
 109:main.c        **** 				uint16_t *addr;
 110:main.c        **** 				addr = (uint16_t *) req->wIndex;
 111:main.c        **** 				ep0_buf_in[0] = *addr & 0xFF;
 112:main.c        **** 				ep0_buf_in[1] = *addr >> 8;
 113:main.c        **** 				USB_ep0_send(2);}
 114:main.c        **** 				return true;
 115:main.c        **** 			// read EEPROM	
 116:main.c        **** 			case 0xE0: 
 117:main.c        **** 				eeprom_read_block(ep0_buf_in, (void*)(req->wIndex*64), 64);
 118:main.c        **** 				USB_ep0_send(64);
 119:main.c        **** 				return true;
 120:main.c        **** 
 121:main.c        **** 			// write EEPROM	
 122:main.c        **** 			case 0xE1: 
 123:main.c        **** 				usb_cmd = req->bRequest;
 124:main.c        **** 				cmd_data = req->wIndex;
 125:main.c        **** 				USB_ep0_send(0);
 126:main.c        **** 				return true; // Wait for OUT data (expecting an OUT transfer)
 127:main.c        **** 
 128:main.c        **** 			// disconnect from USB, jump to bootloader	
 129:main.c        **** 			case 0xBB: 
 130:main.c        **** 				USB_enter_bootloader();
 131:main.c        **** 				return true;
 132:main.c        **** 		}
 133:main.c        **** 	}
 134:main.c        **** 	return false;
 135:main.c        **** }
 136:main.c        **** 
 137:main.c        **** void EVENT_USB_Device_ControlOUT(uint8_t* buf, uint8_t count){
 138:main.c        **** 	switch (usb_cmd){
 596               		.loc 6 138 0
 597 0212 8091 0000 		lds r24,usb_cmd
 598               	.LVL26:
 599 0216 813E      		cpi r24,lo8(-31)
 600 0218 01F4      		brne .L24
 139:main.c        **** 		case 0xE1: // Write EEPROM
 140:main.c        **** 			eeprom_update_block(buf, (void*)(cmd_data*64), count);
 601               		.loc 6 140 0
 602 021a 6091 0000 		lds r22,cmd_data
 603 021e 70E0      		ldi r23,lo8(0)
 604 0220 0024      		clr __tmp_reg__
 605 0222 7695      		lsr r23
 606 0224 6795      		ror r22
 607 0226 0794      		ror __tmp_reg__
 608 0228 7695      		lsr r23
 609 022a 6795      		ror r22
 610 022c 0794      		ror __tmp_reg__
 611 022e 762F      		mov r23,r22
 612 0230 602D      		mov r22,__tmp_reg__
 613 0232 80E0      		ldi r24,lo8(ep0_buf_out)
 614 0234 90E0      		ldi r25,hi8(ep0_buf_out)
 615 0236 50E0      		ldi r21,lo8(0)
 616 0238 0E94 0000 		call __eeupd_block_x32a4u
 617               	.LVL27:
 618               	.LBE509:
 619               	.LBE508:
 620               	.LBB510:
 621               	.LBB507:
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 622               		.loc 5 280 0
 623 023c E0E0      		ldi r30,lo8(endpoints)
 624 023e F0E0      		ldi r31,hi8(endpoints)
 625               	/* #APP */
 626               	 ;  280 "usb/usb.h" 1
 627 0240 02E7      		ldi r16, 114
 628 0242 0693      		.dc.w 0x9306
 629               		
 630               	 ;  0 "" 2
 631               	/* #NOAPP */
 632 0244 00C0      		rjmp .L11
 633               	.LVL28:
 634               	.L13:
 635               	.LBE507:
 636               	.LBE510:
 637               	.LBE512:
 638               	.LBE516:
 639               	.LBB517:
 640               	.LBB502:
 641               	.LBB499:
  84:usb/usb_pipe.h **** 					_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->pipe->size);
  85:usb/usb_pipe.h **** 					pipe_done_read(p->pipe);
  86:usb/usb_pipe.h **** 				}else if (p->features & PIPE_ENABLE_FLUSH){
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 642               		.loc 2 87 0
 643 0246 8091 0000 		lds r24,ep_in_data+1
 644 024a 8130      		cpi r24,lo8(1)
 645 024c 01F0      		breq .L31
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
  89:usb/usb_pipe.h **** 						// Send short packet
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 646               		.loc 2 91 0
 647 024e 8230      		cpi r24,lo8(2)
 648 0250 01F0      		breq .+2
 649 0252 00C0      		rjmp .L12
 650               	.LVL29:
 651               	.LBB482:
 652               	.LBB483:
 653               	.LBB484:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 654               		.loc 5 228 0
 655 0254 8091 0000 		lds r24,endpoints+24
 656 0258 8670      		andi r24,lo8(6)
 657               	.LBE484:
 658               	.LBE483:
 659               	.LBE482:
 660               		.loc 2 91 0
 661 025a 8630      		cpi r24,lo8(6)
 662 025c 01F0      		breq .+2
 663 025e 00C0      		rjmp .L12
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 664               		.loc 2 92 0
 665 0260 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 666               		.loc 2 93 0
 667 0264 1092 0000 		sts ep_in_data+2,__zero_reg__
 668 0268 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 669               	.LBB485:
 670               	.LBB486:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 671               		.loc 4 90 0
 672 026c 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 673               		.loc 4 91 0
 674 0270 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 675 0272 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 676 0274 8093 0000 		sts ep_in_pipe_data+2,r24
 677 0278 9093 0000 		sts ep_in_pipe_data+2+1,r25
 678 027c 8093 0000 		sts ep_in_pipe_data,r24
 679 0280 9093 0000 		sts ep_in_pipe_data+1,r25
 680               	.LVL30:
 681 0284 00C0      		rjmp .L12
 682               	.LVL31:
 683               	.L31:
 684               	.LBE486:
 685               	.LBE485:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 686               		.loc 2 88 0
 687 0286 82E0      		ldi r24,lo8(2)
 688 0288 8093 0000 		sts ep_in_data+1,r24
 689               	.LBB487:
 690               	.LBB488:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 691               		.loc 4 62 0
 692 028c 7091 0000 		lds r23,ep_in_pipe_data
 693 0290 6091 0000 		lds r22,ep_in_pipe_data+1
 694               	.LBE488:
 695               	.LBE487:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 696               		.loc 2 90 0
 697 0294 8091 0000 		lds r24,ep_in_data+2
 698 0298 9091 0000 		lds r25,ep_in_data+2+1
 699               	.LVL32:
 700               	.LBB489:
 701               	.LBB490:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 702               		.loc 2 68 0
 703 029c 3091 0000 		lds r19,ep_in_data
 704               	.LVL33:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 705               		.loc 2 69 0
 706 02a0 41E0      		ldi r20,lo8(1)
 707 02a2 3130      		cpi r19,lo8(1)
 708 02a4 01F0      		breq .L32
 709               	.L19:
 710 02a6 4093 0000 		sts ep_in_data,r20
 711               	.LBB491:
 712               	.LBB492:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 713               		.loc 5 168 0
 714 02aa 472F      		mov r20,r23
 715 02ac 562F      		mov r21,r22
 716               	.LBE492:
 717               	.LBE491:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 718               		.loc 2 72 0
 719 02ae 3323      		tst r19
 720 02b0 01F4      		brne .L20
 721               	.LVL34:
 722               	.LBB494:
 723               	.LBB493:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 724               		.loc 5 168 0
 725 02b2 4093 0000 		sts endpoints+28,r20
 726 02b6 5093 0000 		sts endpoints+28+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 727               		.loc 5 169 0
 728 02ba 8093 0000 		sts endpoints+26,r24
 729 02be 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 730               		.loc 5 174 0
 731 02c2 E0E0      		ldi r30,lo8(endpoints+24)
 732 02c4 F0E0      		ldi r31,hi8(endpoints+24)
 733               	.LVL35:
 734               	/* #APP */
 735               	 ;  174 "usb/usb.h" 1
 736 02c6 02E2      		ldi r16, 34
 737 02c8 0693      		.dc.w 0x9306
 738               		
 739               	 ;  0 "" 2
 740               	/* #NOAPP */
 741 02ca 00C0      		rjmp .L12
 742               	.LVL36:
 743               	.L20:
 744               	.LBE493:
 745               	.LBE494:
 746               	.LBB495:
 747               	.LBB496:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 748               		.loc 5 168 0
 749 02cc 4093 0000 		sts endpoints+20,r20
 750 02d0 5093 0000 		sts endpoints+20+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 751               		.loc 5 169 0
 752 02d4 8093 0000 		sts endpoints+18,r24
 753 02d8 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 754               		.loc 5 176 0
 755 02dc E0E0      		ldi r30,lo8(endpoints+24)
 756 02de F0E0      		ldi r31,hi8(endpoints+24)
 757               	/* #APP */
 758               	 ;  176 "usb/usb.h" 1
 759 02e0 04E1      		ldi r16, 20
 760 02e2 0693      		.dc.w 0x9306
 761               		
 762               	 ;  0 "" 2
 763               	/* #NOAPP */
 764 02e4 00C0      		rjmp .L12
 765               	.LVL37:
 766               	.L32:
 767               	.LBE496:
 768               	.LBE495:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 769               		.loc 2 69 0
 770 02e6 40E0      		ldi r20,lo8(0)
 771 02e8 00C0      		rjmp .L19
 772               	.LBE490:
 773               	.LBE489:
 774               	.LBE499:
 775               	.LBE502:
 776               	.LBE517:
 777               		.cfi_endproc
 778               	.LFE59:
 780               	.global	send_string
 782               	send_string:
 783               	.LFB61:
 784               		.file 7 "concat/concat.h"
   1:concat/concat.h **** void send_string(char* s);
   2:concat/concat.h **** char* concat(char*, char*);
   3:concat/concat.h **** 
   4:concat/concat.h **** void send_string(char* s) {
 785               		.loc 7 4 0
 786               		.cfi_startproc
 787               	.LVL38:
 788 02ea 6F92      		push r6
 789               	.LCFI29:
 790               		.cfi_def_cfa_offset 3
 791               		.cfi_offset 6, -2
 792 02ec 7F92      		push r7
 793               	.LCFI30:
 794               		.cfi_def_cfa_offset 4
 795               		.cfi_offset 7, -3
 796 02ee 8F92      		push r8
 797               	.LCFI31:
 798               		.cfi_def_cfa_offset 5
 799               		.cfi_offset 8, -4
 800 02f0 9F92      		push r9
 801               	.LCFI32:
 802               		.cfi_def_cfa_offset 6
 803               		.cfi_offset 9, -5
 804 02f2 AF92      		push r10
 805               	.LCFI33:
 806               		.cfi_def_cfa_offset 7
 807               		.cfi_offset 10, -6
 808 02f4 BF92      		push r11
 809               	.LCFI34:
 810               		.cfi_def_cfa_offset 8
 811               		.cfi_offset 11, -7
 812 02f6 CF92      		push r12
 813               	.LCFI35:
 814               		.cfi_def_cfa_offset 9
 815               		.cfi_offset 12, -8
 816 02f8 DF92      		push r13
 817               	.LCFI36:
 818               		.cfi_def_cfa_offset 10
 819               		.cfi_offset 13, -9
 820 02fa EF92      		push r14
 821               	.LCFI37:
 822               		.cfi_def_cfa_offset 11
 823               		.cfi_offset 14, -10
 824 02fc FF92      		push r15
 825               	.LCFI38:
 826               		.cfi_def_cfa_offset 12
 827               		.cfi_offset 15, -11
 828 02fe 0F93      		push r16
 829               	.LCFI39:
 830               		.cfi_def_cfa_offset 13
 831               		.cfi_offset 16, -12
 832 0300 1F93      		push r17
 833               	.LCFI40:
 834               		.cfi_def_cfa_offset 14
 835               		.cfi_offset 17, -13
 836 0302 CF93      		push r28
 837               	.LCFI41:
 838               		.cfi_def_cfa_offset 15
 839               		.cfi_offset 28, -14
 840 0304 DF93      		push r29
 841               	.LCFI42:
 842               		.cfi_def_cfa_offset 16
 843               		.cfi_offset 29, -15
 844               	/* prologue: function */
 845               	/* frame size = 0 */
 846               	/* stack size = 14 */
 847               	.L__stack_usage = 14
   5:concat/concat.h ****   int length = strlen(s);
 848               		.loc 7 5 0
 849 0306 DC01      		movw r26,r24
 850 0308 0D90      		ld __tmp_reg__,X+
 851 030a 0020      		tst __tmp_reg__
 852 030c 01F4      		brne .-6
 853 030e 5D01      		movw r10,r26
 854 0310 0894      		sec
 855 0312 A108      		sbc r10,__zero_reg__
 856 0314 B108      		sbc r11,__zero_reg__
 857 0316 A81A      		sub r10,r24
 858 0318 B90A      		sbc r11,r25
 859               	.LVL39:
 860               	.LBB684:
   6:concat/concat.h ****   for (int i=0; i<length; i++) {
 861               		.loc 7 6 0
 862 031a 1A14      		cp __zero_reg__,r10
 863 031c 1B04      		cpc __zero_reg__,r11
 864 031e 04F4      		brge .L34
 865 0320 4C01      		movw r8,r24
 866 0322 CC24      		clr r12
 867 0324 DD24      		clr r13
 868               	.LBB685:
 869               	.LBB686:
 870               	.LBB687:
 871               	.LBB688:
 872               	.LBB689:
 873               	.LBB690:
 874               	.LBB691:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 875               		.loc 4 57 0
 876 0326 46E0      		ldi r20,lo8(6)
 877               	.LBE691:
 878               	.LBE690:
 879               	.LBE689:
 880               	.LBE688:
 881               	.LBE687:
 882               	.LBB702:
 883               	.LBB703:
 884               	.LBB704:
 885               	.LBB705:
 886               	.LBB706:
 887               	.LBB707:
 888               	.LBB708:
 889               	.LBB709:
 890               	.LBB710:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 891               		.loc 5 220 0
 892 0328 A0E0      		ldi r26,lo8(endpoints+24)
 893 032a B0E0      		ldi r27,hi8(endpoints+24)
 894               	.LBE710:
 895               	.LBE709:
 896               	.LBB712:
 897               	.LBB713:
 898               		.loc 4 91 0
 899 032c 90E0      		ldi r25,lo8(ep_in_pipe_buffer)
 900 032e 692E      		mov r6,r25
 901 0330 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 902 0332 792E      		mov r7,r25
 903               	.LBE713:
 904               	.LBE712:
 905               	.LBB716:
 906               	.LBB717:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 907               		.loc 2 69 0
 908 0334 C1E0      		ldi r28,lo8(1)
 909 0336 D0E0      		ldi r29,hi8(1)
 910               	.LBE717:
 911               	.LBE716:
 912               	.LBB724:
 913               	.LBB725:
 914               	.LBB726:
 915               	.LBB727:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 916               		.loc 5 169 0
 917 0338 20E4      		ldi r18,lo8(64)
 918 033a E22E      		mov r14,r18
 919 033c F12C      		mov r15,__zero_reg__
 920               	.LVL40:
 921               	.L49:
 922               	.LBE727:
 923               	.LBE726:
 924               	.LBE725:
 925               	.LBE724:
 926               	.LBE708:
 927               	.LBE707:
 928               	.LBE706:
 929               	.LBE705:
 930               	.LBE704:
 931               	.LBE703:
 932               	.LBE702:
 933               	.LBE686:
 934               	.LBE685:
   7:concat/concat.h ****     send_byte(s[i]);
 935               		.loc 7 7 0 discriminator 2
 936 033e F401      		movw r30,r8
 937 0340 3191      		ld r19,Z+
 938 0342 4F01      		movw r8,r30
 939               	.LVL41:
 940               	.L37:
 941               	.LBB787:
 942               	.LBB783:
 943               	.LBB777:
 944               	.LBB700:
 945               	.LBB698:
  94:usb/usb_pipe.h **** 						pipe_reset(p->pipe);
  95:usb/usb_pipe.h **** 					}
  96:usb/usb_pipe.h **** 				}
  97:usb/usb_pipe.h **** 			}
  98:usb/usb_pipe.h **** 		}else{
  99:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep) && pipe_can_write(p->pipe) >= 1){
 100:usb/usb_pipe.h **** 				_usb_pipe_ep_start(p, pipe_write_ptr(p->pipe), p->pipe->size);
 101:usb/usb_pipe.h **** 				pipe_done_write(p->pipe);
 102:usb/usb_pipe.h **** 			}
 103:usb/usb_pipe.h **** 		}
 104:usb/usb_pipe.h **** 	}
 105:usb/usb_pipe.h **** }
 106:usb/usb_pipe.h **** 
 107:usb/usb_pipe.h **** static inline void usb_pipe_flush(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 108:usb/usb_pipe.h **** static inline void usb_pipe_flush(const USB_Pipe* p){
 109:usb/usb_pipe.h **** 	GCC_ASSERT(p->features&PIPE_ENABLE_FLUSH && p->ep&USB_EP_IN);
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 111:usb/usb_pipe.h **** 	usb_pipe_handle(p);
 112:usb/usb_pipe.h **** }
 113:usb/usb_pipe.h **** 
 114:usb/usb_pipe.h **** static inline bool usb_pipe_flush_done(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 115:usb/usb_pipe.h **** static inline bool usb_pipe_flush_done(const USB_Pipe* p){
 116:usb/usb_pipe.h **** 	GCC_ASSERT(p->features&PIPE_ENABLE_FLUSH);
 117:usb/usb_pipe.h **** 	return p->data->flush;
 118:usb/usb_pipe.h **** }
 119:usb/usb_pipe.h **** 
 120:usb/usb_pipe.h **** static inline bool usb_pipe_can_write(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 121:usb/usb_pipe.h **** static inline bool usb_pipe_can_write(const USB_Pipe* p){
 122:usb/usb_pipe.h **** 	bool r;
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 946               		.loc 2 123 0
 947 0344 9FB7      		in r25,__SREG__
 948               	.LVL42:
 949               	.LBB693:
 950               	.LBB694:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 951               		.loc 3 50 0
 952               	/* #APP */
 953               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 954 0346 F894      		cli
 955               	 ;  0 "" 2
 956               	.LVL43:
 957               	/* #NOAPP */
 958               	.LBE694:
 959               	.LBE693:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 960               		.loc 2 124 0
 961 0348 8091 0000 		lds r24,ep_in_data+1
 962 034c 8823      		tst r24
 963 034e 01F4      		brne .+2
 964 0350 00C0      		rjmp .L71
 965               	.L64:
 125:usb/usb_pipe.h **** 			r = false;
 966               		.loc 2 125 0
 967 0352 80E0      		ldi r24,lo8(0)
 968               	.L35:
 969               	.LBB695:
 970               	.LBB696:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 971               		.loc 3 70 0
 972 0354 9FBF      		out __SREG__,r25
 973               		.loc 3 71 0
 974               	.LBE696:
 975               	.LBE695:
 976               	.LBE698:
 977               	.LBE700:
 978               	.LBE777:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 979               		.loc 1 20 0
 980 0356 8823      		tst r24
 981 0358 01F0      		breq .L37
 982               	.LVL44:
 983               	.LBB778:
 984               	.LBB779:
 126:usb/usb_pipe.h **** 		}else{
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 128:usb/usb_pipe.h **** 		}
 129:usb/usb_pipe.h **** 	}
 130:usb/usb_pipe.h **** 	return r;
 131:usb/usb_pipe.h **** }
 132:usb/usb_pipe.h **** 
 133:usb/usb_pipe.h **** static inline uint8_t* usb_pipe_write_ptr(const USB_Pipe* p){
 134:usb/usb_pipe.h **** 	return pipe_write_ptr(p->pipe);
 135:usb/usb_pipe.h **** }
 136:usb/usb_pipe.h **** 
 137:usb/usb_pipe.h **** static inline void usb_pipe_done_write(const USB_Pipe* p){
 138:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 139:usb/usb_pipe.h **** 		pipe_done_write(p->pipe);
 140:usb/usb_pipe.h **** 	}
 141:usb/usb_pipe.h **** }
 142:usb/usb_pipe.h **** 
 143:usb/usb_pipe.h **** static inline bool usb_pipe_can_read(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 144:usb/usb_pipe.h **** static inline bool usb_pipe_can_read(const USB_Pipe* p){
 145:usb/usb_pipe.h **** 	bool r;
 146:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 147:usb/usb_pipe.h **** 		r = pipe_can_read(p->pipe) > 0;
 148:usb/usb_pipe.h **** 	}
 149:usb/usb_pipe.h **** 	return r;
 150:usb/usb_pipe.h **** }
 151:usb/usb_pipe.h **** 
 152:usb/usb_pipe.h **** static inline uint8_t* usb_pipe_read_ptr(const USB_Pipe* p){
 153:usb/usb_pipe.h **** 	return pipe_read_ptr(p->pipe);
 154:usb/usb_pipe.h **** }
 155:usb/usb_pipe.h **** 
 156:usb/usb_pipe.h **** static inline void usb_pipe_done_read(const USB_Pipe* p){
 157:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 158:usb/usb_pipe.h **** 		pipe_done_read(p->pipe);
 159:usb/usb_pipe.h **** 	}
 160:usb/usb_pipe.h **** }
 161:usb/usb_pipe.h **** 
 162:usb/usb_pipe.h **** static inline uint8_t usb_pipe_read_byte(const USB_Pipe* p){
 163:usb/usb_pipe.h **** 	uint8_t r = p->pipe->data->read_ptr[p->data->packet_offset++];
 164:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 165:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 166:usb/usb_pipe.h **** 			p->data->packet_offset = 0;
 167:usb/usb_pipe.h **** 			pipe_done_read(p->pipe);
 168:usb/usb_pipe.h **** 			usb_pipe_handle(p);
 169:usb/usb_pipe.h **** 		}
 170:usb/usb_pipe.h **** 	}
 171:usb/usb_pipe.h **** 	return r;
 172:usb/usb_pipe.h **** }
 173:usb/usb_pipe.h **** 
 174:usb/usb_pipe.h **** static inline void usb_pipe_write_byte(const USB_Pipe* p, uint8_t v){
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 985               		.loc 2 175 0
 986 035a 8091 0000 		lds r24,ep_in_data+2
 987 035e 9091 0000 		lds r25,ep_in_data+2+1
 988 0362 E091 0000 		lds r30,ep_in_pipe_data+2
 989 0366 F091 0000 		lds r31,ep_in_pipe_data+2+1
 990               	.LVL45:
 991 036a E80F      		add r30,r24
 992 036c F91F      		adc r31,r25
 993 036e 3083      		st Z,r19
 994 0370 0196      		adiw r24,1
 995 0372 8093 0000 		sts ep_in_data+2,r24
 996 0376 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 997               		.loc 2 176 0
 998 037a 8034      		cpi r24,64
 999 037c 9105      		cpc r25,__zero_reg__
 1000 037e 01F4      		brne .+2
 1001 0380 00C0      		rjmp .L72
 1002               	.LVL46:
 1003               	.L38:
 1004               	.LBE779:
 1005               	.LBE778:
 1006               	.LBE783:
 1007               	.LBE787:
   6:concat/concat.h ****   for (int i=0; i<length; i++) {
 1008               		.loc 7 6 0 discriminator 2
 1009 0382 0894      		sec
 1010 0384 C11C      		adc r12,__zero_reg__
 1011 0386 D11C      		adc r13,__zero_reg__
 1012               	.LVL47:
 1013 0388 AC14      		cp r10,r12
 1014 038a BD04      		cpc r11,r13
 1015 038c 01F4      		brne .L49
 1016               	.LVL48:
 1017               	.L34:
 1018               	.LBE684:
 1019               	.LBB791:
 1020               	.LBB792:
 1021               	.LBB793:
 1022               	.LBB794:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 1023               		.loc 2 110 0
 1024 038e 81E0      		ldi r24,lo8(1)
 1025 0390 8093 0000 		sts ep_in_data+1,r24
 1026               	.LVL49:
 1027               	.LBB795:
 1028               	.LBB796:
 1029               	.LBB797:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 1030               		.loc 2 80 0
 1031 0394 2FB7      		in r18,__SREG__
 1032               	.LVL50:
 1033               	.LBB798:
 1034               	.LBB799:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 1035               		.loc 3 50 0
 1036               	/* #APP */
 1037               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 1038 0396 F894      		cli
 1039               	 ;  0 "" 2
 1040               	.LVL51:
 1041               	/* #NOAPP */
 1042               	.LBE799:
 1043               	.LBE798:
 1044               	.LBB800:
 1045               	.LBB801:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 1046               		.loc 5 220 0
 1047 0398 8091 0000 		lds r24,endpoints+24
 1048 039c 8670      		andi r24,lo8(6)
 1049               	.LBE801:
 1050               	.LBE800:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 1051               		.loc 2 82 0
 1052 039e 01F0      		breq .+2
 1053 03a0 00C0      		rjmp .L73
 1054               	.LVL52:
 1055               	.L50:
 1056               	.LBB802:
 1057               	.LBB803:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 1058               		.loc 3 70 0
 1059 03a2 2FBF      		out __SREG__,r18
 1060               		.loc 3 71 0
 1061               	.LBE803:
 1062               	.LBE802:
 1063               	.LBE797:
 1064               	.LBE796:
 1065               	.LBE795:
 1066               	.LBE794:
 1067               	.LBE793:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 1068               		.loc 1 27 0
 1069 03a4 82E0      		ldi r24,lo8(2)
 1070 03a6 E0EC      		ldi r30,lo8(1216)
 1071 03a8 F4E0      		ldi r31,hi8(1216)
 1072 03aa 8587      		std Z+13,r24
 1073               	.LBB839:
 1074               	.LBB840:
 1075               	.LBB841:
 1076               	.LBB842:
 1077               	.LBB843:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 1078               		.loc 4 57 0
 1079 03ac 36E0      		ldi r19,lo8(6)
 1080               	.LVL53:
 1081               	.L59:
 1082               	.LBE843:
 1083               	.LBE842:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 1084               		.loc 2 123 0
 1085 03ae 9FB7      		in r25,__SREG__
 1086               	.LVL54:
 1087               	.LBB845:
 1088               	.LBB846:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 1089               		.loc 3 50 0
 1090               	/* #APP */
 1091               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 1092 03b0 F894      		cli
 1093               	 ;  0 "" 2
 1094               	.LVL55:
 1095               	/* #NOAPP */
 1096               	.LBE846:
 1097               	.LBE845:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 1098               		.loc 2 124 0
 1099 03b2 8091 0000 		lds r24,ep_in_data+1
 1100 03b6 8823      		tst r24
 1101 03b8 01F4      		brne .+2
 1102 03ba 00C0      		rjmp .L74
 1103               	.L65:
 125:usb/usb_pipe.h **** 			r = false;
 1104               		.loc 2 125 0
 1105 03bc 80E0      		ldi r24,lo8(0)
 1106               	.L61:
 1107               	.LBB847:
 1108               	.LBB848:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 1109               		.loc 3 70 0
 1110 03be 9FBF      		out __SREG__,r25
 1111               		.loc 3 71 0
 1112               	.LBE848:
 1113               	.LBE847:
 1114               	.LBE841:
 1115               	.LBE840:
 1116               	.LBE839:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 1117               		.loc 1 28 0
 1118 03c0 8823      		tst r24
 1119 03c2 01F4      		brne .L33
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 1120               		.loc 1 29 0
 1121 03c4 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 1122 03c8 8823      		tst r24
 1123 03ca 01F0      		breq .L59
 1124               	.LVL56:
 1125               	.LBB852:
 1126               	.LBB853:
 1127               	.LBB854:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 1128               		.loc 2 54 0
 1129 03cc 2FB7      		in r18,__SREG__
 1130               	.LVL57:
 1131               	.LBB855:
 1132               	.LBB856:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 1133               		.loc 3 50 0
 1134               	/* #APP */
 1135               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 1136 03ce F894      		cli
 1137               	 ;  0 "" 2
 1138               	.LVL58:
 1139               	/* #NOAPP */
 1140               	.LBE856:
 1141               	.LBE855:
 1142               	.LBB857:
 1143               	.LBB858:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 1144               		.loc 4 90 0
 1145 03d0 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 1146               		.loc 4 91 0
 1147 03d4 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 1148 03d6 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 1149 03d8 8093 0000 		sts ep_in_pipe_data+2,r24
 1150 03dc 9093 0000 		sts ep_in_pipe_data+2+1,r25
 1151 03e0 8093 0000 		sts ep_in_pipe_data,r24
 1152 03e4 9093 0000 		sts ep_in_pipe_data+1,r25
 1153               	.LVL59:
 1154               	.LBE858:
 1155               	.LBE857:
 1156               	.LBB859:
 1157               	.LBB860:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 1158               		.loc 5 158 0
 1159 03e8 E0E0      		ldi r30,lo8(endpoints+24)
 1160 03ea F0E0      		ldi r31,hi8(endpoints+24)
 1161               	/* #APP */
 1162               	 ;  158 "usb/usb.h" 1
 1163 03ec 06E0      		ldi r16, 6
 1164 03ee 0593      		.dc.w 0x9305
 1165               		
 1166               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 1167               		.loc 5 159 0
 1168               	 ;  159 "usb/usb.h" 1
 1169 03f0 08E0      		ldi r16, 8
 1170 03f2 0693      		.dc.w 0x9306
 1171               		
 1172               	 ;  0 "" 2
 1173               	/* #NOAPP */
 1174               	.LBE860:
 1175               	.LBE859:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 1176               		.loc 2 57 0
 1177 03f4 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 1178               		.loc 2 58 0
 1179 03f8 1092 0000 		sts ep_in_data+2,__zero_reg__
 1180 03fc 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 1181               		.loc 2 59 0
 1182 0400 1092 0000 		sts ep_in_data,__zero_reg__
 1183               	.LVL60:
 1184               	.LBB861:
 1185               	.LBB862:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 1186               		.loc 3 70 0
 1187 0404 2FBF      		out __SREG__,r18
 1188               		.loc 3 71 0
 1189               	.LVL61:
 1190               	.L33:
 1191               	/* epilogue start */
 1192               	.LBE862:
 1193               	.LBE861:
 1194               	.LBE854:
 1195               	.LBE853:
 1196               	.LBE852:
 1197               	.LBE792:
 1198               	.LBE791:
   8:concat/concat.h ****   }
   9:concat/concat.h ****   break_and_flush();
  10:concat/concat.h **** }
 1199               		.loc 7 10 0
 1200 0406 DF91      		pop r29
 1201 0408 CF91      		pop r28
 1202 040a 1F91      		pop r17
 1203 040c 0F91      		pop r16
 1204 040e FF90      		pop r15
 1205 0410 EF90      		pop r14
 1206 0412 DF90      		pop r13
 1207 0414 CF90      		pop r12
 1208 0416 BF90      		pop r11
 1209 0418 AF90      		pop r10
 1210               	.LVL62:
 1211 041a 9F90      		pop r9
 1212 041c 8F90      		pop r8
 1213 041e 7F90      		pop r7
 1214 0420 6F90      		pop r6
 1215 0422 0895      		ret
 1216               	.LVL63:
 1217               	.L71:
 1218               	.LBB869:
 1219               	.LBB788:
 1220               	.LBB784:
 1221               	.LBB780:
 1222               	.LBB701:
 1223               	.LBB699:
 1224               	.LBB697:
 1225               	.LBB692:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 1226               		.loc 4 57 0
 1227 0424 8091 0000 		lds r24,ep_in_pipe_data+4
 1228 0428 242F      		mov r18,r20
 1229 042a 281B      		sub r18,r24
 1230               	.LBE692:
 1231               	.LBE697:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 1232               		.loc 2 127 0
 1233 042c 81E0      		ldi r24,lo8(1)
 1234 042e 1216      		cp __zero_reg__,r18
 1235 0430 04F4      		brge .+2
 1236 0432 00C0      		rjmp .L35
 1237 0434 00C0      		rjmp .L64
 1238               	.LVL64:
 1239               	.L74:
 1240               	.LBE699:
 1241               	.LBE701:
 1242               	.LBE780:
 1243               	.LBE784:
 1244               	.LBE788:
 1245               	.LBE869:
 1246               	.LBB870:
 1247               	.LBB866:
 1248               	.LBB863:
 1249               	.LBB851:
 1250               	.LBB850:
 1251               	.LBB849:
 1252               	.LBB844:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 1253               		.loc 4 57 0
 1254 0436 8091 0000 		lds r24,ep_in_pipe_data+4
 1255 043a 232F      		mov r18,r19
 1256 043c 281B      		sub r18,r24
 1257               	.LBE844:
 1258               	.LBE849:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 1259               		.loc 2 127 0
 1260 043e 81E0      		ldi r24,lo8(1)
 1261 0440 1216      		cp __zero_reg__,r18
 1262 0442 04F4      		brge .+2
 1263 0444 00C0      		rjmp .L61
 1264 0446 00C0      		rjmp .L65
 1265               	.LVL65:
 1266               	.L72:
 1267               	.LBE850:
 1268               	.LBE851:
 1269               	.LBE863:
 1270               	.LBE866:
 1271               	.LBE870:
 1272               	.LBB871:
 1273               	.LBB789:
 1274               	.LBB785:
 1275               	.LBB781:
 1276               	.LBB775:
 1277               	.LBB773:
 1278               	.LBB771:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 1279               		.loc 2 177 0
 1280 0448 1FB7      		in r17,__SREG__
 1281               	.LVL66:
 1282               	.LBB762:
 1283               	.LBB763:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 1284               		.loc 3 50 0
 1285               	/* #APP */
 1286               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 1287 044a F894      		cli
 1288               	 ;  0 "" 2
 1289               	.LVL67:
 1290               	/* #NOAPP */
 1291               	.LBE763:
 1292               	.LBE762:
 178:usb/usb_pipe.h **** 			p->data->packet_offset = 0;
 1293               		.loc 2 178 0
 1294 044c 1092 0000 		sts ep_in_data+2,__zero_reg__
 1295 0450 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 1296               	.LVL68:
 1297               	.LBB764:
 1298               	.LBB765:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 1299               		.loc 4 81 0
 1300 0454 8091 0000 		lds r24,ep_in_pipe_data+4
 1301 0458 8F5F      		subi r24,lo8(-(1))
 1302 045a 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 1303               		.loc 4 82 0
 1304 045e 8091 0000 		lds r24,ep_in_pipe_data+2
 1305 0462 9091 0000 		lds r25,ep_in_pipe_data+2+1
 1306 0466 805C      		subi r24,lo8(-(64))
 1307 0468 9F4F      		sbci r25,hi8(-(64))
 1308 046a 8093 0000 		sts ep_in_pipe_data+2,r24
 1309 046e 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 1310               		.loc 4 84 0
 1311 0472 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 1312 0474 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 1313 0476 9F07      		cpc r25,r31
 1314 0478 01F4      		brne .L39
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 1315               		.loc 4 85 0
 1316 047a 6092 0000 		sts ep_in_pipe_data+2,r6
 1317 047e 7092 0000 		sts ep_in_pipe_data+2+1,r7
 1318               	.L39:
 1319               	.LVL69:
 1320               	.LBE765:
 1321               	.LBE764:
 1322               	.LBB766:
 1323               	.LBB759:
 1324               	.LBB756:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 1325               		.loc 2 80 0
 1326 0482 6FB7      		in r22,__SREG__
 1327               	.LVL70:
 1328               	.LBB734:
 1329               	.LBB735:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 1330               		.loc 3 50 0
 1331               	/* #APP */
 1332               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 1333 0484 F894      		cli
 1334               	 ;  0 "" 2
 1335               	.LVL71:
 1336               	/* #NOAPP */
 1337               	.LBE735:
 1338               	.LBE734:
 1339               	.LBB736:
 1340               	.LBB711:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 1341               		.loc 5 220 0
 1342 0486 8091 0000 		lds r24,endpoints+24
 1343 048a 8670      		andi r24,lo8(6)
 1344               	.LBE711:
 1345               	.LBE736:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 1346               		.loc 2 82 0
 1347 048c 01F4      		brne .L75
 1348               	.LVL72:
 1349               	.L40:
 1350               	.LBB737:
 1351               	.LBB738:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 1352               		.loc 3 70 0
 1353 048e 6FBF      		out __SREG__,r22
 1354               		.loc 3 71 0
 1355               	.LVL73:
 1356               	.LBE738:
 1357               	.LBE737:
 1358               	.LBE756:
 1359               	.LBE759:
 1360               	.LBE766:
 1361               	.LBB767:
 1362               	.LBB768:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 1363               		.loc 3 70 0
 1364 0490 1FBF      		out __SREG__,r17
 1365               		.loc 3 71 0
 1366 0492 00C0      		rjmp .L38
 1367               	.LVL74:
 1368               	.L75:
 1369               	.LBE768:
 1370               	.LBE767:
 1371               	.LBB769:
 1372               	.LBB760:
 1373               	.LBB757:
 1374               	.LBB739:
 1375               	.LBB740:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 1376               		.loc 4 51 0
 1377 0494 5091 0000 		lds r21,ep_in_pipe_data+4
 1378               	.LBE740:
 1379               	.LBE739:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 1380               		.loc 2 83 0
 1381 0498 1516      		cp __zero_reg__,r21
 1382 049a 04F0      		brlt .+2
 1383 049c 00C0      		rjmp .L41
 1384               	.LBB741:
 1385               	.LBB742:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 1386               		.loc 4 62 0
 1387 049e 2091 0000 		lds r18,ep_in_pipe_data
 1388 04a2 3091 0000 		lds r19,ep_in_pipe_data+1
 1389               	.LVL75:
 1390               	.LBE742:
 1391               	.LBE741:
 1392               	.LBB743:
 1393               	.LBB732:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 1394               		.loc 2 68 0
 1395 04a6 7091 0000 		lds r23,ep_in_data
 1396               	.LVL76:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 1397               		.loc 2 69 0
 1398 04aa 872F      		mov r24,r23
 1399 04ac 90E0      		ldi r25,lo8(0)
 1400 04ae E1E0      		ldi r30,lo8(1)
 1401 04b0 8C17      		cp r24,r28
 1402 04b2 9D07      		cpc r25,r29
 1403 04b4 01F4      		brne .L42
 1404 04b6 E0E0      		ldi r30,lo8(0)
 1405               	.L42:
 1406 04b8 E093 0000 		sts ep_in_data,r30
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 1407               		.loc 2 72 0
 1408 04bc 7723      		tst r23
 1409 04be 01F4      		brne .L43
 1410               	.LVL77:
 1411               	.LBB729:
 1412               	.LBB730:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1413               		.loc 5 168 0
 1414 04c0 2093 0000 		sts endpoints+28,r18
 1415 04c4 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1416               		.loc 5 169 0
 1417 04c8 E092 0000 		sts endpoints+26,r14
 1418 04cc F092 0000 		sts endpoints+26+1,r15
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 1419               		.loc 5 174 0
 1420 04d0 FD01      		movw r30,r26
 1421               	/* #APP */
 1422               	 ;  174 "usb/usb.h" 1
 1423 04d2 02E2      		ldi r16, 34
 1424 04d4 0693      		.dc.w 0x9306
 1425               		
 1426               	 ;  0 "" 2
 1427               	.LVL78:
 1428               	/* #NOAPP */
 1429               	.L44:
 1430               	.LBE730:
 1431               	.LBE729:
 1432               	.LBE732:
 1433               	.LBE743:
 1434               	.LBB744:
 1435               	.LBB745:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 1436               		.loc 4 72 0
 1437 04d6 5150      		subi r21,lo8(-(-1))
 1438 04d8 5093 0000 		sts ep_in_pipe_data+4,r21
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 1439               		.loc 4 73 0
 1440 04dc C901      		movw r24,r18
 1441 04de 805C      		subi r24,lo8(-(64))
 1442 04e0 9F4F      		sbci r25,hi8(-(64))
 1443 04e2 8093 0000 		sts ep_in_pipe_data,r24
 1444 04e6 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 1445               		.loc 4 75 0
 1446 04ea F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 1447 04ec 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 1448 04ee 9F07      		cpc r25,r31
 1449 04f0 01F4      		brne .L40
 1450               	.LBE745:
 1451               	.LBE744:
 1452               	.LBB746:
 1453               	.LBB714:
 1454               		.loc 4 91 0
 1455 04f2 6092 0000 		sts ep_in_pipe_data,r6
 1456 04f6 7092 0000 		sts ep_in_pipe_data+1,r7
 1457               	.LVL79:
 1458 04fa 00C0      		rjmp .L40
 1459               	.LVL80:
 1460               	.L43:
 1461               	.LBE714:
 1462               	.LBE746:
 1463               	.LBB747:
 1464               	.LBB733:
 1465               	.LBB731:
 1466               	.LBB728:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1467               		.loc 5 168 0
 1468 04fc 2093 0000 		sts endpoints+20,r18
 1469 0500 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1470               		.loc 5 169 0
 1471 0504 E092 0000 		sts endpoints+18,r14
 1472 0508 F092 0000 		sts endpoints+18+1,r15
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 1473               		.loc 5 176 0
 1474 050c FD01      		movw r30,r26
 1475               	/* #APP */
 1476               	 ;  176 "usb/usb.h" 1
 1477 050e 04E1      		ldi r16, 20
 1478 0510 0693      		.dc.w 0x9306
 1479               		
 1480               	 ;  0 "" 2
 1481               	/* #NOAPP */
 1482 0512 00C0      		rjmp .L44
 1483               	.LVL81:
 1484               	.L41:
 1485               	.LBE728:
 1486               	.LBE731:
 1487               	.LBE733:
 1488               	.LBE747:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 1489               		.loc 2 87 0
 1490 0514 8091 0000 		lds r24,ep_in_data+1
 1491 0518 8130      		cpi r24,lo8(1)
 1492 051a 01F0      		breq .L76
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 1493               		.loc 2 91 0
 1494 051c 8230      		cpi r24,lo8(2)
 1495 051e 01F0      		breq .+2
 1496 0520 00C0      		rjmp .L40
 1497               	.LVL82:
 1498               	.LBB748:
 1499               	.LBB749:
 1500               	.LBB750:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 1501               		.loc 5 228 0
 1502 0522 8091 0000 		lds r24,endpoints+24
 1503 0526 8670      		andi r24,lo8(6)
 1504               	.LBE750:
 1505               	.LBE749:
 1506               	.LBE748:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 1507               		.loc 2 91 0
 1508 0528 8630      		cpi r24,lo8(6)
 1509 052a 01F0      		breq .+2
 1510 052c 00C0      		rjmp .L40
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 1511               		.loc 2 92 0
 1512 052e 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 1513               		.loc 2 93 0
 1514 0532 1092 0000 		sts ep_in_data+2,__zero_reg__
 1515 0536 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 1516               	.LBB751:
 1517               	.LBB715:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 1518               		.loc 4 90 0
 1519 053a 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 1520               		.loc 4 91 0
 1521 053e 6092 0000 		sts ep_in_pipe_data+2,r6
 1522 0542 7092 0000 		sts ep_in_pipe_data+2+1,r7
 1523 0546 6092 0000 		sts ep_in_pipe_data,r6
 1524 054a 7092 0000 		sts ep_in_pipe_data+1,r7
 1525               	.LVL83:
 1526 054e 00C0      		rjmp .L40
 1527               	.LVL84:
 1528               	.L76:
 1529               	.LBE715:
 1530               	.LBE751:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 1531               		.loc 2 88 0
 1532 0550 22E0      		ldi r18,lo8(2)
 1533 0552 2093 0000 		sts ep_in_data+1,r18
 1534               	.LBB752:
 1535               	.LBB753:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 1536               		.loc 4 62 0
 1537 0556 E091 0000 		lds r30,ep_in_pipe_data
 1538 055a F091 0000 		lds r31,ep_in_pipe_data+1
 1539               	.LBE753:
 1540               	.LBE752:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 1541               		.loc 2 90 0
 1542 055e 2091 0000 		lds r18,ep_in_data+2
 1543 0562 3091 0000 		lds r19,ep_in_data+2+1
 1544               	.LVL85:
 1545               	.LBB754:
 1546               	.LBB722:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 1547               		.loc 2 68 0
 1548 0566 7091 0000 		lds r23,ep_in_data
 1549               	.LVL86:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 1550               		.loc 2 69 0
 1551 056a 872F      		mov r24,r23
 1552 056c 90E0      		ldi r25,lo8(0)
 1553 056e 51E0      		ldi r21,lo8(1)
 1554 0570 8C17      		cp r24,r28
 1555 0572 9D07      		cpc r25,r29
 1556 0574 01F4      		brne .L47
 1557 0576 50E0      		ldi r21,lo8(0)
 1558               	.L47:
 1559 0578 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 1560               		.loc 2 72 0
 1561 057c 7723      		tst r23
 1562 057e 01F0      		breq .+2
 1563 0580 00C0      		rjmp .L48
 1564               	.LVL87:
 1565               	.LBB718:
 1566               	.LBB719:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1567               		.loc 5 168 0
 1568 0582 E093 0000 		sts endpoints+28,r30
 1569 0586 F093 0000 		sts endpoints+28+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1570               		.loc 5 169 0
 1571 058a 2093 0000 		sts endpoints+26,r18
 1572 058e 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 1573               		.loc 5 174 0
 1574 0592 FD01      		movw r30,r26
 1575               	/* #APP */
 1576               	 ;  174 "usb/usb.h" 1
 1577 0594 02E2      		ldi r16, 34
 1578 0596 0693      		.dc.w 0x9306
 1579               		
 1580               	 ;  0 "" 2
 1581               	/* #NOAPP */
 1582 0598 00C0      		rjmp .L40
 1583               	.LVL88:
 1584               	.L73:
 1585               	.LBE719:
 1586               	.LBE718:
 1587               	.LBE722:
 1588               	.LBE754:
 1589               	.LBE757:
 1590               	.LBE760:
 1591               	.LBE769:
 1592               	.LBE771:
 1593               	.LBE773:
 1594               	.LBE775:
 1595               	.LBE781:
 1596               	.LBE785:
 1597               	.LBE789:
 1598               	.LBE871:
 1599               	.LBB872:
 1600               	.LBB867:
 1601               	.LBB864:
 1602               	.LBB837:
 1603               	.LBB835:
 1604               	.LBB833:
 1605               	.LBB831:
 1606               	.LBB804:
 1607               	.LBB805:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 1608               		.loc 4 51 0
 1609 059a 3091 0000 		lds r19,ep_in_pipe_data+4
 1610               	.LBE805:
 1611               	.LBE804:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 1612               		.loc 2 83 0
 1613 059e 1316      		cp __zero_reg__,r19
 1614 05a0 04F0      		brlt .+2
 1615 05a2 00C0      		rjmp .L51
 1616               	.LBB806:
 1617               	.LBB807:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 1618               		.loc 4 62 0
 1619 05a4 8091 0000 		lds r24,ep_in_pipe_data
 1620 05a8 9091 0000 		lds r25,ep_in_pipe_data+1
 1621               	.LVL89:
 1622               	.LBE807:
 1623               	.LBE806:
 1624               	.LBB808:
 1625               	.LBB809:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 1626               		.loc 2 68 0
 1627 05ac 4091 0000 		lds r20,ep_in_data
 1628               	.LVL90:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 1629               		.loc 2 69 0
 1630 05b0 51E0      		ldi r21,lo8(1)
 1631 05b2 4130      		cpi r20,lo8(1)
 1632 05b4 01F4      		brne .L52
 1633 05b6 50E0      		ldi r21,lo8(0)
 1634               	.L52:
 1635 05b8 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 1636               		.loc 2 72 0
 1637 05bc 4423      		tst r20
 1638 05be 01F4      		brne .L53
 1639               	.LVL91:
 1640               	.LBB810:
 1641               	.LBB811:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1642               		.loc 5 168 0
 1643 05c0 8093 0000 		sts endpoints+28,r24
 1644 05c4 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1645               		.loc 5 169 0
 1646 05c8 40E4      		ldi r20,lo8(64)
 1647 05ca 50E0      		ldi r21,hi8(64)
 1648 05cc 4093 0000 		sts endpoints+26,r20
 1649 05d0 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 1650               		.loc 5 174 0
 1651 05d4 E0E0      		ldi r30,lo8(endpoints+24)
 1652 05d6 F0E0      		ldi r31,hi8(endpoints+24)
 1653               	.LVL92:
 1654               	/* #APP */
 1655               	 ;  174 "usb/usb.h" 1
 1656 05d8 02E2      		ldi r16, 34
 1657 05da 0693      		.dc.w 0x9306
 1658               		
 1659               	 ;  0 "" 2
 1660               	.LVL93:
 1661               	/* #NOAPP */
 1662               	.L54:
 1663               	.LBE811:
 1664               	.LBE810:
 1665               	.LBE809:
 1666               	.LBE808:
 1667               	.LBB815:
 1668               	.LBB816:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 1669               		.loc 4 72 0
 1670 05dc 3150      		subi r19,lo8(-(-1))
 1671 05de 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 1672               		.loc 4 73 0
 1673 05e2 805C      		subi r24,lo8(-(64))
 1674 05e4 9F4F      		sbci r25,hi8(-(64))
 1675 05e6 8093 0000 		sts ep_in_pipe_data,r24
 1676 05ea 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 1677               		.loc 4 75 0
 1678 05ee F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 1679 05f0 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 1680 05f2 9F07      		cpc r25,r31
 1681 05f4 01F0      		breq .+2
 1682 05f6 00C0      		rjmp .L50
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 1683               		.loc 4 76 0
 1684 05f8 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 1685 05fa 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 1686 05fc 8093 0000 		sts ep_in_pipe_data,r24
 1687 0600 9093 0000 		sts ep_in_pipe_data+1,r25
 1688 0604 00C0      		rjmp .L50
 1689               	.LVL94:
 1690               	.L48:
 1691               	.LBE816:
 1692               	.LBE815:
 1693               	.LBE831:
 1694               	.LBE833:
 1695               	.LBE835:
 1696               	.LBE837:
 1697               	.LBE864:
 1698               	.LBE867:
 1699               	.LBE872:
 1700               	.LBB873:
 1701               	.LBB790:
 1702               	.LBB786:
 1703               	.LBB782:
 1704               	.LBB776:
 1705               	.LBB774:
 1706               	.LBB772:
 1707               	.LBB770:
 1708               	.LBB761:
 1709               	.LBB758:
 1710               	.LBB755:
 1711               	.LBB723:
 1712               	.LBB720:
 1713               	.LBB721:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1714               		.loc 5 168 0
 1715 0606 E093 0000 		sts endpoints+20,r30
 1716 060a F093 0000 		sts endpoints+20+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1717               		.loc 5 169 0
 1718 060e 2093 0000 		sts endpoints+18,r18
 1719 0612 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 1720               		.loc 5 176 0
 1721 0616 FD01      		movw r30,r26
 1722               	.LVL95:
 1723               	/* #APP */
 1724               	 ;  176 "usb/usb.h" 1
 1725 0618 04E1      		ldi r16, 20
 1726 061a 0693      		.dc.w 0x9306
 1727               		
 1728               	 ;  0 "" 2
 1729               	/* #NOAPP */
 1730 061c 00C0      		rjmp .L40
 1731               	.LVL96:
 1732               	.L53:
 1733               	.LBE721:
 1734               	.LBE720:
 1735               	.LBE723:
 1736               	.LBE755:
 1737               	.LBE758:
 1738               	.LBE761:
 1739               	.LBE770:
 1740               	.LBE772:
 1741               	.LBE774:
 1742               	.LBE776:
 1743               	.LBE782:
 1744               	.LBE786:
 1745               	.LBE790:
 1746               	.LBE873:
 1747               	.LBB874:
 1748               	.LBB868:
 1749               	.LBB865:
 1750               	.LBB838:
 1751               	.LBB836:
 1752               	.LBB834:
 1753               	.LBB832:
 1754               	.LBB817:
 1755               	.LBB814:
 1756               	.LBB812:
 1757               	.LBB813:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1758               		.loc 5 168 0
 1759 061e 8093 0000 		sts endpoints+20,r24
 1760 0622 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1761               		.loc 5 169 0
 1762 0626 40E4      		ldi r20,lo8(64)
 1763 0628 50E0      		ldi r21,hi8(64)
 1764               	.LVL97:
 1765 062a 4093 0000 		sts endpoints+18,r20
 1766 062e 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 1767               		.loc 5 176 0
 1768 0632 E0E0      		ldi r30,lo8(endpoints+24)
 1769 0634 F0E0      		ldi r31,hi8(endpoints+24)
 1770               	/* #APP */
 1771               	 ;  176 "usb/usb.h" 1
 1772 0636 04E1      		ldi r16, 20
 1773 0638 0693      		.dc.w 0x9306
 1774               		
 1775               	 ;  0 "" 2
 1776               	/* #NOAPP */
 1777 063a 00C0      		rjmp .L54
 1778               	.LVL98:
 1779               	.L51:
 1780               	.LBE813:
 1781               	.LBE812:
 1782               	.LBE814:
 1783               	.LBE817:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 1784               		.loc 2 87 0
 1785 063c 8091 0000 		lds r24,ep_in_data+1
 1786 0640 8130      		cpi r24,lo8(1)
 1787 0642 01F0      		breq .L77
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 1788               		.loc 2 91 0
 1789 0644 8230      		cpi r24,lo8(2)
 1790 0646 01F0      		breq .+2
 1791 0648 00C0      		rjmp .L50
 1792               	.LVL99:
 1793               	.LBB818:
 1794               	.LBB819:
 1795               	.LBB820:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 1796               		.loc 5 228 0
 1797 064a 8091 0000 		lds r24,endpoints+24
 1798 064e 8670      		andi r24,lo8(6)
 1799               	.LBE820:
 1800               	.LBE819:
 1801               	.LBE818:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 1802               		.loc 2 91 0
 1803 0650 8630      		cpi r24,lo8(6)
 1804 0652 01F0      		breq .+2
 1805 0654 00C0      		rjmp .L50
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 1806               		.loc 2 92 0
 1807 0656 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 1808               		.loc 2 93 0
 1809 065a 1092 0000 		sts ep_in_data+2,__zero_reg__
 1810 065e 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 1811               	.LBB821:
 1812               	.LBB822:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 1813               		.loc 4 90 0
 1814 0662 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 1815               		.loc 4 91 0
 1816 0666 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 1817 0668 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 1818 066a 8093 0000 		sts ep_in_pipe_data+2,r24
 1819 066e 9093 0000 		sts ep_in_pipe_data+2+1,r25
 1820 0672 8093 0000 		sts ep_in_pipe_data,r24
 1821 0676 9093 0000 		sts ep_in_pipe_data+1,r25
 1822               	.LVL100:
 1823 067a 00C0      		rjmp .L50
 1824               	.LVL101:
 1825               	.L77:
 1826               	.LBE822:
 1827               	.LBE821:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 1828               		.loc 2 88 0
 1829 067c 82E0      		ldi r24,lo8(2)
 1830 067e 8093 0000 		sts ep_in_data+1,r24
 1831               	.LBB823:
 1832               	.LBB824:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 1833               		.loc 4 62 0
 1834 0682 6091 0000 		lds r22,ep_in_pipe_data
 1835 0686 3091 0000 		lds r19,ep_in_pipe_data+1
 1836               	.LBE824:
 1837               	.LBE823:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 1838               		.loc 2 90 0
 1839 068a 4091 0000 		lds r20,ep_in_data+2
 1840 068e 5091 0000 		lds r21,ep_in_data+2+1
 1841               	.LVL102:
 1842               	.LBB825:
 1843               	.LBB826:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 1844               		.loc 2 68 0
 1845 0692 8091 0000 		lds r24,ep_in_data
 1846               	.LVL103:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 1847               		.loc 2 69 0
 1848 0696 91E0      		ldi r25,lo8(1)
 1849 0698 8130      		cpi r24,lo8(1)
 1850 069a 01F4      		brne .L57
 1851 069c 90E0      		ldi r25,lo8(0)
 1852               	.L57:
 1853 069e 9093 0000 		sts ep_in_data,r25
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 1854               		.loc 2 72 0
 1855 06a2 8823      		tst r24
 1856 06a4 01F4      		brne .L58
 1857               	.LVL104:
 1858               	.LBB827:
 1859               	.LBB828:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1860               		.loc 5 168 0
 1861 06a6 862F      		mov r24,r22
 1862 06a8 932F      		mov r25,r19
 1863 06aa 8093 0000 		sts endpoints+28,r24
 1864 06ae 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1865               		.loc 5 169 0
 1866 06b2 4093 0000 		sts endpoints+26,r20
 1867 06b6 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 1868               		.loc 5 174 0
 1869 06ba E0E0      		ldi r30,lo8(endpoints+24)
 1870 06bc F0E0      		ldi r31,hi8(endpoints+24)
 1871               	.LVL105:
 1872               	/* #APP */
 1873               	 ;  174 "usb/usb.h" 1
 1874 06be 02E2      		ldi r16, 34
 1875 06c0 0693      		.dc.w 0x9306
 1876               		
 1877               	 ;  0 "" 2
 1878               	/* #NOAPP */
 1879 06c2 00C0      		rjmp .L50
 1880               	.LVL106:
 1881               	.L58:
 1882               	.LBE828:
 1883               	.LBE827:
 1884               	.LBB829:
 1885               	.LBB830:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1886               		.loc 5 168 0
 1887 06c4 862F      		mov r24,r22
 1888 06c6 932F      		mov r25,r19
 1889 06c8 8093 0000 		sts endpoints+20,r24
 1890 06cc 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1891               		.loc 5 169 0
 1892 06d0 4093 0000 		sts endpoints+18,r20
 1893 06d4 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 1894               		.loc 5 176 0
 1895 06d8 E0E0      		ldi r30,lo8(endpoints+24)
 1896 06da F0E0      		ldi r31,hi8(endpoints+24)
 1897               	/* #APP */
 1898               	 ;  176 "usb/usb.h" 1
 1899 06dc 04E1      		ldi r16, 20
 1900 06de 0693      		.dc.w 0x9306
 1901               		
 1902               	 ;  0 "" 2
 1903               	/* #NOAPP */
 1904 06e0 00C0      		rjmp .L50
 1905               	.LBE830:
 1906               	.LBE829:
 1907               	.LBE826:
 1908               	.LBE825:
 1909               	.LBE832:
 1910               	.LBE834:
 1911               	.LBE836:
 1912               	.LBE838:
 1913               	.LBE865:
 1914               	.LBE868:
 1915               	.LBE874:
 1916               		.cfi_endproc
 1917               	.LFE61:
 1919               	.global	concat
 1921               	concat:
 1922               	.LFB62:
  11:concat/concat.h **** 
  12:concat/concat.h **** char* concat(char *s1, char *s2)
  13:concat/concat.h **** {
 1923               		.loc 7 13 0
 1924               		.cfi_startproc
 1925               	.LVL107:
 1926 06e2 EF92      		push r14
 1927               	.LCFI43:
 1928               		.cfi_def_cfa_offset 3
 1929               		.cfi_offset 14, -2
 1930 06e4 FF92      		push r15
 1931               	.LCFI44:
 1932               		.cfi_def_cfa_offset 4
 1933               		.cfi_offset 15, -3
 1934 06e6 0F93      		push r16
 1935               	.LCFI45:
 1936               		.cfi_def_cfa_offset 5
 1937               		.cfi_offset 16, -4
 1938 06e8 1F93      		push r17
 1939               	.LCFI46:
 1940               		.cfi_def_cfa_offset 6
 1941               		.cfi_offset 17, -5
 1942 06ea CF93      		push r28
 1943               	.LCFI47:
 1944               		.cfi_def_cfa_offset 7
 1945               		.cfi_offset 28, -6
 1946 06ec DF93      		push r29
 1947               	.LCFI48:
 1948               		.cfi_def_cfa_offset 8
 1949               		.cfi_offset 29, -7
 1950               	/* prologue: function */
 1951               	/* frame size = 0 */
 1952               	/* stack size = 6 */
 1953               	.L__stack_usage = 6
 1954 06ee F82E      		mov r15,r24
 1955 06f0 E92E      		mov r14,r25
 1956 06f2 162F      		mov r17,r22
 1957 06f4 072F      		mov r16,r23
  14:concat/concat.h ****     //string concatenation -- not needed now, but might prove useful later
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 1958               		.loc 7 15 0
 1959 06f6 A82F      		mov r26,r24
 1960 06f8 B92F      		mov r27,r25
 1961 06fa ED01      		movw r28,r26
 1962 06fc 0990      		ld __tmp_reg__,Y+
 1963 06fe 0020      		tst __tmp_reg__
 1964 0700 01F4      		brne .-6
 1965 0702 9E01      		movw r18,r28
 1966 0704 E62F      		mov r30,r22
 1967 0706 F72F      		mov r31,r23
 1968 0708 EF01      		movw r28,r30
 1969 070a 0990      		ld __tmp_reg__,Y+
 1970 070c 0020      		tst __tmp_reg__
 1971 070e 01F4      		brne .-6
 1972 0710 CE01      		movw r24,r28
 1973               	.LVL108:
 1974 0712 0197      		sbiw r24,1
 1975 0714 8E1B      		sub r24,r30
 1976 0716 9F0B      		sbc r25,r31
 1977 0718 8A1B      		sub r24,r26
 1978 071a 9B0B      		sbc r25,r27
 1979 071c 820F      		add r24,r18
 1980 071e 931F      		adc r25,r19
 1981 0720 0E94 0000 		call malloc
 1982               	.LVL109:
 1983 0724 D82F      		mov r29,r24
 1984 0726 C92F      		mov r28,r25
 1985               	.LVL110:
  16:concat/concat.h ****     //should also check for memory allocation errors here
  17:concat/concat.h ****     strcpy(result, s1);
 1986               		.loc 7 17 0
 1987 0728 6F2D      		mov r22,r15
 1988 072a 7E2D      		mov r23,r14
 1989 072c 0E94 0000 		call strcpy
 1990               	.LVL111:
  18:concat/concat.h ****     strcat(result, s2);
 1991               		.loc 7 18 0
 1992 0730 8D2F      		mov r24,r29
 1993 0732 9C2F      		mov r25,r28
 1994 0734 612F      		mov r22,r17
 1995 0736 702F      		mov r23,r16
 1996 0738 0E94 0000 		call strcat
  19:concat/concat.h ****     return result;
  20:concat/concat.h **** }
 1997               		.loc 7 20 0
 1998 073c 8D2F      		mov r24,r29
 1999 073e 9C2F      		mov r25,r28
 2000               	/* epilogue start */
 2001 0740 DF91      		pop r29
 2002               	.LVL112:
 2003 0742 CF91      		pop r28
 2004               	.LVL113:
 2005 0744 1F91      		pop r17
 2006 0746 0F91      		pop r16
 2007 0748 FF90      		pop r15
 2008 074a EF90      		pop r14
 2009 074c 0895      		ret
 2010               		.cfi_endproc
 2011               	.LFE62:
 2013               	.global	distance
 2015               	distance:
 2016               	.LFB63:
 2017               		.file 8 "nmea/nmea.h"
   1:nmea/nmea.h   **** #include <avr/io.h>
   2:nmea/nmea.h   **** #include <stdlib.h>
   3:nmea/nmea.h   **** #include <string.h>
   4:nmea/nmea.h   **** 
   5:nmea/nmea.h   **** //sample nmea strings for testing parser
   6:nmea/nmea.h   **** double lat = 42.292747;
   7:nmea/nmea.h   **** double lng = -71.264622;
   8:nmea/nmea.h   **** double max_dist = .200;
   9:nmea/nmea.h   **** 
  10:nmea/nmea.h   **** typedef struct _latlng {
  11:nmea/nmea.h   ****   double lat;
  12:nmea/nmea.h   ****   double lng;
  13:nmea/nmea.h   **** } latlng;
  14:nmea/nmea.h   **** 
  15:nmea/nmea.h   **** char* parse_nmea(void);
  16:nmea/nmea.h   **** extern void parse_nmea_string(char *s, latlng *gps);
  17:nmea/nmea.h   **** double distance(double gpslat, double gpslng);
  18:nmea/nmea.h   **** 
  19:nmea/nmea.h   **** #define d2r (M_PI / 180.0)
  20:nmea/nmea.h   **** 
  21:nmea/nmea.h   **** //calculate distance, assuming earth is spherical
  22:nmea/nmea.h   **** double distance(double gpslat, double gpslng) {
 2018               		.loc 8 22 0
 2019               		.cfi_startproc
 2020               	.LVL114:
 2021 074e 2F92      		push r2
 2022               	.LCFI49:
 2023               		.cfi_def_cfa_offset 3
 2024               		.cfi_offset 2, -2
 2025 0750 3F92      		push r3
 2026               	.LCFI50:
 2027               		.cfi_def_cfa_offset 4
 2028               		.cfi_offset 3, -3
 2029 0752 4F92      		push r4
 2030               	.LCFI51:
 2031               		.cfi_def_cfa_offset 5
 2032               		.cfi_offset 4, -4
 2033 0754 5F92      		push r5
 2034               	.LCFI52:
 2035               		.cfi_def_cfa_offset 6
 2036               		.cfi_offset 5, -5
 2037 0756 6F92      		push r6
 2038               	.LCFI53:
 2039               		.cfi_def_cfa_offset 7
 2040               		.cfi_offset 6, -6
 2041 0758 7F92      		push r7
 2042               	.LCFI54:
 2043               		.cfi_def_cfa_offset 8
 2044               		.cfi_offset 7, -7
 2045 075a 8F92      		push r8
 2046               	.LCFI55:
 2047               		.cfi_def_cfa_offset 9
 2048               		.cfi_offset 8, -8
 2049 075c 9F92      		push r9
 2050               	.LCFI56:
 2051               		.cfi_def_cfa_offset 10
 2052               		.cfi_offset 9, -9
 2053 075e AF92      		push r10
 2054               	.LCFI57:
 2055               		.cfi_def_cfa_offset 11
 2056               		.cfi_offset 10, -10
 2057 0760 BF92      		push r11
 2058               	.LCFI58:
 2059               		.cfi_def_cfa_offset 12
 2060               		.cfi_offset 11, -11
 2061 0762 CF92      		push r12
 2062               	.LCFI59:
 2063               		.cfi_def_cfa_offset 13
 2064               		.cfi_offset 12, -12
 2065 0764 DF92      		push r13
 2066               	.LCFI60:
 2067               		.cfi_def_cfa_offset 14
 2068               		.cfi_offset 13, -13
 2069 0766 EF92      		push r14
 2070               	.LCFI61:
 2071               		.cfi_def_cfa_offset 15
 2072               		.cfi_offset 14, -14
 2073 0768 FF92      		push r15
 2074               	.LCFI62:
 2075               		.cfi_def_cfa_offset 16
 2076               		.cfi_offset 15, -15
 2077 076a 0F93      		push r16
 2078               	.LCFI63:
 2079               		.cfi_def_cfa_offset 17
 2080               		.cfi_offset 16, -16
 2081 076c 1F93      		push r17
 2082               	.LCFI64:
 2083               		.cfi_def_cfa_offset 18
 2084               		.cfi_offset 17, -17
 2085 076e CF93      		push r28
 2086               	.LCFI65:
 2087               		.cfi_def_cfa_offset 19
 2088               		.cfi_offset 28, -18
 2089 0770 DF93      		push r29
 2090               	.LCFI66:
 2091               		.cfi_def_cfa_offset 20
 2092               		.cfi_offset 29, -19
 2093 0772 CDB7      		in r28,__SP_L__
 2094 0774 DEB7      		in r29,__SP_H__
 2095 0776 2697      		sbiw r28,6
 2096               	.LCFI67:
 2097               		.cfi_def_cfa 28, 26
 2098 0778 CDBF      		out __SP_L__,r28
 2099 077a DEBF      		out __SP_H__,r29
 2100               	/* prologue: function */
 2101               	/* frame size = 6 */
 2102               	/* stack size = 24 */
 2103               	.L__stack_usage = 24
 2104 077c 4B01      		movw r8,r22
 2105 077e 5C01      		movw r10,r24
 2106 0780 2983      		std Y+1,r18
 2107 0782 3A83      		std Y+2,r19
 2108 0784 4B83      		std Y+3,r20
 2109 0786 5C83      		std Y+4,r21
 2110               	.LVL115:
  23:nmea/nmea.h   ****     double dlong = (gpslng - lng) * d2r;
  24:nmea/nmea.h   ****     double dlat = (gpslat - lat) * d2r;
 2111               		.loc 8 24 0
 2112 0788 C090 0000 		lds r12,lat
 2113 078c D090 0000 		lds r13,lat+1
 2114 0790 E090 0000 		lds r14,lat+2
 2115 0794 F090 0000 		lds r15,lat+3
 2116               	.LVL116:
 2117 0798 A701      		movw r20,r14
 2118 079a 9601      		movw r18,r12
 2119               	.LVL117:
 2120 079c 0E94 0000 		call __subsf3
 2121               	.LVL118:
 2122 07a0 25E3      		ldi r18,lo8(0x3c8efa35)
 2123 07a2 3AEF      		ldi r19,hi8(0x3c8efa35)
 2124 07a4 4EE8      		ldi r20,hlo8(0x3c8efa35)
 2125 07a6 5CE3      		ldi r21,hhi8(0x3c8efa35)
 2126 07a8 0E94 0000 		call __mulsf3
  25:nmea/nmea.h   ****     double a = pow(sin(dlat/2.0), 2) + cos(lat*d2r) * cos(gpslat*d2r) * pow(sin(dlong/2.0), 2);
 2127               		.loc 8 25 0
 2128 07ac 20E0      		ldi r18,lo8(0x3f000000)
 2129 07ae 30E0      		ldi r19,hi8(0x3f000000)
 2130 07b0 40E0      		ldi r20,hlo8(0x3f000000)
 2131 07b2 5FE3      		ldi r21,hhi8(0x3f000000)
 2132 07b4 0E94 0000 		call __mulsf3
 2133 07b8 0E94 0000 		call sin
 2134 07bc 9B01      		movw r18,r22
 2135 07be AC01      		movw r20,r24
 2136 07c0 0E94 0000 		call __mulsf3
 2137 07c4 362E      		mov r3,r22
 2138 07c6 272E      		mov r2,r23
 2139 07c8 8D83      		std Y+5,r24
 2140 07ca 9E83      		std Y+6,r25
 2141 07cc C701      		movw r24,r14
 2142 07ce B601      		movw r22,r12
 2143 07d0 25E3      		ldi r18,lo8(0x3c8efa35)
 2144 07d2 3AEF      		ldi r19,hi8(0x3c8efa35)
 2145 07d4 4EE8      		ldi r20,hlo8(0x3c8efa35)
 2146 07d6 5CE3      		ldi r21,hhi8(0x3c8efa35)
 2147 07d8 0E94 0000 		call __mulsf3
 2148 07dc 0E94 0000 		call cos
 2149 07e0 7B01      		movw r14,r22
 2150 07e2 8C01      		movw r16,r24
 2151 07e4 C501      		movw r24,r10
 2152 07e6 B401      		movw r22,r8
 2153 07e8 25E3      		ldi r18,lo8(0x3c8efa35)
 2154 07ea 3AEF      		ldi r19,hi8(0x3c8efa35)
 2155 07ec 4EE8      		ldi r20,hlo8(0x3c8efa35)
 2156 07ee 5CE3      		ldi r21,hhi8(0x3c8efa35)
 2157 07f0 0E94 0000 		call __mulsf3
 2158 07f4 0E94 0000 		call cos
 2159 07f8 2B01      		movw r4,r22
 2160 07fa 3C01      		movw r6,r24
  23:nmea/nmea.h   ****     double dlong = (gpslng - lng) * d2r;
 2161               		.loc 8 23 0
 2162 07fc 6981      		ldd r22,Y+1
 2163 07fe 7A81      		ldd r23,Y+2
 2164 0800 8B81      		ldd r24,Y+3
 2165 0802 9C81      		ldd r25,Y+4
 2166 0804 2091 0000 		lds r18,lng
 2167 0808 3091 0000 		lds r19,lng+1
 2168 080c 4091 0000 		lds r20,lng+2
 2169 0810 5091 0000 		lds r21,lng+3
 2170               	.LVL119:
 2171 0814 0E94 0000 		call __subsf3
 2172               	.LVL120:
 2173 0818 25E3      		ldi r18,lo8(0x3c8efa35)
 2174 081a 3AEF      		ldi r19,hi8(0x3c8efa35)
 2175 081c 4EE8      		ldi r20,hlo8(0x3c8efa35)
 2176 081e 5CE3      		ldi r21,hhi8(0x3c8efa35)
 2177 0820 0E94 0000 		call __mulsf3
 2178               		.loc 8 25 0
 2179 0824 20E0      		ldi r18,lo8(0x3f000000)
 2180 0826 30E0      		ldi r19,hi8(0x3f000000)
 2181 0828 40E0      		ldi r20,hlo8(0x3f000000)
 2182 082a 5FE3      		ldi r21,hhi8(0x3f000000)
 2183 082c 0E94 0000 		call __mulsf3
 2184 0830 0E94 0000 		call sin
 2185 0834 9B01      		movw r18,r22
 2186 0836 AC01      		movw r20,r24
 2187 0838 0E94 0000 		call __mulsf3
 2188 083c B62E      		mov r11,r22
 2189 083e D72E      		mov r13,r23
 2190 0840 882E      		mov r8,r24
 2191               	.LVL121:
 2192 0842 C92E      		mov r12,r25
 2193 0844 C801      		movw r24,r16
 2194 0846 B701      		movw r22,r14
 2195 0848 A301      		movw r20,r6
 2196 084a 9201      		movw r18,r4
 2197 084c 0E94 0000 		call __mulsf3
 2198 0850 0B2D      		mov r16,r11
 2199 0852 1D2D      		mov r17,r13
 2200 0854 282D      		mov r18,r8
 2201 0856 3C2D      		mov r19,r12
 2202 0858 A901      		movw r20,r18
 2203 085a 9801      		movw r18,r16
 2204 085c 0E94 0000 		call __mulsf3
 2205 0860 9B01      		movw r18,r22
 2206 0862 AC01      		movw r20,r24
 2207 0864 F101      		movw r30,r2
 2208 0866 7D81      		ldd r23,Y+5
 2209 0868 6E81      		ldd r22,Y+6
 2210 086a 8F2F      		mov r24,r31
 2211 086c 9E2F      		mov r25,r30
 2212 086e A72F      		mov r26,r23
 2213 0870 B62F      		mov r27,r22
 2214 0872 BC01      		movw r22,r24
 2215 0874 CD01      		movw r24,r26
 2216 0876 0E94 0000 		call __addsf3
 2217 087a 862E      		mov r8,r22
 2218 087c 072F      		mov r16,r23
 2219 087e 382E      		mov r3,r24
 2220 0880 492E      		mov r4,r25
 2221               	.LVL122:
  26:nmea/nmea.h   ****     double c = 2 * atan2(sqrt(a), sqrt(1-a));
 2222               		.loc 8 26 0
 2223 0882 982F      		mov r25,r24
 2224               	.LVL123:
 2225 0884 482D      		mov r20,r8
 2226 0886 502F      		mov r21,r16
 2227 0888 692F      		mov r22,r25
 2228               	.LVL124:
 2229 088a 742D      		mov r23,r4
 2230               	.LVL125:
 2231 088c CB01      		movw r24,r22
 2232 088e BA01      		movw r22,r20
 2233 0890 0E94 0000 		call sqrt
 2234               	.LVL126:
 2235 0894 6B01      		movw r12,r22
 2236 0896 7C01      		movw r14,r24
 2237 0898 60E0      		ldi r22,lo8(0x3f800000)
 2238 089a 70E0      		ldi r23,hi8(0x3f800000)
 2239 089c 80E8      		ldi r24,hlo8(0x3f800000)
 2240 089e 9FE3      		ldi r25,hhi8(0x3f800000)
 2241 08a0 E02F      		mov r30,r16
 2242 08a2 082D      		mov r16,r8
 2243               	.LVL127:
 2244 08a4 1E2F      		mov r17,r30
 2245 08a6 232D      		mov r18,r3
 2246 08a8 342D      		mov r19,r4
 2247 08aa A901      		movw r20,r18
 2248 08ac 9801      		movw r18,r16
 2249 08ae 0E94 0000 		call __subsf3
 2250               	.LVL128:
 2251 08b2 0E94 0000 		call sqrt
 2252 08b6 9B01      		movw r18,r22
 2253 08b8 AC01      		movw r20,r24
 2254 08ba C701      		movw r24,r14
 2255 08bc B601      		movw r22,r12
 2256 08be 0E94 0000 		call atan2
 2257 08c2 9B01      		movw r18,r22
 2258 08c4 AC01      		movw r20,r24
 2259               	.LVL129:
 2260 08c6 0E94 0000 		call __addsf3
 2261               	.LVL130:
  27:nmea/nmea.h   ****     double d = 6367 * c;
 2262               		.loc 8 27 0
 2263 08ca 20E0      		ldi r18,lo8(0x45c6f800)
 2264 08cc 38EF      		ldi r19,hi8(0x45c6f800)
 2265 08ce 46EC      		ldi r20,hlo8(0x45c6f800)
 2266 08d0 55E4      		ldi r21,hhi8(0x45c6f800)
 2267 08d2 0E94 0000 		call __mulsf3
  28:nmea/nmea.h   **** 
  29:nmea/nmea.h   ****     return d;
  30:nmea/nmea.h   **** }
 2268               		.loc 8 30 0
 2269 08d6 462F      		mov r20,r22
 2270 08d8 572F      		mov r21,r23
 2271 08da 682F      		mov r22,r24
 2272 08dc 792F      		mov r23,r25
 2273 08de CB01      		movw r24,r22
 2274 08e0 BA01      		movw r22,r20
 2275               	/* epilogue start */
 2276 08e2 2696      		adiw r28,6
 2277 08e4 CDBF      		out __SP_L__,r28
 2278 08e6 DEBF      		out __SP_H__,r29
 2279 08e8 DF91      		pop r29
 2280 08ea CF91      		pop r28
 2281 08ec 1F91      		pop r17
 2282               	.LVL131:
 2283 08ee 0F91      		pop r16
 2284 08f0 FF90      		pop r15
 2285 08f2 EF90      		pop r14
 2286 08f4 DF90      		pop r13
 2287 08f6 CF90      		pop r12
 2288 08f8 BF90      		pop r11
 2289 08fa AF90      		pop r10
 2290 08fc 9F90      		pop r9
 2291 08fe 8F90      		pop r8
 2292 0900 7F90      		pop r7
 2293 0902 6F90      		pop r6
 2294 0904 5F90      		pop r5
 2295 0906 4F90      		pop r4
 2296 0908 3F90      		pop r3
 2297 090a 2F90      		pop r2
 2298 090c 0895      		ret
 2299               		.cfi_endproc
 2300               	.LFE63:
 2302               		.data
 2303               	.LC0:
 2304 0000 2C00      		.string	","
 2305               		.text
 2306               	.global	parse_nmea_string
 2308               	parse_nmea_string:
 2309               	.LFB64:
  31:nmea/nmea.h   **** 
  32:nmea/nmea.h   **** 
  33:nmea/nmea.h   **** 
  34:nmea/nmea.h   **** void parse_nmea_string(char *s, latlng *gps)
  35:nmea/nmea.h   **** {
 2310               		.loc 8 35 0
 2311               		.cfi_startproc
 2312               	.LVL132:
 2313 090e EF92      		push r14
 2314               	.LCFI68:
 2315               		.cfi_def_cfa_offset 3
 2316               		.cfi_offset 14, -2
 2317 0910 FF92      		push r15
 2318               	.LCFI69:
 2319               		.cfi_def_cfa_offset 4
 2320               		.cfi_offset 15, -3
 2321 0912 0F93      		push r16
 2322               	.LCFI70:
 2323               		.cfi_def_cfa_offset 5
 2324               		.cfi_offset 16, -4
 2325 0914 1F93      		push r17
 2326               	.LCFI71:
 2327               		.cfi_def_cfa_offset 6
 2328               		.cfi_offset 17, -5
 2329 0916 CF93      		push r28
 2330               	.LCFI72:
 2331               		.cfi_def_cfa_offset 7
 2332               		.cfi_offset 28, -6
 2333 0918 DF93      		push r29
 2334               	.LCFI73:
 2335               		.cfi_def_cfa_offset 8
 2336               		.cfi_offset 29, -7
 2337 091a CDB7      		in r28,__SP_L__
 2338 091c DEB7      		in r29,__SP_H__
 2339 091e A897      		sbiw r28,40
 2340               	.LCFI74:
 2341               		.cfi_def_cfa 28, 48
 2342 0920 CDBF      		out __SP_L__,r28
 2343 0922 DEBF      		out __SP_H__,r29
 2344               	/* prologue: function */
 2345               	/* frame size = 40 */
 2346               	/* stack size = 46 */
 2347               	.L__stack_usage = 46
 2348 0924 7B01      		movw r14,r22
 2349               	.LVL133:
  36:nmea/nmea.h   ****   int i=0; // used to iterate through array
  37:nmea/nmea.h   ****   char *token[20]; //stores the chunks of string after splitting the string on commas
  38:nmea/nmea.h   **** 
  39:nmea/nmea.h   ****   token[0] = strtok(s, ","); //get pointer to first token found and store in
 2350               		.loc 8 39 0
 2351 0926 60E0      		ldi r22,lo8(.LC0)
 2352 0928 70E0      		ldi r23,hi8(.LC0)
 2353               	.LVL134:
 2354 092a 0E94 0000 		call strtok
 2355               	.LVL135:
  40:nmea/nmea.h   ****                              //first element of array
  41:nmea/nmea.h   ****   while(token[i] != NULL) {  //while commas continue to be found
 2356               		.loc 8 41 0
 2357 092e 0097      		sbiw r24,0
 2358 0930 01F0      		breq .L81
 2359 0932 8E01      		movw r16,r28
 2360 0934 0D5F      		subi r16,lo8(-(3))
 2361 0936 1F4F      		sbci r17,hi8(-(3))
 2362               	.LVL136:
 2363               	.L82:
  42:nmea/nmea.h   ****       i++;  
  43:nmea/nmea.h   ****       token[i] = strtok(NULL, ","); //continue to split the string
 2364               		.loc 8 43 0
 2365 0938 80E0      		ldi r24,lo8(0)
 2366 093a 90E0      		ldi r25,hi8(0)
 2367 093c 60E0      		ldi r22,lo8(.LC0)
 2368 093e 70E0      		ldi r23,hi8(.LC0)
 2369 0940 0E94 0000 		call strtok
 2370 0944 F801      		movw r30,r16
 2371 0946 8193      		st Z+,r24
 2372 0948 9193      		st Z+,r25
 2373 094a 8F01      		movw r16,r30
  41:nmea/nmea.h   ****   while(token[i] != NULL) {  //while commas continue to be found
 2374               		.loc 8 41 0
 2375 094c 0097      		sbiw r24,0
 2376 094e 01F4      		brne .L82
 2377               	.L81:
 2378               	.LVL137:
  44:nmea/nmea.h   ****   }
  45:nmea/nmea.h   **** 
  46:nmea/nmea.h   ****   //Example: token = [], s = "a,b,c"
  47:nmea/nmea.h   ****   //Iteration 1
  48:nmea/nmea.h   ****   //token --> ["a"], s-->"b,c"
  49:nmea/nmea.h   ****   //token --> ["a", "b"], s-->"c"
  50:nmea/nmea.h   ****   //token --> ["a", "b", "c"], s-->""
  51:nmea/nmea.h   ****   //end
  52:nmea/nmea.h   **** 
  53:nmea/nmea.h   ****   //when parsing GPRMC data
  54:nmea/nmea.h   ****   //longitude should be stored at index 3
  55:nmea/nmea.h   ****   //latitude should be stord at index 5
  56:nmea/nmea.h   **** 
  57:nmea/nmea.h   ****   //indices will have to be changed if our gps module
  58:nmea/nmea.h   ****   //speaks a different dialog of NMEA
  59:nmea/nmea.h   **** 
  60:nmea/nmea.h   ****   char* lat_str = token[3]; //longitude
  61:nmea/nmea.h   ****   char* lng_str = token[5]; //latitude
 2379               		.loc 8 61 0
 2380 0950 0B85      		ldd r16,Y+11
 2381 0952 1C85      		ldd r17,Y+12
 2382               	.LVL138:
  62:nmea/nmea.h   **** 
  63:nmea/nmea.h   ****   //converts string stored in gps->lat_str to double and stores in lat
  64:nmea/nmea.h   ****   gps->lat = atof(lat_str)/100.;
 2383               		.loc 8 64 0
 2384 0954 8F81      		ldd r24,Y+7
 2385 0956 9885      		ldd r25,Y+8
 2386 0958 0E94 0000 		call atof
 2387               	.LVL139:
 2388 095c 20E0      		ldi r18,lo8(0x42c80000)
 2389 095e 30E0      		ldi r19,hi8(0x42c80000)
 2390 0960 48EC      		ldi r20,hlo8(0x42c80000)
 2391 0962 52E4      		ldi r21,hhi8(0x42c80000)
 2392 0964 0E94 0000 		call __divsf3
 2393 0968 DC01      		movw r26,r24
 2394 096a CB01      		movw r24,r22
 2395 096c F701      		movw r30,r14
 2396 096e 8083      		st Z,r24
 2397 0970 9183      		std Z+1,r25
 2398 0972 A283      		std Z+2,r26
 2399 0974 B383      		std Z+3,r27
  65:nmea/nmea.h   **** 
  66:nmea/nmea.h   ****   //converts string stored in gps->lng_str to double and stores in lng
  67:nmea/nmea.h   ****   gps->lng = atof(lng_str)/100.;
 2400               		.loc 8 67 0
 2401 0976 C801      		movw r24,r16
 2402 0978 0E94 0000 		call atof
 2403 097c 20E0      		ldi r18,lo8(0x42c80000)
 2404 097e 30E0      		ldi r19,hi8(0x42c80000)
 2405 0980 48EC      		ldi r20,hlo8(0x42c80000)
 2406 0982 52E4      		ldi r21,hhi8(0x42c80000)
 2407 0984 0E94 0000 		call __divsf3
 2408 0988 DC01      		movw r26,r24
 2409 098a CB01      		movw r24,r22
 2410 098c F701      		movw r30,r14
 2411 098e 8483      		std Z+4,r24
 2412 0990 9583      		std Z+5,r25
 2413 0992 A683      		std Z+6,r26
 2414 0994 B783      		std Z+7,r27
 2415               	/* epilogue start */
  68:nmea/nmea.h   **** }
 2416               		.loc 8 68 0
 2417 0996 A896      		adiw r28,40
 2418 0998 CDBF      		out __SP_L__,r28
 2419 099a DEBF      		out __SP_H__,r29
 2420 099c DF91      		pop r29
 2421 099e CF91      		pop r28
 2422 09a0 1F91      		pop r17
 2423 09a2 0F91      		pop r16
 2424               	.LVL140:
 2425 09a4 FF90      		pop r15
 2426 09a6 EF90      		pop r14
 2427               	.LVL141:
 2428 09a8 0895      		ret
 2429               		.cfi_endproc
 2430               	.LFE64:
 2432               		.data
 2433               	.LC1:
 2434 0002 2447 5052 		.string	"$GPRMC,71.132,A,4230.00,N,-7130.00,E,11.2,0.0,261206,0.0,E*50\r\n"
 2434      4D43 2C37 
 2434      312E 3133 
 2434      322C 412C 
 2434      3432 3330 
 2435               	.LC2:
 2436 0042 2566 00   		.string	"%f"
 2437               		.text
 2438               	.global	parse_nmea
 2440               	parse_nmea:
 2441               	.LFB65:
  69:nmea/nmea.h   **** 
  70:nmea/nmea.h   **** 
  71:nmea/nmea.h   **** char* parse_nmea(void) {
 2442               		.loc 8 71 0
 2443               		.cfi_startproc
 2444 09aa 2F92      		push r2
 2445               	.LCFI75:
 2446               		.cfi_def_cfa_offset 3
 2447               		.cfi_offset 2, -2
 2448 09ac 3F92      		push r3
 2449               	.LCFI76:
 2450               		.cfi_def_cfa_offset 4
 2451               		.cfi_offset 3, -3
 2452 09ae 4F92      		push r4
 2453               	.LCFI77:
 2454               		.cfi_def_cfa_offset 5
 2455               		.cfi_offset 4, -4
 2456 09b0 5F92      		push r5
 2457               	.LCFI78:
 2458               		.cfi_def_cfa_offset 6
 2459               		.cfi_offset 5, -5
 2460 09b2 6F92      		push r6
 2461               	.LCFI79:
 2462               		.cfi_def_cfa_offset 7
 2463               		.cfi_offset 6, -6
 2464 09b4 7F92      		push r7
 2465               	.LCFI80:
 2466               		.cfi_def_cfa_offset 8
 2467               		.cfi_offset 7, -7
 2468 09b6 8F92      		push r8
 2469               	.LCFI81:
 2470               		.cfi_def_cfa_offset 9
 2471               		.cfi_offset 8, -8
 2472 09b8 9F92      		push r9
 2473               	.LCFI82:
 2474               		.cfi_def_cfa_offset 10
 2475               		.cfi_offset 9, -9
 2476 09ba AF92      		push r10
 2477               	.LCFI83:
 2478               		.cfi_def_cfa_offset 11
 2479               		.cfi_offset 10, -10
 2480 09bc BF92      		push r11
 2481               	.LCFI84:
 2482               		.cfi_def_cfa_offset 12
 2483               		.cfi_offset 11, -11
 2484 09be CF92      		push r12
 2485               	.LCFI85:
 2486               		.cfi_def_cfa_offset 13
 2487               		.cfi_offset 12, -12
 2488 09c0 DF92      		push r13
 2489               	.LCFI86:
 2490               		.cfi_def_cfa_offset 14
 2491               		.cfi_offset 13, -13
 2492 09c2 EF92      		push r14
 2493               	.LCFI87:
 2494               		.cfi_def_cfa_offset 15
 2495               		.cfi_offset 14, -14
 2496 09c4 FF92      		push r15
 2497               	.LCFI88:
 2498               		.cfi_def_cfa_offset 16
 2499               		.cfi_offset 15, -15
 2500 09c6 0F93      		push r16
 2501               	.LCFI89:
 2502               		.cfi_def_cfa_offset 17
 2503               		.cfi_offset 16, -16
 2504 09c8 1F93      		push r17
 2505               	.LCFI90:
 2506               		.cfi_def_cfa_offset 18
 2507               		.cfi_offset 17, -17
 2508 09ca CF93      		push r28
 2509               	.LCFI91:
 2510               		.cfi_def_cfa_offset 19
 2511               		.cfi_offset 28, -18
 2512 09cc DF93      		push r29
 2513               	.LCFI92:
 2514               		.cfi_def_cfa_offset 20
 2515               		.cfi_offset 29, -19
 2516 09ce CDB7      		in r28,__SP_L__
 2517 09d0 DEB7      		in r29,__SP_H__
 2518 09d2 C653      		subi r28,lo8(-(-310))
 2519 09d4 D140      		sbci r29,hi8(-(-310))
 2520               	.LCFI93:
 2521               		.cfi_def_cfa 28, 330
 2522 09d6 CDBF      		out __SP_L__,r28
 2523 09d8 DEBF      		out __SP_H__,r29
 2524               	/* prologue: function */
 2525               	/* frame size = 310 */
 2526               	/* stack size = 328 */
 2527               	.L__stack_usage = 328
 2528               	.LVL142:
 2529               	.LBB1374:
 2530               	.LBB1375:
  39:nmea/nmea.h   ****   token[0] = strtok(s, ","); //get pointer to first token found and store in
 2531               		.loc 8 39 0
 2532 09da 80E0      		ldi r24,lo8(.LC1)
 2533 09dc 90E0      		ldi r25,hi8(.LC1)
 2534 09de 60E0      		ldi r22,lo8(.LC0)
 2535 09e0 70E0      		ldi r23,hi8(.LC0)
 2536 09e2 0E94 0000 		call strtok
  41:nmea/nmea.h   ****   while(token[i] != NULL) {  //while commas continue to be found
 2537               		.loc 8 41 0
 2538 09e6 0097      		sbiw r24,0
 2539 09e8 01F0      		breq .L85
 2540 09ea 8E01      		movw r16,r28
 2541 09ec 0D5F      		subi r16,lo8(-(3))
 2542 09ee 1F4F      		sbci r17,hi8(-(3))
 2543               	.LVL143:
 2544               	.L86:
  43:nmea/nmea.h   ****       token[i] = strtok(NULL, ","); //continue to split the string
 2545               		.loc 8 43 0
 2546 09f0 80E0      		ldi r24,lo8(0)
 2547 09f2 90E0      		ldi r25,hi8(0)
 2548 09f4 60E0      		ldi r22,lo8(.LC0)
 2549 09f6 70E0      		ldi r23,hi8(.LC0)
 2550 09f8 0E94 0000 		call strtok
 2551 09fc D801      		movw r26,r16
 2552 09fe 8D93      		st X+,r24
 2553 0a00 9D93      		st X+,r25
 2554 0a02 8D01      		movw r16,r26
  41:nmea/nmea.h   ****   while(token[i] != NULL) {  //while commas continue to be found
 2555               		.loc 8 41 0
 2556 0a04 0097      		sbiw r24,0
 2557 0a06 01F4      		brne .L86
 2558               	.L85:
 2559               	.LVL144:
  61:nmea/nmea.h   ****   char* lng_str = token[5]; //latitude
 2560               		.loc 8 61 0
 2561 0a08 0B85      		ldd r16,Y+11
 2562 0a0a 1C85      		ldd r17,Y+12
 2563               	.LVL145:
  64:nmea/nmea.h   ****   gps->lat = atof(lat_str)/100.;
 2564               		.loc 8 64 0
 2565 0a0c 8F81      		ldd r24,Y+7
 2566 0a0e 9885      		ldd r25,Y+8
 2567 0a10 0E94 0000 		call atof
 2568               	.LVL146:
 2569 0a14 20E0      		ldi r18,lo8(0x42c80000)
 2570 0a16 30E0      		ldi r19,hi8(0x42c80000)
 2571 0a18 48EC      		ldi r20,hlo8(0x42c80000)
 2572 0a1a 52E4      		ldi r21,hhi8(0x42c80000)
 2573 0a1c 0E94 0000 		call __divsf3
 2574 0a20 A62E      		mov r10,r22
 2575 0a22 872E      		mov r8,r23
 2576 0a24 482E      		mov r4,r24
 2577 0a26 292E      		mov r2,r25
  67:nmea/nmea.h   ****   gps->lng = atof(lng_str)/100.;
 2578               		.loc 8 67 0
 2579 0a28 C801      		movw r24,r16
 2580 0a2a 0E94 0000 		call atof
 2581 0a2e 20E0      		ldi r18,lo8(0x42c80000)
 2582 0a30 30E0      		ldi r19,hi8(0x42c80000)
 2583 0a32 48EC      		ldi r20,hlo8(0x42c80000)
 2584 0a34 52E4      		ldi r21,hhi8(0x42c80000)
 2585 0a36 0E94 0000 		call __divsf3
 2586 0a3a B62E      		mov r11,r22
 2587 0a3c 972E      		mov r9,r23
 2588 0a3e 382E      		mov r3,r24
 2589 0a40 C15D      		subi r28,lo8(-303)
 2590 0a42 DE4F      		sbci r29,hi8(-303)
 2591 0a44 9883      		st Y,r25
 2592 0a46 CF52      		subi r28,lo8(303)
 2593 0a48 D140      		sbci r29,hi8(303)
 2594               	.LBE1375:
 2595               	.LBE1374:
  72:nmea/nmea.h   ****  
  73:nmea/nmea.h   ****     char *buff = "$GPRMC,71.132,A,4230.00,N,-7130.00,E,11.2,0.0,261206,0.0,E*50\r\n";
  74:nmea/nmea.h   **** 
  75:nmea/nmea.h   ****     //latlng struct to store gps data in
  76:nmea/nmea.h   ****     //reused in every iterationif (d
  77:nmea/nmea.h   ****   
  78:nmea/nmea.h   ****     latlng gps;
  79:nmea/nmea.h   **** 
  80:nmea/nmea.h   ****     //parse lat and lng out of raw nmea string
  81:nmea/nmea.h   ****     parse_nmea_string(buff, &gps);
  82:nmea/nmea.h   **** 
  83:nmea/nmea.h   ****     double dist = distance(gps.lat, gps.lng);
 2596               		.loc 8 83 0
 2597 0a4a 8A2D      		mov r24,r10
 2598 0a4c 982D      		mov r25,r8
 2599 0a4e A42D      		mov r26,r4
 2600 0a50 B22D      		mov r27,r2
 2601 0a52 BC01      		movw r22,r24
 2602 0a54 CD01      		movw r24,r26
 2603 0a56 C15D      		subi r28,lo8(-303)
 2604 0a58 DE4F      		sbci r29,hi8(-303)
 2605 0a5a 4881      		ld r20,Y
 2606 0a5c CF52      		subi r28,lo8(303)
 2607 0a5e D140      		sbci r29,hi8(303)
 2608 0a60 0B2D      		mov r16,r11
 2609               	.LVL147:
 2610 0a62 192D      		mov r17,r9
 2611 0a64 232D      		mov r18,r3
 2612 0a66 342F      		mov r19,r20
 2613 0a68 A901      		movw r20,r18
 2614 0a6a 9801      		movw r18,r16
 2615 0a6c 0E94 0000 		call distance
 2616 0a70 6B01      		movw r12,r22
 2617 0a72 7C01      		movw r14,r24
 2618               	.LVL148:
  84:nmea/nmea.h   **** 
  85:nmea/nmea.h   ****     char** result = malloc(30 * sizeof(char*));
 2619               		.loc 8 85 0
 2620 0a74 8CE3      		ldi r24,lo8(60)
 2621 0a76 90E0      		ldi r25,hi8(60)
 2622 0a78 0E94 0000 		call malloc
 2623               	.LVL149:
 2624 0a7c CD5C      		subi r28,lo8(-307)
 2625 0a7e DE4F      		sbci r29,hi8(-307)
 2626 0a80 8883      		st Y,r24
 2627 0a82 C353      		subi r28,lo8(307)
 2628 0a84 D140      		sbci r29,hi8(307)
 2629 0a86 CC5C      		subi r28,lo8(-308)
 2630 0a88 DE4F      		sbci r29,hi8(-308)
 2631 0a8a 9883      		st Y,r25
 2632 0a8c C453      		subi r28,lo8(308)
 2633 0a8e D140      		sbci r29,hi8(308)
 2634               	.LVL150:
  86:nmea/nmea.h   **** 
  87:nmea/nmea.h   ****     if (dist > max_dist) {
 2635               		.loc 8 87 0
 2636 0a90 C701      		movw r24,r14
 2637 0a92 B601      		movw r22,r12
 2638 0a94 2091 0000 		lds r18,max_dist
 2639 0a98 3091 0000 		lds r19,max_dist+1
 2640 0a9c 4091 0000 		lds r20,max_dist+2
 2641 0aa0 5091 0000 		lds r21,max_dist+3
 2642 0aa4 0E94 0000 		call __gtsf2
 2643 0aa8 1816      		cp __zero_reg__,r24
 2644 0aaa 04F4      		brge .+2
 2645 0aac 00C0      		rjmp .L202
 2646               	.LVL151:
 2647               	.L87:
 2648               	.LBB1376:
 2649               	.LBB1377:
 2650               	.LBB1378:
 2651               	.LBB1379:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 2652               		.loc 2 110 0
 2653 0aae 81E0      		ldi r24,lo8(1)
 2654 0ab0 8093 0000 		sts ep_in_data+1,r24
 2655               	.LVL152:
 2656               	.LBB1380:
 2657               	.LBB1381:
 2658               	.LBB1382:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 2659               		.loc 2 80 0
 2660 0ab4 5FB7      		in r21,__SREG__
 2661               	.LVL153:
 2662               	.LBB1383:
 2663               	.LBB1384:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 2664               		.loc 3 50 0
 2665               	/* #APP */
 2666               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 2667 0ab6 F894      		cli
 2668               	 ;  0 "" 2
 2669               	.LVL154:
 2670               	/* #NOAPP */
 2671               	.LBE1384:
 2672               	.LBE1383:
 2673               	.LBB1385:
 2674               	.LBB1386:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 2675               		.loc 5 220 0
 2676 0ab8 8091 0000 		lds r24,endpoints+24
 2677 0abc 8670      		andi r24,lo8(6)
 2678               	.LBE1386:
 2679               	.LBE1385:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 2680               		.loc 2 82 0
 2681 0abe 01F0      		breq .L165
 2682               	.LBB1387:
 2683               	.LBB1388:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 2684               		.loc 4 51 0
 2685 0ac0 4091 0000 		lds r20,ep_in_pipe_data+4
 2686               	.LBE1388:
 2687               	.LBE1387:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 2688               		.loc 2 83 0
 2689 0ac4 1416      		cp __zero_reg__,r20
 2690 0ac6 04F0      		brlt .+2
 2691 0ac8 00C0      		rjmp .L166
 2692               	.LBB1389:
 2693               	.LBB1390:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 2694               		.loc 4 62 0
 2695 0aca 8091 0000 		lds r24,ep_in_pipe_data
 2696 0ace 9091 0000 		lds r25,ep_in_pipe_data+1
 2697               	.LVL155:
 2698               	.LBE1390:
 2699               	.LBE1389:
 2700               	.LBB1391:
 2701               	.LBB1392:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 2702               		.loc 2 68 0
 2703 0ad2 2091 0000 		lds r18,ep_in_data
 2704               	.LVL156:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 2705               		.loc 2 69 0
 2706 0ad6 31E0      		ldi r19,lo8(1)
 2707 0ad8 2130      		cpi r18,lo8(1)
 2708 0ada 01F4      		brne .L167
 2709 0adc 30E0      		ldi r19,lo8(0)
 2710               	.L167:
 2711 0ade 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 2712               		.loc 2 72 0
 2713 0ae2 2223      		tst r18
 2714 0ae4 01F0      		breq .+2
 2715 0ae6 00C0      		rjmp .L168
 2716               	.LVL157:
 2717               	.LBB1393:
 2718               	.LBB1394:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 2719               		.loc 5 168 0
 2720 0ae8 8093 0000 		sts endpoints+28,r24
 2721 0aec 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 2722               		.loc 5 169 0
 2723 0af0 20E4      		ldi r18,lo8(64)
 2724 0af2 30E0      		ldi r19,hi8(64)
 2725 0af4 2093 0000 		sts endpoints+26,r18
 2726 0af8 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 2727               		.loc 5 174 0
 2728 0afc E0E0      		ldi r30,lo8(endpoints+24)
 2729 0afe F0E0      		ldi r31,hi8(endpoints+24)
 2730               	/* #APP */
 2731               	 ;  174 "usb/usb.h" 1
 2732 0b00 02E2      		ldi r16, 34
 2733 0b02 0693      		.dc.w 0x9306
 2734               		
 2735               	 ;  0 "" 2
 2736               	.LVL158:
 2737               	/* #NOAPP */
 2738               	.L169:
 2739               	.LBE1394:
 2740               	.LBE1393:
 2741               	.LBE1392:
 2742               	.LBE1391:
 2743               	.LBB1398:
 2744               	.LBB1399:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 2745               		.loc 4 72 0
 2746 0b04 4150      		subi r20,lo8(-(-1))
 2747 0b06 4093 0000 		sts ep_in_pipe_data+4,r20
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 2748               		.loc 4 73 0
 2749 0b0a 805C      		subi r24,lo8(-(64))
 2750 0b0c 9F4F      		sbci r25,hi8(-(64))
 2751 0b0e 8093 0000 		sts ep_in_pipe_data,r24
 2752 0b12 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 2753               		.loc 4 75 0
 2754 0b16 B0E0      		ldi r27,hi8(ep_in_pipe_buffer+512)
 2755 0b18 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 2756 0b1a 9B07      		cpc r25,r27
 2757 0b1c 01F4      		brne .+2
 2758 0b1e 00C0      		rjmp .L203
 2759               	.LVL159:
 2760               	.L165:
 2761               	.LBE1399:
 2762               	.LBE1398:
 2763               	.LBB1401:
 2764               	.LBB1402:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 2765               		.loc 3 70 0
 2766 0b20 5FBF      		out __SREG__,r21
 2767               		.loc 3 71 0
 2768               	.LBE1402:
 2769               	.LBE1401:
 2770               	.LBE1382:
 2771               	.LBE1381:
 2772               	.LBE1380:
 2773               	.LBE1379:
 2774               	.LBE1378:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 2775               		.loc 1 27 0
 2776 0b22 82E0      		ldi r24,lo8(2)
 2777 0b24 E0EC      		ldi r30,lo8(1216)
 2778 0b26 F4E0      		ldi r31,hi8(1216)
 2779 0b28 8587      		std Z+13,r24
 2780               	.LBB1432:
 2781               	.LBB1433:
 2782               	.LBB1434:
 2783               	.LBB1435:
 2784               	.LBB1436:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 2785               		.loc 4 57 0
 2786 0b2a 96E0      		ldi r25,lo8(6)
 2787               	.L174:
 2788               	.LVL160:
 2789               	.LBE1436:
 2790               	.LBE1435:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 2791               		.loc 2 123 0
 2792 0b2c 2FB7      		in r18,__SREG__
 2793               	.LVL161:
 2794               	.LBB1438:
 2795               	.LBB1439:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 2796               		.loc 3 50 0
 2797               	/* #APP */
 2798               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 2799 0b2e F894      		cli
 2800               	 ;  0 "" 2
 2801               	.LVL162:
 2802               	/* #NOAPP */
 2803               	.LBE1439:
 2804               	.LBE1438:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 2805               		.loc 2 124 0
 2806 0b30 8091 0000 		lds r24,ep_in_data+1
 2807 0b34 8823      		tst r24
 2808 0b36 01F4      		brne .+2
 2809 0b38 00C0      		rjmp .L204
 2810               	.L184:
 125:usb/usb_pipe.h **** 			r = false;
 2811               		.loc 2 125 0
 2812 0b3a 80E0      		ldi r24,lo8(0)
 2813               	.L176:
 2814               	.LBB1440:
 2815               	.LBB1441:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 2816               		.loc 3 70 0
 2817 0b3c 2FBF      		out __SREG__,r18
 2818               		.loc 3 71 0
 2819               	.LBE1441:
 2820               	.LBE1440:
 2821               	.LBE1434:
 2822               	.LBE1433:
 2823               	.LBE1432:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 2824               		.loc 1 28 0
 2825 0b3e 8823      		tst r24
 2826 0b40 01F4      		brne .L175
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 2827               		.loc 1 29 0
 2828 0b42 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 2829 0b46 8823      		tst r24
 2830 0b48 01F0      		breq .L174
 2831               	.LVL163:
 2832               	.LBB1445:
 2833               	.LBB1446:
 2834               	.LBB1447:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 2835               		.loc 2 54 0
 2836 0b4a 2FB7      		in r18,__SREG__
 2837               	.LVL164:
 2838               	.LBB1448:
 2839               	.LBB1449:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 2840               		.loc 3 50 0
 2841               	/* #APP */
 2842               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 2843 0b4c F894      		cli
 2844               	 ;  0 "" 2
 2845               	.LVL165:
 2846               	/* #NOAPP */
 2847               	.LBE1449:
 2848               	.LBE1448:
 2849               	.LBB1450:
 2850               	.LBB1451:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 2851               		.loc 4 90 0
 2852 0b4e 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 2853               		.loc 4 91 0
 2854 0b52 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 2855 0b54 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 2856 0b56 8093 0000 		sts ep_in_pipe_data+2,r24
 2857 0b5a 9093 0000 		sts ep_in_pipe_data+2+1,r25
 2858 0b5e 8093 0000 		sts ep_in_pipe_data,r24
 2859 0b62 9093 0000 		sts ep_in_pipe_data+1,r25
 2860               	.LVL166:
 2861               	.LBE1451:
 2862               	.LBE1450:
 2863               	.LBB1452:
 2864               	.LBB1453:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 2865               		.loc 5 158 0
 2866 0b66 E0E0      		ldi r30,lo8(endpoints+24)
 2867 0b68 F0E0      		ldi r31,hi8(endpoints+24)
 2868               	/* #APP */
 2869               	 ;  158 "usb/usb.h" 1
 2870 0b6a 06E0      		ldi r16, 6
 2871 0b6c 0593      		.dc.w 0x9305
 2872               		
 2873               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 2874               		.loc 5 159 0
 2875               	 ;  159 "usb/usb.h" 1
 2876 0b6e 08E0      		ldi r16, 8
 2877 0b70 0693      		.dc.w 0x9306
 2878               		
 2879               	 ;  0 "" 2
 2880               	/* #NOAPP */
 2881               	.LBE1453:
 2882               	.LBE1452:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 2883               		.loc 2 57 0
 2884 0b72 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 2885               		.loc 2 58 0
 2886 0b76 1092 0000 		sts ep_in_data+2,__zero_reg__
 2887 0b7a 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 2888               		.loc 2 59 0
 2889 0b7e 1092 0000 		sts ep_in_data,__zero_reg__
 2890               	.LVL167:
 2891               	.LBB1454:
 2892               	.LBB1455:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 2893               		.loc 3 70 0
 2894 0b82 2FBF      		out __SREG__,r18
 2895               		.loc 3 71 0
 2896               	.LVL168:
 2897               	.L175:
 2898               	.LBE1455:
 2899               	.LBE1454:
 2900               	.LBE1447:
 2901               	.LBE1446:
 2902               	.LBE1445:
 2903               	.LBE1377:
 2904               	.LBE1376:
  88:nmea/nmea.h   **** 
  89:nmea/nmea.h   ****       char lat_buff[100];
  90:nmea/nmea.h   ****       char lng_buff[100];
  91:nmea/nmea.h   ****       char dist_buff[100];
  92:nmea/nmea.h   **** 
  93:nmea/nmea.h   ****       sprintf(lat_buff, "%f", gps.lat);
  94:nmea/nmea.h   ****       sprintf(lng_buff, "%f", gps.lng);
  95:nmea/nmea.h   ****       sprintf(dist_buff, "%f", dist);
  96:nmea/nmea.h   **** 
  97:nmea/nmea.h   ****       //determine how many characters are in the gps latitude and longitude strings
  98:nmea/nmea.h   ****       int len_lat = strlen(lat_buff);
  99:nmea/nmea.h   ****       int len_lng = strlen(lng_buff);
 100:nmea/nmea.h   ****       int len_dist = strlen(dist_buff);
 101:nmea/nmea.h   **** 
 102:nmea/nmea.h   ****       //iterate over lat and lng strings, sending them char by char over usb
 103:nmea/nmea.h   ****       for (int i=0; i<len_lat; i++) {
 104:nmea/nmea.h   ****         send_byte(lat_buff[i]);  
 105:nmea/nmea.h   ****       }
 106:nmea/nmea.h   **** 
 107:nmea/nmea.h   ****       //lat/lng seperator 
 108:nmea/nmea.h   ****       send_byte(' ');  
 109:nmea/nmea.h   ****       for (int j=0; j<len_lng; j++) {
 110:nmea/nmea.h   ****         send_byte(lng_buff[j]);  
 111:nmea/nmea.h   ****       }
 112:nmea/nmea.h   **** 
 113:nmea/nmea.h   ****             //lat/lng seperator 
 114:nmea/nmea.h   ****       send_byte(' ');  
 115:nmea/nmea.h   ****       for (int k=0; k<len_dist; k++) {
 116:nmea/nmea.h   ****         send_byte(dist_buff[k]);  
 117:nmea/nmea.h   ****       }
 118:nmea/nmea.h   **** 
 119:nmea/nmea.h   ****       char* lat_str = &lat_buff[0];
 120:nmea/nmea.h   ****       char* lng_str = &lng_buff[0];
 121:nmea/nmea.h   ****       *result = concat(concat(lat_str, ","), lng_str);
 122:nmea/nmea.h   ****     }
 123:nmea/nmea.h   **** 
 124:nmea/nmea.h   ****     //presumably has to do with memory management
 125:nmea/nmea.h   ****     //for now, just make sure to call if after you're done sending bytes over usb
 126:nmea/nmea.h   ****     break_and_flush();
 127:nmea/nmea.h   ****     return *result;
 128:nmea/nmea.h   **** }
 2905               		.loc 8 128 0
 2906 0b84 CD5C      		subi r28,lo8(-307)
 2907 0b86 DE4F      		sbci r29,hi8(-307)
 2908 0b88 E881      		ld r30,Y
 2909 0b8a F981      		ldd r31,Y+1
 2910 0b8c C353      		subi r28,lo8(307)
 2911 0b8e D140      		sbci r29,hi8(307)
 2912 0b90 8081      		ld r24,Z
 2913 0b92 9181      		ldd r25,Z+1
 2914               	/* epilogue start */
 2915 0b94 CA5C      		subi r28,lo8(-(310))
 2916 0b96 DE4F      		sbci r29,hi8(-(310))
 2917 0b98 CDBF      		out __SP_L__,r28
 2918 0b9a DEBF      		out __SP_H__,r29
 2919 0b9c DF91      		pop r29
 2920 0b9e CF91      		pop r28
 2921 0ba0 1F91      		pop r17
 2922 0ba2 0F91      		pop r16
 2923 0ba4 FF90      		pop r15
 2924 0ba6 EF90      		pop r14
 2925 0ba8 DF90      		pop r13
 2926 0baa CF90      		pop r12
 2927 0bac BF90      		pop r11
 2928 0bae AF90      		pop r10
 2929 0bb0 9F90      		pop r9
 2930 0bb2 8F90      		pop r8
 2931 0bb4 7F90      		pop r7
 2932 0bb6 6F90      		pop r6
 2933 0bb8 5F90      		pop r5
 2934 0bba 4F90      		pop r4
 2935 0bbc 3F90      		pop r3
 2936 0bbe 2F90      		pop r2
 2937 0bc0 0895      		ret
 2938               	.LVL169:
 2939               	.L204:
 2940               	.LBB1463:
 2941               	.LBB1460:
 2942               	.LBB1456:
 2943               	.LBB1444:
 2944               	.LBB1443:
 2945               	.LBB1442:
 2946               	.LBB1437:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 2947               		.loc 4 57 0
 2948 0bc2 8091 0000 		lds r24,ep_in_pipe_data+4
 2949 0bc6 392F      		mov r19,r25
 2950 0bc8 381B      		sub r19,r24
 2951               	.LBE1437:
 2952               	.LBE1442:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 2953               		.loc 2 127 0
 2954 0bca 81E0      		ldi r24,lo8(1)
 2955 0bcc 1316      		cp __zero_reg__,r19
 2956 0bce 04F4      		brge .+2
 2957 0bd0 00C0      		rjmp .L176
 2958 0bd2 00C0      		rjmp .L184
 2959               	.LVL170:
 2960               	.L168:
 2961               	.LBE1443:
 2962               	.LBE1444:
 2963               	.LBE1456:
 2964               	.LBB1457:
 2965               	.LBB1429:
 2966               	.LBB1426:
 2967               	.LBB1423:
 2968               	.LBB1420:
 2969               	.LBB1403:
 2970               	.LBB1397:
 2971               	.LBB1395:
 2972               	.LBB1396:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 2973               		.loc 5 168 0
 2974 0bd4 8093 0000 		sts endpoints+20,r24
 2975 0bd8 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 2976               		.loc 5 169 0
 2977 0bdc 20E4      		ldi r18,lo8(64)
 2978 0bde 30E0      		ldi r19,hi8(64)
 2979               	.LVL171:
 2980 0be0 2093 0000 		sts endpoints+18,r18
 2981 0be4 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 2982               		.loc 5 176 0
 2983 0be8 E0E0      		ldi r30,lo8(endpoints+24)
 2984 0bea F0E0      		ldi r31,hi8(endpoints+24)
 2985               	/* #APP */
 2986               	 ;  176 "usb/usb.h" 1
 2987 0bec 04E1      		ldi r16, 20
 2988 0bee 0693      		.dc.w 0x9306
 2989               		
 2990               	 ;  0 "" 2
 2991               	/* #NOAPP */
 2992 0bf0 00C0      		rjmp .L169
 2993               	.LVL172:
 2994               	.L203:
 2995               	.LBE1396:
 2996               	.LBE1395:
 2997               	.LBE1397:
 2998               	.LBE1403:
 2999               	.LBB1404:
 3000               	.LBB1400:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 3001               		.loc 4 76 0
 3002 0bf2 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 3003 0bf4 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 3004 0bf6 8093 0000 		sts ep_in_pipe_data,r24
 3005 0bfa 9093 0000 		sts ep_in_pipe_data+1,r25
 3006 0bfe 00C0      		rjmp .L165
 3007               	.LVL173:
 3008               	.L166:
 3009               	.LBE1400:
 3010               	.LBE1404:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 3011               		.loc 2 87 0
 3012 0c00 8091 0000 		lds r24,ep_in_data+1
 3013 0c04 8130      		cpi r24,lo8(1)
 3014 0c06 01F4      		brne .+2
 3015 0c08 00C0      		rjmp .L205
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 3016               		.loc 2 91 0
 3017 0c0a 8230      		cpi r24,lo8(2)
 3018 0c0c 01F0      		breq .+2
 3019 0c0e 00C0      		rjmp .L165
 3020               	.LVL174:
 3021               	.LBB1405:
 3022               	.LBB1406:
 3023               	.LBB1407:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 3024               		.loc 5 228 0
 3025 0c10 8091 0000 		lds r24,endpoints+24
 3026 0c14 8670      		andi r24,lo8(6)
 3027               	.LBE1407:
 3028               	.LBE1406:
 3029               	.LBE1405:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 3030               		.loc 2 91 0
 3031 0c16 8630      		cpi r24,lo8(6)
 3032 0c18 01F0      		breq .+2
 3033 0c1a 00C0      		rjmp .L165
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 3034               		.loc 2 92 0
 3035 0c1c 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 3036               		.loc 2 93 0
 3037 0c20 1092 0000 		sts ep_in_data+2,__zero_reg__
 3038 0c24 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 3039               	.LBB1408:
 3040               	.LBB1409:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 3041               		.loc 4 90 0
 3042 0c28 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 3043               		.loc 4 91 0
 3044 0c2c 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 3045 0c2e 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 3046 0c30 8093 0000 		sts ep_in_pipe_data+2,r24
 3047 0c34 9093 0000 		sts ep_in_pipe_data+2+1,r25
 3048 0c38 8093 0000 		sts ep_in_pipe_data,r24
 3049 0c3c 9093 0000 		sts ep_in_pipe_data+1,r25
 3050               	.LVL175:
 3051 0c40 00C0      		rjmp .L165
 3052               	.LVL176:
 3053               	.L202:
 3054               	.LBE1409:
 3055               	.LBE1408:
 3056               	.LBE1420:
 3057               	.LBE1423:
 3058               	.LBE1426:
 3059               	.LBE1429:
 3060               	.LBE1457:
 3061               	.LBE1460:
 3062               	.LBE1463:
 3063               	.LBB1464:
  93:nmea/nmea.h   ****       sprintf(lat_buff, "%f", gps.lat);
 3064               		.loc 8 93 0
 3065 0c42 EDB7      		in r30,__SP_L__
 3066 0c44 FEB7      		in r31,__SP_H__
 3067 0c46 3897      		sbiw r30,8
 3068 0c48 EDBF      		out __SP_L__,r30
 3069 0c4a FEBF      		out __SP_H__,r31
 3070 0c4c 3196      		adiw r30,1
 3071 0c4e 39EC      		ldi r19,lo8(201)
 3072 0c50 632E      		mov r6,r19
 3073 0c52 712C      		mov r7,__zero_reg__
 3074 0c54 6C0E      		add r6,r28
 3075 0c56 7D1E      		adc r7,r29
 3076 0c58 ADB7      		in r26,__SP_L__
 3077 0c5a BEB7      		in r27,__SP_H__
 3078 0c5c 1196      		adiw r26,1
 3079 0c5e 6D92      		st X+,r6
 3080 0c60 7C92      		st X,r7
 3081 0c62 1297      		sbiw r26,1+1
 3082 0c64 00E0      		ldi r16,lo8(.LC2)
 3083 0c66 10E0      		ldi r17,hi8(.LC2)
 3084 0c68 0283      		std Z+2,r16
 3085 0c6a 1383      		std Z+3,r17
 3086 0c6c 2A2D      		mov r18,r10
 3087 0c6e 382D      		mov r19,r8
 3088 0c70 442D      		mov r20,r4
 3089 0c72 522D      		mov r21,r2
 3090 0c74 C901      		movw r24,r18
 3091 0c76 DA01      		movw r26,r20
 3092 0c78 8483      		std Z+4,r24
 3093 0c7a 9583      		std Z+5,r25
 3094 0c7c A683      		std Z+6,r26
 3095 0c7e B783      		std Z+7,r27
 3096               		.cfi_escape 0x2e,0x8
 3097 0c80 0E94 0000 		call sprintf
  94:nmea/nmea.h   ****       sprintf(lng_buff, "%f", gps.lng);
 3098               		.loc 8 94 0
 3099 0c84 EDB7      		in r30,__SP_L__
 3100 0c86 FEB7      		in r31,__SP_H__
 3101 0c88 3196      		adiw r30,1
 3102 0c8a 45E6      		ldi r20,lo8(101)
 3103 0c8c 442E      		mov r4,r20
 3104 0c8e 512C      		mov r5,__zero_reg__
 3105 0c90 4C0E      		add r4,r28
 3106 0c92 5D1E      		adc r5,r29
 3107 0c94 ADB7      		in r26,__SP_L__
 3108 0c96 BEB7      		in r27,__SP_H__
 3109 0c98 1196      		adiw r26,1
 3110 0c9a 4D92      		st X+,r4
 3111 0c9c 5C92      		st X,r5
 3112 0c9e 1297      		sbiw r26,1+1
 3113 0ca0 0283      		std Z+2,r16
 3114 0ca2 1383      		std Z+3,r17
 3115 0ca4 2B2D      		mov r18,r11
 3116 0ca6 392D      		mov r19,r9
 3117 0ca8 432D      		mov r20,r3
 3118 0caa C15D      		subi r28,lo8(-303)
 3119 0cac DE4F      		sbci r29,hi8(-303)
 3120 0cae 5881      		ld r21,Y
 3121 0cb0 CF52      		subi r28,lo8(303)
 3122 0cb2 D140      		sbci r29,hi8(303)
 3123 0cb4 C901      		movw r24,r18
 3124 0cb6 DA01      		movw r26,r20
 3125 0cb8 8483      		std Z+4,r24
 3126 0cba 9583      		std Z+5,r25
 3127 0cbc A683      		std Z+6,r26
 3128 0cbe B783      		std Z+7,r27
 3129 0cc0 0E94 0000 		call sprintf
  95:nmea/nmea.h   ****       sprintf(dist_buff, "%f", dist);
 3130               		.loc 8 95 0
 3131 0cc4 EDB7      		in r30,__SP_L__
 3132 0cc6 FEB7      		in r31,__SP_H__
 3133 0cc8 3196      		adiw r30,1
 3134 0cca 9E01      		movw r18,r28
 3135 0ccc 2F5F      		subi r18,lo8(-(1))
 3136 0cce 3F4F      		sbci r19,hi8(-(1))
 3137 0cd0 C35D      		subi r28,lo8(-301)
 3138 0cd2 DE4F      		sbci r29,hi8(-301)
 3139 0cd4 2883      		st Y,r18
 3140 0cd6 3983      		std Y+1,r19
 3141 0cd8 CD52      		subi r28,lo8(301)
 3142 0cda D140      		sbci r29,hi8(301)
 3143 0cdc ADB7      		in r26,__SP_L__
 3144 0cde BEB7      		in r27,__SP_H__
 3145 0ce0 1196      		adiw r26,1
 3146 0ce2 2D93      		st X+,r18
 3147 0ce4 3C93      		st X,r19
 3148 0ce6 1297      		sbiw r26,1+1
 3149 0ce8 0283      		std Z+2,r16
 3150 0cea 1383      		std Z+3,r17
 3151 0cec C482      		std Z+4,r12
 3152 0cee D582      		std Z+5,r13
 3153 0cf0 E682      		std Z+6,r14
 3154 0cf2 F782      		std Z+7,r15
 3155 0cf4 0E94 0000 		call sprintf
  98:nmea/nmea.h   ****       int len_lat = strlen(lat_buff);
 3156               		.loc 8 98 0
 3157 0cf8 F301      		movw r30,r6
 3158 0cfa 0190      		ld __tmp_reg__,Z+
 3159 0cfc 0020      		tst __tmp_reg__
 3160 0cfe 01F4      		brne .-6
 3161 0d00 3197      		sbiw r30,1
 3162 0d02 E619      		sub r30,r6
 3163 0d04 F709      		sbc r31,r7
 3164               	.LVL177:
  99:nmea/nmea.h   ****       int len_lng = strlen(lng_buff);
 3165               		.loc 8 99 0
 3166 0d06 D201      		movw r26,r4
 3167 0d08 0D90      		ld __tmp_reg__,X+
 3168 0d0a 0020      		tst __tmp_reg__
 3169 0d0c 01F4      		brne .-6
 3170 0d0e 1197      		sbiw r26,1
 3171 0d10 A419      		sub r26,r4
 3172 0d12 B509      		sbc r27,r5
 3173 0d14 CF5C      		subi r28,lo8(-305)
 3174 0d16 DE4F      		sbci r29,hi8(-305)
 3175 0d18 A883      		st Y,r26
 3176 0d1a B983      		std Y+1,r27
 3177 0d1c C153      		subi r28,lo8(305)
 3178 0d1e D140      		sbci r29,hi8(305)
 3179               	.LVL178:
 100:nmea/nmea.h   ****       int len_dist = strlen(dist_buff);
 3180               		.loc 8 100 0
 3181 0d20 C35D      		subi r28,lo8(-301)
 3182 0d22 DE4F      		sbci r29,hi8(-301)
 3183 0d24 A881      		ld r26,Y
 3184 0d26 B981      		ldd r27,Y+1
 3185 0d28 CD52      		subi r28,lo8(301)
 3186 0d2a D140      		sbci r29,hi8(301)
 3187               	.LVL179:
 3188 0d2c 0D90      		ld __tmp_reg__,X+
 3189 0d2e 0020      		tst __tmp_reg__
 3190 0d30 01F4      		brne .-6
 3191 0d32 1197      		sbiw r26,1
 3192 0d34 C35D      		subi r28,lo8(-301)
 3193 0d36 DE4F      		sbci r29,hi8(-301)
 3194 0d38 2881      		ld r18,Y
 3195 0d3a 3981      		ldd r19,Y+1
 3196 0d3c CD52      		subi r28,lo8(301)
 3197 0d3e D140      		sbci r29,hi8(301)
 3198 0d40 A21B      		sub r26,r18
 3199 0d42 B30B      		sbc r27,r19
 3200 0d44 C15D      		subi r28,lo8(-303)
 3201 0d46 DE4F      		sbci r29,hi8(-303)
 3202 0d48 A883      		st Y,r26
 3203 0d4a B983      		std Y+1,r27
 3204 0d4c CF52      		subi r28,lo8(303)
 3205 0d4e D140      		sbci r29,hi8(303)
 3206               	.LVL180:
 3207               	.LBB1465:
 103:nmea/nmea.h   ****       for (int i=0; i<len_lat; i++) {
 3208               		.loc 8 103 0
 3209 0d50 8DB7      		in r24,__SP_L__
 3210 0d52 9EB7      		in r25,__SP_H__
 3211 0d54 0896      		adiw r24,8
 3212 0d56 8DBF      		out __SP_L__,r24
 3213 0d58 9EBF      		out __SP_H__,r25
 3214 0d5a 1E16      		cp __zero_reg__,r30
 3215 0d5c 1F06      		cpc __zero_reg__,r31
 3216 0d5e 04F0      		brlt .+2
 3217 0d60 00C0      		rjmp .L107
 3218 0d62 4301      		movw r8,r6
  71:nmea/nmea.h   **** char* parse_nmea(void) {
 3219               		.loc 8 71 0
 3220 0d64 D301      		movw r26,r6
 3221               	.LVL181:
 3222 0d66 AE0F      		add r26,r30
 3223 0d68 BF1F      		adc r27,r31
 3224 0d6a CB5C      		subi r28,lo8(-309)
 3225 0d6c DE4F      		sbci r29,hi8(-309)
 3226 0d6e A883      		st Y,r26
 3227 0d70 B983      		std Y+1,r27
 3228 0d72 C553      		subi r28,lo8(309)
 3229 0d74 D140      		sbci r29,hi8(309)
 3230               	.LBB1466:
 3231               	.LBB1467:
 3232               	.LBB1468:
 3233               	.LBB1469:
 3234               	.LBB1470:
 3235               	.LBB1471:
 3236               	.LBB1472:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3237               		.loc 4 57 0
 3238 0d76 56E0      		ldi r21,lo8(6)
 3239               	.LBE1472:
 3240               	.LBE1471:
 3241               	.LBE1470:
 3242               	.LBE1469:
 3243               	.LBE1468:
 3244               	.LBB1483:
 3245               	.LBB1484:
 3246               	.LBB1485:
 3247               	.LBB1486:
 3248               	.LBB1487:
 3249               	.LBB1488:
 3250               	.LBB1489:
 3251               	.LBB1490:
 3252               	.LBB1491:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 3253               		.loc 5 220 0
 3254 0d78 A0E0      		ldi r26,lo8(endpoints+24)
 3255 0d7a B0E0      		ldi r27,hi8(endpoints+24)
 3256               	.LBE1491:
 3257               	.LBE1490:
 3258               	.LBB1493:
 3259               	.LBB1494:
 3260               		.loc 4 91 0
 3261 0d7c 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 3262 0d7e 282E      		mov r2,r24
 3263 0d80 80E0      		ldi r24,hi8(ep_in_pipe_buffer)
 3264 0d82 382E      		mov r3,r24
 3265               	.LBE1494:
 3266               	.LBE1493:
 3267               	.LBB1497:
 3268               	.LBB1498:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 3269               		.loc 2 69 0
 3270 0d84 91E0      		ldi r25,lo8(1)
 3271 0d86 E92E      		mov r14,r25
 3272 0d88 F12C      		mov r15,__zero_reg__
 3273               	.LBE1498:
 3274               	.LBE1497:
 3275               	.LBB1506:
 3276               	.LBB1507:
 3277               	.LBB1508:
 3278               	.LBB1509:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3279               		.loc 5 169 0
 3280 0d8a 20E4      		ldi r18,lo8(64)
 3281 0d8c A22E      		mov r10,r18
 3282 0d8e B12C      		mov r11,__zero_reg__
 3283               	.LVL182:
 3284               	.L104:
 3285               	.LBE1509:
 3286               	.LBE1508:
 3287               	.LBE1507:
 3288               	.LBE1506:
 3289               	.LBE1489:
 3290               	.LBE1488:
 3291               	.LBE1487:
 3292               	.LBE1486:
 3293               	.LBE1485:
 3294               	.LBE1484:
 3295               	.LBE1483:
 3296               	.LBE1467:
 3297               	.LBE1466:
 104:nmea/nmea.h   ****         send_byte(lat_buff[i]);  
 3298               		.loc 8 104 0 discriminator 2
 3299 0d90 F401      		movw r30,r8
 3300 0d92 3191      		ld r19,Z+
 3301 0d94 4F01      		movw r8,r30
 3302               	.LVL183:
 3303               	.L92:
 3304               	.LBB1559:
 3305               	.LBB1557:
 3306               	.LBB1552:
 3307               	.LBB1481:
 3308               	.LBB1479:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3309               		.loc 2 123 0
 3310 0d96 9FB7      		in r25,__SREG__
 3311               	.LVL184:
 3312               	.LBB1474:
 3313               	.LBB1475:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3314               		.loc 3 50 0
 3315               	/* #APP */
 3316               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3317 0d98 F894      		cli
 3318               	 ;  0 "" 2
 3319               	.LVL185:
 3320               	/* #NOAPP */
 3321               	.LBE1475:
 3322               	.LBE1474:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3323               		.loc 2 124 0
 3324 0d9a 8091 0000 		lds r24,ep_in_data+1
 3325 0d9e 8823      		tst r24
 3326 0da0 01F4      		brne .+2
 3327 0da2 00C0      		rjmp .L206
 3328               	.L179:
 125:usb/usb_pipe.h **** 			r = false;
 3329               		.loc 2 125 0
 3330 0da4 80E0      		ldi r24,lo8(0)
 3331               	.L90:
 3332               	.LBB1476:
 3333               	.LBB1477:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3334               		.loc 3 70 0
 3335 0da6 9FBF      		out __SREG__,r25
 3336               		.loc 3 71 0
 3337               	.LBE1477:
 3338               	.LBE1476:
 3339               	.LBE1479:
 3340               	.LBE1481:
 3341               	.LBE1552:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3342               		.loc 1 20 0
 3343 0da8 8823      		tst r24
 3344 0daa 01F0      		breq .L92
 3345               	.LVL186:
 3346               	.LBB1553:
 3347               	.LBB1554:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3348               		.loc 2 175 0
 3349 0dac 8091 0000 		lds r24,ep_in_data+2
 3350 0db0 9091 0000 		lds r25,ep_in_data+2+1
 3351 0db4 E091 0000 		lds r30,ep_in_pipe_data+2
 3352 0db8 F091 0000 		lds r31,ep_in_pipe_data+2+1
 3353               	.LVL187:
 3354 0dbc E80F      		add r30,r24
 3355 0dbe F91F      		adc r31,r25
 3356 0dc0 3083      		st Z,r19
 3357 0dc2 0196      		adiw r24,1
 3358 0dc4 8093 0000 		sts ep_in_data+2,r24
 3359 0dc8 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3360               		.loc 2 176 0
 3361 0dcc 8034      		cpi r24,64
 3362 0dce 9105      		cpc r25,__zero_reg__
 3363 0dd0 01F4      		brne .+2
 3364 0dd2 00C0      		rjmp .L207
 3365               	.LVL188:
 3366               	.L93:
 3367               	.LBE1554:
 3368               	.LBE1553:
 3369               	.LBE1557:
 3370               	.LBE1559:
 103:nmea/nmea.h   ****       for (int i=0; i<len_lat; i++) {
 3371               		.loc 8 103 0 discriminator 2
 3372 0dd4 CB5C      		subi r28,lo8(-309)
 3373 0dd6 DE4F      		sbci r29,hi8(-309)
 3374 0dd8 2881      		ld r18,Y
 3375 0dda 3981      		ldd r19,Y+1
 3376 0ddc C553      		subi r28,lo8(309)
 3377 0dde D140      		sbci r29,hi8(309)
 3378 0de0 8216      		cp r8,r18
 3379 0de2 9306      		cpc r9,r19
 3380 0de4 01F4      		brne .L104
 3381               	.LVL189:
 3382               	.L107:
 3383               	.LBE1465:
 3384               	.LBB1561:
 3385               	.LBB1562:
 3386               	.LBB1563:
 3387               	.LBB1564:
 3388               	.LBB1565:
 3389               	.LBB1566:
 3390               	.LBB1567:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3391               		.loc 4 57 0
 3392 0de6 96E0      		ldi r25,lo8(6)
 3393               	.L188:
 3394               	.LVL190:
 3395               	.LBE1567:
 3396               	.LBE1566:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3397               		.loc 2 123 0
 3398 0de8 2FB7      		in r18,__SREG__
 3399               	.LVL191:
 3400               	.LBB1569:
 3401               	.LBB1570:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3402               		.loc 3 50 0
 3403               	/* #APP */
 3404               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3405 0dea F894      		cli
 3406               	 ;  0 "" 2
 3407               	.LVL192:
 3408               	/* #NOAPP */
 3409               	.LBE1570:
 3410               	.LBE1569:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3411               		.loc 2 124 0
 3412 0dec 8091 0000 		lds r24,ep_in_data+1
 3413 0df0 8823      		tst r24
 3414 0df2 01F4      		brne .+2
 3415 0df4 00C0      		rjmp .L208
 3416               	.L180:
 125:usb/usb_pipe.h **** 			r = false;
 3417               		.loc 2 125 0
 3418 0df6 80E0      		ldi r24,lo8(0)
 3419               	.L105:
 3420               	.LBB1571:
 3421               	.LBB1572:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3422               		.loc 3 70 0
 3423 0df8 2FBF      		out __SREG__,r18
 3424               		.loc 3 71 0
 3425               	.LBE1572:
 3426               	.LBE1571:
 3427               	.LBE1565:
 3428               	.LBE1564:
 3429               	.LBE1563:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3430               		.loc 1 20 0
 3431 0dfa 8823      		tst r24
 3432 0dfc 01F0      		breq .L188
 3433               	.LVL193:
 3434               	.LBB1576:
 3435               	.LBB1577:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3436               		.loc 2 175 0
 3437 0dfe 8091 0000 		lds r24,ep_in_data+2
 3438 0e02 9091 0000 		lds r25,ep_in_data+2+1
 3439 0e06 E091 0000 		lds r30,ep_in_pipe_data+2
 3440 0e0a F091 0000 		lds r31,ep_in_pipe_data+2+1
 3441 0e0e E80F      		add r30,r24
 3442 0e10 F91F      		adc r31,r25
 3443 0e12 20E2      		ldi r18,lo8(32)
 3444               	.LVL194:
 3445 0e14 2083      		st Z,r18
 3446 0e16 0196      		adiw r24,1
 3447 0e18 8093 0000 		sts ep_in_data+2,r24
 3448 0e1c 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3449               		.loc 2 176 0
 3450 0e20 8034      		cpi r24,64
 3451 0e22 9105      		cpc r25,__zero_reg__
 3452 0e24 01F4      		brne .+2
 3453 0e26 00C0      		rjmp .L209
 3454               	.L108:
 3455               	.LVL195:
 3456               	.LBE1577:
 3457               	.LBE1576:
 3458               	.LBE1562:
 3459               	.LBE1561:
 3460               	.LBB1644:
 109:nmea/nmea.h   ****       for (int j=0; j<len_lng; j++) {
 3461               		.loc 8 109 0 discriminator 1
 3462 0e28 CF5C      		subi r28,lo8(-305)
 3463 0e2a DE4F      		sbci r29,hi8(-305)
 3464 0e2c 2881      		ld r18,Y
 3465 0e2e 3981      		ldd r19,Y+1
 3466 0e30 C153      		subi r28,lo8(305)
 3467 0e32 D140      		sbci r29,hi8(305)
 3468 0e34 1216      		cp __zero_reg__,r18
 3469 0e36 1306      		cpc __zero_reg__,r19
 3470 0e38 04F0      		brlt .+2
 3471 0e3a 00C0      		rjmp .L137
 109:nmea/nmea.h   ****       for (int j=0; j<len_lng; j++) {
 3472               		.loc 8 109 0 is_stmt 0
 3473 0e3c 4201      		movw r8,r4
  71:nmea/nmea.h   **** char* parse_nmea(void) {
 3474               		.loc 8 71 0 is_stmt 1
 3475 0e3e 240D      		add r18,r4
 3476 0e40 351D      		adc r19,r5
 3477 0e42 CF5C      		subi r28,lo8(-305)
 3478 0e44 DE4F      		sbci r29,hi8(-305)
 3479 0e46 2883      		st Y,r18
 3480 0e48 3983      		std Y+1,r19
 3481 0e4a C153      		subi r28,lo8(305)
 3482 0e4c D140      		sbci r29,hi8(305)
 3483               	.LBB1645:
 3484               	.LBB1646:
 3485               	.LBB1647:
 3486               	.LBB1648:
 3487               	.LBB1649:
 3488               	.LBB1650:
 3489               	.LBB1651:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3490               		.loc 4 57 0
 3491 0e4e 56E0      		ldi r21,lo8(6)
 3492               	.LBE1651:
 3493               	.LBE1650:
 3494               	.LBE1649:
 3495               	.LBE1648:
 3496               	.LBE1647:
 3497               	.LBB1662:
 3498               	.LBB1663:
 3499               	.LBB1664:
 3500               	.LBB1665:
 3501               	.LBB1666:
 3502               	.LBB1667:
 3503               	.LBB1668:
 3504               	.LBB1669:
 3505               	.LBB1670:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 3506               		.loc 5 220 0
 3507 0e50 F0E0      		ldi r31,lo8(endpoints+24)
 3508 0e52 EF2E      		mov r14,r31
 3509 0e54 F0E0      		ldi r31,hi8(endpoints+24)
 3510 0e56 FF2E      		mov r15,r31
 3511               	.LBE1670:
 3512               	.LBE1669:
 3513               	.LBB1672:
 3514               	.LBB1673:
 3515               		.loc 4 91 0
 3516 0e58 A0E0      		ldi r26,lo8(ep_in_pipe_buffer)
 3517 0e5a 2A2E      		mov r2,r26
 3518 0e5c A0E0      		ldi r26,hi8(ep_in_pipe_buffer)
 3519 0e5e 3A2E      		mov r3,r26
 3520               	.LBE1673:
 3521               	.LBE1672:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 3522               		.loc 2 88 0
 3523 0e60 12E0      		ldi r17,lo8(2)
 3524               	.LBB1676:
 3525               	.LBB1677:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 3526               		.loc 2 69 0
 3527 0e62 B1E0      		ldi r27,lo8(1)
 3528 0e64 CB2E      		mov r12,r27
 3529 0e66 D12C      		mov r13,__zero_reg__
 3530               	.LBE1677:
 3531               	.LBE1676:
 3532               	.LBB1685:
 3533               	.LBB1686:
 3534               	.LBB1687:
 3535               	.LBB1688:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3536               		.loc 5 169 0
 3537 0e68 00E4      		ldi r16,lo8(64)
 3538 0e6a A02E      		mov r10,r16
 3539 0e6c B12C      		mov r11,__zero_reg__
 3540               	.LVL196:
 3541               	.L134:
 3542               	.LBE1688:
 3543               	.LBE1687:
 3544               	.LBE1686:
 3545               	.LBE1685:
 3546               	.LBE1668:
 3547               	.LBE1667:
 3548               	.LBE1666:
 3549               	.LBE1665:
 3550               	.LBE1664:
 3551               	.LBE1663:
 3552               	.LBE1662:
 3553               	.LBE1646:
 3554               	.LBE1645:
 110:nmea/nmea.h   ****         send_byte(lng_buff[j]);  
 3555               		.loc 8 110 0 discriminator 2
 3556 0e6e D401      		movw r26,r8
 3557 0e70 2D91      		ld r18,X+
 3558 0e72 4D01      		movw r8,r26
 3559               	.LVL197:
 3560               	.L122:
 3561               	.LBB1738:
 3562               	.LBB1736:
 3563               	.LBB1731:
 3564               	.LBB1660:
 3565               	.LBB1658:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3566               		.loc 2 123 0
 3567 0e74 9FB7      		in r25,__SREG__
 3568               	.LVL198:
 3569               	.LBB1653:
 3570               	.LBB1654:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3571               		.loc 3 50 0
 3572               	/* #APP */
 3573               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3574 0e76 F894      		cli
 3575               	 ;  0 "" 2
 3576               	.LVL199:
 3577               	/* #NOAPP */
 3578               	.LBE1654:
 3579               	.LBE1653:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3580               		.loc 2 124 0
 3581 0e78 8091 0000 		lds r24,ep_in_data+1
 3582 0e7c 8823      		tst r24
 3583 0e7e 01F4      		brne .+2
 3584 0e80 00C0      		rjmp .L210
 3585               	.L181:
 125:usb/usb_pipe.h **** 			r = false;
 3586               		.loc 2 125 0
 3587 0e82 80E0      		ldi r24,lo8(0)
 3588               	.L120:
 3589               	.LBB1655:
 3590               	.LBB1656:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3591               		.loc 3 70 0
 3592 0e84 9FBF      		out __SREG__,r25
 3593               		.loc 3 71 0
 3594               	.LBE1656:
 3595               	.LBE1655:
 3596               	.LBE1658:
 3597               	.LBE1660:
 3598               	.LBE1731:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3599               		.loc 1 20 0
 3600 0e86 8823      		tst r24
 3601 0e88 01F0      		breq .L122
 3602               	.LVL200:
 3603               	.LBB1732:
 3604               	.LBB1733:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3605               		.loc 2 175 0
 3606 0e8a 8091 0000 		lds r24,ep_in_data+2
 3607 0e8e 9091 0000 		lds r25,ep_in_data+2+1
 3608 0e92 E091 0000 		lds r30,ep_in_pipe_data+2
 3609 0e96 F091 0000 		lds r31,ep_in_pipe_data+2+1
 3610 0e9a E80F      		add r30,r24
 3611 0e9c F91F      		adc r31,r25
 3612 0e9e 2083      		st Z,r18
 3613 0ea0 0196      		adiw r24,1
 3614 0ea2 8093 0000 		sts ep_in_data+2,r24
 3615 0ea6 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3616               		.loc 2 176 0
 3617 0eaa 8034      		cpi r24,64
 3618 0eac 9105      		cpc r25,__zero_reg__
 3619 0eae 01F4      		brne .+2
 3620 0eb0 00C0      		rjmp .L211
 3621               	.LVL201:
 3622               	.L123:
 3623               	.LBE1733:
 3624               	.LBE1732:
 3625               	.LBE1736:
 3626               	.LBE1738:
 109:nmea/nmea.h   ****       for (int j=0; j<len_lng; j++) {
 3627               		.loc 8 109 0 discriminator 2
 3628 0eb2 CF5C      		subi r28,lo8(-305)
 3629 0eb4 DE4F      		sbci r29,hi8(-305)
 3630 0eb6 2881      		ld r18,Y
 3631 0eb8 3981      		ldd r19,Y+1
 3632 0eba C153      		subi r28,lo8(305)
 3633 0ebc D140      		sbci r29,hi8(305)
 3634 0ebe 8216      		cp r8,r18
 3635 0ec0 9306      		cpc r9,r19
 3636 0ec2 01F4      		brne .L134
 3637               	.LVL202:
 3638               	.L137:
 3639               	.LBE1644:
 3640               	.LBB1740:
 3641               	.LBB1741:
 3642               	.LBB1742:
 3643               	.LBB1743:
 3644               	.LBB1744:
 3645               	.LBB1745:
 3646               	.LBB1746:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3647               		.loc 4 57 0
 3648 0ec4 96E0      		ldi r25,lo8(6)
 3649               	.L187:
 3650               	.LBE1746:
 3651               	.LBE1745:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3652               		.loc 2 123 0
 3653 0ec6 2FB7      		in r18,__SREG__
 3654               	.LVL203:
 3655               	.LBB1748:
 3656               	.LBB1749:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3657               		.loc 3 50 0
 3658               	/* #APP */
 3659               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3660 0ec8 F894      		cli
 3661               	 ;  0 "" 2
 3662               	.LVL204:
 3663               	/* #NOAPP */
 3664               	.LBE1749:
 3665               	.LBE1748:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3666               		.loc 2 124 0
 3667 0eca 8091 0000 		lds r24,ep_in_data+1
 3668 0ece 8823      		tst r24
 3669 0ed0 01F4      		brne .+2
 3670 0ed2 00C0      		rjmp .L212
 3671               	.L182:
 125:usb/usb_pipe.h **** 			r = false;
 3672               		.loc 2 125 0
 3673 0ed4 80E0      		ldi r24,lo8(0)
 3674               	.L135:
 3675               	.LBB1750:
 3676               	.LBB1751:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3677               		.loc 3 70 0
 3678 0ed6 2FBF      		out __SREG__,r18
 3679               		.loc 3 71 0
 3680               	.LBE1751:
 3681               	.LBE1750:
 3682               	.LBE1744:
 3683               	.LBE1743:
 3684               	.LBE1742:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3685               		.loc 1 20 0
 3686 0ed8 8823      		tst r24
 3687 0eda 01F0      		breq .L187
 3688               	.LVL205:
 3689               	.LBB1755:
 3690               	.LBB1756:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3691               		.loc 2 175 0
 3692 0edc 8091 0000 		lds r24,ep_in_data+2
 3693 0ee0 9091 0000 		lds r25,ep_in_data+2+1
 3694 0ee4 E091 0000 		lds r30,ep_in_pipe_data+2
 3695 0ee8 F091 0000 		lds r31,ep_in_pipe_data+2+1
 3696 0eec E80F      		add r30,r24
 3697 0eee F91F      		adc r31,r25
 3698 0ef0 20E2      		ldi r18,lo8(32)
 3699               	.LVL206:
 3700 0ef2 2083      		st Z,r18
 3701 0ef4 0196      		adiw r24,1
 3702 0ef6 8093 0000 		sts ep_in_data+2,r24
 3703 0efa 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3704               		.loc 2 176 0
 3705 0efe 8034      		cpi r24,64
 3706 0f00 9105      		cpc r25,__zero_reg__
 3707 0f02 01F4      		brne .+2
 3708 0f04 00C0      		rjmp .L213
 3709               	.L138:
 3710               	.LVL207:
 3711               	.LBE1756:
 3712               	.LBE1755:
 3713               	.LBE1741:
 3714               	.LBE1740:
 3715               	.LBB1821:
 115:nmea/nmea.h   ****       for (int k=0; k<len_dist; k++) {
 3716               		.loc 8 115 0 discriminator 1
 3717 0f06 C15D      		subi r28,lo8(-303)
 3718 0f08 DE4F      		sbci r29,hi8(-303)
 3719 0f0a 2881      		ld r18,Y
 3720 0f0c 3981      		ldd r19,Y+1
 3721 0f0e CF52      		subi r28,lo8(303)
 3722 0f10 D140      		sbci r29,hi8(303)
 3723 0f12 1216      		cp __zero_reg__,r18
 3724 0f14 1306      		cpc __zero_reg__,r19
 3725 0f16 04F0      		brlt .+2
 3726 0f18 00C0      		rjmp .L149
 115:nmea/nmea.h   ****       for (int k=0; k<len_dist; k++) {
 3727               		.loc 8 115 0 is_stmt 0
 3728 0f1a 4E01      		movw r8,r28
 3729 0f1c 0894      		sec
 3730 0f1e 811C      		adc r8,__zero_reg__
 3731 0f20 911C      		adc r9,__zero_reg__
  71:nmea/nmea.h   **** char* parse_nmea(void) {
 3732               		.loc 8 71 0 is_stmt 1
 3733 0f22 280D      		add r18,r8
 3734 0f24 391D      		adc r19,r9
 3735 0f26 C15D      		subi r28,lo8(-303)
 3736 0f28 DE4F      		sbci r29,hi8(-303)
 3737 0f2a 2883      		st Y,r18
 3738 0f2c 3983      		std Y+1,r19
 3739 0f2e CF52      		subi r28,lo8(303)
 3740 0f30 D140      		sbci r29,hi8(303)
 3741               	.LBB1822:
 3742               	.LBB1823:
 3743               	.LBB1824:
 3744               	.LBB1825:
 3745               	.LBB1826:
 3746               	.LBB1827:
 3747               	.LBB1828:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3748               		.loc 4 57 0
 3749 0f32 76E0      		ldi r23,lo8(6)
 3750               	.LBE1828:
 3751               	.LBE1827:
 3752               	.LBE1826:
 3753               	.LBE1825:
 3754               	.LBE1824:
 3755               	.LBB1839:
 3756               	.LBB1840:
 3757               	.LBB1841:
 3758               	.LBB1842:
 3759               	.LBB1843:
 3760               	.LBB1844:
 3761               	.LBB1845:
 3762               	.LBB1846:
 3763               	.LBB1847:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 3764               		.loc 5 220 0
 3765 0f34 40E0      		ldi r20,lo8(endpoints+24)
 3766 0f36 E42E      		mov r14,r20
 3767 0f38 40E0      		ldi r20,hi8(endpoints+24)
 3768 0f3a F42E      		mov r15,r20
 3769               	.LBE1847:
 3770               	.LBE1846:
 3771               	.LBB1849:
 3772               	.LBB1850:
 3773               		.loc 4 91 0
 3774 0f3c 50E0      		ldi r21,lo8(ep_in_pipe_buffer)
 3775 0f3e 252E      		mov r2,r21
 3776 0f40 50E0      		ldi r21,hi8(ep_in_pipe_buffer)
 3777 0f42 352E      		mov r3,r21
 3778               	.LBE1850:
 3779               	.LBE1849:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 3780               		.loc 2 88 0
 3781 0f44 12E0      		ldi r17,lo8(2)
 3782               	.LBB1853:
 3783               	.LBB1854:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 3784               		.loc 2 69 0
 3785 0f46 61E0      		ldi r22,lo8(1)
 3786 0f48 C62E      		mov r12,r22
 3787 0f4a D12C      		mov r13,__zero_reg__
 3788               	.LBE1854:
 3789               	.LBE1853:
 3790               	.LBB1862:
 3791               	.LBB1863:
 3792               	.LBB1864:
 3793               	.LBB1865:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3794               		.loc 5 169 0
 3795 0f4c E0E4      		ldi r30,lo8(64)
 3796 0f4e AE2E      		mov r10,r30
 3797 0f50 B12C      		mov r11,__zero_reg__
 3798               	.LVL208:
 3799               	.L164:
 3800               	.LBE1865:
 3801               	.LBE1864:
 3802               	.LBE1863:
 3803               	.LBE1862:
 3804               	.LBE1845:
 3805               	.LBE1844:
 3806               	.LBE1843:
 3807               	.LBE1842:
 3808               	.LBE1841:
 3809               	.LBE1840:
 3810               	.LBE1839:
 3811               	.LBE1823:
 3812               	.LBE1822:
 116:nmea/nmea.h   ****         send_byte(dist_buff[k]);  
 3813               		.loc 8 116 0 discriminator 2
 3814 0f52 D401      		movw r26,r8
 3815 0f54 2D91      		ld r18,X+
 3816 0f56 4D01      		movw r8,r26
 3817               	.LVL209:
 3818               	.L152:
 3819               	.LBB1915:
 3820               	.LBB1913:
 3821               	.LBB1908:
 3822               	.LBB1837:
 3823               	.LBB1835:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3824               		.loc 2 123 0
 3825 0f58 9FB7      		in r25,__SREG__
 3826               	.LVL210:
 3827               	.LBB1830:
 3828               	.LBB1831:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3829               		.loc 3 50 0
 3830               	/* #APP */
 3831               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3832 0f5a F894      		cli
 3833               	 ;  0 "" 2
 3834               	.LVL211:
 3835               	/* #NOAPP */
 3836               	.LBE1831:
 3837               	.LBE1830:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3838               		.loc 2 124 0
 3839 0f5c 8091 0000 		lds r24,ep_in_data+1
 3840 0f60 8823      		tst r24
 3841 0f62 01F4      		brne .+2
 3842 0f64 00C0      		rjmp .L214
 3843               	.L183:
 125:usb/usb_pipe.h **** 			r = false;
 3844               		.loc 2 125 0
 3845 0f66 80E0      		ldi r24,lo8(0)
 3846               	.L150:
 3847               	.LBB1832:
 3848               	.LBB1833:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3849               		.loc 3 70 0
 3850 0f68 9FBF      		out __SREG__,r25
 3851               		.loc 3 71 0
 3852               	.LBE1833:
 3853               	.LBE1832:
 3854               	.LBE1835:
 3855               	.LBE1837:
 3856               	.LBE1908:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3857               		.loc 1 20 0
 3858 0f6a 8823      		tst r24
 3859 0f6c 01F0      		breq .L152
 3860               	.LVL212:
 3861               	.LBB1909:
 3862               	.LBB1910:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3863               		.loc 2 175 0
 3864 0f6e 8091 0000 		lds r24,ep_in_data+2
 3865 0f72 9091 0000 		lds r25,ep_in_data+2+1
 3866 0f76 E091 0000 		lds r30,ep_in_pipe_data+2
 3867 0f7a F091 0000 		lds r31,ep_in_pipe_data+2+1
 3868 0f7e E80F      		add r30,r24
 3869 0f80 F91F      		adc r31,r25
 3870 0f82 2083      		st Z,r18
 3871 0f84 0196      		adiw r24,1
 3872 0f86 8093 0000 		sts ep_in_data+2,r24
 3873 0f8a 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3874               		.loc 2 176 0
 3875 0f8e 8034      		cpi r24,64
 3876 0f90 9105      		cpc r25,__zero_reg__
 3877 0f92 01F4      		brne .+2
 3878 0f94 00C0      		rjmp .L215
 3879               	.LVL213:
 3880               	.L153:
 3881               	.LBE1910:
 3882               	.LBE1909:
 3883               	.LBE1913:
 3884               	.LBE1915:
 115:nmea/nmea.h   ****       for (int k=0; k<len_dist; k++) {
 3885               		.loc 8 115 0 discriminator 2
 3886 0f96 C15D      		subi r28,lo8(-303)
 3887 0f98 DE4F      		sbci r29,hi8(-303)
 3888 0f9a 2881      		ld r18,Y
 3889 0f9c 3981      		ldd r19,Y+1
 3890 0f9e CF52      		subi r28,lo8(303)
 3891 0fa0 D140      		sbci r29,hi8(303)
 3892 0fa2 8216      		cp r8,r18
 3893 0fa4 9306      		cpc r9,r19
 3894 0fa6 01F4      		brne .L164
 3895               	.LVL214:
 3896               	.L149:
 3897               	.LBE1821:
 3898               	.LBB1917:
 3899               	.LBB1918:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 3900               		.loc 7 15 0
 3901 0fa8 D301      		movw r26,r6
 3902 0faa 0D90      		ld __tmp_reg__,X+
 3903 0fac 0020      		tst __tmp_reg__
 3904 0fae 01F4      		brne .-6
 3905 0fb0 CD01      		movw r24,r26
 3906 0fb2 8619      		sub r24,r6
 3907 0fb4 9709      		sbc r25,r7
 3908 0fb6 0196      		adiw r24,1
 3909               		.cfi_escape 0x2e,0
 3910 0fb8 0E94 0000 		call malloc
 3911               	.LVL215:
 3912 0fbc E92E      		mov r14,r25
 3913 0fbe 082F      		mov r16,r24
 3914 0fc0 192F      		mov r17,r25
 3915               	.LVL216:
  17:concat/concat.h ****     strcpy(result, s1);
 3916               		.loc 7 17 0
 3917 0fc2 C801      		movw r24,r16
 3918 0fc4 B301      		movw r22,r6
 3919 0fc6 0E94 0000 		call strcpy
  18:concat/concat.h ****     strcat(result, s2);
 3920               		.loc 7 18 0
 3921 0fca E02F      		mov r30,r16
 3922 0fcc FE2D      		mov r31,r14
 3923 0fce DF01      		movw r26,r30
 3924 0fd0 0D90      		ld __tmp_reg__,X+
 3925 0fd2 0020      		tst __tmp_reg__
 3926 0fd4 01F4      		brne .-6
 3927 0fd6 1197      		sbiw r26,1
 3928 0fd8 AE1B      		sub r26,r30
 3929 0fda BF0B      		sbc r27,r31
 3930 0fdc A00F      		add r26,r16
 3931 0fde B11F      		adc r27,r17
 3932 0fe0 8CE2      		ldi r24,lo8(44)
 3933 0fe2 90E0      		ldi r25,hi8(44)
 3934 0fe4 8D93      		st X+,r24
 3935 0fe6 9C93      		st X,r25
 3936               	.LVL217:
 3937               	.LBE1918:
 3938               	.LBE1917:
 3939               	.LBB1919:
 3940               	.LBB1920:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 3941               		.loc 7 15 0
 3942 0fe8 A02F      		mov r26,r16
 3943 0fea BE2D      		mov r27,r14
 3944 0fec FD01      		movw r30,r26
 3945 0fee 0190      		ld __tmp_reg__,Z+
 3946 0ff0 0020      		tst __tmp_reg__
 3947 0ff2 01F4      		brne .-6
 3948 0ff4 9F01      		movw r18,r30
 3949 0ff6 F201      		movw r30,r4
 3950 0ff8 0190      		ld __tmp_reg__,Z+
 3951 0ffa 0020      		tst __tmp_reg__
 3952 0ffc 01F4      		brne .-6
 3953 0ffe CF01      		movw r24,r30
 3954 1000 0197      		sbiw r24,1
 3955 1002 8419      		sub r24,r4
 3956 1004 9509      		sbc r25,r5
 3957 1006 8A1B      		sub r24,r26
 3958 1008 9B0B      		sbc r25,r27
 3959 100a 820F      		add r24,r18
 3960 100c 931F      		adc r25,r19
 3961 100e 0E94 0000 		call malloc
 3962 1012 E82E      		mov r14,r24
 3963 1014 C92E      		mov r12,r25
 3964               	.LVL218:
  17:concat/concat.h ****     strcpy(result, s1);
 3965               		.loc 7 17 0
 3966 1016 B801      		movw r22,r16
 3967 1018 0E94 0000 		call strcpy
 3968               	.LVL219:
  18:concat/concat.h ****     strcat(result, s2);
 3969               		.loc 7 18 0
 3970 101c 8E2D      		mov r24,r14
 3971 101e 9C2D      		mov r25,r12
 3972 1020 B201      		movw r22,r4
 3973 1022 0E94 0000 		call strcat
 3974               	.LBE1920:
 3975               	.LBE1919:
 121:nmea/nmea.h   ****       *result = concat(concat(lat_str, ","), lng_str);
 3976               		.loc 8 121 0
 3977 1026 CD5C      		subi r28,lo8(-307)
 3978 1028 DE4F      		sbci r29,hi8(-307)
 3979 102a A881      		ld r26,Y
 3980 102c B981      		ldd r27,Y+1
 3981 102e C353      		subi r28,lo8(307)
 3982 1030 D140      		sbci r29,hi8(307)
 3983 1032 EC92      		st X,r14
 3984 1034 1196      		adiw r26,1
 3985 1036 CC92      		st X,r12
 3986 1038 1197      		sbiw r26,1
 3987 103a 00C0      		rjmp .L87
 3988               	.LVL220:
 3989               	.L206:
 3990               	.LBB1921:
 3991               	.LBB1560:
 3992               	.LBB1558:
 3993               	.LBB1555:
 3994               	.LBB1482:
 3995               	.LBB1480:
 3996               	.LBB1478:
 3997               	.LBB1473:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3998               		.loc 4 57 0
 3999 103c 8091 0000 		lds r24,ep_in_pipe_data+4
 4000 1040 252F      		mov r18,r21
 4001 1042 281B      		sub r18,r24
 4002               	.LBE1473:
 4003               	.LBE1478:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 4004               		.loc 2 127 0
 4005 1044 81E0      		ldi r24,lo8(1)
 4006 1046 1216      		cp __zero_reg__,r18
 4007 1048 04F4      		brge .+2
 4008 104a 00C0      		rjmp .L90
 4009 104c 00C0      		rjmp .L179
 4010               	.LVL221:
 4011               	.L207:
 4012               	.LBE1480:
 4013               	.LBE1482:
 4014               	.LBE1555:
 4015               	.LBB1556:
 4016               	.LBB1551:
 4017               	.LBB1550:
 4018               	.LBB1549:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 4019               		.loc 2 177 0
 4020 104e CFB6      		in r12,__SREG__
 4021               	.LVL222:
 4022               	.LBB1541:
 4023               	.LBB1542:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4024               		.loc 3 50 0
 4025               	/* #APP */
 4026               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4027 1050 F894      		cli
 4028               	 ;  0 "" 2
 4029               	.LVL223:
 4030               	/* #NOAPP */
 4031               	.LBE1542:
 4032               	.LBE1541:
 4033               		.loc 2 178 0
 4034 1052 1092 0000 		sts ep_in_data+2,__zero_reg__
 4035 1056 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4036               	.LVL224:
 4037               	.LBB1543:
 4038               	.LBB1544:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 4039               		.loc 4 81 0
 4040 105a 8091 0000 		lds r24,ep_in_pipe_data+4
 4041 105e 8F5F      		subi r24,lo8(-(1))
 4042 1060 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 4043               		.loc 4 82 0
 4044 1064 8091 0000 		lds r24,ep_in_pipe_data+2
 4045 1068 9091 0000 		lds r25,ep_in_pipe_data+2+1
 4046 106c 805C      		subi r24,lo8(-(64))
 4047 106e 9F4F      		sbci r25,hi8(-(64))
 4048 1070 8093 0000 		sts ep_in_pipe_data+2,r24
 4049 1074 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4050               		.loc 4 84 0
 4051 1078 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 4052 107a 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4053 107c 9F07      		cpc r25,r31
 4054 107e 01F4      		brne .L94
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 4055               		.loc 4 85 0
 4056 1080 2092 0000 		sts ep_in_pipe_data+2,r2
 4057 1084 3092 0000 		sts ep_in_pipe_data+2+1,r3
 4058               	.L94:
 4059               	.LVL225:
 4060               	.LBE1544:
 4061               	.LBE1543:
 4062               	.LBB1545:
 4063               	.LBB1539:
 4064               	.LBB1537:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 4065               		.loc 2 80 0
 4066 1088 1FB7      		in r17,__SREG__
 4067               	.LVL226:
 4068               	.LBB1516:
 4069               	.LBB1517:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4070               		.loc 3 50 0
 4071               	/* #APP */
 4072               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4073 108a F894      		cli
 4074               	 ;  0 "" 2
 4075               	.LVL227:
 4076               	/* #NOAPP */
 4077               	.LBE1517:
 4078               	.LBE1516:
 4079               	.LBB1518:
 4080               	.LBB1492:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 4081               		.loc 5 220 0
 4082 108c 8091 0000 		lds r24,endpoints+24
 4083 1090 8670      		andi r24,lo8(6)
 4084               	.LBE1492:
 4085               	.LBE1518:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 4086               		.loc 2 82 0
 4087 1092 01F4      		brne .L216
 4088               	.LVL228:
 4089               	.L95:
 4090               	.LBB1519:
 4091               	.LBB1520:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4092               		.loc 3 70 0
 4093 1094 1FBF      		out __SREG__,r17
 4094               		.loc 3 71 0
 4095               	.LVL229:
 4096               	.LBE1520:
 4097               	.LBE1519:
 4098               	.LBE1537:
 4099               	.LBE1539:
 4100               	.LBE1545:
 4101               	.LBB1546:
 4102               	.LBB1547:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4103               		.loc 3 70 0
 4104 1096 CFBE      		out __SREG__,r12
 4105               		.loc 3 71 0
 4106 1098 00C0      		rjmp .L93
 4107               	.LVL230:
 4108               	.L216:
 4109               	.LBE1547:
 4110               	.LBE1546:
 4111               	.LBB1548:
 4112               	.LBB1540:
 4113               	.LBB1538:
 4114               	.LBB1521:
 4115               	.LBB1522:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 4116               		.loc 4 51 0
 4117 109a 2091 0000 		lds r18,ep_in_pipe_data+4
 4118               	.LBE1522:
 4119               	.LBE1521:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 4120               		.loc 2 83 0
 4121 109e 1216      		cp __zero_reg__,r18
 4122 10a0 04F0      		brlt .+2
 4123 10a2 00C0      		rjmp .L96
 4124               	.LBB1523:
 4125               	.LBB1524:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4126               		.loc 4 62 0
 4127 10a4 6091 0000 		lds r22,ep_in_pipe_data
 4128 10a8 7091 0000 		lds r23,ep_in_pipe_data+1
 4129               	.LVL231:
 4130               	.LBE1524:
 4131               	.LBE1523:
 4132               	.LBB1525:
 4133               	.LBB1514:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4134               		.loc 2 68 0
 4135 10ac 3091 0000 		lds r19,ep_in_data
 4136               	.LVL232:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4137               		.loc 2 69 0
 4138 10b0 832F      		mov r24,r19
 4139 10b2 90E0      		ldi r25,lo8(0)
 4140 10b4 41E0      		ldi r20,lo8(1)
 4141 10b6 8E15      		cp r24,r14
 4142 10b8 9F05      		cpc r25,r15
 4143 10ba 01F4      		brne .L97
 4144 10bc 40E0      		ldi r20,lo8(0)
 4145               	.L97:
 4146 10be 4093 0000 		sts ep_in_data,r20
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4147               		.loc 2 72 0
 4148 10c2 3323      		tst r19
 4149 10c4 01F4      		brne .L98
 4150               	.LVL233:
 4151               	.LBB1511:
 4152               	.LBB1512:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4153               		.loc 5 168 0
 4154 10c6 6093 0000 		sts endpoints+28,r22
 4155 10ca 7093 0000 		sts endpoints+28+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4156               		.loc 5 169 0
 4157 10ce A092 0000 		sts endpoints+26,r10
 4158 10d2 B092 0000 		sts endpoints+26+1,r11
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4159               		.loc 5 174 0
 4160 10d6 FD01      		movw r30,r26
 4161               	/* #APP */
 4162               	 ;  174 "usb/usb.h" 1
 4163 10d8 02E2      		ldi r16, 34
 4164 10da 0693      		.dc.w 0x9306
 4165               		
 4166               	 ;  0 "" 2
 4167               	.LVL234:
 4168               	/* #NOAPP */
 4169               	.L99:
 4170               	.LBE1512:
 4171               	.LBE1511:
 4172               	.LBE1514:
 4173               	.LBE1525:
 4174               	.LBB1526:
 4175               	.LBB1527:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 4176               		.loc 4 72 0
 4177 10dc 2150      		subi r18,lo8(-(-1))
 4178 10de 2093 0000 		sts ep_in_pipe_data+4,r18
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 4179               		.loc 4 73 0
 4180 10e2 CB01      		movw r24,r22
 4181 10e4 805C      		subi r24,lo8(-(64))
 4182 10e6 9F4F      		sbci r25,hi8(-(64))
 4183 10e8 8093 0000 		sts ep_in_pipe_data,r24
 4184 10ec 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4185               		.loc 4 75 0
 4186 10f0 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 4187 10f2 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4188 10f4 9F07      		cpc r25,r31
 4189 10f6 01F4      		brne .L95
 4190               	.LBE1527:
 4191               	.LBE1526:
 4192               	.LBB1528:
 4193               	.LBB1495:
 4194               		.loc 4 91 0
 4195 10f8 2092 0000 		sts ep_in_pipe_data,r2
 4196 10fc 3092 0000 		sts ep_in_pipe_data+1,r3
 4197               	.LVL235:
 4198 1100 00C0      		rjmp .L95
 4199               	.LVL236:
 4200               	.L98:
 4201               	.LBE1495:
 4202               	.LBE1528:
 4203               	.LBB1529:
 4204               	.LBB1515:
 4205               	.LBB1513:
 4206               	.LBB1510:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4207               		.loc 5 168 0
 4208 1102 6093 0000 		sts endpoints+20,r22
 4209 1106 7093 0000 		sts endpoints+20+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4210               		.loc 5 169 0
 4211 110a A092 0000 		sts endpoints+18,r10
 4212 110e B092 0000 		sts endpoints+18+1,r11
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4213               		.loc 5 176 0
 4214 1112 FD01      		movw r30,r26
 4215               	/* #APP */
 4216               	 ;  176 "usb/usb.h" 1
 4217 1114 04E1      		ldi r16, 20
 4218 1116 0693      		.dc.w 0x9306
 4219               		
 4220               	 ;  0 "" 2
 4221               	/* #NOAPP */
 4222 1118 00C0      		rjmp .L99
 4223               	.LVL237:
 4224               	.L96:
 4225               	.LBE1510:
 4226               	.LBE1513:
 4227               	.LBE1515:
 4228               	.LBE1529:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 4229               		.loc 2 87 0
 4230 111a 8091 0000 		lds r24,ep_in_data+1
 4231 111e 8130      		cpi r24,lo8(1)
 4232 1120 01F0      		breq .L217
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4233               		.loc 2 91 0
 4234 1122 8230      		cpi r24,lo8(2)
 4235 1124 01F0      		breq .+2
 4236 1126 00C0      		rjmp .L95
 4237               	.LVL238:
 4238               	.LBB1530:
 4239               	.LBB1531:
 4240               	.LBB1532:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 4241               		.loc 5 228 0
 4242 1128 8091 0000 		lds r24,endpoints+24
 4243 112c 8670      		andi r24,lo8(6)
 4244               	.LBE1532:
 4245               	.LBE1531:
 4246               	.LBE1530:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4247               		.loc 2 91 0
 4248 112e 8630      		cpi r24,lo8(6)
 4249 1130 01F0      		breq .+2
 4250 1132 00C0      		rjmp .L95
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 4251               		.loc 2 92 0
 4252 1134 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 4253               		.loc 2 93 0
 4254 1138 1092 0000 		sts ep_in_data+2,__zero_reg__
 4255 113c 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4256               	.LBB1533:
 4257               	.LBB1496:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 4258               		.loc 4 90 0
 4259 1140 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 4260               		.loc 4 91 0
 4261 1144 2092 0000 		sts ep_in_pipe_data+2,r2
 4262 1148 3092 0000 		sts ep_in_pipe_data+2+1,r3
 4263 114c 2092 0000 		sts ep_in_pipe_data,r2
 4264 1150 3092 0000 		sts ep_in_pipe_data+1,r3
 4265               	.LVL239:
 4266 1154 00C0      		rjmp .L95
 4267               	.LVL240:
 4268               	.L217:
 4269               	.LBE1496:
 4270               	.LBE1533:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 4271               		.loc 2 88 0
 4272 1156 22E0      		ldi r18,lo8(2)
 4273 1158 2093 0000 		sts ep_in_data+1,r18
 4274               	.LBB1534:
 4275               	.LBB1535:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4276               		.loc 4 62 0
 4277 115c 7091 0000 		lds r23,ep_in_pipe_data
 4278 1160 E091 0000 		lds r30,ep_in_pipe_data+1
 4279               	.LBE1535:
 4280               	.LBE1534:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 4281               		.loc 2 90 0
 4282 1164 2091 0000 		lds r18,ep_in_data+2
 4283 1168 3091 0000 		lds r19,ep_in_data+2+1
 4284               	.LVL241:
 4285               	.LBB1536:
 4286               	.LBB1505:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4287               		.loc 2 68 0
 4288 116c 6091 0000 		lds r22,ep_in_data
 4289               	.LVL242:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4290               		.loc 2 69 0
 4291 1170 862F      		mov r24,r22
 4292 1172 90E0      		ldi r25,lo8(0)
 4293 1174 41E0      		ldi r20,lo8(1)
 4294 1176 8E15      		cp r24,r14
 4295 1178 9F05      		cpc r25,r15
 4296 117a 01F4      		brne .L102
 4297 117c 40E0      		ldi r20,lo8(0)
 4298               	.L102:
 4299 117e 4093 0000 		sts ep_in_data,r20
 4300               	.LBB1499:
 4301               	.LBB1500:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4302               		.loc 5 168 0
 4303 1182 872F      		mov r24,r23
 4304 1184 9E2F      		mov r25,r30
 4305               	.LBE1500:
 4306               	.LBE1499:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4307               		.loc 2 72 0
 4308 1186 6623      		tst r22
 4309 1188 01F4      		brne .L103
 4310               	.LVL243:
 4311               	.LBB1502:
 4312               	.LBB1501:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4313               		.loc 5 168 0
 4314 118a 8093 0000 		sts endpoints+28,r24
 4315 118e 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4316               		.loc 5 169 0
 4317 1192 2093 0000 		sts endpoints+26,r18
 4318 1196 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4319               		.loc 5 174 0
 4320 119a FD01      		movw r30,r26
 4321               	/* #APP */
 4322               	 ;  174 "usb/usb.h" 1
 4323 119c 02E2      		ldi r16, 34
 4324 119e 0693      		.dc.w 0x9306
 4325               		
 4326               	 ;  0 "" 2
 4327               	/* #NOAPP */
 4328 11a0 00C0      		rjmp .L95
 4329               	.LVL244:
 4330               	.L103:
 4331               	.LBE1501:
 4332               	.LBE1502:
 4333               	.LBB1503:
 4334               	.LBB1504:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4335               		.loc 5 168 0
 4336 11a2 8093 0000 		sts endpoints+20,r24
 4337 11a6 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4338               		.loc 5 169 0
 4339 11aa 2093 0000 		sts endpoints+18,r18
 4340 11ae 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4341               		.loc 5 176 0
 4342 11b2 FD01      		movw r30,r26
 4343               	/* #APP */
 4344               	 ;  176 "usb/usb.h" 1
 4345 11b4 04E1      		ldi r16, 20
 4346 11b6 0693      		.dc.w 0x9306
 4347               		
 4348               	 ;  0 "" 2
 4349               	/* #NOAPP */
 4350 11b8 00C0      		rjmp .L95
 4351               	.LVL245:
 4352               	.L208:
 4353               	.LBE1504:
 4354               	.LBE1503:
 4355               	.LBE1505:
 4356               	.LBE1536:
 4357               	.LBE1538:
 4358               	.LBE1540:
 4359               	.LBE1548:
 4360               	.LBE1549:
 4361               	.LBE1550:
 4362               	.LBE1551:
 4363               	.LBE1556:
 4364               	.LBE1558:
 4365               	.LBE1560:
 4366               	.LBE1921:
 4367               	.LBB1922:
 4368               	.LBB1641:
 4369               	.LBB1578:
 4370               	.LBB1575:
 4371               	.LBB1574:
 4372               	.LBB1573:
 4373               	.LBB1568:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 4374               		.loc 4 57 0
 4375 11ba 8091 0000 		lds r24,ep_in_pipe_data+4
 4376 11be 392F      		mov r19,r25
 4377 11c0 381B      		sub r19,r24
 4378               	.LBE1568:
 4379               	.LBE1573:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 4380               		.loc 2 127 0
 4381 11c2 81E0      		ldi r24,lo8(1)
 4382 11c4 1316      		cp __zero_reg__,r19
 4383 11c6 04F4      		brge .+2
 4384 11c8 00C0      		rjmp .L105
 4385 11ca 00C0      		rjmp .L180
 4386               	.LVL246:
 4387               	.L210:
 4388               	.LBE1574:
 4389               	.LBE1575:
 4390               	.LBE1578:
 4391               	.LBE1641:
 4392               	.LBE1922:
 4393               	.LBB1923:
 4394               	.LBB1739:
 4395               	.LBB1737:
 4396               	.LBB1734:
 4397               	.LBB1661:
 4398               	.LBB1659:
 4399               	.LBB1657:
 4400               	.LBB1652:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 4401               		.loc 4 57 0
 4402 11cc 8091 0000 		lds r24,ep_in_pipe_data+4
 4403 11d0 352F      		mov r19,r21
 4404 11d2 381B      		sub r19,r24
 4405               	.LBE1652:
 4406               	.LBE1657:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 4407               		.loc 2 127 0
 4408 11d4 81E0      		ldi r24,lo8(1)
 4409 11d6 1316      		cp __zero_reg__,r19
 4410 11d8 04F4      		brge .+2
 4411 11da 00C0      		rjmp .L120
 4412 11dc 00C0      		rjmp .L181
 4413               	.LVL247:
 4414               	.L211:
 4415               	.LBE1659:
 4416               	.LBE1661:
 4417               	.LBE1734:
 4418               	.LBB1735:
 4419               	.LBB1730:
 4420               	.LBB1729:
 4421               	.LBB1728:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 4422               		.loc 2 177 0
 4423 11de BFB7      		in r27,__SREG__
 4424               	.LVL248:
 4425               	.LBB1720:
 4426               	.LBB1721:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4427               		.loc 3 50 0
 4428               	/* #APP */
 4429               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4430 11e0 F894      		cli
 4431               	 ;  0 "" 2
 4432               	.LVL249:
 4433               	/* #NOAPP */
 4434               	.LBE1721:
 4435               	.LBE1720:
 4436               		.loc 2 178 0
 4437 11e2 1092 0000 		sts ep_in_data+2,__zero_reg__
 4438 11e6 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4439               	.LVL250:
 4440               	.LBB1722:
 4441               	.LBB1723:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 4442               		.loc 4 81 0
 4443 11ea 8091 0000 		lds r24,ep_in_pipe_data+4
 4444 11ee 8F5F      		subi r24,lo8(-(1))
 4445 11f0 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 4446               		.loc 4 82 0
 4447 11f4 8091 0000 		lds r24,ep_in_pipe_data+2
 4448 11f8 9091 0000 		lds r25,ep_in_pipe_data+2+1
 4449 11fc 805C      		subi r24,lo8(-(64))
 4450 11fe 9F4F      		sbci r25,hi8(-(64))
 4451 1200 8093 0000 		sts ep_in_pipe_data+2,r24
 4452 1204 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4453               		.loc 4 84 0
 4454 1208 E0E0      		ldi r30,hi8(ep_in_pipe_buffer+512)
 4455 120a 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4456 120c 9E07      		cpc r25,r30
 4457 120e 01F4      		brne .L124
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 4458               		.loc 4 85 0
 4459 1210 2092 0000 		sts ep_in_pipe_data+2,r2
 4460 1214 3092 0000 		sts ep_in_pipe_data+2+1,r3
 4461               	.L124:
 4462               	.LVL251:
 4463               	.LBE1723:
 4464               	.LBE1722:
 4465               	.LBB1724:
 4466               	.LBB1718:
 4467               	.LBB1716:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 4468               		.loc 2 80 0
 4469 1218 AFB7      		in r26,__SREG__
 4470               	.LVL252:
 4471               	.LBB1695:
 4472               	.LBB1696:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4473               		.loc 3 50 0
 4474               	/* #APP */
 4475               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4476 121a F894      		cli
 4477               	 ;  0 "" 2
 4478               	.LVL253:
 4479               	/* #NOAPP */
 4480               	.LBE1696:
 4481               	.LBE1695:
 4482               	.LBB1697:
 4483               	.LBB1671:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 4484               		.loc 5 220 0
 4485 121c 8091 0000 		lds r24,endpoints+24
 4486 1220 8670      		andi r24,lo8(6)
 4487               	.LBE1671:
 4488               	.LBE1697:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 4489               		.loc 2 82 0
 4490 1222 01F4      		brne .L218
 4491               	.LVL254:
 4492               	.L125:
 4493               	.LBB1698:
 4494               	.LBB1699:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4495               		.loc 3 70 0
 4496 1224 AFBF      		out __SREG__,r26
 4497               		.loc 3 71 0
 4498               	.LVL255:
 4499               	.LBE1699:
 4500               	.LBE1698:
 4501               	.LBE1716:
 4502               	.LBE1718:
 4503               	.LBE1724:
 4504               	.LBB1725:
 4505               	.LBB1726:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4506               		.loc 3 70 0
 4507 1226 BFBF      		out __SREG__,r27
 4508               		.loc 3 71 0
 4509 1228 00C0      		rjmp .L123
 4510               	.LVL256:
 4511               	.L218:
 4512               	.LBE1726:
 4513               	.LBE1725:
 4514               	.LBB1727:
 4515               	.LBB1719:
 4516               	.LBB1717:
 4517               	.LBB1700:
 4518               	.LBB1701:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 4519               		.loc 4 51 0
 4520 122a 2091 0000 		lds r18,ep_in_pipe_data+4
 4521               	.LBE1701:
 4522               	.LBE1700:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 4523               		.loc 2 83 0
 4524 122e 1216      		cp __zero_reg__,r18
 4525 1230 04F0      		brlt .+2
 4526 1232 00C0      		rjmp .L126
 4527               	.LBB1702:
 4528               	.LBB1703:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4529               		.loc 4 62 0
 4530 1234 6091 0000 		lds r22,ep_in_pipe_data
 4531 1238 7091 0000 		lds r23,ep_in_pipe_data+1
 4532               	.LVL257:
 4533               	.LBE1703:
 4534               	.LBE1702:
 4535               	.LBB1704:
 4536               	.LBB1693:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4537               		.loc 2 68 0
 4538 123c 3091 0000 		lds r19,ep_in_data
 4539               	.LVL258:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4540               		.loc 2 69 0
 4541 1240 832F      		mov r24,r19
 4542 1242 90E0      		ldi r25,lo8(0)
 4543 1244 41E0      		ldi r20,lo8(1)
 4544 1246 8C15      		cp r24,r12
 4545 1248 9D05      		cpc r25,r13
 4546 124a 01F4      		brne .L127
 4547 124c 40E0      		ldi r20,lo8(0)
 4548               	.L127:
 4549 124e 4093 0000 		sts ep_in_data,r20
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4550               		.loc 2 72 0
 4551 1252 3323      		tst r19
 4552 1254 01F4      		brne .L128
 4553               	.LVL259:
 4554               	.LBB1690:
 4555               	.LBB1691:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4556               		.loc 5 168 0
 4557 1256 6093 0000 		sts endpoints+28,r22
 4558 125a 7093 0000 		sts endpoints+28+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4559               		.loc 5 169 0
 4560 125e A092 0000 		sts endpoints+26,r10
 4561 1262 B092 0000 		sts endpoints+26+1,r11
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4562               		.loc 5 174 0
 4563 1266 F701      		movw r30,r14
 4564               	/* #APP */
 4565               	 ;  174 "usb/usb.h" 1
 4566 1268 02E2      		ldi r16, 34
 4567 126a 0693      		.dc.w 0x9306
 4568               		
 4569               	 ;  0 "" 2
 4570               	.LVL260:
 4571               	/* #NOAPP */
 4572               	.L129:
 4573               	.LBE1691:
 4574               	.LBE1690:
 4575               	.LBE1693:
 4576               	.LBE1704:
 4577               	.LBB1705:
 4578               	.LBB1706:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 4579               		.loc 4 72 0
 4580 126c 2150      		subi r18,lo8(-(-1))
 4581 126e 2093 0000 		sts ep_in_pipe_data+4,r18
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 4582               		.loc 4 73 0
 4583 1272 CB01      		movw r24,r22
 4584 1274 805C      		subi r24,lo8(-(64))
 4585 1276 9F4F      		sbci r25,hi8(-(64))
 4586 1278 8093 0000 		sts ep_in_pipe_data,r24
 4587 127c 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4588               		.loc 4 75 0
 4589 1280 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 4590 1282 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4591 1284 9F07      		cpc r25,r31
 4592 1286 01F4      		brne .L125
 4593               	.LBE1706:
 4594               	.LBE1705:
 4595               	.LBB1707:
 4596               	.LBB1674:
 4597               		.loc 4 91 0
 4598 1288 2092 0000 		sts ep_in_pipe_data,r2
 4599 128c 3092 0000 		sts ep_in_pipe_data+1,r3
 4600               	.LVL261:
 4601 1290 00C0      		rjmp .L125
 4602               	.LVL262:
 4603               	.L128:
 4604               	.LBE1674:
 4605               	.LBE1707:
 4606               	.LBB1708:
 4607               	.LBB1694:
 4608               	.LBB1692:
 4609               	.LBB1689:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4610               		.loc 5 168 0
 4611 1292 6093 0000 		sts endpoints+20,r22
 4612 1296 7093 0000 		sts endpoints+20+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4613               		.loc 5 169 0
 4614 129a A092 0000 		sts endpoints+18,r10
 4615 129e B092 0000 		sts endpoints+18+1,r11
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4616               		.loc 5 176 0
 4617 12a2 F701      		movw r30,r14
 4618               	/* #APP */
 4619               	 ;  176 "usb/usb.h" 1
 4620 12a4 04E1      		ldi r16, 20
 4621 12a6 0693      		.dc.w 0x9306
 4622               		
 4623               	 ;  0 "" 2
 4624               	/* #NOAPP */
 4625 12a8 00C0      		rjmp .L129
 4626               	.LVL263:
 4627               	.L126:
 4628               	.LBE1689:
 4629               	.LBE1692:
 4630               	.LBE1694:
 4631               	.LBE1708:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 4632               		.loc 2 87 0
 4633 12aa 8091 0000 		lds r24,ep_in_data+1
 4634 12ae 8130      		cpi r24,lo8(1)
 4635 12b0 01F0      		breq .L219
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4636               		.loc 2 91 0
 4637 12b2 8230      		cpi r24,lo8(2)
 4638 12b4 01F0      		breq .+2
 4639 12b6 00C0      		rjmp .L125
 4640               	.LVL264:
 4641               	.LBB1709:
 4642               	.LBB1710:
 4643               	.LBB1711:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 4644               		.loc 5 228 0
 4645 12b8 8091 0000 		lds r24,endpoints+24
 4646 12bc 8670      		andi r24,lo8(6)
 4647               	.LBE1711:
 4648               	.LBE1710:
 4649               	.LBE1709:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4650               		.loc 2 91 0
 4651 12be 8630      		cpi r24,lo8(6)
 4652 12c0 01F0      		breq .+2
 4653 12c2 00C0      		rjmp .L125
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 4654               		.loc 2 92 0
 4655 12c4 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 4656               		.loc 2 93 0
 4657 12c8 1092 0000 		sts ep_in_data+2,__zero_reg__
 4658 12cc 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4659               	.LBB1712:
 4660               	.LBB1675:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 4661               		.loc 4 90 0
 4662 12d0 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 4663               		.loc 4 91 0
 4664 12d4 2092 0000 		sts ep_in_pipe_data+2,r2
 4665 12d8 3092 0000 		sts ep_in_pipe_data+2+1,r3
 4666 12dc 2092 0000 		sts ep_in_pipe_data,r2
 4667 12e0 3092 0000 		sts ep_in_pipe_data+1,r3
 4668               	.LVL265:
 4669 12e4 00C0      		rjmp .L125
 4670               	.LVL266:
 4671               	.L219:
 4672               	.LBE1675:
 4673               	.LBE1712:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 4674               		.loc 2 88 0
 4675 12e6 1093 0000 		sts ep_in_data+1,r17
 4676               	.LBB1713:
 4677               	.LBB1714:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4678               		.loc 4 62 0
 4679 12ea 7091 0000 		lds r23,ep_in_pipe_data
 4680 12ee E091 0000 		lds r30,ep_in_pipe_data+1
 4681               	.LBE1714:
 4682               	.LBE1713:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 4683               		.loc 2 90 0
 4684 12f2 2091 0000 		lds r18,ep_in_data+2
 4685 12f6 3091 0000 		lds r19,ep_in_data+2+1
 4686               	.LVL267:
 4687               	.LBB1715:
 4688               	.LBB1684:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4689               		.loc 2 68 0
 4690 12fa 6091 0000 		lds r22,ep_in_data
 4691               	.LVL268:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4692               		.loc 2 69 0
 4693 12fe 862F      		mov r24,r22
 4694 1300 90E0      		ldi r25,lo8(0)
 4695 1302 41E0      		ldi r20,lo8(1)
 4696 1304 8C15      		cp r24,r12
 4697 1306 9D05      		cpc r25,r13
 4698 1308 01F4      		brne .L132
 4699 130a 40E0      		ldi r20,lo8(0)
 4700               	.L132:
 4701 130c 4093 0000 		sts ep_in_data,r20
 4702               	.LBB1678:
 4703               	.LBB1679:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4704               		.loc 5 168 0
 4705 1310 872F      		mov r24,r23
 4706 1312 9E2F      		mov r25,r30
 4707               	.LBE1679:
 4708               	.LBE1678:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4709               		.loc 2 72 0
 4710 1314 6623      		tst r22
 4711 1316 01F4      		brne .L133
 4712               	.LVL269:
 4713               	.LBB1681:
 4714               	.LBB1680:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4715               		.loc 5 168 0
 4716 1318 8093 0000 		sts endpoints+28,r24
 4717 131c 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4718               		.loc 5 169 0
 4719 1320 2093 0000 		sts endpoints+26,r18
 4720 1324 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4721               		.loc 5 174 0
 4722 1328 F701      		movw r30,r14
 4723               	/* #APP */
 4724               	 ;  174 "usb/usb.h" 1
 4725 132a 02E2      		ldi r16, 34
 4726 132c 0693      		.dc.w 0x9306
 4727               		
 4728               	 ;  0 "" 2
 4729               	/* #NOAPP */
 4730 132e 00C0      		rjmp .L125
 4731               	.LVL270:
 4732               	.L133:
 4733               	.LBE1680:
 4734               	.LBE1681:
 4735               	.LBB1682:
 4736               	.LBB1683:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4737               		.loc 5 168 0
 4738 1330 8093 0000 		sts endpoints+20,r24
 4739 1334 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4740               		.loc 5 169 0
 4741 1338 2093 0000 		sts endpoints+18,r18
 4742 133c 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4743               		.loc 5 176 0
 4744 1340 F701      		movw r30,r14
 4745               	/* #APP */
 4746               	 ;  176 "usb/usb.h" 1
 4747 1342 04E1      		ldi r16, 20
 4748 1344 0693      		.dc.w 0x9306
 4749               		
 4750               	 ;  0 "" 2
 4751               	/* #NOAPP */
 4752 1346 00C0      		rjmp .L125
 4753               	.LVL271:
 4754               	.L212:
 4755               	.LBE1683:
 4756               	.LBE1682:
 4757               	.LBE1684:
 4758               	.LBE1715:
 4759               	.LBE1717:
 4760               	.LBE1719:
 4761               	.LBE1727:
 4762               	.LBE1728:
 4763               	.LBE1729:
 4764               	.LBE1730:
 4765               	.LBE1735:
 4766               	.LBE1737:
 4767               	.LBE1739:
 4768               	.LBE1923:
 4769               	.LBB1924:
 4770               	.LBB1818:
 4771               	.LBB1757:
 4772               	.LBB1754:
 4773               	.LBB1753:
 4774               	.LBB1752:
 4775               	.LBB1747:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 4776               		.loc 4 57 0
 4777 1348 8091 0000 		lds r24,ep_in_pipe_data+4
 4778 134c 392F      		mov r19,r25
 4779 134e 381B      		sub r19,r24
 4780               	.LBE1747:
 4781               	.LBE1752:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 4782               		.loc 2 127 0
 4783 1350 81E0      		ldi r24,lo8(1)
 4784 1352 1316      		cp __zero_reg__,r19
 4785 1354 04F4      		brge .+2
 4786 1356 00C0      		rjmp .L135
 4787 1358 00C0      		rjmp .L182
 4788               	.LVL272:
 4789               	.L205:
 4790               	.LBE1753:
 4791               	.LBE1754:
 4792               	.LBE1757:
 4793               	.LBE1818:
 4794               	.LBE1924:
 4795               	.LBE1464:
 4796               	.LBB1930:
 4797               	.LBB1461:
 4798               	.LBB1458:
 4799               	.LBB1430:
 4800               	.LBB1427:
 4801               	.LBB1424:
 4802               	.LBB1421:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 4803               		.loc 2 88 0
 4804 135a 82E0      		ldi r24,lo8(2)
 4805 135c 8093 0000 		sts ep_in_data+1,r24
 4806               	.LBB1410:
 4807               	.LBB1411:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4808               		.loc 4 62 0
 4809 1360 6091 0000 		lds r22,ep_in_pipe_data
 4810 1364 4091 0000 		lds r20,ep_in_pipe_data+1
 4811               	.LBE1411:
 4812               	.LBE1410:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 4813               		.loc 2 90 0
 4814 1368 8091 0000 		lds r24,ep_in_data+2
 4815 136c 9091 0000 		lds r25,ep_in_data+2+1
 4816               	.LVL273:
 4817               	.LBB1412:
 4818               	.LBB1413:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4819               		.loc 2 68 0
 4820 1370 2091 0000 		lds r18,ep_in_data
 4821               	.LVL274:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4822               		.loc 2 69 0
 4823 1374 31E0      		ldi r19,lo8(1)
 4824 1376 2130      		cpi r18,lo8(1)
 4825 1378 01F4      		brne .L172
 4826 137a 30E0      		ldi r19,lo8(0)
 4827               	.L172:
 4828 137c 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4829               		.loc 2 72 0
 4830 1380 2223      		tst r18
 4831 1382 01F0      		breq .+2
 4832 1384 00C0      		rjmp .L173
 4833               	.LVL275:
 4834               	.LBB1414:
 4835               	.LBB1415:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4836               		.loc 5 168 0
 4837 1386 262F      		mov r18,r22
 4838 1388 342F      		mov r19,r20
 4839 138a 2093 0000 		sts endpoints+28,r18
 4840 138e 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4841               		.loc 5 169 0
 4842 1392 8093 0000 		sts endpoints+26,r24
 4843 1396 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4844               		.loc 5 174 0
 4845 139a E0E0      		ldi r30,lo8(endpoints+24)
 4846 139c F0E0      		ldi r31,hi8(endpoints+24)
 4847               	.LVL276:
 4848               	/* #APP */
 4849               	 ;  174 "usb/usb.h" 1
 4850 139e 02E2      		ldi r16, 34
 4851 13a0 0693      		.dc.w 0x9306
 4852               		
 4853               	 ;  0 "" 2
 4854               	/* #NOAPP */
 4855 13a2 00C0      		rjmp .L165
 4856               	.LVL277:
 4857               	.L209:
 4858               	.LBE1415:
 4859               	.LBE1414:
 4860               	.LBE1413:
 4861               	.LBE1412:
 4862               	.LBE1421:
 4863               	.LBE1424:
 4864               	.LBE1427:
 4865               	.LBE1430:
 4866               	.LBE1458:
 4867               	.LBE1461:
 4868               	.LBE1930:
 4869               	.LBB1931:
 4870               	.LBB1925:
 4871               	.LBB1642:
 4872               	.LBB1579:
 4873               	.LBB1580:
 4874               	.LBB1581:
 4875               	.LBB1582:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 4876               		.loc 2 177 0
 4877 13a4 7FB7      		in r23,__SREG__
 4878               	.LVL278:
 4879               	.LBB1583:
 4880               	.LBB1584:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4881               		.loc 3 50 0
 4882               	/* #APP */
 4883               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4884 13a6 F894      		cli
 4885               	 ;  0 "" 2
 4886               	.LVL279:
 4887               	/* #NOAPP */
 4888               	.LBE1584:
 4889               	.LBE1583:
 4890               		.loc 2 178 0
 4891 13a8 1092 0000 		sts ep_in_data+2,__zero_reg__
 4892 13ac 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4893               	.LVL280:
 4894               	.LBB1585:
 4895               	.LBB1586:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 4896               		.loc 4 81 0
 4897 13b0 8091 0000 		lds r24,ep_in_pipe_data+4
 4898 13b4 8F5F      		subi r24,lo8(-(1))
 4899 13b6 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 4900               		.loc 4 82 0
 4901 13ba 8091 0000 		lds r24,ep_in_pipe_data+2
 4902 13be 9091 0000 		lds r25,ep_in_pipe_data+2+1
 4903 13c2 805C      		subi r24,lo8(-(64))
 4904 13c4 9F4F      		sbci r25,hi8(-(64))
 4905 13c6 8093 0000 		sts ep_in_pipe_data+2,r24
 4906 13ca 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4907               		.loc 4 84 0
 4908 13ce 30E0      		ldi r19,hi8(ep_in_pipe_buffer+512)
 4909 13d0 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4910 13d2 9307      		cpc r25,r19
 4911 13d4 01F4      		brne .L109
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 4912               		.loc 4 85 0
 4913 13d6 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 4914 13d8 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 4915 13da 8093 0000 		sts ep_in_pipe_data+2,r24
 4916 13de 9093 0000 		sts ep_in_pipe_data+2+1,r25
 4917               	.L109:
 4918               	.LVL281:
 4919               	.LBE1586:
 4920               	.LBE1585:
 4921               	.LBB1587:
 4922               	.LBB1588:
 4923               	.LBB1589:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 4924               		.loc 2 80 0
 4925 13e2 6FB7      		in r22,__SREG__
 4926               	.LVL282:
 4927               	.LBB1590:
 4928               	.LBB1591:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4929               		.loc 3 50 0
 4930               	/* #APP */
 4931               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4932 13e4 F894      		cli
 4933               	 ;  0 "" 2
 4934               	.LVL283:
 4935               	/* #NOAPP */
 4936               	.LBE1591:
 4937               	.LBE1590:
 4938               	.LBB1592:
 4939               	.LBB1593:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 4940               		.loc 5 220 0
 4941 13e6 8091 0000 		lds r24,endpoints+24
 4942 13ea 8670      		andi r24,lo8(6)
 4943               	.LBE1593:
 4944               	.LBE1592:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 4945               		.loc 2 82 0
 4946 13ec 01F0      		breq .L110
 4947               	.LBB1594:
 4948               	.LBB1595:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 4949               		.loc 4 51 0
 4950 13ee 4091 0000 		lds r20,ep_in_pipe_data+4
 4951               	.LBE1595:
 4952               	.LBE1594:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 4953               		.loc 2 83 0
 4954 13f2 1416      		cp __zero_reg__,r20
 4955 13f4 04F0      		brlt .+2
 4956 13f6 00C0      		rjmp .L111
 4957               	.LBB1596:
 4958               	.LBB1597:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4959               		.loc 4 62 0
 4960 13f8 2091 0000 		lds r18,ep_in_pipe_data
 4961 13fc 3091 0000 		lds r19,ep_in_pipe_data+1
 4962               	.LVL284:
 4963               	.LBE1597:
 4964               	.LBE1596:
 4965               	.LBB1598:
 4966               	.LBB1599:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4967               		.loc 2 68 0
 4968 1400 9091 0000 		lds r25,ep_in_data
 4969               	.LVL285:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4970               		.loc 2 69 0
 4971 1404 81E0      		ldi r24,lo8(1)
 4972 1406 9130      		cpi r25,lo8(1)
 4973 1408 01F4      		brne .L112
 4974 140a 80E0      		ldi r24,lo8(0)
 4975               	.L112:
 4976 140c 8093 0000 		sts ep_in_data,r24
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4977               		.loc 2 72 0
 4978 1410 9923      		tst r25
 4979 1412 01F4      		brne .L113
 4980               	.LVL286:
 4981               	.LBB1600:
 4982               	.LBB1601:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4983               		.loc 5 168 0
 4984 1414 2093 0000 		sts endpoints+28,r18
 4985 1418 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4986               		.loc 5 169 0
 4987 141c 80E4      		ldi r24,lo8(64)
 4988 141e 90E0      		ldi r25,hi8(64)
 4989 1420 8093 0000 		sts endpoints+26,r24
 4990 1424 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4991               		.loc 5 174 0
 4992 1428 E0E0      		ldi r30,lo8(endpoints+24)
 4993 142a F0E0      		ldi r31,hi8(endpoints+24)
 4994               	.LVL287:
 4995               	/* #APP */
 4996               	 ;  174 "usb/usb.h" 1
 4997 142c 02E2      		ldi r16, 34
 4998 142e 0693      		.dc.w 0x9306
 4999               		
 5000               	 ;  0 "" 2
 5001               	.LVL288:
 5002               	/* #NOAPP */
 5003               	.L114:
 5004               	.LBE1601:
 5005               	.LBE1600:
 5006               	.LBE1599:
 5007               	.LBE1598:
 5008               	.LBB1605:
 5009               	.LBB1606:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 5010               		.loc 4 72 0
 5011 1430 842F      		mov r24,r20
 5012 1432 8150      		subi r24,lo8(-(-1))
 5013 1434 8093 0000 		sts ep_in_pipe_data+4,r24
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 5014               		.loc 4 73 0
 5015 1438 C901      		movw r24,r18
 5016 143a 805C      		subi r24,lo8(-(64))
 5017 143c 9F4F      		sbci r25,hi8(-(64))
 5018 143e 8093 0000 		sts ep_in_pipe_data,r24
 5019 1442 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 5020               		.loc 4 75 0
 5021 1446 A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 5022 1448 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 5023 144a 9A07      		cpc r25,r26
 5024 144c 01F0      		breq .L220
 5025               	.LVL289:
 5026               	.L110:
 5027               	.LBE1606:
 5028               	.LBE1605:
 5029               	.LBB1608:
 5030               	.LBB1609:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5031               		.loc 3 70 0
 5032 144e 6FBF      		out __SREG__,r22
 5033               		.loc 3 71 0
 5034               	.LVL290:
 5035               	.LBE1609:
 5036               	.LBE1608:
 5037               	.LBE1589:
 5038               	.LBE1588:
 5039               	.LBE1587:
 5040               	.LBB1633:
 5041               	.LBB1634:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5042               		.loc 3 70 0
 5043 1450 7FBF      		out __SREG__,r23
 5044               		.loc 3 71 0
 5045 1452 00C0      		rjmp .L108
 5046               	.LVL291:
 5047               	.L113:
 5048               	.LBE1634:
 5049               	.LBE1633:
 5050               	.LBB1635:
 5051               	.LBB1631:
 5052               	.LBB1629:
 5053               	.LBB1610:
 5054               	.LBB1604:
 5055               	.LBB1602:
 5056               	.LBB1603:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5057               		.loc 5 168 0
 5058 1454 2093 0000 		sts endpoints+20,r18
 5059 1458 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5060               		.loc 5 169 0
 5061 145c 80E4      		ldi r24,lo8(64)
 5062 145e 90E0      		ldi r25,hi8(64)
 5063 1460 8093 0000 		sts endpoints+18,r24
 5064 1464 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5065               		.loc 5 176 0
 5066 1468 E0E0      		ldi r30,lo8(endpoints+24)
 5067 146a F0E0      		ldi r31,hi8(endpoints+24)
 5068               	/* #APP */
 5069               	 ;  176 "usb/usb.h" 1
 5070 146c 04E1      		ldi r16, 20
 5071 146e 0693      		.dc.w 0x9306
 5072               		
 5073               	 ;  0 "" 2
 5074               	/* #NOAPP */
 5075 1470 00C0      		rjmp .L114
 5076               	.LVL292:
 5077               	.L111:
 5078               	.LBE1603:
 5079               	.LBE1602:
 5080               	.LBE1604:
 5081               	.LBE1610:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 5082               		.loc 2 87 0
 5083 1472 8091 0000 		lds r24,ep_in_data+1
 5084 1476 8130      		cpi r24,lo8(1)
 5085 1478 01F0      		breq .L221
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5086               		.loc 2 91 0
 5087 147a 8230      		cpi r24,lo8(2)
 5088 147c 01F4      		brne .L110
 5089               	.LVL293:
 5090               	.LBB1611:
 5091               	.LBB1612:
 5092               	.LBB1613:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 5093               		.loc 5 228 0
 5094 147e 8091 0000 		lds r24,endpoints+24
 5095 1482 8670      		andi r24,lo8(6)
 5096               	.LBE1613:
 5097               	.LBE1612:
 5098               	.LBE1611:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5099               		.loc 2 91 0
 5100 1484 8630      		cpi r24,lo8(6)
 5101 1486 01F4      		brne .L110
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 5102               		.loc 2 92 0
 5103 1488 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 5104               		.loc 2 93 0
 5105 148c 1092 0000 		sts ep_in_data+2,__zero_reg__
 5106 1490 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 5107               	.LBB1614:
 5108               	.LBB1615:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 5109               		.loc 4 90 0
 5110 1494 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 5111               		.loc 4 91 0
 5112 1498 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5113 149a 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5114 149c 8093 0000 		sts ep_in_pipe_data+2,r24
 5115 14a0 9093 0000 		sts ep_in_pipe_data+2+1,r25
 5116 14a4 8093 0000 		sts ep_in_pipe_data,r24
 5117 14a8 9093 0000 		sts ep_in_pipe_data+1,r25
 5118               	.LVL294:
 5119 14ac 00C0      		rjmp .L110
 5120               	.LVL295:
 5121               	.L220:
 5122               	.LBE1615:
 5123               	.LBE1614:
 5124               	.LBB1616:
 5125               	.LBB1607:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 5126               		.loc 4 76 0
 5127 14ae 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5128 14b0 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5129 14b2 8093 0000 		sts ep_in_pipe_data,r24
 5130 14b6 9093 0000 		sts ep_in_pipe_data+1,r25
 5131 14ba 00C0      		rjmp .L110
 5132               	.LVL296:
 5133               	.L221:
 5134               	.LBE1607:
 5135               	.LBE1616:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 5136               		.loc 2 88 0
 5137 14bc 82E0      		ldi r24,lo8(2)
 5138 14be 8093 0000 		sts ep_in_data+1,r24
 5139               	.LBB1617:
 5140               	.LBB1618:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5141               		.loc 4 62 0
 5142 14c2 4091 0000 		lds r20,ep_in_pipe_data
 5143 14c6 5091 0000 		lds r21,ep_in_pipe_data+1
 5144               	.LBE1618:
 5145               	.LBE1617:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 5146               		.loc 2 90 0
 5147 14ca 8091 0000 		lds r24,ep_in_data+2
 5148 14ce 9091 0000 		lds r25,ep_in_data+2+1
 5149               	.LVL297:
 5150               	.LBB1619:
 5151               	.LBB1620:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5152               		.loc 2 68 0
 5153 14d2 3091 0000 		lds r19,ep_in_data
 5154               	.LVL298:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5155               		.loc 2 69 0
 5156 14d6 21E0      		ldi r18,lo8(1)
 5157 14d8 3130      		cpi r19,lo8(1)
 5158 14da 01F4      		brne .L117
 5159 14dc 20E0      		ldi r18,lo8(0)
 5160               	.L117:
 5161 14de 2093 0000 		sts ep_in_data,r18
 5162               	.LBB1621:
 5163               	.LBB1622:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5164               		.loc 5 168 0
 5165 14e2 242F      		mov r18,r20
 5166               	.LBE1622:
 5167               	.LBE1621:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5168               		.loc 2 72 0
 5169 14e4 3323      		tst r19
 5170 14e6 01F0      		breq .+2
 5171 14e8 00C0      		rjmp .L118
 5172               	.LVL299:
 5173               	.LBB1624:
 5174               	.LBB1623:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5175               		.loc 5 168 0
 5176 14ea 352F      		mov r19,r21
 5177 14ec 2093 0000 		sts endpoints+28,r18
 5178 14f0 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5179               		.loc 5 169 0
 5180 14f4 8093 0000 		sts endpoints+26,r24
 5181 14f8 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5182               		.loc 5 174 0
 5183 14fc E0E0      		ldi r30,lo8(endpoints+24)
 5184 14fe F0E0      		ldi r31,hi8(endpoints+24)
 5185               	.LVL300:
 5186               	/* #APP */
 5187               	 ;  174 "usb/usb.h" 1
 5188 1500 02E2      		ldi r16, 34
 5189 1502 0693      		.dc.w 0x9306
 5190               		
 5191               	 ;  0 "" 2
 5192               	/* #NOAPP */
 5193 1504 00C0      		rjmp .L110
 5194               	.LVL301:
 5195               	.L214:
 5196               	.LBE1623:
 5197               	.LBE1624:
 5198               	.LBE1620:
 5199               	.LBE1619:
 5200               	.LBE1629:
 5201               	.LBE1631:
 5202               	.LBE1635:
 5203               	.LBE1582:
 5204               	.LBE1581:
 5205               	.LBE1580:
 5206               	.LBE1579:
 5207               	.LBE1642:
 5208               	.LBE1925:
 5209               	.LBB1926:
 5210               	.LBB1916:
 5211               	.LBB1914:
 5212               	.LBB1911:
 5213               	.LBB1838:
 5214               	.LBB1836:
 5215               	.LBB1834:
 5216               	.LBB1829:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 5217               		.loc 4 57 0
 5218 1506 8091 0000 		lds r24,ep_in_pipe_data+4
 5219 150a 372F      		mov r19,r23
 5220 150c 381B      		sub r19,r24
 5221               	.LBE1829:
 5222               	.LBE1834:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 5223               		.loc 2 127 0
 5224 150e 81E0      		ldi r24,lo8(1)
 5225 1510 1316      		cp __zero_reg__,r19
 5226 1512 04F4      		brge .+2
 5227 1514 00C0      		rjmp .L150
 5228 1516 00C0      		rjmp .L183
 5229               	.LVL302:
 5230               	.L215:
 5231               	.LBE1836:
 5232               	.LBE1838:
 5233               	.LBE1911:
 5234               	.LBB1912:
 5235               	.LBB1907:
 5236               	.LBB1906:
 5237               	.LBB1905:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 5238               		.loc 2 177 0
 5239 1518 BFB7      		in r27,__SREG__
 5240               	.LVL303:
 5241               	.LBB1897:
 5242               	.LBB1898:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 5243               		.loc 3 50 0
 5244               	/* #APP */
 5245               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 5246 151a F894      		cli
 5247               	 ;  0 "" 2
 5248               	.LVL304:
 5249               	/* #NOAPP */
 5250               	.LBE1898:
 5251               	.LBE1897:
 5252               		.loc 2 178 0
 5253 151c 1092 0000 		sts ep_in_data+2,__zero_reg__
 5254 1520 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 5255               	.LVL305:
 5256               	.LBB1899:
 5257               	.LBB1900:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 5258               		.loc 4 81 0
 5259 1524 8091 0000 		lds r24,ep_in_pipe_data+4
 5260 1528 8F5F      		subi r24,lo8(-(1))
 5261 152a 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 5262               		.loc 4 82 0
 5263 152e 8091 0000 		lds r24,ep_in_pipe_data+2
 5264 1532 9091 0000 		lds r25,ep_in_pipe_data+2+1
 5265 1536 805C      		subi r24,lo8(-(64))
 5266 1538 9F4F      		sbci r25,hi8(-(64))
 5267 153a 8093 0000 		sts ep_in_pipe_data+2,r24
 5268 153e 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 5269               		.loc 4 84 0
 5270 1542 E0E0      		ldi r30,hi8(ep_in_pipe_buffer+512)
 5271 1544 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 5272 1546 9E07      		cpc r25,r30
 5273 1548 01F4      		brne .L154
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 5274               		.loc 4 85 0
 5275 154a 2092 0000 		sts ep_in_pipe_data+2,r2
 5276 154e 3092 0000 		sts ep_in_pipe_data+2+1,r3
 5277               	.L154:
 5278               	.LVL306:
 5279               	.LBE1900:
 5280               	.LBE1899:
 5281               	.LBB1901:
 5282               	.LBB1895:
 5283               	.LBB1893:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 5284               		.loc 2 80 0
 5285 1552 AFB7      		in r26,__SREG__
 5286               	.LVL307:
 5287               	.LBB1872:
 5288               	.LBB1873:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 5289               		.loc 3 50 0
 5290               	/* #APP */
 5291               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 5292 1554 F894      		cli
 5293               	 ;  0 "" 2
 5294               	.LVL308:
 5295               	/* #NOAPP */
 5296               	.LBE1873:
 5297               	.LBE1872:
 5298               	.LBB1874:
 5299               	.LBB1848:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 5300               		.loc 5 220 0
 5301 1556 8091 0000 		lds r24,endpoints+24
 5302 155a 8670      		andi r24,lo8(6)
 5303               	.LBE1848:
 5304               	.LBE1874:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 5305               		.loc 2 82 0
 5306 155c 01F4      		brne .L222
 5307               	.LVL309:
 5308               	.L155:
 5309               	.LBB1875:
 5310               	.LBB1876:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5311               		.loc 3 70 0
 5312 155e AFBF      		out __SREG__,r26
 5313               		.loc 3 71 0
 5314               	.LVL310:
 5315               	.LBE1876:
 5316               	.LBE1875:
 5317               	.LBE1893:
 5318               	.LBE1895:
 5319               	.LBE1901:
 5320               	.LBB1902:
 5321               	.LBB1903:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5322               		.loc 3 70 0
 5323 1560 BFBF      		out __SREG__,r27
 5324               		.loc 3 71 0
 5325 1562 00C0      		rjmp .L153
 5326               	.LVL311:
 5327               	.L222:
 5328               	.LBE1903:
 5329               	.LBE1902:
 5330               	.LBB1904:
 5331               	.LBB1896:
 5332               	.LBB1894:
 5333               	.LBB1877:
 5334               	.LBB1878:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 5335               		.loc 4 51 0
 5336 1564 2091 0000 		lds r18,ep_in_pipe_data+4
 5337               	.LBE1878:
 5338               	.LBE1877:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 5339               		.loc 2 83 0
 5340 1568 1216      		cp __zero_reg__,r18
 5341 156a 04F0      		brlt .+2
 5342 156c 00C0      		rjmp .L156
 5343               	.LBB1879:
 5344               	.LBB1880:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5345               		.loc 4 62 0
 5346 156e 4091 0000 		lds r20,ep_in_pipe_data
 5347 1572 5091 0000 		lds r21,ep_in_pipe_data+1
 5348               	.LVL312:
 5349               	.LBE1880:
 5350               	.LBE1879:
 5351               	.LBB1881:
 5352               	.LBB1870:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5353               		.loc 2 68 0
 5354 1576 3091 0000 		lds r19,ep_in_data
 5355               	.LVL313:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5356               		.loc 2 69 0
 5357 157a 832F      		mov r24,r19
 5358 157c 90E0      		ldi r25,lo8(0)
 5359 157e 61E0      		ldi r22,lo8(1)
 5360 1580 8C15      		cp r24,r12
 5361 1582 9D05      		cpc r25,r13
 5362 1584 01F4      		brne .L157
 5363 1586 60E0      		ldi r22,lo8(0)
 5364               	.L157:
 5365 1588 6093 0000 		sts ep_in_data,r22
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5366               		.loc 2 72 0
 5367 158c 3323      		tst r19
 5368 158e 01F4      		brne .L158
 5369               	.LVL314:
 5370               	.LBB1867:
 5371               	.LBB1868:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5372               		.loc 5 168 0
 5373 1590 4093 0000 		sts endpoints+28,r20
 5374 1594 5093 0000 		sts endpoints+28+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5375               		.loc 5 169 0
 5376 1598 A092 0000 		sts endpoints+26,r10
 5377 159c B092 0000 		sts endpoints+26+1,r11
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5378               		.loc 5 174 0
 5379 15a0 F701      		movw r30,r14
 5380               	/* #APP */
 5381               	 ;  174 "usb/usb.h" 1
 5382 15a2 02E2      		ldi r16, 34
 5383 15a4 0693      		.dc.w 0x9306
 5384               		
 5385               	 ;  0 "" 2
 5386               	.LVL315:
 5387               	/* #NOAPP */
 5388               	.L159:
 5389               	.LBE1868:
 5390               	.LBE1867:
 5391               	.LBE1870:
 5392               	.LBE1881:
 5393               	.LBB1882:
 5394               	.LBB1883:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 5395               		.loc 4 72 0
 5396 15a6 2150      		subi r18,lo8(-(-1))
 5397 15a8 2093 0000 		sts ep_in_pipe_data+4,r18
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 5398               		.loc 4 73 0
 5399 15ac CA01      		movw r24,r20
 5400 15ae 805C      		subi r24,lo8(-(64))
 5401 15b0 9F4F      		sbci r25,hi8(-(64))
 5402 15b2 8093 0000 		sts ep_in_pipe_data,r24
 5403 15b6 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 5404               		.loc 4 75 0
 5405 15ba F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 5406 15bc 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 5407 15be 9F07      		cpc r25,r31
 5408 15c0 01F4      		brne .L155
 5409               	.LBE1883:
 5410               	.LBE1882:
 5411               	.LBB1884:
 5412               	.LBB1851:
 5413               		.loc 4 91 0
 5414 15c2 2092 0000 		sts ep_in_pipe_data,r2
 5415 15c6 3092 0000 		sts ep_in_pipe_data+1,r3
 5416               	.LVL316:
 5417 15ca 00C0      		rjmp .L155
 5418               	.LVL317:
 5419               	.L158:
 5420               	.LBE1851:
 5421               	.LBE1884:
 5422               	.LBB1885:
 5423               	.LBB1871:
 5424               	.LBB1869:
 5425               	.LBB1866:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5426               		.loc 5 168 0
 5427 15cc 4093 0000 		sts endpoints+20,r20
 5428 15d0 5093 0000 		sts endpoints+20+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5429               		.loc 5 169 0
 5430 15d4 A092 0000 		sts endpoints+18,r10
 5431 15d8 B092 0000 		sts endpoints+18+1,r11
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5432               		.loc 5 176 0
 5433 15dc F701      		movw r30,r14
 5434               	/* #APP */
 5435               	 ;  176 "usb/usb.h" 1
 5436 15de 04E1      		ldi r16, 20
 5437 15e0 0693      		.dc.w 0x9306
 5438               		
 5439               	 ;  0 "" 2
 5440               	/* #NOAPP */
 5441 15e2 00C0      		rjmp .L159
 5442               	.LVL318:
 5443               	.L156:
 5444               	.LBE1866:
 5445               	.LBE1869:
 5446               	.LBE1871:
 5447               	.LBE1885:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 5448               		.loc 2 87 0
 5449 15e4 8091 0000 		lds r24,ep_in_data+1
 5450 15e8 8130      		cpi r24,lo8(1)
 5451 15ea 01F0      		breq .L223
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5452               		.loc 2 91 0
 5453 15ec 8230      		cpi r24,lo8(2)
 5454 15ee 01F0      		breq .+2
 5455 15f0 00C0      		rjmp .L155
 5456               	.LVL319:
 5457               	.LBB1886:
 5458               	.LBB1887:
 5459               	.LBB1888:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 5460               		.loc 5 228 0
 5461 15f2 8091 0000 		lds r24,endpoints+24
 5462 15f6 8670      		andi r24,lo8(6)
 5463               	.LBE1888:
 5464               	.LBE1887:
 5465               	.LBE1886:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5466               		.loc 2 91 0
 5467 15f8 8630      		cpi r24,lo8(6)
 5468 15fa 01F0      		breq .+2
 5469 15fc 00C0      		rjmp .L155
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 5470               		.loc 2 92 0
 5471 15fe 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 5472               		.loc 2 93 0
 5473 1602 1092 0000 		sts ep_in_data+2,__zero_reg__
 5474 1606 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 5475               	.LBB1889:
 5476               	.LBB1852:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 5477               		.loc 4 90 0
 5478 160a 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 5479               		.loc 4 91 0
 5480 160e 2092 0000 		sts ep_in_pipe_data+2,r2
 5481 1612 3092 0000 		sts ep_in_pipe_data+2+1,r3
 5482 1616 2092 0000 		sts ep_in_pipe_data,r2
 5483 161a 3092 0000 		sts ep_in_pipe_data+1,r3
 5484               	.LVL320:
 5485 161e 00C0      		rjmp .L155
 5486               	.LVL321:
 5487               	.L223:
 5488               	.LBE1852:
 5489               	.LBE1889:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 5490               		.loc 2 88 0
 5491 1620 1093 0000 		sts ep_in_data+1,r17
 5492               	.LBB1890:
 5493               	.LBB1891:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5494               		.loc 4 62 0
 5495 1624 6091 0000 		lds r22,ep_in_pipe_data
 5496 1628 E091 0000 		lds r30,ep_in_pipe_data+1
 5497               	.LBE1891:
 5498               	.LBE1890:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 5499               		.loc 2 90 0
 5500 162c 2091 0000 		lds r18,ep_in_data+2
 5501 1630 3091 0000 		lds r19,ep_in_data+2+1
 5502               	.LVL322:
 5503               	.LBB1892:
 5504               	.LBB1861:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5505               		.loc 2 68 0
 5506 1634 5091 0000 		lds r21,ep_in_data
 5507               	.LVL323:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5508               		.loc 2 69 0
 5509 1638 852F      		mov r24,r21
 5510 163a 90E0      		ldi r25,lo8(0)
 5511 163c 41E0      		ldi r20,lo8(1)
 5512 163e 8C15      		cp r24,r12
 5513 1640 9D05      		cpc r25,r13
 5514 1642 01F4      		brne .L162
 5515 1644 40E0      		ldi r20,lo8(0)
 5516               	.L162:
 5517 1646 4093 0000 		sts ep_in_data,r20
 5518               	.LBB1855:
 5519               	.LBB1856:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5520               		.loc 5 168 0
 5521 164a 862F      		mov r24,r22
 5522 164c 9E2F      		mov r25,r30
 5523               	.LBE1856:
 5524               	.LBE1855:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5525               		.loc 2 72 0
 5526 164e 5523      		tst r21
 5527 1650 01F4      		brne .L163
 5528               	.LVL324:
 5529               	.LBB1858:
 5530               	.LBB1857:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5531               		.loc 5 168 0
 5532 1652 8093 0000 		sts endpoints+28,r24
 5533 1656 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5534               		.loc 5 169 0
 5535 165a 2093 0000 		sts endpoints+26,r18
 5536 165e 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5537               		.loc 5 174 0
 5538 1662 F701      		movw r30,r14
 5539               	/* #APP */
 5540               	 ;  174 "usb/usb.h" 1
 5541 1664 02E2      		ldi r16, 34
 5542 1666 0693      		.dc.w 0x9306
 5543               		
 5544               	 ;  0 "" 2
 5545               	/* #NOAPP */
 5546 1668 00C0      		rjmp .L155
 5547               	.LVL325:
 5548               	.L163:
 5549               	.LBE1857:
 5550               	.LBE1858:
 5551               	.LBB1859:
 5552               	.LBB1860:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5553               		.loc 5 168 0
 5554 166a 8093 0000 		sts endpoints+20,r24
 5555 166e 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5556               		.loc 5 169 0
 5557 1672 2093 0000 		sts endpoints+18,r18
 5558 1676 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5559               		.loc 5 176 0
 5560 167a F701      		movw r30,r14
 5561               	/* #APP */
 5562               	 ;  176 "usb/usb.h" 1
 5563 167c 04E1      		ldi r16, 20
 5564 167e 0693      		.dc.w 0x9306
 5565               		
 5566               	 ;  0 "" 2
 5567               	/* #NOAPP */
 5568 1680 00C0      		rjmp .L155
 5569               	.LVL326:
 5570               	.L213:
 5571               	.LBE1860:
 5572               	.LBE1859:
 5573               	.LBE1861:
 5574               	.LBE1892:
 5575               	.LBE1894:
 5576               	.LBE1896:
 5577               	.LBE1904:
 5578               	.LBE1905:
 5579               	.LBE1906:
 5580               	.LBE1907:
 5581               	.LBE1912:
 5582               	.LBE1914:
 5583               	.LBE1916:
 5584               	.LBE1926:
 5585               	.LBB1927:
 5586               	.LBB1819:
 5587               	.LBB1758:
 5588               	.LBB1759:
 5589               	.LBB1760:
 5590               	.LBB1761:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 5591               		.loc 2 177 0
 5592 1682 7FB7      		in r23,__SREG__
 5593               	.LVL327:
 5594               	.LBB1762:
 5595               	.LBB1763:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 5596               		.loc 3 50 0
 5597               	/* #APP */
 5598               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 5599 1684 F894      		cli
 5600               	 ;  0 "" 2
 5601               	.LVL328:
 5602               	/* #NOAPP */
 5603               	.LBE1763:
 5604               	.LBE1762:
 5605               		.loc 2 178 0
 5606 1686 1092 0000 		sts ep_in_data+2,__zero_reg__
 5607 168a 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 5608               	.LVL329:
 5609               	.LBB1764:
 5610               	.LBB1765:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 5611               		.loc 4 81 0
 5612 168e 8091 0000 		lds r24,ep_in_pipe_data+4
 5613 1692 8F5F      		subi r24,lo8(-(1))
 5614 1694 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 5615               		.loc 4 82 0
 5616 1698 8091 0000 		lds r24,ep_in_pipe_data+2
 5617 169c 9091 0000 		lds r25,ep_in_pipe_data+2+1
 5618 16a0 805C      		subi r24,lo8(-(64))
 5619 16a2 9F4F      		sbci r25,hi8(-(64))
 5620 16a4 8093 0000 		sts ep_in_pipe_data+2,r24
 5621 16a8 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 5622               		.loc 4 84 0
 5623 16ac 30E0      		ldi r19,hi8(ep_in_pipe_buffer+512)
 5624 16ae 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 5625 16b0 9307      		cpc r25,r19
 5626 16b2 01F4      		brne .L139
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 5627               		.loc 4 85 0
 5628 16b4 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5629 16b6 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5630 16b8 8093 0000 		sts ep_in_pipe_data+2,r24
 5631 16bc 9093 0000 		sts ep_in_pipe_data+2+1,r25
 5632               	.L139:
 5633               	.LVL330:
 5634               	.LBE1765:
 5635               	.LBE1764:
 5636               	.LBB1766:
 5637               	.LBB1767:
 5638               	.LBB1768:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 5639               		.loc 2 80 0
 5640 16c0 6FB7      		in r22,__SREG__
 5641               	.LVL331:
 5642               	.LBB1769:
 5643               	.LBB1770:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 5644               		.loc 3 50 0
 5645               	/* #APP */
 5646               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 5647 16c2 F894      		cli
 5648               	 ;  0 "" 2
 5649               	.LVL332:
 5650               	/* #NOAPP */
 5651               	.LBE1770:
 5652               	.LBE1769:
 5653               	.LBB1771:
 5654               	.LBB1772:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 5655               		.loc 5 220 0
 5656 16c4 8091 0000 		lds r24,endpoints+24
 5657 16c8 8670      		andi r24,lo8(6)
 5658               	.LBE1772:
 5659               	.LBE1771:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 5660               		.loc 2 82 0
 5661 16ca 01F0      		breq .L140
 5662               	.LBB1773:
 5663               	.LBB1774:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 5664               		.loc 4 51 0
 5665 16cc 4091 0000 		lds r20,ep_in_pipe_data+4
 5666               	.LBE1774:
 5667               	.LBE1773:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 5668               		.loc 2 83 0
 5669 16d0 1416      		cp __zero_reg__,r20
 5670 16d2 04F0      		brlt .+2
 5671 16d4 00C0      		rjmp .L141
 5672               	.LBB1775:
 5673               	.LBB1776:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5674               		.loc 4 62 0
 5675 16d6 8091 0000 		lds r24,ep_in_pipe_data
 5676 16da 9091 0000 		lds r25,ep_in_pipe_data+1
 5677               	.LVL333:
 5678               	.LBE1776:
 5679               	.LBE1775:
 5680               	.LBB1777:
 5681               	.LBB1778:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5682               		.loc 2 68 0
 5683 16de 2091 0000 		lds r18,ep_in_data
 5684               	.LVL334:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5685               		.loc 2 69 0
 5686 16e2 31E0      		ldi r19,lo8(1)
 5687 16e4 2130      		cpi r18,lo8(1)
 5688 16e6 01F4      		brne .L142
 5689 16e8 30E0      		ldi r19,lo8(0)
 5690               	.L142:
 5691 16ea 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5692               		.loc 2 72 0
 5693 16ee 2223      		tst r18
 5694 16f0 01F4      		brne .L143
 5695               	.LVL335:
 5696               	.LBB1779:
 5697               	.LBB1780:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5698               		.loc 5 168 0
 5699 16f2 8093 0000 		sts endpoints+28,r24
 5700 16f6 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5701               		.loc 5 169 0
 5702 16fa 20E4      		ldi r18,lo8(64)
 5703 16fc 30E0      		ldi r19,hi8(64)
 5704 16fe 2093 0000 		sts endpoints+26,r18
 5705 1702 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5706               		.loc 5 174 0
 5707 1706 E0E0      		ldi r30,lo8(endpoints+24)
 5708 1708 F0E0      		ldi r31,hi8(endpoints+24)
 5709               	.LVL336:
 5710               	/* #APP */
 5711               	 ;  174 "usb/usb.h" 1
 5712 170a 02E2      		ldi r16, 34
 5713 170c 0693      		.dc.w 0x9306
 5714               		
 5715               	 ;  0 "" 2
 5716               	.LVL337:
 5717               	/* #NOAPP */
 5718               	.L144:
 5719               	.LBE1780:
 5720               	.LBE1779:
 5721               	.LBE1778:
 5722               	.LBE1777:
 5723               	.LBB1784:
 5724               	.LBB1785:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 5725               		.loc 4 72 0
 5726 170e 4150      		subi r20,lo8(-(-1))
 5727 1710 4093 0000 		sts ep_in_pipe_data+4,r20
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 5728               		.loc 4 73 0
 5729 1714 805C      		subi r24,lo8(-(64))
 5730 1716 9F4F      		sbci r25,hi8(-(64))
 5731 1718 8093 0000 		sts ep_in_pipe_data,r24
 5732 171c 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 5733               		.loc 4 75 0
 5734 1720 A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 5735 1722 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 5736 1724 9A07      		cpc r25,r26
 5737 1726 01F0      		breq .L224
 5738               	.LVL338:
 5739               	.L140:
 5740               	.LBE1785:
 5741               	.LBE1784:
 5742               	.LBB1787:
 5743               	.LBB1788:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5744               		.loc 3 70 0
 5745 1728 6FBF      		out __SREG__,r22
 5746               		.loc 3 71 0
 5747               	.LVL339:
 5748               	.LBE1788:
 5749               	.LBE1787:
 5750               	.LBE1768:
 5751               	.LBE1767:
 5752               	.LBE1766:
 5753               	.LBB1810:
 5754               	.LBB1811:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5755               		.loc 3 70 0
 5756 172a 7FBF      		out __SREG__,r23
 5757               		.loc 3 71 0
 5758 172c 00C0      		rjmp .L138
 5759               	.LVL340:
 5760               	.L143:
 5761               	.LBE1811:
 5762               	.LBE1810:
 5763               	.LBB1812:
 5764               	.LBB1808:
 5765               	.LBB1806:
 5766               	.LBB1789:
 5767               	.LBB1783:
 5768               	.LBB1781:
 5769               	.LBB1782:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5770               		.loc 5 168 0
 5771 172e 8093 0000 		sts endpoints+20,r24
 5772 1732 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5773               		.loc 5 169 0
 5774 1736 20E4      		ldi r18,lo8(64)
 5775 1738 30E0      		ldi r19,hi8(64)
 5776               	.LVL341:
 5777 173a 2093 0000 		sts endpoints+18,r18
 5778 173e 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5779               		.loc 5 176 0
 5780 1742 E0E0      		ldi r30,lo8(endpoints+24)
 5781 1744 F0E0      		ldi r31,hi8(endpoints+24)
 5782               	/* #APP */
 5783               	 ;  176 "usb/usb.h" 1
 5784 1746 04E1      		ldi r16, 20
 5785 1748 0693      		.dc.w 0x9306
 5786               		
 5787               	 ;  0 "" 2
 5788               	/* #NOAPP */
 5789 174a 00C0      		rjmp .L144
 5790               	.LVL342:
 5791               	.L141:
 5792               	.LBE1782:
 5793               	.LBE1781:
 5794               	.LBE1783:
 5795               	.LBE1789:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 5796               		.loc 2 87 0
 5797 174c 8091 0000 		lds r24,ep_in_data+1
 5798 1750 8130      		cpi r24,lo8(1)
 5799 1752 01F0      		breq .L225
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5800               		.loc 2 91 0
 5801 1754 8230      		cpi r24,lo8(2)
 5802 1756 01F4      		brne .L140
 5803               	.LVL343:
 5804               	.LBB1790:
 5805               	.LBB1791:
 5806               	.LBB1792:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 5807               		.loc 5 228 0
 5808 1758 8091 0000 		lds r24,endpoints+24
 5809 175c 8670      		andi r24,lo8(6)
 5810               	.LBE1792:
 5811               	.LBE1791:
 5812               	.LBE1790:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5813               		.loc 2 91 0
 5814 175e 8630      		cpi r24,lo8(6)
 5815 1760 01F4      		brne .L140
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 5816               		.loc 2 92 0
 5817 1762 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 5818               		.loc 2 93 0
 5819 1766 1092 0000 		sts ep_in_data+2,__zero_reg__
 5820 176a 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 5821               	.LBB1793:
 5822               	.LBB1794:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 5823               		.loc 4 90 0
 5824 176e 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 5825               		.loc 4 91 0
 5826 1772 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5827 1774 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5828 1776 8093 0000 		sts ep_in_pipe_data+2,r24
 5829 177a 9093 0000 		sts ep_in_pipe_data+2+1,r25
 5830 177e 8093 0000 		sts ep_in_pipe_data,r24
 5831 1782 9093 0000 		sts ep_in_pipe_data+1,r25
 5832               	.LVL344:
 5833 1786 00C0      		rjmp .L140
 5834               	.LVL345:
 5835               	.L224:
 5836               	.LBE1794:
 5837               	.LBE1793:
 5838               	.LBB1795:
 5839               	.LBB1786:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 5840               		.loc 4 76 0
 5841 1788 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5842 178a 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5843 178c 8093 0000 		sts ep_in_pipe_data,r24
 5844 1790 9093 0000 		sts ep_in_pipe_data+1,r25
 5845 1794 00C0      		rjmp .L140
 5846               	.LVL346:
 5847               	.L225:
 5848               	.LBE1786:
 5849               	.LBE1795:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 5850               		.loc 2 88 0
 5851 1796 82E0      		ldi r24,lo8(2)
 5852 1798 8093 0000 		sts ep_in_data+1,r24
 5853               	.LBB1796:
 5854               	.LBB1797:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5855               		.loc 4 62 0
 5856 179c 4091 0000 		lds r20,ep_in_pipe_data
 5857 17a0 5091 0000 		lds r21,ep_in_pipe_data+1
 5858               	.LBE1797:
 5859               	.LBE1796:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 5860               		.loc 2 90 0
 5861 17a4 8091 0000 		lds r24,ep_in_data+2
 5862 17a8 9091 0000 		lds r25,ep_in_data+2+1
 5863               	.LVL347:
 5864               	.LBB1798:
 5865               	.LBB1799:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5866               		.loc 2 68 0
 5867 17ac 2091 0000 		lds r18,ep_in_data
 5868               	.LVL348:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5869               		.loc 2 69 0
 5870 17b0 31E0      		ldi r19,lo8(1)
 5871 17b2 2130      		cpi r18,lo8(1)
 5872 17b4 01F4      		brne .L147
 5873 17b6 30E0      		ldi r19,lo8(0)
 5874               	.L147:
 5875 17b8 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5876               		.loc 2 72 0
 5877 17bc 2223      		tst r18
 5878 17be 01F4      		brne .L148
 5879               	.LVL349:
 5880               	.LBB1800:
 5881               	.LBB1801:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5882               		.loc 5 168 0
 5883 17c0 4093 0000 		sts endpoints+28,r20
 5884 17c4 5093 0000 		sts endpoints+28+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5885               		.loc 5 169 0
 5886 17c8 8093 0000 		sts endpoints+26,r24
 5887 17cc 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5888               		.loc 5 174 0
 5889 17d0 E0E0      		ldi r30,lo8(endpoints+24)
 5890 17d2 F0E0      		ldi r31,hi8(endpoints+24)
 5891               	.LVL350:
 5892               	/* #APP */
 5893               	 ;  174 "usb/usb.h" 1
 5894 17d4 02E2      		ldi r16, 34
 5895 17d6 0693      		.dc.w 0x9306
 5896               		
 5897               	 ;  0 "" 2
 5898               	/* #NOAPP */
 5899 17d8 00C0      		rjmp .L140
 5900               	.LVL351:
 5901               	.L173:
 5902               	.LBE1801:
 5903               	.LBE1800:
 5904               	.LBE1799:
 5905               	.LBE1798:
 5906               	.LBE1806:
 5907               	.LBE1808:
 5908               	.LBE1812:
 5909               	.LBE1761:
 5910               	.LBE1760:
 5911               	.LBE1759:
 5912               	.LBE1758:
 5913               	.LBE1819:
 5914               	.LBE1927:
 5915               	.LBE1931:
 5916               	.LBB1932:
 5917               	.LBB1462:
 5918               	.LBB1459:
 5919               	.LBB1431:
 5920               	.LBB1428:
 5921               	.LBB1425:
 5922               	.LBB1422:
 5923               	.LBB1419:
 5924               	.LBB1418:
 5925               	.LBB1416:
 5926               	.LBB1417:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5927               		.loc 5 168 0
 5928 17da 262F      		mov r18,r22
 5929               	.LVL352:
 5930 17dc 342F      		mov r19,r20
 5931 17de 2093 0000 		sts endpoints+20,r18
 5932 17e2 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5933               		.loc 5 169 0
 5934 17e6 8093 0000 		sts endpoints+18,r24
 5935 17ea 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5936               		.loc 5 176 0
 5937 17ee E0E0      		ldi r30,lo8(endpoints+24)
 5938 17f0 F0E0      		ldi r31,hi8(endpoints+24)
 5939               	/* #APP */
 5940               	 ;  176 "usb/usb.h" 1
 5941 17f2 04E1      		ldi r16, 20
 5942 17f4 0693      		.dc.w 0x9306
 5943               		
 5944               	 ;  0 "" 2
 5945               	/* #NOAPP */
 5946 17f6 00C0      		rjmp .L165
 5947               	.LVL353:
 5948               	.L118:
 5949               	.LBE1417:
 5950               	.LBE1416:
 5951               	.LBE1418:
 5952               	.LBE1419:
 5953               	.LBE1422:
 5954               	.LBE1425:
 5955               	.LBE1428:
 5956               	.LBE1431:
 5957               	.LBE1459:
 5958               	.LBE1462:
 5959               	.LBE1932:
 5960               	.LBB1933:
 5961               	.LBB1928:
 5962               	.LBB1643:
 5963               	.LBB1640:
 5964               	.LBB1639:
 5965               	.LBB1638:
 5966               	.LBB1637:
 5967               	.LBB1636:
 5968               	.LBB1632:
 5969               	.LBB1630:
 5970               	.LBB1628:
 5971               	.LBB1627:
 5972               	.LBB1625:
 5973               	.LBB1626:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5974               		.loc 5 168 0
 5975 17f8 352F      		mov r19,r21
 5976               	.LVL354:
 5977 17fa 2093 0000 		sts endpoints+20,r18
 5978 17fe 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5979               		.loc 5 169 0
 5980 1802 8093 0000 		sts endpoints+18,r24
 5981 1806 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5982               		.loc 5 176 0
 5983 180a E0E0      		ldi r30,lo8(endpoints+24)
 5984 180c F0E0      		ldi r31,hi8(endpoints+24)
 5985               	/* #APP */
 5986               	 ;  176 "usb/usb.h" 1
 5987 180e 04E1      		ldi r16, 20
 5988 1810 0693      		.dc.w 0x9306
 5989               		
 5990               	 ;  0 "" 2
 5991               	/* #NOAPP */
 5992 1812 00C0      		rjmp .L110
 5993               	.LVL355:
 5994               	.L148:
 5995               	.LBE1626:
 5996               	.LBE1625:
 5997               	.LBE1627:
 5998               	.LBE1628:
 5999               	.LBE1630:
 6000               	.LBE1632:
 6001               	.LBE1636:
 6002               	.LBE1637:
 6003               	.LBE1638:
 6004               	.LBE1639:
 6005               	.LBE1640:
 6006               	.LBE1643:
 6007               	.LBE1928:
 6008               	.LBB1929:
 6009               	.LBB1820:
 6010               	.LBB1817:
 6011               	.LBB1816:
 6012               	.LBB1815:
 6013               	.LBB1814:
 6014               	.LBB1813:
 6015               	.LBB1809:
 6016               	.LBB1807:
 6017               	.LBB1805:
 6018               	.LBB1804:
 6019               	.LBB1802:
 6020               	.LBB1803:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 6021               		.loc 5 168 0
 6022 1814 4093 0000 		sts endpoints+20,r20
 6023 1818 5093 0000 		sts endpoints+20+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 6024               		.loc 5 169 0
 6025 181c 8093 0000 		sts endpoints+18,r24
 6026 1820 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 6027               		.loc 5 176 0
 6028 1824 E0E0      		ldi r30,lo8(endpoints+24)
 6029 1826 F0E0      		ldi r31,hi8(endpoints+24)
 6030               	/* #APP */
 6031               	 ;  176 "usb/usb.h" 1
 6032 1828 04E1      		ldi r16, 20
 6033 182a 0693      		.dc.w 0x9306
 6034               		
 6035               	 ;  0 "" 2
 6036               	/* #NOAPP */
 6037 182c 00C0      		rjmp .L140
 6038               	.LBE1803:
 6039               	.LBE1802:
 6040               	.LBE1804:
 6041               	.LBE1805:
 6042               	.LBE1807:
 6043               	.LBE1809:
 6044               	.LBE1813:
 6045               	.LBE1814:
 6046               	.LBE1815:
 6047               	.LBE1816:
 6048               	.LBE1817:
 6049               	.LBE1820:
 6050               	.LBE1929:
 6051               	.LBE1933:
 6052               		.cfi_endproc
 6053               	.LFE65:
 6055               	.global	uart_putchar
 6057               	uart_putchar:
 6058               	.LFB66:
 6059               		.file 9 "uart/uart.h"
   1:uart/uart.h   **** #include "Framework.h"
   2:uart/uart.h   **** #include <stdio.h>
   3:uart/uart.h   **** #include <stdlib.h>
   4:uart/uart.h   **** #include <string.h>
   5:uart/uart.h   **** 
   6:uart/uart.h   **** uint8_t debug = 0;
   7:uart/uart.h   **** 
   8:uart/uart.h   **** int uart_putchar(char c, USART_t* USART); 
   9:uart/uart.h   **** char uart_getchar(USART_t* USART);
  10:uart/uart.h   **** void send_uart(char*, USART_t* USART);
  11:uart/uart.h   **** 
  12:uart/uart.h   **** // code for communicating with the gprs module via uart
  13:uart/uart.h   **** int uart_putchar (char c, USART_t* USART) { 
 6060               		.loc 9 13 0
 6061               		.cfi_startproc
 6062               	.LVL356:
 6063               	/* prologue: function */
 6064               	/* frame size = 0 */
 6065               	/* stack size = 0 */
 6066               	.L__stack_usage = 0
 6067 182e FB01      		movw r30,r22
  14:uart/uart.h   ****     if (c == '\n') 
 6068               		.loc 9 14 0
 6069 1830 8A30      		cpi r24,lo8(10)
 6070 1832 01F0      		breq .L231
 6071               	.L230:
  15:uart/uart.h   ****         uart_putchar('\r', USART); 
  16:uart/uart.h   **** 
  17:uart/uart.h   ****     // Wait for the transmit buffer to be empty 
  18:uart/uart.h   ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 6072               		.loc 9 18 0 discriminator 1
 6073 1834 9181      		ldd r25,Z+1
 6074 1836 95FF      		sbrs r25,5
 6075 1838 00C0      		rjmp .L230
  19:uart/uart.h   **** 
  20:uart/uart.h   ****     // Put our character into the transmit buffer 
  21:uart/uart.h   ****     USART->DATA = c; 
 6076               		.loc 9 21 0
 6077 183a 8083      		st Z,r24
  22:uart/uart.h   **** 
  23:uart/uart.h   ****     return 0; 
  24:uart/uart.h   **** } 
 6078               		.loc 9 24 0
 6079 183c 80E0      		ldi r24,lo8(0)
 6080 183e 90E0      		ldi r25,hi8(0)
 6081               	.LVL357:
 6082               	/* epilogue start */
 6083 1840 0895      		ret
 6084               	.LVL358:
 6085               	.L231:
 6086               	.LBB1950:
 6087               	.LBB1951:
  18:uart/uart.h   ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 6088               		.loc 9 18 0
 6089 1842 9181      		ldd r25,Z+1
 6090 1844 95FF      		sbrs r25,5
 6091 1846 00C0      		rjmp .L231
  21:uart/uart.h   ****     USART->DATA = c; 
 6092               		.loc 9 21 0
 6093 1848 9DE0      		ldi r25,lo8(13)
 6094 184a 9083      		st Z,r25
 6095 184c 00C0      		rjmp .L230
 6096               	.LBE1951:
 6097               	.LBE1950:
 6098               		.cfi_endproc
 6099               	.LFE66:
 6101               	.global	uart_getchar
 6103               	uart_getchar:
 6104               	.LFB67:
  25:uart/uart.h   **** 
  26:uart/uart.h   **** // code for communicating with the gprs module via uart
  27:uart/uart.h   **** char uart_getchar (USART_t* USART) { 
 6105               		.loc 9 27 0
 6106               		.cfi_startproc
 6107               	.LVL359:
 6108               	/* prologue: function */
 6109               	/* frame size = 0 */
 6110               	/* stack size = 0 */
 6111               	.L__stack_usage = 0
 6112 184e FC01      		movw r30,r24
 6113               	.LVL360:
 6114               	.L235:
  28:uart/uart.h   **** 
  29:uart/uart.h   ****     // Wait for the receive buffer to be empty 
  30:uart/uart.h   ****     while ( !( USART->STATUS & USART_RXCIF_bm) ); 
 6115               		.loc 9 30 0 discriminator 1
 6116 1850 8181      		ldd r24,Z+1
 6117 1852 87FF      		sbrs r24,7
 6118 1854 00C0      		rjmp .L235
  31:uart/uart.h   **** 
  32:uart/uart.h   ****     // Receive char from receive buffer 
  33:uart/uart.h   ****     return USART->DATA; 
 6119               		.loc 9 33 0
 6120 1856 8081      		ld r24,Z
 6121               	/* epilogue start */
  34:uart/uart.h   **** } 
 6122               		.loc 9 34 0
 6123 1858 0895      		ret
 6124               		.cfi_endproc
 6125               	.LFE67:
 6127               	.global	send_uart
 6129               	send_uart:
 6130               	.LFB68:
  35:uart/uart.h   **** 
  36:uart/uart.h   **** void send_uart(char* text, USART_t* USART) {
 6131               		.loc 9 36 0
 6132               		.cfi_startproc
 6133               	.LVL361:
 6134 185a 4F92      		push r4
 6135               	.LCFI94:
 6136               		.cfi_def_cfa_offset 3
 6137               		.cfi_offset 4, -2
 6138 185c 5F92      		push r5
 6139               	.LCFI95:
 6140               		.cfi_def_cfa_offset 4
 6141               		.cfi_offset 5, -3
 6142 185e 6F92      		push r6
 6143               	.LCFI96:
 6144               		.cfi_def_cfa_offset 5
 6145               		.cfi_offset 6, -4
 6146 1860 7F92      		push r7
 6147               	.LCFI97:
 6148               		.cfi_def_cfa_offset 6
 6149               		.cfi_offset 7, -5
 6150 1862 8F92      		push r8
 6151               	.LCFI98:
 6152               		.cfi_def_cfa_offset 7
 6153               		.cfi_offset 8, -6
 6154 1864 9F92      		push r9
 6155               	.LCFI99:
 6156               		.cfi_def_cfa_offset 8
 6157               		.cfi_offset 9, -7
 6158 1866 AF92      		push r10
 6159               	.LCFI100:
 6160               		.cfi_def_cfa_offset 9
 6161               		.cfi_offset 10, -8
 6162 1868 BF92      		push r11
 6163               	.LCFI101:
 6164               		.cfi_def_cfa_offset 10
 6165               		.cfi_offset 11, -9
 6166 186a CF92      		push r12
 6167               	.LCFI102:
 6168               		.cfi_def_cfa_offset 11
 6169               		.cfi_offset 12, -10
 6170 186c DF92      		push r13
 6171               	.LCFI103:
 6172               		.cfi_def_cfa_offset 12
 6173               		.cfi_offset 13, -11
 6174 186e EF92      		push r14
 6175               	.LCFI104:
 6176               		.cfi_def_cfa_offset 13
 6177               		.cfi_offset 14, -12
 6178 1870 FF92      		push r15
 6179               	.LCFI105:
 6180               		.cfi_def_cfa_offset 14
 6181               		.cfi_offset 15, -13
 6182 1872 0F93      		push r16
 6183               	.LCFI106:
 6184               		.cfi_def_cfa_offset 15
 6185               		.cfi_offset 16, -14
 6186 1874 1F93      		push r17
 6187               	.LCFI107:
 6188               		.cfi_def_cfa_offset 16
 6189               		.cfi_offset 17, -15
 6190 1876 CF93      		push r28
 6191               	.LCFI108:
 6192               		.cfi_def_cfa_offset 17
 6193               		.cfi_offset 28, -16
 6194 1878 DF93      		push r29
 6195               	.LCFI109:
 6196               		.cfi_def_cfa_offset 18
 6197               		.cfi_offset 29, -17
 6198               	/* prologue: function */
 6199               	/* frame size = 0 */
 6200               	/* stack size = 16 */
 6201               	.L__stack_usage = 16
 6202 187a EC01      		movw r28,r24
 6203 187c 7B01      		movw r14,r22
 6204               	.LVL362:
 6205               	.LBB2123:
 6206               	.LBB2124:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 6207               		.loc 7 15 0
 6208 187e DC01      		movw r26,r24
 6209 1880 0D90      		ld __tmp_reg__,X+
 6210 1882 0020      		tst __tmp_reg__
 6211 1884 01F4      		brne .-6
 6212 1886 CD01      		movw r24,r26
 6213               	.LVL363:
 6214 1888 8C1B      		sub r24,r28
 6215 188a 9D0B      		sbc r25,r29
 6216 188c 0196      		adiw r24,1
 6217 188e 0E94 0000 		call malloc
 6218               	.LVL364:
 6219 1892 A92E      		mov r10,r25
 6220 1894 C82E      		mov r12,r24
 6221 1896 D92E      		mov r13,r25
 6222               	.LVL365:
  17:concat/concat.h ****     strcpy(result, s1);
 6223               		.loc 7 17 0
 6224 1898 C601      		movw r24,r12
 6225 189a BE01      		movw r22,r28
 6226 189c 0E94 0000 		call strcpy
  18:concat/concat.h ****     strcat(result, s2);
 6227               		.loc 7 18 0
 6228 18a0 AC2D      		mov r26,r12
 6229 18a2 BA2D      		mov r27,r10
 6230 18a4 FD01      		movw r30,r26
 6231 18a6 0190      		ld __tmp_reg__,Z+
 6232 18a8 0020      		tst __tmp_reg__
 6233 18aa 01F4      		brne .-6
 6234 18ac 3197      		sbiw r30,1
 6235 18ae EA1B      		sub r30,r26
 6236 18b0 FB0B      		sbc r31,r27
 6237 18b2 EC0D      		add r30,r12
 6238 18b4 FD1D      		adc r31,r13
 6239 18b6 8DE0      		ldi r24,lo8(13)
 6240 18b8 90E0      		ldi r25,hi8(13)
 6241 18ba 8083      		st Z,r24
 6242 18bc 9183      		std Z+1,r25
 6243               	.LBE2124:
 6244               	.LBE2123:
 6245               	.LBB2125:
 6246               	.LBB2126:
 6247               	.LBB2127:
 6248               	.LBB2128:
 6249               	.LBB2129:
 6250               	.LBB2130:
 6251               	.LBB2131:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 6252               		.loc 4 57 0
 6253 18be D6E0      		ldi r29,lo8(6)
 6254               	.LBE2131:
 6255               	.LBE2130:
 6256               	.LBE2129:
 6257               	.LBE2128:
 6258               	.LBE2127:
 6259               	.LBB2142:
 6260               	.LBB2143:
 6261               	.LBB2144:
 6262               	.LBB2145:
 6263               	.LBB2146:
 6264               	.LBB2147:
 6265               	.LBB2148:
 6266               	.LBB2149:
 6267               	.LBB2150:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6268               		.loc 5 220 0
 6269 18c0 50E0      		ldi r21,lo8(endpoints+24)
 6270 18c2 652E      		mov r6,r21
 6271 18c4 50E0      		ldi r21,hi8(endpoints+24)
 6272 18c6 752E      		mov r7,r21
 6273               	.LBE2150:
 6274               	.LBE2149:
 6275               	.LBB2152:
 6276               	.LBB2153:
 6277               		.loc 4 91 0
 6278 18c8 C0E0      		ldi r28,lo8(ep_in_pipe_buffer)
 6279 18ca 4C2E      		mov r4,r28
 6280 18cc C0E0      		ldi r28,hi8(ep_in_pipe_buffer)
 6281 18ce 5C2E      		mov r5,r28
 6282               	.LVL366:
 6283               	.LBE2153:
 6284               	.LBE2152:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 6285               		.loc 2 88 0
 6286 18d0 12E0      		ldi r17,lo8(2)
 6287               	.LBB2156:
 6288               	.LBB2157:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 6289               		.loc 2 69 0
 6290 18d2 01E0      		ldi r16,lo8(1)
 6291 18d4 A02E      		mov r10,r16
 6292 18d6 B12C      		mov r11,__zero_reg__
 6293               	.LBE2157:
 6294               	.LBE2156:
 6295               	.LBB2167:
 6296               	.LBB2168:
 6297               	.LBB2169:
 6298               	.LBB2170:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 6299               		.loc 5 169 0
 6300 18d8 20E4      		ldi r18,lo8(64)
 6301 18da 822E      		mov r8,r18
 6302 18dc 912C      		mov r9,__zero_reg__
 6303               	.LVL367:
 6304               	.L281:
 6305               	.LBE2170:
 6306               	.LBE2169:
 6307               	.LBE2168:
 6308               	.LBE2167:
 6309               	.LBE2148:
 6310               	.LBE2147:
 6311               	.LBE2146:
 6312               	.LBE2145:
 6313               	.LBE2144:
 6314               	.LBE2143:
 6315               	.LBE2142:
 6316               	.LBE2126:
 6317               	.LBE2125:
  37:uart/uart.h   ****   char c;
  38:uart/uart.h   ****   char* new_text = concat(text, "\r");
  39:uart/uart.h   ****   while (*new_text != '\0') {  
 6318               		.loc 9 39 0 discriminator 1
 6319 18de D601      		movw r26,r12
 6320 18e0 CD91      		ld r28,X+
 6321 18e2 6D01      		movw r12,r26
 6322 18e4 CC23      		tst r28
 6323 18e6 01F4      		brne .+2
 6324 18e8 00C0      		rjmp .L283
 6325               	.L256:
 6326               	.LVL368:
 6327               	.LBB2232:
 6328               	.LBB2233:
  14:uart/uart.h   ****     if (c == '\n') 
 6329               		.loc 9 14 0
 6330 18ea CA30      		cpi r28,lo8(10)
 6331 18ec 01F4      		brne .+2
 6332 18ee 00C0      		rjmp .L284
 6333               	.L275:
  18:uart/uart.h   ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 6334               		.loc 9 18 0
 6335 18f0 F701      		movw r30,r14
 6336 18f2 8181      		ldd r24,Z+1
 6337 18f4 85FF      		sbrs r24,5
 6338 18f6 00C0      		rjmp .L275
  21:uart/uart.h   ****     USART->DATA = c; 
 6339               		.loc 9 21 0
 6340 18f8 C083      		st Z,r28
 6341               	.LBE2233:
 6342               	.LBE2232:
  40:uart/uart.h   ****     uart_putchar(*new_text, USART);
  41:uart/uart.h   ****     new_text++;
  42:uart/uart.h   **** 
  43:uart/uart.h   ****     if (debug == 1) {
 6343               		.loc 9 43 0
 6344 18fa 8091 0000 		lds r24,debug
 6345 18fe 8130      		cpi r24,lo8(1)
 6346 1900 01F4      		brne .L281
 6347               	.L274:
 6348               	.LBB2235:
 6349               	.LBB2236:
  30:uart/uart.h   ****     while ( !( USART->STATUS & USART_RXCIF_bm) ); 
 6350               		.loc 9 30 0
 6351 1902 D701      		movw r26,r14
 6352 1904 1196      		adiw r26,1
 6353 1906 8C91      		ld r24,X
 6354 1908 1197      		sbiw r26,1
 6355 190a 87FF      		sbrs r24,7
 6356 190c 00C0      		rjmp .L274
  33:uart/uart.h   ****     return USART->DATA; 
 6357               		.loc 9 33 0
 6358 190e 2C91      		ld r18,X
 6359               	.LVL369:
 6360               	.L245:
 6361               	.LBE2236:
 6362               	.LBE2235:
 6363               	.LBB2237:
 6364               	.LBB2229:
 6365               	.LBB2222:
 6366               	.LBB2140:
 6367               	.LBB2138:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6368               		.loc 2 123 0
 6369 1910 9FB7      		in r25,__SREG__
 6370               	.LVL370:
 6371               	.LBB2133:
 6372               	.LBB2134:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6373               		.loc 3 50 0
 6374               	/* #APP */
 6375               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6376 1912 F894      		cli
 6377               	 ;  0 "" 2
 6378               	.LVL371:
 6379               	/* #NOAPP */
 6380               	.LBE2134:
 6381               	.LBE2133:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 6382               		.loc 2 124 0
 6383 1914 8091 0000 		lds r24,ep_in_data+1
 6384 1918 8823      		tst r24
 6385 191a 01F4      		brne .+2
 6386 191c 00C0      		rjmp .L285
 6387               	.L271:
 125:usb/usb_pipe.h **** 			r = false;
 6388               		.loc 2 125 0
 6389 191e 80E0      		ldi r24,lo8(0)
 6390               	.L243:
 6391               	.LBB2135:
 6392               	.LBB2136:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6393               		.loc 3 70 0
 6394 1920 9FBF      		out __SREG__,r25
 6395               		.loc 3 71 0
 6396               	.LBE2136:
 6397               	.LBE2135:
 6398               	.LBE2138:
 6399               	.LBE2140:
 6400               	.LBE2222:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 6401               		.loc 1 20 0
 6402 1922 8823      		tst r24
 6403 1924 01F0      		breq .L245
 6404               	.LVL372:
 6405               	.LBB2223:
 6406               	.LBB2224:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 6407               		.loc 2 175 0
 6408 1926 8091 0000 		lds r24,ep_in_data+2
 6409 192a 9091 0000 		lds r25,ep_in_data+2+1
 6410 192e E091 0000 		lds r30,ep_in_pipe_data+2
 6411 1932 F091 0000 		lds r31,ep_in_pipe_data+2+1
 6412 1936 E80F      		add r30,r24
 6413 1938 F91F      		adc r31,r25
 6414 193a 2083      		st Z,r18
 6415 193c 0196      		adiw r24,1
 6416 193e 8093 0000 		sts ep_in_data+2,r24
 6417 1942 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 6418               		.loc 2 176 0
 6419 1946 8034      		cpi r24,64
 6420 1948 9105      		cpc r25,__zero_reg__
 6421 194a 01F4      		brne .L281
 6422               	.LBE2224:
 6423               	.LBE2223:
 6424               	.LBB2225:
 6425               	.LBB2219:
 6426               	.LBB2216:
 6427               	.LBB2213:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 6428               		.loc 2 177 0
 6429 194c AFB7      		in r26,__SREG__
 6430               	.LVL373:
 6431               	.LBB2204:
 6432               	.LBB2205:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6433               		.loc 3 50 0
 6434               	/* #APP */
 6435               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6436 194e F894      		cli
 6437               	 ;  0 "" 2
 6438               	.LVL374:
 6439               	/* #NOAPP */
 6440               	.LBE2205:
 6441               	.LBE2204:
 6442               		.loc 2 178 0
 6443 1950 1092 0000 		sts ep_in_data+2,__zero_reg__
 6444 1954 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 6445               	.LVL375:
 6446               	.LBB2206:
 6447               	.LBB2207:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 6448               		.loc 4 81 0
 6449 1958 8091 0000 		lds r24,ep_in_pipe_data+4
 6450 195c 8F5F      		subi r24,lo8(-(1))
 6451 195e 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 6452               		.loc 4 82 0
 6453 1962 8091 0000 		lds r24,ep_in_pipe_data+2
 6454 1966 9091 0000 		lds r25,ep_in_pipe_data+2+1
 6455 196a 805C      		subi r24,lo8(-(64))
 6456 196c 9F4F      		sbci r25,hi8(-(64))
 6457 196e 8093 0000 		sts ep_in_pipe_data+2,r24
 6458 1972 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 6459               		.loc 4 84 0
 6460 1976 B0E0      		ldi r27,hi8(ep_in_pipe_buffer+512)
 6461 1978 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 6462 197a 9B07      		cpc r25,r27
 6463 197c 01F4      		brne .L246
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 6464               		.loc 4 85 0
 6465 197e 4092 0000 		sts ep_in_pipe_data+2,r4
 6466 1982 5092 0000 		sts ep_in_pipe_data+2+1,r5
 6467               	.L246:
 6468               	.LVL376:
 6469               	.LBE2207:
 6470               	.LBE2206:
 6471               	.LBB2208:
 6472               	.LBB2201:
 6473               	.LBB2198:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6474               		.loc 2 80 0
 6475 1986 5FB7      		in r21,__SREG__
 6476               	.LVL377:
 6477               	.LBB2177:
 6478               	.LBB2178:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6479               		.loc 3 50 0
 6480               	/* #APP */
 6481               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6482 1988 F894      		cli
 6483               	 ;  0 "" 2
 6484               	.LVL378:
 6485               	/* #NOAPP */
 6486               	.LBE2178:
 6487               	.LBE2177:
 6488               	.LBB2179:
 6489               	.LBB2151:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6490               		.loc 5 220 0
 6491 198a 8091 0000 		lds r24,endpoints+24
 6492 198e 8670      		andi r24,lo8(6)
 6493               	.LBE2151:
 6494               	.LBE2179:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 6495               		.loc 2 82 0
 6496 1990 01F4      		brne .L286
 6497               	.LVL379:
 6498               	.L247:
 6499               	.LBB2180:
 6500               	.LBB2181:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6501               		.loc 3 70 0
 6502 1992 5FBF      		out __SREG__,r21
 6503               		.loc 3 71 0
 6504               	.LVL380:
 6505               	.LBE2181:
 6506               	.LBE2180:
 6507               	.LBE2198:
 6508               	.LBE2201:
 6509               	.LBE2208:
 6510               	.LBB2209:
 6511               	.LBB2210:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6512               		.loc 3 70 0
 6513 1994 AFBF      		out __SREG__,r26
 6514               		.loc 3 71 0
 6515               	.LBE2210:
 6516               	.LBE2209:
 6517               	.LBE2213:
 6518               	.LBE2216:
 6519               	.LBE2219:
 6520               	.LBE2225:
 6521               	.LBE2229:
 6522               	.LBE2237:
  39:uart/uart.h   ****   while (*new_text != '\0') {  
 6523               		.loc 9 39 0
 6524 1996 D601      		movw r26,r12
 6525               	.LVL381:
 6526 1998 CD91      		ld r28,X+
 6527               	.LVL382:
 6528 199a 6D01      		movw r12,r26
 6529 199c CC23      		tst r28
 6530 199e 01F0      		breq .+2
 6531 19a0 00C0      		rjmp .L256
 6532               	.LVL383:
 6533               	.L283:
  44:uart/uart.h   ****       c = uart_getchar(USART);
  45:uart/uart.h   ****       send_byte(c);
  46:uart/uart.h   ****     }
  47:uart/uart.h   ****   }
  48:uart/uart.h   ****   if (debug == 1) {
 6534               		.loc 9 48 0
 6535 19a2 8091 0000 		lds r24,debug
 6536 19a6 8130      		cpi r24,lo8(1)
 6537 19a8 01F4      		brne .+2
 6538 19aa 00C0      		rjmp .L287
 6539               	.L237:
 6540               	/* epilogue start */
  49:uart/uart.h   ****     break_and_flush();
  50:uart/uart.h   ****   }
  51:uart/uart.h   **** }
 6541               		.loc 9 51 0
 6542 19ac DF91      		pop r29
 6543 19ae CF91      		pop r28
 6544 19b0 1F91      		pop r17
 6545 19b2 0F91      		pop r16
 6546 19b4 FF90      		pop r15
 6547 19b6 EF90      		pop r14
 6548               	.LVL384:
 6549 19b8 DF90      		pop r13
 6550 19ba CF90      		pop r12
 6551 19bc BF90      		pop r11
 6552 19be AF90      		pop r10
 6553 19c0 9F90      		pop r9
 6554 19c2 8F90      		pop r8
 6555 19c4 7F90      		pop r7
 6556 19c6 6F90      		pop r6
 6557 19c8 5F90      		pop r5
 6558 19ca 4F90      		pop r4
 6559 19cc 0895      		ret
 6560               	.LVL385:
 6561               	.L285:
 6562               	.LBB2238:
 6563               	.LBB2230:
 6564               	.LBB2226:
 6565               	.LBB2141:
 6566               	.LBB2139:
 6567               	.LBB2137:
 6568               	.LBB2132:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 6569               		.loc 4 57 0
 6570 19ce 8091 0000 		lds r24,ep_in_pipe_data+4
 6571 19d2 3D2F      		mov r19,r29
 6572 19d4 381B      		sub r19,r24
 6573               	.LBE2132:
 6574               	.LBE2137:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 6575               		.loc 2 127 0
 6576 19d6 81E0      		ldi r24,lo8(1)
 6577 19d8 1316      		cp __zero_reg__,r19
 6578 19da 04F4      		brge .+2
 6579 19dc 00C0      		rjmp .L243
 6580 19de 00C0      		rjmp .L271
 6581               	.LVL386:
 6582               	.L286:
 6583               	.LBE2139:
 6584               	.LBE2141:
 6585               	.LBE2226:
 6586               	.LBB2227:
 6587               	.LBB2220:
 6588               	.LBB2217:
 6589               	.LBB2214:
 6590               	.LBB2211:
 6591               	.LBB2202:
 6592               	.LBB2199:
 6593               	.LBB2182:
 6594               	.LBB2183:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 6595               		.loc 4 51 0
 6596 19e0 4091 0000 		lds r20,ep_in_pipe_data+4
 6597               	.LBE2183:
 6598               	.LBE2182:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 6599               		.loc 2 83 0
 6600 19e4 1416      		cp __zero_reg__,r20
 6601 19e6 04F0      		brlt .+2
 6602 19e8 00C0      		rjmp .L248
 6603               	.LBB2184:
 6604               	.LBB2185:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 6605               		.loc 4 62 0
 6606 19ea 2091 0000 		lds r18,ep_in_pipe_data
 6607 19ee 3091 0000 		lds r19,ep_in_pipe_data+1
 6608               	.LVL387:
 6609               	.LBE2185:
 6610               	.LBE2184:
 6611               	.LBB2186:
 6612               	.LBB2175:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 6613               		.loc 2 68 0
 6614 19f2 6091 0000 		lds r22,ep_in_data
 6615               	.LVL388:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 6616               		.loc 2 69 0
 6617 19f6 862F      		mov r24,r22
 6618 19f8 90E0      		ldi r25,lo8(0)
 6619               	.LVL389:
 6620 19fa 71E0      		ldi r23,lo8(1)
 6621 19fc 8A15      		cp r24,r10
 6622 19fe 9B05      		cpc r25,r11
 6623 1a00 01F4      		brne .L249
 6624 1a02 70E0      		ldi r23,lo8(0)
 6625               	.L249:
 6626 1a04 7093 0000 		sts ep_in_data,r23
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 6627               		.loc 2 72 0
 6628 1a08 6623      		tst r22
 6629 1a0a 01F4      		brne .L250
 6630               	.LVL390:
 6631               	.LBB2172:
 6632               	.LBB2173:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 6633               		.loc 5 168 0
 6634 1a0c 2093 0000 		sts endpoints+28,r18
 6635 1a10 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 6636               		.loc 5 169 0
 6637 1a14 8092 0000 		sts endpoints+26,r8
 6638 1a18 9092 0000 		sts endpoints+26+1,r9
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 6639               		.loc 5 174 0
 6640 1a1c F301      		movw r30,r6
 6641               	.LVL391:
 6642               	/* #APP */
 6643               	 ;  174 "usb/usb.h" 1
 6644 1a1e 02E2      		ldi r16, 34
 6645 1a20 0693      		.dc.w 0x9306
 6646               		
 6647               	 ;  0 "" 2
 6648               	.LVL392:
 6649               	/* #NOAPP */
 6650               	.L251:
 6651               	.LBE2173:
 6652               	.LBE2172:
 6653               	.LBE2175:
 6654               	.LBE2186:
 6655               	.LBB2187:
 6656               	.LBB2188:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 6657               		.loc 4 72 0
 6658 1a22 4150      		subi r20,lo8(-(-1))
 6659 1a24 4093 0000 		sts ep_in_pipe_data+4,r20
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 6660               		.loc 4 73 0
 6661 1a28 C901      		movw r24,r18
 6662 1a2a 805C      		subi r24,lo8(-(64))
 6663 1a2c 9F4F      		sbci r25,hi8(-(64))
 6664 1a2e 8093 0000 		sts ep_in_pipe_data,r24
 6665 1a32 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 6666               		.loc 4 75 0
 6667 1a36 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 6668 1a38 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 6669 1a3a 9F07      		cpc r25,r31
 6670 1a3c 01F0      		breq .+2
 6671 1a3e 00C0      		rjmp .L247
 6672               	.LBE2188:
 6673               	.LBE2187:
 6674               	.LBB2189:
 6675               	.LBB2154:
 6676               		.loc 4 91 0
 6677 1a40 4092 0000 		sts ep_in_pipe_data,r4
 6678 1a44 5092 0000 		sts ep_in_pipe_data+1,r5
 6679               	.LVL393:
 6680 1a48 00C0      		rjmp .L247
 6681               	.LVL394:
 6682               	.L250:
 6683               	.LBE2154:
 6684               	.LBE2189:
 6685               	.LBB2190:
 6686               	.LBB2176:
 6687               	.LBB2174:
 6688               	.LBB2171:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 6689               		.loc 5 168 0
 6690 1a4a 2093 0000 		sts endpoints+20,r18
 6691 1a4e 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 6692               		.loc 5 169 0
 6693 1a52 8092 0000 		sts endpoints+18,r8
 6694 1a56 9092 0000 		sts endpoints+18+1,r9
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 6695               		.loc 5 176 0
 6696 1a5a F301      		movw r30,r6
 6697               	.LVL395:
 6698               	/* #APP */
 6699               	 ;  176 "usb/usb.h" 1
 6700 1a5c 04E1      		ldi r16, 20
 6701 1a5e 0693      		.dc.w 0x9306
 6702               		
 6703               	 ;  0 "" 2
 6704               	/* #NOAPP */
 6705 1a60 00C0      		rjmp .L251
 6706               	.LVL396:
 6707               	.L248:
 6708               	.LBE2171:
 6709               	.LBE2174:
 6710               	.LBE2176:
 6711               	.LBE2190:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 6712               		.loc 2 87 0
 6713 1a62 8091 0000 		lds r24,ep_in_data+1
 6714 1a66 8130      		cpi r24,lo8(1)
 6715 1a68 01F0      		breq .L288
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 6716               		.loc 2 91 0
 6717 1a6a 8230      		cpi r24,lo8(2)
 6718 1a6c 01F0      		breq .+2
 6719 1a6e 00C0      		rjmp .L247
 6720               	.LVL397:
 6721               	.LBB2191:
 6722               	.LBB2192:
 6723               	.LBB2193:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 6724               		.loc 5 228 0
 6725 1a70 8091 0000 		lds r24,endpoints+24
 6726 1a74 8670      		andi r24,lo8(6)
 6727               	.LBE2193:
 6728               	.LBE2192:
 6729               	.LBE2191:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 6730               		.loc 2 91 0
 6731 1a76 8630      		cpi r24,lo8(6)
 6732 1a78 01F0      		breq .+2
 6733 1a7a 00C0      		rjmp .L247
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 6734               		.loc 2 92 0
 6735 1a7c 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 6736               		.loc 2 93 0
 6737 1a80 1092 0000 		sts ep_in_data+2,__zero_reg__
 6738 1a84 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 6739               	.LBB2194:
 6740               	.LBB2155:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 6741               		.loc 4 90 0
 6742 1a88 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 6743               		.loc 4 91 0
 6744 1a8c 4092 0000 		sts ep_in_pipe_data+2,r4
 6745 1a90 5092 0000 		sts ep_in_pipe_data+2+1,r5
 6746 1a94 4092 0000 		sts ep_in_pipe_data,r4
 6747 1a98 5092 0000 		sts ep_in_pipe_data+1,r5
 6748               	.LVL398:
 6749 1a9c 00C0      		rjmp .L247
 6750               	.LVL399:
 6751               	.L284:
 6752               	.LBE2155:
 6753               	.LBE2194:
 6754               	.LBE2199:
 6755               	.LBE2202:
 6756               	.LBE2211:
 6757               	.LBE2214:
 6758               	.LBE2217:
 6759               	.LBE2220:
 6760               	.LBE2227:
 6761               	.LBE2230:
 6762               	.LBE2238:
 6763               	.LBB2239:
 6764               	.LBB2234:
  15:uart/uart.h   ****         uart_putchar('\r', USART); 
 6765               		.loc 9 15 0
 6766 1a9e 8DE0      		ldi r24,lo8(13)
 6767 1aa0 B701      		movw r22,r14
 6768 1aa2 0E94 0000 		call uart_putchar
 6769 1aa6 00C0      		rjmp .L275
 6770               	.LVL400:
 6771               	.L288:
 6772               	.LBE2234:
 6773               	.LBE2239:
 6774               	.LBB2240:
 6775               	.LBB2231:
 6776               	.LBB2228:
 6777               	.LBB2221:
 6778               	.LBB2218:
 6779               	.LBB2215:
 6780               	.LBB2212:
 6781               	.LBB2203:
 6782               	.LBB2200:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 6783               		.loc 2 88 0
 6784 1aa8 1093 0000 		sts ep_in_data+1,r17
 6785               	.LBB2195:
 6786               	.LBB2196:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 6787               		.loc 4 62 0
 6788 1aac 7091 0000 		lds r23,ep_in_pipe_data
 6789 1ab0 E091 0000 		lds r30,ep_in_pipe_data+1
 6790               	.LBE2196:
 6791               	.LBE2195:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 6792               		.loc 2 90 0
 6793 1ab4 2091 0000 		lds r18,ep_in_data+2
 6794 1ab8 3091 0000 		lds r19,ep_in_data+2+1
 6795               	.LVL401:
 6796               	.LBB2197:
 6797               	.LBB2166:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 6798               		.loc 2 68 0
 6799 1abc 6091 0000 		lds r22,ep_in_data
 6800               	.LVL402:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 6801               		.loc 2 69 0
 6802 1ac0 862F      		mov r24,r22
 6803 1ac2 90E0      		ldi r25,lo8(0)
 6804               	.LVL403:
 6805 1ac4 41E0      		ldi r20,lo8(1)
 6806 1ac6 8A15      		cp r24,r10
 6807 1ac8 9B05      		cpc r25,r11
 6808 1aca 01F0      		breq .L289
 6809 1acc 4093 0000 		sts ep_in_data,r20
 6810               	.LBB2158:
 6811               	.LBB2159:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 6812               		.loc 5 168 0
 6813 1ad0 872F      		mov r24,r23
 6814 1ad2 9E2F      		mov r25,r30
 6815               	.LBE2159:
 6816               	.LBE2158:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 6817               		.loc 2 72 0
 6818 1ad4 6623      		tst r22
 6819 1ad6 01F4      		brne .L255
 6820               	.L290:
 6821               	.LVL404:
 6822               	.LBB2162:
 6823               	.LBB2160:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 6824               		.loc 5 168 0
 6825 1ad8 8093 0000 		sts endpoints+28,r24
 6826 1adc 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 6827               		.loc 5 169 0
 6828 1ae0 2093 0000 		sts endpoints+26,r18
 6829 1ae4 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 6830               		.loc 5 174 0
 6831 1ae8 F301      		movw r30,r6
 6832               	/* #APP */
 6833               	 ;  174 "usb/usb.h" 1
 6834 1aea 02E2      		ldi r16, 34
 6835 1aec 0693      		.dc.w 0x9306
 6836               		
 6837               	 ;  0 "" 2
 6838               	/* #NOAPP */
 6839 1aee 00C0      		rjmp .L247
 6840               	.LVL405:
 6841               	.L255:
 6842               	.LBE2160:
 6843               	.LBE2162:
 6844               	.LBB2163:
 6845               	.LBB2164:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 6846               		.loc 5 168 0
 6847 1af0 8093 0000 		sts endpoints+20,r24
 6848 1af4 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 6849               		.loc 5 169 0
 6850 1af8 2093 0000 		sts endpoints+18,r18
 6851 1afc 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 6852               		.loc 5 176 0
 6853 1b00 F301      		movw r30,r6
 6854               	/* #APP */
 6855               	 ;  176 "usb/usb.h" 1
 6856 1b02 04E1      		ldi r16, 20
 6857 1b04 0693      		.dc.w 0x9306
 6858               		
 6859               	 ;  0 "" 2
 6860               	/* #NOAPP */
 6861 1b06 00C0      		rjmp .L247
 6862               	.LVL406:
 6863               	.L289:
 6864               	.LBE2164:
 6865               	.LBE2163:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 6866               		.loc 2 69 0
 6867 1b08 40E0      		ldi r20,lo8(0)
 6868 1b0a 4093 0000 		sts ep_in_data,r20
 6869               	.LBB2165:
 6870               	.LBB2161:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 6871               		.loc 5 168 0
 6872 1b0e 872F      		mov r24,r23
 6873 1b10 9E2F      		mov r25,r30
 6874               	.LBE2161:
 6875               	.LBE2165:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 6876               		.loc 2 72 0
 6877 1b12 6623      		tst r22
 6878 1b14 01F4      		brne .L255
 6879 1b16 00C0      		rjmp .L290
 6880               	.LVL407:
 6881               	.L287:
 6882               	.LBE2166:
 6883               	.LBE2197:
 6884               	.LBE2200:
 6885               	.LBE2203:
 6886               	.LBE2212:
 6887               	.LBE2215:
 6888               	.LBE2218:
 6889               	.LBE2221:
 6890               	.LBE2228:
 6891               	.LBE2231:
 6892               	.LBE2240:
 6893               	.LBB2241:
 6894               	.LBB2242:
 6895               	.LBB2243:
 6896               	.LBB2244:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 6897               		.loc 2 110 0
 6898 1b18 8093 0000 		sts ep_in_data+1,r24
 6899               	.LVL408:
 6900               	.LBB2245:
 6901               	.LBB2246:
 6902               	.LBB2247:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6903               		.loc 2 80 0
 6904 1b1c 2FB7      		in r18,__SREG__
 6905               	.LVL409:
 6906               	.LBB2248:
 6907               	.LBB2249:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6908               		.loc 3 50 0
 6909               	/* #APP */
 6910               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6911 1b1e F894      		cli
 6912               	 ;  0 "" 2
 6913               	.LVL410:
 6914               	/* #NOAPP */
 6915               	.LBE2249:
 6916               	.LBE2248:
 6917               	.LBB2250:
 6918               	.LBB2251:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6919               		.loc 5 220 0
 6920 1b20 8091 0000 		lds r24,endpoints+24
 6921 1b24 8670      		andi r24,lo8(6)
 6922               	.LBE2251:
 6923               	.LBE2250:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 6924               		.loc 2 82 0
 6925 1b26 01F0      		breq .+2
 6926 1b28 00C0      		rjmp .L291
 6927               	.LVL411:
 6928               	.L258:
 6929               	.LBB2252:
 6930               	.LBB2253:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6931               		.loc 3 70 0
 6932 1b2a 2FBF      		out __SREG__,r18
 6933               		.loc 3 71 0
 6934               	.LBE2253:
 6935               	.LBE2252:
 6936               	.LBE2247:
 6937               	.LBE2246:
 6938               	.LBE2245:
 6939               	.LBE2244:
 6940               	.LBE2243:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 6941               		.loc 1 27 0
 6942 1b2c 82E0      		ldi r24,lo8(2)
 6943 1b2e E0EC      		ldi r30,lo8(1216)
 6944 1b30 F4E0      		ldi r31,hi8(1216)
 6945 1b32 8587      		std Z+13,r24
 6946               	.LBB2285:
 6947               	.LBB2286:
 6948               	.LBB2287:
 6949               	.LBB2288:
 6950               	.LBB2289:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 6951               		.loc 4 57 0
 6952 1b34 36E0      		ldi r19,lo8(6)
 6953               	.LVL412:
 6954               	.L267:
 6955               	.LBE2289:
 6956               	.LBE2288:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6957               		.loc 2 123 0
 6958 1b36 9FB7      		in r25,__SREG__
 6959               	.LVL413:
 6960               	.LBB2291:
 6961               	.LBB2292:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6962               		.loc 3 50 0
 6963               	/* #APP */
 6964               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6965 1b38 F894      		cli
 6966               	 ;  0 "" 2
 6967               	.LVL414:
 6968               	/* #NOAPP */
 6969               	.LBE2292:
 6970               	.LBE2291:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 6971               		.loc 2 124 0
 6972 1b3a 8091 0000 		lds r24,ep_in_data+1
 6973 1b3e 8823      		tst r24
 6974 1b40 01F0      		breq .L292
 6975               	.L272:
 125:usb/usb_pipe.h **** 			r = false;
 6976               		.loc 2 125 0
 6977 1b42 80E0      		ldi r24,lo8(0)
 6978               	.L268:
 6979               	.LBB2293:
 6980               	.LBB2294:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6981               		.loc 3 70 0
 6982 1b44 9FBF      		out __SREG__,r25
 6983               		.loc 3 71 0
 6984               	.LBE2294:
 6985               	.LBE2293:
 6986               	.LBE2287:
 6987               	.LBE2286:
 6988               	.LBE2285:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 6989               		.loc 1 28 0
 6990 1b46 8823      		tst r24
 6991 1b48 01F0      		breq .+2
 6992 1b4a 00C0      		rjmp .L237
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 6993               		.loc 1 29 0
 6994 1b4c 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 6995 1b50 8823      		tst r24
 6996 1b52 01F0      		breq .L267
 6997               	.LVL415:
 6998               	.LBB2298:
 6999               	.LBB2299:
 7000               	.LBB2300:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 7001               		.loc 2 54 0
 7002 1b54 2FB7      		in r18,__SREG__
 7003               	.LVL416:
 7004               	.LBB2301:
 7005               	.LBB2302:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 7006               		.loc 3 50 0
 7007               	/* #APP */
 7008               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 7009 1b56 F894      		cli
 7010               	 ;  0 "" 2
 7011               	.LVL417:
 7012               	/* #NOAPP */
 7013               	.LBE2302:
 7014               	.LBE2301:
 7015               	.LBB2303:
 7016               	.LBB2304:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 7017               		.loc 4 90 0
 7018 1b58 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 7019               		.loc 4 91 0
 7020 1b5c 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7021 1b5e 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7022 1b60 8093 0000 		sts ep_in_pipe_data+2,r24
 7023 1b64 9093 0000 		sts ep_in_pipe_data+2+1,r25
 7024 1b68 8093 0000 		sts ep_in_pipe_data,r24
 7025 1b6c 9093 0000 		sts ep_in_pipe_data+1,r25
 7026               	.LVL418:
 7027               	.LBE2304:
 7028               	.LBE2303:
 7029               	.LBB2305:
 7030               	.LBB2306:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 7031               		.loc 5 158 0
 7032 1b70 E0E0      		ldi r30,lo8(endpoints+24)
 7033 1b72 F0E0      		ldi r31,hi8(endpoints+24)
 7034               	/* #APP */
 7035               	 ;  158 "usb/usb.h" 1
 7036 1b74 06E0      		ldi r16, 6
 7037 1b76 0593      		.dc.w 0x9305
 7038               		
 7039               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 7040               		.loc 5 159 0
 7041               	 ;  159 "usb/usb.h" 1
 7042 1b78 08E0      		ldi r16, 8
 7043 1b7a 0693      		.dc.w 0x9306
 7044               		
 7045               	 ;  0 "" 2
 7046               	/* #NOAPP */
 7047               	.LBE2306:
 7048               	.LBE2305:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 7049               		.loc 2 57 0
 7050 1b7c 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 7051               		.loc 2 58 0
 7052 1b80 1092 0000 		sts ep_in_data+2,__zero_reg__
 7053 1b84 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 7054               		.loc 2 59 0
 7055 1b88 1092 0000 		sts ep_in_data,__zero_reg__
 7056               	.LVL419:
 7057               	.LBB2307:
 7058               	.LBB2308:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 7059               		.loc 3 70 0
 7060 1b8c 2FBF      		out __SREG__,r18
 7061               		.loc 3 71 0
 7062 1b8e 00C0      		rjmp .L237
 7063               	.LVL420:
 7064               	.L292:
 7065               	.LBE2308:
 7066               	.LBE2307:
 7067               	.LBE2300:
 7068               	.LBE2299:
 7069               	.LBE2298:
 7070               	.LBB2309:
 7071               	.LBB2297:
 7072               	.LBB2296:
 7073               	.LBB2295:
 7074               	.LBB2290:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 7075               		.loc 4 57 0
 7076 1b90 8091 0000 		lds r24,ep_in_pipe_data+4
 7077 1b94 232F      		mov r18,r19
 7078 1b96 281B      		sub r18,r24
 7079               	.LBE2290:
 7080               	.LBE2295:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 7081               		.loc 2 127 0
 7082 1b98 81E0      		ldi r24,lo8(1)
 7083 1b9a 1216      		cp __zero_reg__,r18
 7084 1b9c 04F0      		brlt .L268
 7085 1b9e 00C0      		rjmp .L272
 7086               	.LVL421:
 7087               	.L291:
 7088               	.LBE2296:
 7089               	.LBE2297:
 7090               	.LBE2309:
 7091               	.LBB2310:
 7092               	.LBB2284:
 7093               	.LBB2283:
 7094               	.LBB2282:
 7095               	.LBB2281:
 7096               	.LBB2254:
 7097               	.LBB2255:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 7098               		.loc 4 51 0
 7099 1ba0 3091 0000 		lds r19,ep_in_pipe_data+4
 7100               	.LBE2255:
 7101               	.LBE2254:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 7102               		.loc 2 83 0
 7103 1ba4 1316      		cp __zero_reg__,r19
 7104 1ba6 04F0      		brlt .+2
 7105 1ba8 00C0      		rjmp .L259
 7106               	.LBB2256:
 7107               	.LBB2257:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 7108               		.loc 4 62 0
 7109 1baa 8091 0000 		lds r24,ep_in_pipe_data
 7110 1bae 9091 0000 		lds r25,ep_in_pipe_data+1
 7111               	.LVL422:
 7112               	.LBE2257:
 7113               	.LBE2256:
 7114               	.LBB2258:
 7115               	.LBB2259:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 7116               		.loc 2 68 0
 7117 1bb2 4091 0000 		lds r20,ep_in_data
 7118               	.LVL423:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7119               		.loc 2 69 0
 7120 1bb6 51E0      		ldi r21,lo8(1)
 7121 1bb8 4130      		cpi r20,lo8(1)
 7122 1bba 01F4      		brne .L260
 7123 1bbc 50E0      		ldi r21,lo8(0)
 7124               	.L260:
 7125 1bbe 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 7126               		.loc 2 72 0
 7127 1bc2 4423      		tst r20
 7128 1bc4 01F4      		brne .L261
 7129               	.LVL424:
 7130               	.LBB2260:
 7131               	.LBB2261:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7132               		.loc 5 168 0
 7133 1bc6 8093 0000 		sts endpoints+28,r24
 7134 1bca 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7135               		.loc 5 169 0
 7136 1bce 40E4      		ldi r20,lo8(64)
 7137 1bd0 50E0      		ldi r21,hi8(64)
 7138 1bd2 4093 0000 		sts endpoints+26,r20
 7139 1bd6 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 7140               		.loc 5 174 0
 7141 1bda E0E0      		ldi r30,lo8(endpoints+24)
 7142 1bdc F0E0      		ldi r31,hi8(endpoints+24)
 7143               	/* #APP */
 7144               	 ;  174 "usb/usb.h" 1
 7145 1bde 02E2      		ldi r16, 34
 7146 1be0 0693      		.dc.w 0x9306
 7147               		
 7148               	 ;  0 "" 2
 7149               	.LVL425:
 7150               	/* #NOAPP */
 7151               	.L262:
 7152               	.LBE2261:
 7153               	.LBE2260:
 7154               	.LBE2259:
 7155               	.LBE2258:
 7156               	.LBB2265:
 7157               	.LBB2266:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 7158               		.loc 4 72 0
 7159 1be2 3150      		subi r19,lo8(-(-1))
 7160 1be4 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 7161               		.loc 4 73 0
 7162 1be8 805C      		subi r24,lo8(-(64))
 7163 1bea 9F4F      		sbci r25,hi8(-(64))
 7164 1bec 8093 0000 		sts ep_in_pipe_data,r24
 7165 1bf0 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 7166               		.loc 4 75 0
 7167 1bf4 B0E0      		ldi r27,hi8(ep_in_pipe_buffer+512)
 7168 1bf6 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 7169 1bf8 9B07      		cpc r25,r27
 7170 1bfa 01F0      		breq .+2
 7171 1bfc 00C0      		rjmp .L258
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 7172               		.loc 4 76 0
 7173 1bfe 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7174 1c00 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7175 1c02 8093 0000 		sts ep_in_pipe_data,r24
 7176 1c06 9093 0000 		sts ep_in_pipe_data+1,r25
 7177 1c0a 00C0      		rjmp .L258
 7178               	.LVL426:
 7179               	.L261:
 7180               	.LBE2266:
 7181               	.LBE2265:
 7182               	.LBB2267:
 7183               	.LBB2264:
 7184               	.LBB2262:
 7185               	.LBB2263:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7186               		.loc 5 168 0
 7187 1c0c 8093 0000 		sts endpoints+20,r24
 7188 1c10 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7189               		.loc 5 169 0
 7190 1c14 40E4      		ldi r20,lo8(64)
 7191 1c16 50E0      		ldi r21,hi8(64)
 7192 1c18 4093 0000 		sts endpoints+18,r20
 7193 1c1c 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 7194               		.loc 5 176 0
 7195 1c20 E0E0      		ldi r30,lo8(endpoints+24)
 7196 1c22 F0E0      		ldi r31,hi8(endpoints+24)
 7197               	/* #APP */
 7198               	 ;  176 "usb/usb.h" 1
 7199 1c24 04E1      		ldi r16, 20
 7200 1c26 0693      		.dc.w 0x9306
 7201               		
 7202               	 ;  0 "" 2
 7203               	/* #NOAPP */
 7204 1c28 00C0      		rjmp .L262
 7205               	.LVL427:
 7206               	.L259:
 7207               	.LBE2263:
 7208               	.LBE2262:
 7209               	.LBE2264:
 7210               	.LBE2267:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 7211               		.loc 2 87 0
 7212 1c2a 8091 0000 		lds r24,ep_in_data+1
 7213 1c2e 8130      		cpi r24,lo8(1)
 7214 1c30 01F0      		breq .L293
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 7215               		.loc 2 91 0
 7216 1c32 8230      		cpi r24,lo8(2)
 7217 1c34 01F0      		breq .+2
 7218 1c36 00C0      		rjmp .L258
 7219               	.LVL428:
 7220               	.LBB2268:
 7221               	.LBB2269:
 7222               	.LBB2270:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 7223               		.loc 5 228 0
 7224 1c38 8091 0000 		lds r24,endpoints+24
 7225 1c3c 8670      		andi r24,lo8(6)
 7226               	.LBE2270:
 7227               	.LBE2269:
 7228               	.LBE2268:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 7229               		.loc 2 91 0
 7230 1c3e 8630      		cpi r24,lo8(6)
 7231 1c40 01F0      		breq .+2
 7232 1c42 00C0      		rjmp .L258
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 7233               		.loc 2 92 0
 7234 1c44 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 7235               		.loc 2 93 0
 7236 1c48 1092 0000 		sts ep_in_data+2,__zero_reg__
 7237 1c4c 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 7238               	.LBB2271:
 7239               	.LBB2272:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 7240               		.loc 4 90 0
 7241 1c50 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 7242               		.loc 4 91 0
 7243 1c54 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7244 1c56 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7245 1c58 8093 0000 		sts ep_in_pipe_data+2,r24
 7246 1c5c 9093 0000 		sts ep_in_pipe_data+2+1,r25
 7247 1c60 8093 0000 		sts ep_in_pipe_data,r24
 7248 1c64 9093 0000 		sts ep_in_pipe_data+1,r25
 7249               	.LVL429:
 7250 1c68 00C0      		rjmp .L258
 7251               	.LVL430:
 7252               	.L293:
 7253               	.LBE2272:
 7254               	.LBE2271:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 7255               		.loc 2 88 0
 7256 1c6a 82E0      		ldi r24,lo8(2)
 7257 1c6c 8093 0000 		sts ep_in_data+1,r24
 7258               	.LBB2273:
 7259               	.LBB2274:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 7260               		.loc 4 62 0
 7261 1c70 6091 0000 		lds r22,ep_in_pipe_data
 7262 1c74 3091 0000 		lds r19,ep_in_pipe_data+1
 7263               	.LBE2274:
 7264               	.LBE2273:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 7265               		.loc 2 90 0
 7266 1c78 4091 0000 		lds r20,ep_in_data+2
 7267 1c7c 5091 0000 		lds r21,ep_in_data+2+1
 7268               	.LVL431:
 7269               	.LBB2275:
 7270               	.LBB2276:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 7271               		.loc 2 68 0
 7272 1c80 8091 0000 		lds r24,ep_in_data
 7273               	.LVL432:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7274               		.loc 2 69 0
 7275 1c84 91E0      		ldi r25,lo8(1)
 7276 1c86 8130      		cpi r24,lo8(1)
 7277 1c88 01F4      		brne .L265
 7278 1c8a 90E0      		ldi r25,lo8(0)
 7279               	.L265:
 7280 1c8c 9093 0000 		sts ep_in_data,r25
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 7281               		.loc 2 72 0
 7282 1c90 8823      		tst r24
 7283 1c92 01F4      		brne .L266
 7284               	.LVL433:
 7285               	.LBB2277:
 7286               	.LBB2278:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7287               		.loc 5 168 0
 7288 1c94 862F      		mov r24,r22
 7289 1c96 932F      		mov r25,r19
 7290 1c98 8093 0000 		sts endpoints+28,r24
 7291 1c9c 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7292               		.loc 5 169 0
 7293 1ca0 4093 0000 		sts endpoints+26,r20
 7294 1ca4 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 7295               		.loc 5 174 0
 7296 1ca8 E0E0      		ldi r30,lo8(endpoints+24)
 7297 1caa F0E0      		ldi r31,hi8(endpoints+24)
 7298               	/* #APP */
 7299               	 ;  174 "usb/usb.h" 1
 7300 1cac 02E2      		ldi r16, 34
 7301 1cae 0693      		.dc.w 0x9306
 7302               		
 7303               	 ;  0 "" 2
 7304               	/* #NOAPP */
 7305 1cb0 00C0      		rjmp .L258
 7306               	.LVL434:
 7307               	.L266:
 7308               	.LBE2278:
 7309               	.LBE2277:
 7310               	.LBB2279:
 7311               	.LBB2280:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7312               		.loc 5 168 0
 7313 1cb2 862F      		mov r24,r22
 7314 1cb4 932F      		mov r25,r19
 7315 1cb6 8093 0000 		sts endpoints+20,r24
 7316 1cba 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7317               		.loc 5 169 0
 7318 1cbe 4093 0000 		sts endpoints+18,r20
 7319 1cc2 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 7320               		.loc 5 176 0
 7321 1cc6 E0E0      		ldi r30,lo8(endpoints+24)
 7322 1cc8 F0E0      		ldi r31,hi8(endpoints+24)
 7323               	/* #APP */
 7324               	 ;  176 "usb/usb.h" 1
 7325 1cca 04E1      		ldi r16, 20
 7326 1ccc 0693      		.dc.w 0x9306
 7327               		
 7328               	 ;  0 "" 2
 7329               	/* #NOAPP */
 7330 1cce 00C0      		rjmp .L258
 7331               	.LBE2280:
 7332               	.LBE2279:
 7333               	.LBE2276:
 7334               	.LBE2275:
 7335               	.LBE2281:
 7336               	.LBE2282:
 7337               	.LBE2283:
 7338               	.LBE2284:
 7339               	.LBE2310:
 7340               	.LBE2242:
 7341               	.LBE2241:
 7342               		.cfi_endproc
 7343               	.LFE68:
 7345               	.global	turn_on_gps
 7347               	turn_on_gps:
 7348               	.LFB69:
 7349               		.file 10 "gps/gps.h"
   1:gps/gps.h     **** void gps_init (void);
   2:gps/gps.h     **** void turn_on_gps(void);
   3:gps/gps.h     **** void wake_up_gps(void);
   4:gps/gps.h     **** 
   5:gps/gps.h     **** void turn_on_gps(void) {
 7350               		.loc 10 5 0
 7351               		.cfi_startproc
 7352               	/* prologue: function */
 7353               	/* frame size = 0 */
 7354               	/* stack size = 0 */
 7355               	.L__stack_usage = 0
 7356               	.LVL435:
 7357               	.LBB2311:
 7358               	.LBB2312:
 7359               		.file 11 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h"
   1:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  41:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  42:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  46:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \code
  49:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     used.
  58:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  59:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  68:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  77:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  81:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** */
  82:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  93:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  94:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  97:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #  include <math.h>
 102:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
 103:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 104:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /**
 105:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 107:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 109:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 112:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 114:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 120:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 125:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 129:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 132:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 140:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****  */
 141:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** void
 142:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** {
 144:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 153:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 156:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 159:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#else
 160:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		//round up by default
 161:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#endif
 163:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 164:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 7360               		.loc 11 164 0
 7361 1cd0 8FEF      		 ldi r24,lo8(6399999)
 7362 1cd2 97EA      	    ldi r25,hi8(6399999)
 7363 1cd4 A1E6      	    ldi r26,hlo8(6399999)
 7364 1cd6 8150      	    1:subi r24,1
 7365 1cd8 9040      	    sbci r25,0
 7366 1cda A040      	    sbci r26,0
 7367 1cdc 01F4      	    brne 1b
 7368 1cde 00C0      		rjmp .
 7369 1ce0 0000      		nop
 7370               	.LBE2312:
 7371               	.LBE2311:
   6:gps/gps.h     ****   // wait one second after powering on, as recommended by a2235-h data sheet
   7:gps/gps.h     ****   _delay_ms(1000);
   8:gps/gps.h     **** 
   9:gps/gps.h     ****   // // May or may not be necessary -- docs on wakeup are a bit sketchy
  10:gps/gps.h     ****   // // Does the gps module transmit anything before locking on to a gps position?
  11:gps/gps.h     ****   // // Or do we need to wait before querying for location data?
  12:gps/gps.h     ****   // Set PD5 direction to output
  13:gps/gps.h     ****   PORTD.DIRSET = PIN5_bm;
 7372               		.loc 10 13 0
 7373 1ce2 E0E6      		ldi r30,lo8(1632)
 7374 1ce4 F6E0      		ldi r31,hi8(1632)
 7375 1ce6 80E2      		ldi r24,lo8(32)
 7376 1ce8 8183      		std Z+1,r24
  14:gps/gps.h     **** 
  15:gps/gps.h     ****   // LOW/HIGH transmission of PD5 to wakeup gps module 
  16:gps/gps.h     ****   PORTD.OUTTGL = PIN5_bm;
 7377               		.loc 10 16 0
 7378 1cea 8783      		std Z+7,r24
 7379               	/* epilogue start */
  17:gps/gps.h     **** }
 7380               		.loc 10 17 0
 7381 1cec 0895      		ret
 7382               		.cfi_endproc
 7383               	.LFE69:
 7385               	.global	wake_up_gps
 7387               	wake_up_gps:
 7388               	.LFB70:
  18:gps/gps.h     **** 
  19:gps/gps.h     **** void wake_up_gps(void) {
 7389               		.loc 10 19 0
 7390               		.cfi_startproc
 7391               	/* prologue: function */
 7392               	/* frame size = 0 */
 7393               	/* stack size = 0 */
 7394               	.L__stack_usage = 0
 7395               	/* epilogue start */
  20:gps/gps.h     **** 
  21:gps/gps.h     **** }
 7396               		.loc 10 21 0
 7397 1cee 0895      		ret
 7398               		.cfi_endproc
 7399               	.LFE70:
 7401               	.global	gps_init
 7403               	gps_init:
 7404               	.LFB71:
  22:gps/gps.h     **** 
  23:gps/gps.h     **** void gps_init(void) {
 7405               		.loc 10 23 0
 7406               		.cfi_startproc
 7407               	/* prologue: function */
 7408               	/* frame size = 0 */
 7409               	/* stack size = 0 */
 7410               	.L__stack_usage = 0
 7411               	.LVL436:
 7412               	.LBB2313:
 7413               	.LBB2314:
 7414               	.LBB2315:
 7415               	.LBB2316:
 7416               		.loc 11 164 0
 7417 1cf0 8FEF      		 ldi r24,lo8(6399999)
 7418 1cf2 97EA      	    ldi r25,hi8(6399999)
 7419 1cf4 A1E6      	    ldi r26,hlo8(6399999)
 7420 1cf6 8150      	    1:subi r24,1
 7421 1cf8 9040      	    sbci r25,0
 7422 1cfa A040      	    sbci r26,0
 7423 1cfc 01F4      	    brne 1b
 7424 1cfe 00C0      		rjmp .
 7425 1d00 0000      		nop
 7426               	.LBE2316:
 7427               	.LBE2315:
  13:gps/gps.h     ****   PORTD.DIRSET = PIN5_bm;
 7428               		.loc 10 13 0
 7429 1d02 E0E6      		ldi r30,lo8(1632)
 7430 1d04 F6E0      		ldi r31,hi8(1632)
 7431 1d06 80E2      		ldi r24,lo8(32)
 7432 1d08 8183      		std Z+1,r24
  16:gps/gps.h     ****   PORTD.OUTTGL = PIN5_bm;
 7433               		.loc 10 16 0
 7434 1d0a 8783      		std Z+7,r24
 7435               	.LBE2314:
 7436               	.LBE2313:
  24:gps/gps.h     ****   /*
  25:gps/gps.h     ****   
  26:gps/gps.h     ****   Port numbers, baud rate, etc will need to be changed when switching 
  27:gps/gps.h     ****   to a different port.  This is a bit complex to abstract out to a new 
  28:gps/gps.h     ****   code layer at the moment (too many inputs required for things to work right)
  29:gps/gps.h     ****   so we'll have to keep it as is.  
  30:gps/gps.h     **** 
  31:gps/gps.h     ****   Specifically, we'll have to change PORTD, USARTDO, BSEL, BSCALE, and the Tx bitmask
  32:gps/gps.h     **** 
  33:gps/gps.h     ****   */
  34:gps/gps.h     **** 
  35:gps/gps.h     ****   turn_on_gps();
  36:gps/gps.h     **** 
  37:gps/gps.h     ****   // Set the TxD pin as an output - set PORTD OUT register bit 3 to 1 
  38:gps/gps.h     ****   PORTD.DIRSET = PIN3_bm; 
 7437               		.loc 10 38 0
 7438 1d0c 88E0      		ldi r24,lo8(8)
 7439 1d0e 8183      		std Z+1,r24
  39:gps/gps.h     **** 
  40:gps/gps.h     ****   // Set the TxD pin high - set PORTD DIR register bit 3 to 1 
  41:gps/gps.h     ****   PORTD.OUTSET = PIN3_bm; 
 7440               		.loc 10 41 0
 7441 1d10 8583      		std Z+5,r24
 7442               	.LVL437:
  42:gps/gps.h     **** 
  43:gps/gps.h     ****   //Baud rate of 4800
  44:gps/gps.h     ****   uint16_t BSEL = 12;
  45:gps/gps.h     ****   uint8_t BSCALE = 1;
  46:gps/gps.h     ****   USARTD0_BAUDCTRLA = BSEL & 0XFF;
 7443               		.loc 10 46 0
 7444 1d12 8CE0      		ldi r24,lo8(12)
 7445 1d14 8093 A609 		sts 2470,r24
  47:gps/gps.h     ****   USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
 7446               		.loc 10 47 0
 7447 1d18 80E1      		ldi r24,lo8(16)
 7448 1d1a 8093 A709 		sts 2471,r24
  48:gps/gps.h     **** 
  49:gps/gps.h     ****   // no interrupts
  50:gps/gps.h     ****   // can't overwrite bits 7:6
  51:gps/gps.h     ****   USARTD0.CTRLA = 0x00;
 7449               		.loc 10 51 0
 7450 1d1e E0EA      		ldi r30,lo8(2464)
 7451 1d20 F9E0      		ldi r31,hi8(2464)
 7452 1d22 1382      		std Z+3,__zero_reg__
  52:gps/gps.h     **** 
  53:gps/gps.h     ****   // Enable transmitter and receiver
  54:gps/gps.h     ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 7453               		.loc 10 54 0
 7454 1d24 88E1      		ldi r24,lo8(24)
 7455 1d26 8483      		std Z+4,r24
  55:gps/gps.h     **** 
  56:gps/gps.h     ****   // async, no parity, 1 stop bit, 8 bit data,
  57:gps/gps.h     ****   // 00     00         00          11    
  58:gps/gps.h     ****   USARTD0.CTRLC = 0x03;  
 7456               		.loc 10 58 0
 7457 1d28 83E0      		ldi r24,lo8(3)
 7458 1d2a 8583      		std Z+5,r24
 7459               	/* epilogue start */
  59:gps/gps.h     **** }...
 7460               		.loc 10 59 0
 7461 1d2c 0895      		ret
 7462               		.cfi_endproc
 7463               	.LFE71:
 7465               	.global	wake_up_gprs
 7467               	wake_up_gprs:
 7468               	.LFB72:
 7469               		.file 12 "gprs/gprs.h"
   1:gprs/gprs.h   **** void wake_up_gprs(void);
   2:gprs/gprs.h   **** void gprs_init(void);
   3:gprs/gprs.h   **** 
   4:gprs/gprs.h   **** void wake_up_gprs(void) {
 7470               		.loc 12 4 0
 7471               		.cfi_startproc
 7472               	/* prologue: function */
 7473               	/* frame size = 0 */
 7474               	/* stack size = 0 */
 7475               	.L__stack_usage = 0
 7476               	/* epilogue start */
   5:gprs/gprs.h   ****   // 
   6:gprs/gprs.h   **** }
 7477               		.loc 12 6 0
 7478 1d2e 0895      		ret
 7479               		.cfi_endproc
 7480               	.LFE72:
 7482               	.global	gprs_init
 7484               	gprs_init:
 7485               	.LFB73:
   7:gprs/gprs.h   **** 
   8:gprs/gprs.h   **** void gprs_init(void) {
 7486               		.loc 12 8 0
 7487               		.cfi_startproc
 7488               	/* prologue: function */
 7489               	/* frame size = 0 */
 7490               	/* stack size = 0 */
 7491               	.L__stack_usage = 0
   9:gprs/gprs.h   ****   //change port numbers when we get our proto board
  10:gprs/gprs.h   **** 
  11:gprs/gprs.h   ****   wake_up_gprs();
  12:gprs/gprs.h   ****   //Baud rate of 19200
  13:gprs/gprs.h   **** 
  14:gprs/gprs.h   ****   // Set the TxD pin as an output - set PORTD OUT register bit 3 to 1 
  15:gprs/gprs.h   ****   PORTD.DIRSET = PIN3_bm; 
 7492               		.loc 12 15 0
 7493 1d30 E0E6      		ldi r30,lo8(1632)
 7494 1d32 F6E0      		ldi r31,hi8(1632)
 7495 1d34 88E0      		ldi r24,lo8(8)
 7496 1d36 8183      		std Z+1,r24
  16:gprs/gprs.h   **** 
  17:gprs/gprs.h   ****   // Set the TxD pin high - set PORTD DIR register bit 3 to 1 
  18:gprs/gprs.h   ****   PORTD.OUTSET = PIN3_bm; 
 7497               		.loc 12 18 0
 7498 1d38 8583      		std Z+5,r24
 7499               	.LVL438:
  19:gprs/gprs.h   **** 
  20:gprs/gprs.h   ****   uint16_t BSEL = 6;
  21:gprs/gprs.h   ****   uint8_t BSCALE = 0;
  22:gprs/gprs.h   ****   USARTD0_BAUDCTRLA = BSEL & 0XFF;
 7500               		.loc 12 22 0
 7501 1d3a 86E0      		ldi r24,lo8(6)
 7502 1d3c 8093 A609 		sts 2470,r24
  23:gprs/gprs.h   ****   USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
 7503               		.loc 12 23 0
 7504 1d40 1092 A709 		sts 2471,__zero_reg__
  24:gprs/gprs.h   **** 
  25:gprs/gprs.h   ****   // no interrupts
  26:gprs/gprs.h   ****   // can't overwrite bits 7:6
  27:gprs/gprs.h   ****   USARTD0.CTRLA = 0x00;
 7505               		.loc 12 27 0
 7506 1d44 E0EA      		ldi r30,lo8(2464)
 7507 1d46 F9E0      		ldi r31,hi8(2464)
 7508 1d48 1382      		std Z+3,__zero_reg__
  28:gprs/gprs.h   **** 
  29:gprs/gprs.h   ****   // Enable transmitter and receiver
  30:gprs/gprs.h   ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 7509               		.loc 12 30 0
 7510 1d4a 88E1      		ldi r24,lo8(24)
 7511 1d4c 8483      		std Z+4,r24
  31:gprs/gprs.h   **** 
  32:gprs/gprs.h   ****   // async, no parity, 1 stop bit, 8 bit data,
  33:gprs/gprs.h   ****   // 00     00         00          11    
  34:gprs/gprs.h   ****   USARTD0.CTRLC = 0x03;  
 7512               		.loc 12 34 0
 7513 1d4e 83E0      		ldi r24,lo8(3)
 7514 1d50 8583      		std Z+5,r24
 7515               	/* epilogue start */
  35:gprs/gprs.h   **** }...
 7516               		.loc 12 35 0
 7517 1d52 0895      		ret
 7518               		.cfi_endproc
 7519               	.LFE73:
 7521               		.data
 7522               	.LC3:
 7523 0045 4154 2B43 		.string	"AT+CMGF=1"
 7523      4D47 463D 
 7523      3100 
 7524               	.LC4:
 7525 004f 4154 2B43 		.string	"AT+CMGS=\""
 7525      4D47 533D 
 7525      2200 
 7526               		.text
 7527               	.global	send_message
 7529               	send_message:
 7530               	.LFB74:
 7531               		.file 13 "sms/sms.h"
   1:sms/sms.h     **** #include "Framework.h"
   2:sms/sms.h     **** #include <avr/io.h>
   3:sms/sms.h     **** #include <stdlib.h>
   4:sms/sms.h     **** #include <string.h>
   5:sms/sms.h     **** 
   6:sms/sms.h     **** void send_message(char*, char*, USART_t*);
   7:sms/sms.h     **** char* read_message(USART_t*);
   8:sms/sms.h     **** void delSMS(USART_t*);
   9:sms/sms.h     **** void GprsTextModeSMS(USART_t*);
  10:sms/sms.h     **** void ClearGprsMsg(void);
  11:sms/sms.h     **** void GprsReadSmsStore(char* SmsStorePos, USART_t* USART);
  12:sms/sms.h     **** void ProcessGprsMsg(USART_t*);
  13:sms/sms.h     **** void ProcessSms(char* sms);
  14:sms/sms.h     **** void ReceiveTextMessage(USART_t*);
  15:sms/sms.h     **** void SimpleReceive();
  16:sms/sms.h     **** 
  17:sms/sms.h     **** void send_message(char* number, char* text_message, USART_t* USART) {
 7532               		.loc 13 17 0
 7533               		.cfi_startproc
 7534               	.LVL439:
 7535 1d54 BF92      		push r11
 7536               	.LCFI110:
 7537               		.cfi_def_cfa_offset 3
 7538               		.cfi_offset 11, -2
 7539 1d56 CF92      		push r12
 7540               	.LCFI111:
 7541               		.cfi_def_cfa_offset 4
 7542               		.cfi_offset 12, -3
 7543 1d58 DF92      		push r13
 7544               	.LCFI112:
 7545               		.cfi_def_cfa_offset 5
 7546               		.cfi_offset 13, -4
 7547 1d5a EF92      		push r14
 7548               	.LCFI113:
 7549               		.cfi_def_cfa_offset 6
 7550               		.cfi_offset 14, -5
 7551 1d5c FF92      		push r15
 7552               	.LCFI114:
 7553               		.cfi_def_cfa_offset 7
 7554               		.cfi_offset 15, -6
 7555 1d5e 0F93      		push r16
 7556               	.LCFI115:
 7557               		.cfi_def_cfa_offset 8
 7558               		.cfi_offset 16, -7
 7559 1d60 1F93      		push r17
 7560               	.LCFI116:
 7561               		.cfi_def_cfa_offset 9
 7562               		.cfi_offset 17, -8
 7563 1d62 CF93      		push r28
 7564               	.LCFI117:
 7565               		.cfi_def_cfa_offset 10
 7566               		.cfi_offset 28, -9
 7567 1d64 DF93      		push r29
 7568               	.LCFI118:
 7569               		.cfi_def_cfa_offset 11
 7570               		.cfi_offset 29, -10
 7571               	/* prologue: function */
 7572               	/* frame size = 0 */
 7573               	/* stack size = 9 */
 7574               	.L__stack_usage = 9
 7575 1d66 D82E      		mov r13,r24
 7576 1d68 C92E      		mov r12,r25
 7577 1d6a 7B01      		movw r14,r22
 7578 1d6c EA01      		movw r28,r20
 7579               	.LVL440:
 7580               	.L300:
 7581               	.LBB2421:
 7582               	.LBB2422:
  18:uart/uart.h   ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 7583               		.loc 9 18 0
 7584 1d6e 8981      		ldd r24,Y+1
 7585 1d70 85FF      		sbrs r24,5
 7586 1d72 00C0      		rjmp .L300
  21:uart/uart.h   ****     USART->DATA = c; 
 7587               		.loc 9 21 0
 7588 1d74 8DE0      		ldi r24,lo8(13)
 7589 1d76 8883      		st Y,r24
 7590               	.LVL441:
 7591               	.LBE2422:
 7592               	.LBE2421:
 7593               	.LBB2423:
 7594               	.LBB2424:
 7595               		.loc 11 164 0
 7596 1d78 8FEF      		 ldi r24,lo8(639999)
 7597 1d7a 93EC      	    ldi r25,hi8(639999)
 7598 1d7c A9E0      	    ldi r26,hlo8(639999)
 7599 1d7e 8150      	    1:subi r24,1
 7600 1d80 9040      	    sbci r25,0
 7601 1d82 A040      	    sbci r26,0
 7602 1d84 01F4      	    brne 1b
 7603 1d86 00C0      		rjmp .
 7604 1d88 0000      		nop
 7605               	.LVL442:
 7606               	.LBE2424:
 7607               	.LBE2423:
 7608               	.LBB2425:
 7609               	.LBB2426:
  18:sms/sms.h     **** 
  19:sms/sms.h     ****   uart_putchar('\r', USART);
  20:sms/sms.h     ****   _delay_ms(100);
  21:sms/sms.h     **** 
  22:sms/sms.h     ****   GprsTextModeSMS(USART);
  23:sms/sms.h     ****   _delay_ms(100);
  24:sms/sms.h     **** 
  25:sms/sms.h     ****   //build number string
  26:sms/sms.h     ****   char* number_string = concat(concat("AT+CMGS=\"", number), "\"");
  27:sms/sms.h     ****   send_uart(number_string, USART);
  28:sms/sms.h     ****   _delay_ms(100);
  29:sms/sms.h     **** 
  30:sms/sms.h     ****   send_uart(text_message, USART);
  31:sms/sms.h     ****   _delay_ms(100);
  32:sms/sms.h     **** 
  33:sms/sms.h     ****   uart_putchar(26, USART);
  34:sms/sms.h     ****   _delay_ms(100);
  35:sms/sms.h     ****   break_and_flush();
  36:sms/sms.h     **** }
  37:sms/sms.h     **** 
  38:sms/sms.h     **** char* smsStorePos = "";
  39:sms/sms.h     **** char* msg = "";
  40:sms/sms.h     **** char* snTmp = "";
  41:sms/sms.h     **** char* snFull = "";
  42:sms/sms.h     **** int SmsContentFlag;
  43:sms/sms.h     **** char SerialInByte;
  44:sms/sms.h     **** 
  45:sms/sms.h     **** 
  46:sms/sms.h     **** void delSMS(USART_t* USART) {
  47:sms/sms.h     ****   char* cmd = "AT+CMGD=";
  48:sms/sms.h     ****   char* delete_cmd = concat(cmd, smsStorePos);
  49:sms/sms.h     ****   send_uart(delete_cmd, USART);
  50:sms/sms.h     **** }
  51:sms/sms.h     **** 
  52:sms/sms.h     **** void GprsTextModeSMS(USART_t* USART) {
  53:sms/sms.h     ****   send_uart("AT+CMGF=1", USART);
 7610               		.loc 13 53 0
 7611 1d8a 80E0      		ldi r24,lo8(.LC3)
 7612 1d8c 90E0      		ldi r25,hi8(.LC3)
 7613 1d8e BE01      		movw r22,r28
 7614 1d90 0E94 0000 		call send_uart
 7615               	.LVL443:
 7616               	.LBE2426:
 7617               	.LBE2425:
 7618               	.LBB2427:
 7619               	.LBB2428:
 7620               		.loc 11 164 0
 7621 1d94 8FEF      		 ldi r24,lo8(639999)
 7622 1d96 93EC      	    ldi r25,hi8(639999)
 7623 1d98 A9E0      	    ldi r26,hlo8(639999)
 7624 1d9a 8150      	    1:subi r24,1
 7625 1d9c 9040      	    sbci r25,0
 7626 1d9e A040      	    sbci r26,0
 7627 1da0 01F4      	    brne 1b
 7628 1da2 00C0      		rjmp .
 7629 1da4 0000      		nop
 7630               	.LVL444:
 7631               	.LBE2428:
 7632               	.LBE2427:
 7633               	.LBB2429:
 7634               	.LBB2430:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 7635               		.loc 7 15 0
 7636 1da6 ED2D      		mov r30,r13
 7637 1da8 FC2D      		mov r31,r12
 7638 1daa DF01      		movw r26,r30
 7639 1dac 0D90      		ld __tmp_reg__,X+
 7640 1dae 0020      		tst __tmp_reg__
 7641 1db0 01F4      		brne .-6
 7642 1db2 CD01      		movw r24,r26
 7643 1db4 8E1B      		sub r24,r30
 7644 1db6 9F0B      		sbc r25,r31
 7645 1db8 0996      		adiw r24,9
 7646 1dba 0E94 0000 		call malloc
 7647 1dbe 182F      		mov r17,r24
 7648 1dc0 092F      		mov r16,r25
 7649               	.LVL445:
  17:concat/concat.h ****     strcpy(result, s1);
 7650               		.loc 7 17 0
 7651 1dc2 E82F      		mov r30,r24
 7652 1dc4 F92F      		mov r31,r25
 7653 1dc6 A0E0      		ldi r26,lo8(.LC4)
 7654 1dc8 B0E0      		ldi r27,hi8(.LC4)
 7655 1dca 8AE0      		ldi r24,lo8(10)
 7656               	.LVL446:
 7657               	.L301:
 7658 1dcc 0D90      		ld r0,X+
 7659 1dce 0192      		st Z+,r0
 7660 1dd0 8150      		subi r24,lo8(-(-1))
 7661 1dd2 01F4      		brne .L301
  18:concat/concat.h ****     strcat(result, s2);
 7662               		.loc 7 18 0
 7663 1dd4 812F      		mov r24,r17
 7664 1dd6 902F      		mov r25,r16
 7665               	.LVL447:
 7666 1dd8 6D2D      		mov r22,r13
 7667 1dda 7C2D      		mov r23,r12
 7668 1ddc 0E94 0000 		call strcat
 7669               	.LVL448:
 7670               	.LBE2430:
 7671               	.LBE2429:
 7672               	.LBB2431:
 7673               	.LBB2432:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 7674               		.loc 7 15 0
 7675 1de0 E12F      		mov r30,r17
 7676 1de2 F02F      		mov r31,r16
 7677 1de4 DF01      		movw r26,r30
 7678 1de6 0D90      		ld __tmp_reg__,X+
 7679 1de8 0020      		tst __tmp_reg__
 7680 1dea 01F4      		brne .-6
 7681 1dec CD01      		movw r24,r26
 7682 1dee 8E1B      		sub r24,r30
 7683 1df0 9F0B      		sbc r25,r31
 7684 1df2 0196      		adiw r24,1
 7685 1df4 0E94 0000 		call malloc
 7686 1df8 B92E      		mov r11,r25
 7687 1dfa C82E      		mov r12,r24
 7688               	.LVL449:
 7689 1dfc D92E      		mov r13,r25
 7690               	.LVL450:
  17:concat/concat.h ****     strcpy(result, s1);
 7691               		.loc 7 17 0
 7692 1dfe C601      		movw r24,r12
 7693 1e00 612F      		mov r22,r17
 7694 1e02 702F      		mov r23,r16
 7695 1e04 0E94 0000 		call strcpy
  18:concat/concat.h ****     strcat(result, s2);
 7696               		.loc 7 18 0
 7697 1e08 AC2D      		mov r26,r12
 7698 1e0a BB2D      		mov r27,r11
 7699 1e0c FD01      		movw r30,r26
 7700 1e0e 0190      		ld __tmp_reg__,Z+
 7701 1e10 0020      		tst __tmp_reg__
 7702 1e12 01F4      		brne .-6
 7703 1e14 3197      		sbiw r30,1
 7704 1e16 EA1B      		sub r30,r26
 7705 1e18 FB0B      		sbc r31,r27
 7706 1e1a EC0D      		add r30,r12
 7707 1e1c FD1D      		adc r31,r13
 7708 1e1e 82E2      		ldi r24,lo8(34)
 7709 1e20 90E0      		ldi r25,hi8(34)
 7710 1e22 8083      		st Z,r24
 7711 1e24 9183      		std Z+1,r25
 7712               	.LBE2432:
 7713               	.LBE2431:
  27:sms/sms.h     ****   send_uart(number_string, USART);
 7714               		.loc 13 27 0
 7715 1e26 C601      		movw r24,r12
 7716 1e28 BE01      		movw r22,r28
 7717 1e2a 0E94 0000 		call send_uart
 7718               	.LVL451:
 7719               	.LBB2433:
 7720               	.LBB2434:
 7721               		.loc 11 164 0
 7722 1e2e 8FEF      		 ldi r24,lo8(639999)
 7723 1e30 93EC      	    ldi r25,hi8(639999)
 7724 1e32 A9E0      	    ldi r26,hlo8(639999)
 7725 1e34 8150      	    1:subi r24,1
 7726 1e36 9040      	    sbci r25,0
 7727 1e38 A040      	    sbci r26,0
 7728 1e3a 01F4      	    brne 1b
 7729 1e3c 00C0      		rjmp .
 7730 1e3e 0000      		nop
 7731               	.LBE2434:
 7732               	.LBE2433:
  30:sms/sms.h     ****   send_uart(text_message, USART);
 7733               		.loc 13 30 0
 7734 1e40 C701      		movw r24,r14
 7735 1e42 BE01      		movw r22,r28
 7736 1e44 0E94 0000 		call send_uart
 7737               	.LVL452:
 7738               	.LBB2435:
 7739               	.LBB2436:
 7740               		.loc 11 164 0
 7741 1e48 8FEF      		 ldi r24,lo8(639999)
 7742 1e4a 93EC      	    ldi r25,hi8(639999)
 7743 1e4c A9E0      	    ldi r26,hlo8(639999)
 7744 1e4e 8150      	    1:subi r24,1
 7745 1e50 9040      	    sbci r25,0
 7746 1e52 A040      	    sbci r26,0
 7747 1e54 01F4      	    brne 1b
 7748 1e56 00C0      		rjmp .
 7749 1e58 0000      		nop
 7750               	.LVL453:
 7751               	.L302:
 7752               	.LBE2436:
 7753               	.LBE2435:
 7754               	.LBB2437:
 7755               	.LBB2438:
  18:uart/uart.h   ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 7756               		.loc 9 18 0
 7757 1e5a 8981      		ldd r24,Y+1
 7758 1e5c 85FF      		sbrs r24,5
 7759 1e5e 00C0      		rjmp .L302
  21:uart/uart.h   ****     USART->DATA = c; 
 7760               		.loc 9 21 0
 7761 1e60 8AE1      		ldi r24,lo8(26)
 7762 1e62 8883      		st Y,r24
 7763               	.LVL454:
 7764               	.LBE2438:
 7765               	.LBE2437:
 7766               	.LBB2439:
 7767               	.LBB2440:
 7768               		.loc 11 164 0
 7769 1e64 8FEF      		 ldi r24,lo8(639999)
 7770 1e66 93EC      	    ldi r25,hi8(639999)
 7771 1e68 A9E0      	    ldi r26,hlo8(639999)
 7772 1e6a 8150      	    1:subi r24,1
 7773 1e6c 9040      	    sbci r25,0
 7774 1e6e A040      	    sbci r26,0
 7775 1e70 01F4      	    brne 1b
 7776 1e72 00C0      		rjmp .
 7777 1e74 0000      		nop
 7778               	.LVL455:
 7779               	.LBE2440:
 7780               	.LBE2439:
 7781               	.LBB2441:
 7782               	.LBB2442:
 7783               	.LBB2443:
 7784               	.LBB2444:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 7785               		.loc 2 110 0
 7786 1e76 81E0      		ldi r24,lo8(1)
 7787 1e78 8093 0000 		sts ep_in_data+1,r24
 7788               	.LVL456:
 7789               	.LBB2445:
 7790               	.LBB2446:
 7791               	.LBB2447:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 7792               		.loc 2 80 0
 7793 1e7c 2FB7      		in r18,__SREG__
 7794               	.LVL457:
 7795               	.LBB2448:
 7796               	.LBB2449:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 7797               		.loc 3 50 0
 7798               	/* #APP */
 7799               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 7800 1e7e F894      		cli
 7801               	 ;  0 "" 2
 7802               	.LVL458:
 7803               	/* #NOAPP */
 7804               	.LBE2449:
 7805               	.LBE2448:
 7806               	.LBB2450:
 7807               	.LBB2451:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 7808               		.loc 5 220 0
 7809 1e80 8091 0000 		lds r24,endpoints+24
 7810 1e84 8670      		andi r24,lo8(6)
 7811               	.LBE2451:
 7812               	.LBE2450:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 7813               		.loc 2 82 0
 7814 1e86 01F0      		breq .+2
 7815 1e88 00C0      		rjmp .L322
 7816               	.LVL459:
 7817               	.L303:
 7818               	.LBB2452:
 7819               	.LBB2453:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 7820               		.loc 3 70 0
 7821 1e8a 2FBF      		out __SREG__,r18
 7822               		.loc 3 71 0
 7823               	.LBE2453:
 7824               	.LBE2452:
 7825               	.LBE2447:
 7826               	.LBE2446:
 7827               	.LBE2445:
 7828               	.LBE2444:
 7829               	.LBE2443:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 7830               		.loc 1 27 0
 7831 1e8c 82E0      		ldi r24,lo8(2)
 7832 1e8e E0EC      		ldi r30,lo8(1216)
 7833 1e90 F4E0      		ldi r31,hi8(1216)
 7834 1e92 8587      		std Z+13,r24
 7835               	.LBB2485:
 7836               	.LBB2486:
 7837               	.LBB2487:
 7838               	.LBB2488:
 7839               	.LBB2489:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 7840               		.loc 4 57 0
 7841 1e94 36E0      		ldi r19,lo8(6)
 7842               	.LVL460:
 7843               	.L312:
 7844               	.LBE2489:
 7845               	.LBE2488:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 7846               		.loc 2 123 0
 7847 1e96 9FB7      		in r25,__SREG__
 7848               	.LVL461:
 7849               	.LBB2491:
 7850               	.LBB2492:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 7851               		.loc 3 50 0
 7852               	/* #APP */
 7853               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 7854 1e98 F894      		cli
 7855               	 ;  0 "" 2
 7856               	.LVL462:
 7857               	/* #NOAPP */
 7858               	.LBE2492:
 7859               	.LBE2491:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 7860               		.loc 2 124 0
 7861 1e9a 8091 0000 		lds r24,ep_in_data+1
 7862 1e9e 8823      		tst r24
 7863 1ea0 01F0      		breq .L323
 7864               	.L317:
 125:usb/usb_pipe.h **** 			r = false;
 7865               		.loc 2 125 0
 7866 1ea2 80E0      		ldi r24,lo8(0)
 7867               	.L314:
 7868               	.LBB2493:
 7869               	.LBB2494:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 7870               		.loc 3 70 0
 7871 1ea4 9FBF      		out __SREG__,r25
 7872               		.loc 3 71 0
 7873               	.LBE2494:
 7874               	.LBE2493:
 7875               	.LBE2487:
 7876               	.LBE2486:
 7877               	.LBE2485:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 7878               		.loc 1 28 0
 7879 1ea6 8823      		tst r24
 7880 1ea8 01F4      		brne .L299
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 7881               		.loc 1 29 0
 7882 1eaa 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 7883 1eae 8823      		tst r24
 7884 1eb0 01F0      		breq .L312
 7885               	.LVL463:
 7886               	.LBB2498:
 7887               	.LBB2499:
 7888               	.LBB2500:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 7889               		.loc 2 54 0
 7890 1eb2 2FB7      		in r18,__SREG__
 7891               	.LVL464:
 7892               	.LBB2501:
 7893               	.LBB2502:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 7894               		.loc 3 50 0
 7895               	/* #APP */
 7896               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 7897 1eb4 F894      		cli
 7898               	 ;  0 "" 2
 7899               	.LVL465:
 7900               	/* #NOAPP */
 7901               	.LBE2502:
 7902               	.LBE2501:
 7903               	.LBB2503:
 7904               	.LBB2504:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 7905               		.loc 4 90 0
 7906 1eb6 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 7907               		.loc 4 91 0
 7908 1eba 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7909 1ebc 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7910 1ebe 8093 0000 		sts ep_in_pipe_data+2,r24
 7911 1ec2 9093 0000 		sts ep_in_pipe_data+2+1,r25
 7912 1ec6 8093 0000 		sts ep_in_pipe_data,r24
 7913 1eca 9093 0000 		sts ep_in_pipe_data+1,r25
 7914               	.LVL466:
 7915               	.LBE2504:
 7916               	.LBE2503:
 7917               	.LBB2505:
 7918               	.LBB2506:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 7919               		.loc 5 158 0
 7920 1ece E0E0      		ldi r30,lo8(endpoints+24)
 7921 1ed0 F0E0      		ldi r31,hi8(endpoints+24)
 7922               	/* #APP */
 7923               	 ;  158 "usb/usb.h" 1
 7924 1ed2 06E0      		ldi r16, 6
 7925 1ed4 0593      		.dc.w 0x9305
 7926               		
 7927               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 7928               		.loc 5 159 0
 7929               	 ;  159 "usb/usb.h" 1
 7930 1ed6 08E0      		ldi r16, 8
 7931 1ed8 0693      		.dc.w 0x9306
 7932               		
 7933               	 ;  0 "" 2
 7934               	/* #NOAPP */
 7935               	.LBE2506:
 7936               	.LBE2505:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 7937               		.loc 2 57 0
 7938 1eda 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 7939               		.loc 2 58 0
 7940 1ede 1092 0000 		sts ep_in_data+2,__zero_reg__
 7941 1ee2 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 7942               		.loc 2 59 0
 7943 1ee6 1092 0000 		sts ep_in_data,__zero_reg__
 7944               	.LVL467:
 7945               	.LBB2507:
 7946               	.LBB2508:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 7947               		.loc 3 70 0
 7948 1eea 2FBF      		out __SREG__,r18
 7949               		.loc 3 71 0
 7950               	.LVL468:
 7951               	.L299:
 7952               	/* epilogue start */
 7953               	.LBE2508:
 7954               	.LBE2507:
 7955               	.LBE2500:
 7956               	.LBE2499:
 7957               	.LBE2498:
 7958               	.LBE2442:
 7959               	.LBE2441:
  36:sms/sms.h     **** }
 7960               		.loc 13 36 0
 7961 1eec DF91      		pop r29
 7962 1eee CF91      		pop r28
 7963               	.LVL469:
 7964 1ef0 1F91      		pop r17
 7965 1ef2 0F91      		pop r16
 7966 1ef4 FF90      		pop r15
 7967 1ef6 EF90      		pop r14
 7968               	.LVL470:
 7969 1ef8 DF90      		pop r13
 7970 1efa CF90      		pop r12
 7971               	.LVL471:
 7972 1efc BF90      		pop r11
 7973 1efe 0895      		ret
 7974               	.LVL472:
 7975               	.L323:
 7976               	.LBB2512:
 7977               	.LBB2511:
 7978               	.LBB2509:
 7979               	.LBB2497:
 7980               	.LBB2496:
 7981               	.LBB2495:
 7982               	.LBB2490:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 7983               		.loc 4 57 0
 7984 1f00 8091 0000 		lds r24,ep_in_pipe_data+4
 7985 1f04 232F      		mov r18,r19
 7986 1f06 281B      		sub r18,r24
 7987               	.LBE2490:
 7988               	.LBE2495:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 7989               		.loc 2 127 0
 7990 1f08 81E0      		ldi r24,lo8(1)
 7991 1f0a 1216      		cp __zero_reg__,r18
 7992 1f0c 04F0      		brlt .L314
 7993 1f0e 00C0      		rjmp .L317
 7994               	.LVL473:
 7995               	.L322:
 7996               	.LBE2496:
 7997               	.LBE2497:
 7998               	.LBE2509:
 7999               	.LBB2510:
 8000               	.LBB2484:
 8001               	.LBB2483:
 8002               	.LBB2482:
 8003               	.LBB2481:
 8004               	.LBB2454:
 8005               	.LBB2455:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 8006               		.loc 4 51 0
 8007 1f10 3091 0000 		lds r19,ep_in_pipe_data+4
 8008               	.LBE2455:
 8009               	.LBE2454:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 8010               		.loc 2 83 0
 8011 1f14 1316      		cp __zero_reg__,r19
 8012 1f16 04F0      		brlt .+2
 8013 1f18 00C0      		rjmp .L304
 8014               	.LBB2456:
 8015               	.LBB2457:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 8016               		.loc 4 62 0
 8017 1f1a 8091 0000 		lds r24,ep_in_pipe_data
 8018 1f1e 9091 0000 		lds r25,ep_in_pipe_data+1
 8019               	.LVL474:
 8020               	.LBE2457:
 8021               	.LBE2456:
 8022               	.LBB2458:
 8023               	.LBB2459:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 8024               		.loc 2 68 0
 8025 1f22 4091 0000 		lds r20,ep_in_data
 8026               	.LVL475:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 8027               		.loc 2 69 0
 8028 1f26 51E0      		ldi r21,lo8(1)
 8029 1f28 4130      		cpi r20,lo8(1)
 8030 1f2a 01F4      		brne .L305
 8031 1f2c 50E0      		ldi r21,lo8(0)
 8032               	.L305:
 8033 1f2e 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 8034               		.loc 2 72 0
 8035 1f32 4423      		tst r20
 8036 1f34 01F4      		brne .L306
 8037               	.LVL476:
 8038               	.LBB2460:
 8039               	.LBB2461:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8040               		.loc 5 168 0
 8041 1f36 8093 0000 		sts endpoints+28,r24
 8042 1f3a 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8043               		.loc 5 169 0
 8044 1f3e 40E4      		ldi r20,lo8(64)
 8045 1f40 50E0      		ldi r21,hi8(64)
 8046 1f42 4093 0000 		sts endpoints+26,r20
 8047 1f46 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8048               		.loc 5 174 0
 8049 1f4a E0E0      		ldi r30,lo8(endpoints+24)
 8050 1f4c F0E0      		ldi r31,hi8(endpoints+24)
 8051               	.LVL477:
 8052               	/* #APP */
 8053               	 ;  174 "usb/usb.h" 1
 8054 1f4e 02E2      		ldi r16, 34
 8055 1f50 0693      		.dc.w 0x9306
 8056               		
 8057               	 ;  0 "" 2
 8058               	.LVL478:
 8059               	/* #NOAPP */
 8060               	.L307:
 8061               	.LBE2461:
 8062               	.LBE2460:
 8063               	.LBE2459:
 8064               	.LBE2458:
 8065               	.LBB2465:
 8066               	.LBB2466:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 8067               		.loc 4 72 0
 8068 1f52 3150      		subi r19,lo8(-(-1))
 8069 1f54 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 8070               		.loc 4 73 0
 8071 1f58 805C      		subi r24,lo8(-(64))
 8072 1f5a 9F4F      		sbci r25,hi8(-(64))
 8073 1f5c 8093 0000 		sts ep_in_pipe_data,r24
 8074 1f60 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 8075               		.loc 4 75 0
 8076 1f64 A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 8077 1f66 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 8078 1f68 9A07      		cpc r25,r26
 8079 1f6a 01F0      		breq .+2
 8080 1f6c 00C0      		rjmp .L303
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 8081               		.loc 4 76 0
 8082 1f6e 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 8083 1f70 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 8084 1f72 8093 0000 		sts ep_in_pipe_data,r24
 8085 1f76 9093 0000 		sts ep_in_pipe_data+1,r25
 8086 1f7a 00C0      		rjmp .L303
 8087               	.LVL479:
 8088               	.L306:
 8089               	.LBE2466:
 8090               	.LBE2465:
 8091               	.LBB2467:
 8092               	.LBB2464:
 8093               	.LBB2462:
 8094               	.LBB2463:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8095               		.loc 5 168 0
 8096 1f7c 8093 0000 		sts endpoints+20,r24
 8097 1f80 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8098               		.loc 5 169 0
 8099 1f84 40E4      		ldi r20,lo8(64)
 8100 1f86 50E0      		ldi r21,hi8(64)
 8101 1f88 4093 0000 		sts endpoints+18,r20
 8102 1f8c 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 8103               		.loc 5 176 0
 8104 1f90 E0E0      		ldi r30,lo8(endpoints+24)
 8105 1f92 F0E0      		ldi r31,hi8(endpoints+24)
 8106               	/* #APP */
 8107               	 ;  176 "usb/usb.h" 1
 8108 1f94 04E1      		ldi r16, 20
 8109 1f96 0693      		.dc.w 0x9306
 8110               		
 8111               	 ;  0 "" 2
 8112               	.LVL480:
 8113               	/* #NOAPP */
 8114 1f98 00C0      		rjmp .L307
 8115               	.LVL481:
 8116               	.L304:
 8117               	.LBE2463:
 8118               	.LBE2462:
 8119               	.LBE2464:
 8120               	.LBE2467:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 8121               		.loc 2 87 0
 8122 1f9a 8091 0000 		lds r24,ep_in_data+1
 8123 1f9e 8130      		cpi r24,lo8(1)
 8124 1fa0 01F0      		breq .L324
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 8125               		.loc 2 91 0
 8126 1fa2 8230      		cpi r24,lo8(2)
 8127 1fa4 01F0      		breq .+2
 8128 1fa6 00C0      		rjmp .L303
 8129               	.LVL482:
 8130               	.LBB2468:
 8131               	.LBB2469:
 8132               	.LBB2470:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 8133               		.loc 5 228 0
 8134 1fa8 8091 0000 		lds r24,endpoints+24
 8135 1fac 8670      		andi r24,lo8(6)
 8136               	.LBE2470:
 8137               	.LBE2469:
 8138               	.LBE2468:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 8139               		.loc 2 91 0
 8140 1fae 8630      		cpi r24,lo8(6)
 8141 1fb0 01F0      		breq .+2
 8142 1fb2 00C0      		rjmp .L303
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 8143               		.loc 2 92 0
 8144 1fb4 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 8145               		.loc 2 93 0
 8146 1fb8 1092 0000 		sts ep_in_data+2,__zero_reg__
 8147 1fbc 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 8148               	.LBB2471:
 8149               	.LBB2472:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 8150               		.loc 4 90 0
 8151 1fc0 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 8152               		.loc 4 91 0
 8153 1fc4 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 8154 1fc6 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 8155 1fc8 8093 0000 		sts ep_in_pipe_data+2,r24
 8156 1fcc 9093 0000 		sts ep_in_pipe_data+2+1,r25
 8157 1fd0 8093 0000 		sts ep_in_pipe_data,r24
 8158 1fd4 9093 0000 		sts ep_in_pipe_data+1,r25
 8159               	.LVL483:
 8160 1fd8 00C0      		rjmp .L303
 8161               	.LVL484:
 8162               	.L324:
 8163               	.LBE2472:
 8164               	.LBE2471:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 8165               		.loc 2 88 0
 8166 1fda 82E0      		ldi r24,lo8(2)
 8167 1fdc 8093 0000 		sts ep_in_data+1,r24
 8168               	.LBB2473:
 8169               	.LBB2474:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 8170               		.loc 4 62 0
 8171 1fe0 6091 0000 		lds r22,ep_in_pipe_data
 8172 1fe4 3091 0000 		lds r19,ep_in_pipe_data+1
 8173               	.LBE2474:
 8174               	.LBE2473:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 8175               		.loc 2 90 0
 8176 1fe8 4091 0000 		lds r20,ep_in_data+2
 8177 1fec 5091 0000 		lds r21,ep_in_data+2+1
 8178               	.LVL485:
 8179               	.LBB2475:
 8180               	.LBB2476:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 8181               		.loc 2 68 0
 8182 1ff0 8091 0000 		lds r24,ep_in_data
 8183               	.LVL486:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 8184               		.loc 2 69 0
 8185 1ff4 91E0      		ldi r25,lo8(1)
 8186 1ff6 8130      		cpi r24,lo8(1)
 8187 1ff8 01F0      		breq .L325
 8188               	.L310:
 8189 1ffa 9093 0000 		sts ep_in_data,r25
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 8190               		.loc 2 72 0
 8191 1ffe 8823      		tst r24
 8192 2000 01F4      		brne .L311
 8193               	.LVL487:
 8194               	.LBB2477:
 8195               	.LBB2478:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8196               		.loc 5 168 0
 8197 2002 862F      		mov r24,r22
 8198 2004 932F      		mov r25,r19
 8199 2006 8093 0000 		sts endpoints+28,r24
 8200 200a 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8201               		.loc 5 169 0
 8202 200e 4093 0000 		sts endpoints+26,r20
 8203 2012 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8204               		.loc 5 174 0
 8205 2016 E0E0      		ldi r30,lo8(endpoints+24)
 8206 2018 F0E0      		ldi r31,hi8(endpoints+24)
 8207               	.LVL488:
 8208               	/* #APP */
 8209               	 ;  174 "usb/usb.h" 1
 8210 201a 02E2      		ldi r16, 34
 8211 201c 0693      		.dc.w 0x9306
 8212               		
 8213               	 ;  0 "" 2
 8214               	.LVL489:
 8215               	/* #NOAPP */
 8216 201e 00C0      		rjmp .L303
 8217               	.LVL490:
 8218               	.L311:
 8219               	.LBE2478:
 8220               	.LBE2477:
 8221               	.LBB2479:
 8222               	.LBB2480:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8223               		.loc 5 168 0
 8224 2020 862F      		mov r24,r22
 8225 2022 932F      		mov r25,r19
 8226 2024 8093 0000 		sts endpoints+20,r24
 8227 2028 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8228               		.loc 5 169 0
 8229 202c 4093 0000 		sts endpoints+18,r20
 8230 2030 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 8231               		.loc 5 176 0
 8232 2034 E0E0      		ldi r30,lo8(endpoints+24)
 8233 2036 F0E0      		ldi r31,hi8(endpoints+24)
 8234               	/* #APP */
 8235               	 ;  176 "usb/usb.h" 1
 8236 2038 04E1      		ldi r16, 20
 8237 203a 0693      		.dc.w 0x9306
 8238               		
 8239               	 ;  0 "" 2
 8240               	.LVL491:
 8241               	/* #NOAPP */
 8242 203c 00C0      		rjmp .L303
 8243               	.LVL492:
 8244               	.L325:
 8245               	.LBE2480:
 8246               	.LBE2479:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 8247               		.loc 2 69 0
 8248 203e 90E0      		ldi r25,lo8(0)
 8249 2040 00C0      		rjmp .L310
 8250               	.LBE2476:
 8251               	.LBE2475:
 8252               	.LBE2481:
 8253               	.LBE2482:
 8254               	.LBE2483:
 8255               	.LBE2484:
 8256               	.LBE2510:
 8257               	.LBE2511:
 8258               	.LBE2512:
 8259               		.cfi_endproc
 8260               	.LFE74:
 8262               		.data
 8263               	.LC5:
 8264 0059 4154 2B43 		.string	"AT+CMGD="
 8264      4D47 443D 
 8264      00
 8265               		.text
 8266               	.global	delSMS
 8268               	delSMS:
 8269               	.LFB75:
  46:sms/sms.h     **** void delSMS(USART_t* USART) {
 8270               		.loc 13 46 0
 8271               		.cfi_startproc
 8272               	.LVL493:
 8273 2042 EF92      		push r14
 8274               	.LCFI119:
 8275               		.cfi_def_cfa_offset 3
 8276               		.cfi_offset 14, -2
 8277 2044 FF92      		push r15
 8278               	.LCFI120:
 8279               		.cfi_def_cfa_offset 4
 8280               		.cfi_offset 15, -3
 8281 2046 0F93      		push r16
 8282               	.LCFI121:
 8283               		.cfi_def_cfa_offset 5
 8284               		.cfi_offset 16, -4
 8285 2048 1F93      		push r17
 8286               	.LCFI122:
 8287               		.cfi_def_cfa_offset 6
 8288               		.cfi_offset 17, -5
 8289 204a CF93      		push r28
 8290               	.LCFI123:
 8291               		.cfi_def_cfa_offset 7
 8292               		.cfi_offset 28, -6
 8293 204c DF93      		push r29
 8294               	.LCFI124:
 8295               		.cfi_def_cfa_offset 8
 8296               		.cfi_offset 29, -7
 8297               	/* prologue: function */
 8298               	/* frame size = 0 */
 8299               	/* stack size = 6 */
 8300               	.L__stack_usage = 6
 8301 204e 7C01      		movw r14,r24
 8302               	.LVL494:
  48:sms/sms.h     ****   char* delete_cmd = concat(cmd, smsStorePos);
 8303               		.loc 13 48 0
 8304 2050 D091 0000 		lds r29,smsStorePos
 8305 2054 C091 0000 		lds r28,smsStorePos+1
 8306               	.LVL495:
 8307               	.LBB2515:
 8308               	.LBB2516:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 8309               		.loc 7 15 0
 8310 2058 ED2F      		mov r30,r29
 8311 205a FC2F      		mov r31,r28
 8312 205c DF01      		movw r26,r30
 8313 205e 0D90      		ld __tmp_reg__,X+
 8314 2060 0020      		tst __tmp_reg__
 8315 2062 01F4      		brne .-6
 8316 2064 CD01      		movw r24,r26
 8317               	.LVL496:
 8318 2066 8E1B      		sub r24,r30
 8319 2068 9F0B      		sbc r25,r31
 8320 206a 0896      		adiw r24,8
 8321 206c 0E94 0000 		call malloc
 8322               	.LVL497:
 8323 2070 8C01      		movw r16,r24
 8324               	.LVL498:
  17:concat/concat.h ****     strcpy(result, s1);
 8325               		.loc 7 17 0
 8326 2072 FC01      		movw r30,r24
 8327 2074 A0E0      		ldi r26,lo8(.LC5)
 8328 2076 B0E0      		ldi r27,hi8(.LC5)
 8329 2078 89E0      		ldi r24,lo8(9)
 8330               	.LVL499:
 8331               	.L327:
 8332 207a 0D90      		ld r0,X+
 8333 207c 0192      		st Z+,r0
 8334 207e 8150      		subi r24,lo8(-(-1))
 8335 2080 01F4      		brne .L327
  18:concat/concat.h ****     strcat(result, s2);
 8336               		.loc 7 18 0
 8337 2082 C801      		movw r24,r16
 8338 2084 6D2F      		mov r22,r29
 8339 2086 7C2F      		mov r23,r28
 8340 2088 0E94 0000 		call strcat
 8341               	.LBE2516:
 8342               	.LBE2515:
  49:sms/sms.h     ****   send_uart(delete_cmd, USART);
 8343               		.loc 13 49 0
 8344 208c C801      		movw r24,r16
 8345 208e B701      		movw r22,r14
 8346 2090 0E94 0000 		call send_uart
 8347               	/* epilogue start */
  50:sms/sms.h     **** }
 8348               		.loc 13 50 0
 8349 2094 DF91      		pop r29
 8350               	.LVL500:
 8351 2096 CF91      		pop r28
 8352 2098 1F91      		pop r17
 8353 209a 0F91      		pop r16
 8354 209c FF90      		pop r15
 8355 209e EF90      		pop r14
 8356               	.LVL501:
 8357 20a0 0895      		ret
 8358               		.cfi_endproc
 8359               	.LFE75:
 8361               	.global	GprsTextModeSMS
 8363               	GprsTextModeSMS:
 8364               	.LFB76:
  52:sms/sms.h     **** void GprsTextModeSMS(USART_t* USART) {
 8365               		.loc 13 52 0
 8366               		.cfi_startproc
 8367               	.LVL502:
 8368               	/* prologue: function */
 8369               	/* frame size = 0 */
 8370               	/* stack size = 0 */
 8371               	.L__stack_usage = 0
 8372 20a2 BC01      		movw r22,r24
 8373               		.loc 13 53 0
 8374 20a4 80E0      		ldi r24,lo8(.LC3)
 8375 20a6 90E0      		ldi r25,hi8(.LC3)
 8376               	.LVL503:
 8377 20a8 0E94 0000 		call send_uart
 8378               	.LVL504:
 8379               	/* epilogue start */
  54:sms/sms.h     **** }
 8380               		.loc 13 54 0
 8381 20ac 0895      		ret
 8382               		.cfi_endproc
 8383               	.LFE76:
 8385               		.data
 8386               	.LC6:
 8387 0062 00        		.string	""
 8388               		.text
 8389               	.global	ClearGprsMsg
 8391               	ClearGprsMsg:
 8392               	.LFB77:
  55:sms/sms.h     **** 
  56:sms/sms.h     **** void ClearGprsMsg() {
 8393               		.loc 13 56 0
 8394               		.cfi_startproc
 8395               	/* prologue: function */
 8396               	/* frame size = 0 */
 8397               	/* stack size = 0 */
 8398               	.L__stack_usage = 0
  57:sms/sms.h     ****   msg = "";
 8399               		.loc 13 57 0
 8400 20ae 80E0      		ldi r24,lo8(.LC6)
 8401 20b0 90E0      		ldi r25,hi8(.LC6)
 8402 20b2 8093 0000 		sts msg,r24
 8403 20b6 9093 0000 		sts msg+1,r25
 8404               	/* epilogue start */
  58:sms/sms.h     **** }
 8405               		.loc 13 58 0
 8406 20ba 0895      		ret
 8407               		.cfi_endproc
 8408               	.LFE77:
 8410               		.data
 8411               	.LC7:
 8412 0063 4154 2B43 		.string	"AT+CMGR="
 8412      4D47 523D 
 8412      00
 8413               		.text
 8414               	.global	GprsReadSmsStore
 8416               	GprsReadSmsStore:
 8417               	.LFB78:
  59:sms/sms.h     **** 
  60:sms/sms.h     **** void GprsReadSmsStore( char* SmsStorePos, USART_t* USART){
 8418               		.loc 13 60 0
 8419               		.cfi_startproc
 8420               	.LVL505:
 8421 20bc EF92      		push r14
 8422               	.LCFI125:
 8423               		.cfi_def_cfa_offset 3
 8424               		.cfi_offset 14, -2
 8425 20be FF92      		push r15
 8426               	.LCFI126:
 8427               		.cfi_def_cfa_offset 4
 8428               		.cfi_offset 15, -3
 8429 20c0 0F93      		push r16
 8430               	.LCFI127:
 8431               		.cfi_def_cfa_offset 5
 8432               		.cfi_offset 16, -4
 8433 20c2 1F93      		push r17
 8434               	.LCFI128:
 8435               		.cfi_def_cfa_offset 6
 8436               		.cfi_offset 17, -5
 8437 20c4 CF93      		push r28
 8438               	.LCFI129:
 8439               		.cfi_def_cfa_offset 7
 8440               		.cfi_offset 28, -6
 8441 20c6 DF93      		push r29
 8442               	.LCFI130:
 8443               		.cfi_def_cfa_offset 8
 8444               		.cfi_offset 29, -7
 8445               	/* prologue: function */
 8446               	/* frame size = 0 */
 8447               	/* stack size = 6 */
 8448               	.L__stack_usage = 6
 8449 20c8 D82F      		mov r29,r24
 8450 20ca C92F      		mov r28,r25
 8451 20cc 7B01      		movw r14,r22
 8452               	.LVL506:
 8453               	.LBB2519:
 8454               	.LBB2520:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 8455               		.loc 7 15 0
 8456 20ce E82F      		mov r30,r24
 8457 20d0 F92F      		mov r31,r25
 8458 20d2 DF01      		movw r26,r30
 8459 20d4 0D90      		ld __tmp_reg__,X+
 8460 20d6 0020      		tst __tmp_reg__
 8461 20d8 01F4      		brne .-6
 8462 20da CD01      		movw r24,r26
 8463               	.LVL507:
 8464 20dc 8E1B      		sub r24,r30
 8465 20de 9F0B      		sbc r25,r31
 8466 20e0 0896      		adiw r24,8
 8467 20e2 0E94 0000 		call malloc
 8468               	.LVL508:
 8469 20e6 8C01      		movw r16,r24
 8470               	.LVL509:
  17:concat/concat.h ****     strcpy(result, s1);
 8471               		.loc 7 17 0
 8472 20e8 FC01      		movw r30,r24
 8473 20ea A0E0      		ldi r26,lo8(.LC7)
 8474 20ec B0E0      		ldi r27,hi8(.LC7)
 8475 20ee 89E0      		ldi r24,lo8(9)
 8476               	.LVL510:
 8477               	.L332:
 8478 20f0 0D90      		ld r0,X+
 8479 20f2 0192      		st Z+,r0
 8480 20f4 8150      		subi r24,lo8(-(-1))
 8481 20f6 01F4      		brne .L332
  18:concat/concat.h ****     strcat(result, s2);
 8482               		.loc 7 18 0
 8483 20f8 C801      		movw r24,r16
 8484 20fa 6D2F      		mov r22,r29
 8485 20fc 7C2F      		mov r23,r28
 8486 20fe 0E94 0000 		call strcat
 8487               	.LBE2520:
 8488               	.LBE2519:
  61:sms/sms.h     ****   char* cmd = concat("AT+CMGR=", SmsStorePos);
  62:sms/sms.h     ****   send_uart(cmd, USART);
 8489               		.loc 13 62 0
 8490 2102 C801      		movw r24,r16
 8491 2104 B701      		movw r22,r14
 8492 2106 0E94 0000 		call send_uart
 8493               	/* epilogue start */
  63:sms/sms.h     **** }
 8494               		.loc 13 63 0
 8495 210a DF91      		pop r29
 8496               	.LVL511:
 8497 210c CF91      		pop r28
 8498 210e 1F91      		pop r17
 8499 2110 0F91      		pop r16
 8500 2112 FF90      		pop r15
 8501 2114 EF90      		pop r14
 8502               	.LVL512:
 8503 2116 0895      		ret
 8504               		.cfi_endproc
 8505               	.LFE78:
 8507               	.global	ProcessSms
 8509               	ProcessSms:
 8510               	.LFB79:
  64:sms/sms.h     **** 
  65:sms/sms.h     **** void ProcessSms (char* sms) {
 8511               		.loc 13 65 0
 8512               		.cfi_startproc
 8513               	.LVL513:
 8514               	/* prologue: function */
 8515               	/* frame size = 0 */
 8516               	/* stack size = 0 */
 8517               	.L__stack_usage = 0
 8518               	/* epilogue start */
  66:sms/sms.h     **** 
  67:sms/sms.h     **** }
 8519               		.loc 13 67 0
 8520 2118 0895      		ret
 8521               		.cfi_endproc
 8522               	.LFE79:
 8524               		.data
 8525               	.LC8:
 8526 006c 4361 6C6C 		.string	"Call Ready"
 8526      2052 6561 
 8526      6479 00
 8527               	.LC9:
 8528 0077 4750 5253 		.string	"GPRS Shield registered on Mobile Network"
 8528      2053 6869 
 8528      656C 6420 
 8528      7265 6769 
 8528      7374 6572 
 8529               	.LC10:
 8530 00a0 2B43 4D54 		.string	"+CMTI"
 8530      4900 
 8531               	.LC11:
 8532 00a6 4D65 7373 		.string	"Message found"
 8532      6167 6520 
 8532      666F 756E 
 8532      6400 
 8533               	.LC12:
 8534 00b4 2B43 4D47 		.string	"+CMGR:"
 8534      523A 00
 8535               	.LC13:
 8536 00bb 2B31 00   		.string	"+1"
 8537               		.text
 8538               	.global	ProcessGprsMsg
 8540               	ProcessGprsMsg:
 8541               	.LFB80:
  68:sms/sms.h     **** 
  69:sms/sms.h     **** void ProcessGprsMsg(USART_t* USART) {
 8542               		.loc 13 69 0
 8543               		.cfi_startproc
 8544               	.LVL514:
 8545 211a 8F92      		push r8
 8546               	.LCFI131:
 8547               		.cfi_def_cfa_offset 3
 8548               		.cfi_offset 8, -2
 8549 211c 9F92      		push r9
 8550               	.LCFI132:
 8551               		.cfi_def_cfa_offset 4
 8552               		.cfi_offset 9, -3
 8553 211e AF92      		push r10
 8554               	.LCFI133:
 8555               		.cfi_def_cfa_offset 5
 8556               		.cfi_offset 10, -4
 8557 2120 BF92      		push r11
 8558               	.LCFI134:
 8559               		.cfi_def_cfa_offset 6
 8560               		.cfi_offset 11, -5
 8561 2122 CF92      		push r12
 8562               	.LCFI135:
 8563               		.cfi_def_cfa_offset 7
 8564               		.cfi_offset 12, -6
 8565 2124 DF92      		push r13
 8566               	.LCFI136:
 8567               		.cfi_def_cfa_offset 8
 8568               		.cfi_offset 13, -7
 8569 2126 EF92      		push r14
 8570               	.LCFI137:
 8571               		.cfi_def_cfa_offset 9
 8572               		.cfi_offset 14, -8
 8573 2128 FF92      		push r15
 8574               	.LCFI138:
 8575               		.cfi_def_cfa_offset 10
 8576               		.cfi_offset 15, -9
 8577 212a 0F93      		push r16
 8578               	.LCFI139:
 8579               		.cfi_def_cfa_offset 11
 8580               		.cfi_offset 16, -10
 8581 212c 1F93      		push r17
 8582               	.LCFI140:
 8583               		.cfi_def_cfa_offset 12
 8584               		.cfi_offset 17, -11
 8585 212e CF93      		push r28
 8586               	.LCFI141:
 8587               		.cfi_def_cfa_offset 13
 8588               		.cfi_offset 28, -12
 8589 2130 DF93      		push r29
 8590               	.LCFI142:
 8591               		.cfi_def_cfa_offset 14
 8592               		.cfi_offset 29, -13
 8593               	/* prologue: function */
 8594               	/* frame size = 0 */
 8595               	/* stack size = 12 */
 8596               	.L__stack_usage = 12
 8597 2132 6C01      		movw r12,r24
  70:sms/sms.h     **** 
  71:sms/sms.h     ****   char* found = strstr(msg, "Call Ready");
 8598               		.loc 13 71 0
 8599 2134 C091 0000 		lds r28,msg
 8600 2138 D091 0000 		lds r29,msg+1
 8601 213c CE01      		movw r24,r28
 8602               	.LVL515:
 8603 213e 60E0      		ldi r22,lo8(.LC8)
 8604 2140 70E0      		ldi r23,hi8(.LC8)
 8605 2142 0E94 0000 		call strstr
 8606               	.LVL516:
  72:sms/sms.h     ****   if (found != NULL)                    
 8607               		.loc 13 72 0
 8608 2146 0097      		sbiw r24,0
 8609 2148 01F0      		breq .L336
  73:sms/sms.h     ****   {
  74:sms/sms.h     ****     send_string("GPRS Shield registered on Mobile Network");  
 8610               		.loc 13 74 0
 8611 214a 80E0      		ldi r24,lo8(.LC9)
 8612 214c 90E0      		ldi r25,hi8(.LC9)
 8613               	.LVL517:
 8614 214e 0E94 0000 		call send_string
 8615               	.LVL518:
 8616               	.LBB2538:
 8617               	.LBB2539:
  53:sms/sms.h     ****   send_uart("AT+CMGF=1", USART);
 8618               		.loc 13 53 0
 8619 2152 80E0      		ldi r24,lo8(.LC3)
 8620 2154 90E0      		ldi r25,hi8(.LC3)
 8621 2156 B601      		movw r22,r12
 8622 2158 0E94 0000 		call send_uart
 8623 215c C091 0000 		lds r28,msg
 8624 2160 D091 0000 		lds r29,msg+1
 8625               	.LVL519:
 8626               	.L336:
 8627               	.LBE2539:
 8628               	.LBE2538:
  75:sms/sms.h     ****     GprsTextModeSMS(USART);      
  76:sms/sms.h     ****   }
  77:sms/sms.h     **** 
  78:sms/sms.h     ****   found = strstr(msg, "+CMTI");
 8629               		.loc 13 78 0
 8630 2164 CE01      		movw r24,r28
 8631 2166 60E0      		ldi r22,lo8(.LC10)
 8632 2168 70E0      		ldi r23,hi8(.LC10)
 8633 216a 0E94 0000 		call strstr
 8634               	.LVL520:
  79:sms/sms.h     ****   if (found != NULL){
 8635               		.loc 13 79 0
 8636 216e 0097      		sbiw r24,0
 8637 2170 01F0      		breq .L337
  80:sms/sms.h     ****     //find comma
  81:sms/sms.h     ****     found = strstr(msg, ",");
 8638               		.loc 13 81 0
 8639 2172 CE01      		movw r24,r28
 8640               	.LVL521:
 8641 2174 6CE2      		ldi r22,lo8(44)
 8642 2176 70E0      		ldi r23,hi8(44)
 8643 2178 0E94 0000 		call strchr
 8644               	.LVL522:
  82:sms/sms.h     ****     smsStorePos = ++found;
 8645               		.loc 13 82 0
 8646 217c 0196      		adiw r24,1
 8647               	.LVL523:
 8648 217e 8093 0000 		sts smsStorePos,r24
 8649 2182 9093 0000 		sts smsStorePos+1,r25
  83:sms/sms.h     ****     send_string("Message found");
 8650               		.loc 13 83 0
 8651 2186 80E0      		ldi r24,lo8(.LC11)
 8652 2188 90E0      		ldi r25,hi8(.LC11)
 8653               	.LVL524:
 8654 218a 0E94 0000 		call send_string
 8655               	.LVL525:
  84:sms/sms.h     **** 
  85:sms/sms.h     ****     GprsReadSmsStore(smsStorePos, USART);
 8656               		.loc 13 85 0
 8657 218e 1091 0000 		lds r17,smsStorePos
 8658 2192 C091 0000 		lds r28,smsStorePos+1
 8659               	.LVL526:
 8660               	.LBB2540:
 8661               	.LBB2541:
 8662               	.LBB2542:
 8663               	.LBB2543:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 8664               		.loc 7 15 0
 8665 2196 E12F      		mov r30,r17
 8666 2198 FC2F      		mov r31,r28
 8667 219a DF01      		movw r26,r30
 8668 219c 0D90      		ld __tmp_reg__,X+
 8669 219e 0020      		tst __tmp_reg__
 8670 21a0 01F4      		brne .-6
 8671 21a2 CD01      		movw r24,r26
 8672 21a4 8E1B      		sub r24,r30
 8673 21a6 9F0B      		sbc r25,r31
 8674 21a8 0896      		adiw r24,8
 8675 21aa 0E94 0000 		call malloc
 8676               	.LVL527:
 8677 21ae F82E      		mov r15,r24
 8678 21b0 092F      		mov r16,r25
 8679               	.LVL528:
  17:concat/concat.h ****     strcpy(result, s1);
 8680               		.loc 7 17 0
 8681 21b2 E82F      		mov r30,r24
 8682 21b4 F92F      		mov r31,r25
 8683 21b6 A0E0      		ldi r26,lo8(.LC7)
 8684 21b8 B0E0      		ldi r27,hi8(.LC7)
 8685 21ba 89E0      		ldi r24,lo8(9)
 8686               	.LVL529:
 8687               	.L338:
 8688 21bc 0D90      		ld r0,X+
 8689 21be 0192      		st Z+,r0
 8690 21c0 8150      		subi r24,lo8(-(-1))
 8691 21c2 01F4      		brne .L338
  18:concat/concat.h ****     strcat(result, s2);
 8692               		.loc 7 18 0
 8693 21c4 8F2D      		mov r24,r15
 8694 21c6 902F      		mov r25,r16
 8695               	.LVL530:
 8696 21c8 612F      		mov r22,r17
 8697 21ca 7C2F      		mov r23,r28
 8698 21cc 0E94 0000 		call strcat
 8699               	.LBE2543:
 8700               	.LBE2542:
  62:sms/sms.h     ****   send_uart(cmd, USART);
 8701               		.loc 13 62 0
 8702 21d0 8F2D      		mov r24,r15
 8703 21d2 902F      		mov r25,r16
 8704 21d4 B601      		movw r22,r12
 8705 21d6 0E94 0000 		call send_uart
 8706 21da C091 0000 		lds r28,msg
 8707 21de D091 0000 		lds r29,msg+1
 8708               	.LVL531:
 8709               	.L337:
 8710               	.LBE2541:
 8711               	.LBE2540:
  86:sms/sms.h     ****   }
  87:sms/sms.h     **** 
  88:sms/sms.h     ****   found = strstr(msg, "+CMGR:");
 8712               		.loc 13 88 0
 8713 21e2 CE01      		movw r24,r28
 8714 21e4 60E0      		ldi r22,lo8(.LC12)
 8715 21e6 70E0      		ldi r23,hi8(.LC12)
 8716 21e8 0E94 0000 		call strstr
 8717               	.LVL532:
  89:sms/sms.h     ****   if (found != NULL) {
 8718               		.loc 13 89 0
 8719 21ec 0097      		sbiw r24,0
 8720 21ee 01F4      		brne .+2
 8721 21f0 00C0      		rjmp .L339
  90:sms/sms.h     ****     found = strstr(msg, "+1");
 8722               		.loc 13 90 0
 8723 21f2 CE01      		movw r24,r28
 8724               	.LVL533:
 8725 21f4 60E0      		ldi r22,lo8(.LC13)
 8726 21f6 70E0      		ldi r23,hi8(.LC13)
 8727 21f8 0E94 0000 		call strstr
 8728 21fc 5C01      		movw r10,r24
 8729               	.LVL534:
  91:sms/sms.h     ****     if (found != NULL) {
 8730               		.loc 13 91 0
 8731 21fe 0097      		sbiw r24,0
 8732 2200 01F4      		brne .+2
 8733 2202 00C0      		rjmp .L339
  92:sms/sms.h     ****       snTmp = ++found;
 8734               		.loc 13 92 0
 8735 2204 EC01      		movw r28,r24
 8736 2206 2196      		adiw r28,1
 8737               	.LVL535:
 8738 2208 C093 0000 		sts snTmp,r28
 8739 220c D093 0000 		sts snTmp+1,r29
  93:sms/sms.h     ****       snFull = "";
 8740               		.loc 13 93 0
 8741 2210 30E0      		ldi r19,lo8(.LC6)
 8742 2212 832E      		mov r8,r19
 8743 2214 30E0      		ldi r19,hi8(.LC6)
 8744 2216 932E      		mov r9,r19
 8745 2218 8092 0000 		sts snFull,r8
 8746 221c 9092 0000 		sts snFull+1,r9
 8747               	.LVL536:
 8748               	.LBB2544:
 8749               	.LBB2545:
 8750               	.LBB2546:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 8751               		.loc 7 15 0
 8752 2220 EC2F      		mov r30,r28
 8753 2222 FD2F      		mov r31,r29
 8754 2224 DF01      		movw r26,r30
 8755 2226 0D90      		ld __tmp_reg__,X+
 8756 2228 0020      		tst __tmp_reg__
 8757 222a 01F4      		brne .-6
 8758 222c CD01      		movw r24,r26
 8759 222e 8E1B      		sub r24,r30
 8760 2230 9F0B      		sbc r25,r31
 8761 2232 0E94 0000 		call malloc
 8762 2236 192F      		mov r17,r25
 8763 2238 E82E      		mov r14,r24
 8764 223a F92E      		mov r15,r25
 8765               	.LVL537:
  17:concat/concat.h ****     strcpy(result, s1);
 8766               		.loc 7 17 0
 8767 223c F701      		movw r30,r14
 8768 223e 1082      		st Z,__zero_reg__
  18:concat/concat.h ****     strcat(result, s2);
 8769               		.loc 7 18 0
 8770 2240 C701      		movw r24,r14
 8771 2242 BE01      		movw r22,r28
 8772 2244 0E94 0000 		call strcat
 8773               	.LBE2546:
 8774               	.LBE2545:
  94:sms/sms.h     ****       for (int i=0; i<11; i++) {
  95:sms/sms.h     ****         snFull = concat(snFull, &snTmp[i]);
 8775               		.loc 13 95 0
 8776 2248 E092 0000 		sts snFull,r14
 8777 224c F092 0000 		sts snFull+1,r15
 8778               	.LVL538:
  69:sms/sms.h     **** void ProcessGprsMsg(USART_t* USART) {
 8779               		.loc 13 69 0
 8780 2250 CE2D      		mov r28,r14
 8781               	.LVL539:
 8782 2252 D12F      		mov r29,r17
 8783 2254 DE01      		movw r26,r28
 8784 2256 0D90      		ld __tmp_reg__,X+
 8785 2258 0020      		tst __tmp_reg__
 8786 225a 01F4      		brne .-6
 8787 225c 9D01      		movw r18,r26
 8788               		.loc 13 95 0
 8789 225e 42E0      		ldi r20,lo8(2)
 8790 2260 C42E      		mov r12,r20
 8791 2262 D12C      		mov r13,__zero_reg__
 8792               	.LVL540:
 8793 2264 CA0C      		add r12,r10
 8794 2266 DB1C      		adc r13,r11
 8795               	.LVL541:
 8796               	.LBB2557:
 8797               	.LBB2547:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 8798               		.loc 7 15 0
 8799 2268 D601      		movw r26,r12
 8800 226a 0D90      		ld __tmp_reg__,X+
 8801 226c 0020      		tst __tmp_reg__
 8802 226e 01F4      		brne .-6
 8803 2270 CD01      		movw r24,r26
 8804 2272 0197      		sbiw r24,1
 8805 2274 8C19      		sub r24,r12
 8806 2276 9D09      		sbc r25,r13
 8807 2278 8C1B      		sub r24,r28
 8808 227a 9D0B      		sbc r25,r29
 8809 227c 820F      		add r24,r18
 8810 227e 931F      		adc r25,r19
 8811 2280 0E94 0000 		call malloc
 8812 2284 182F      		mov r17,r24
 8813 2286 092F      		mov r16,r25
 8814               	.LVL542:
  17:concat/concat.h ****     strcpy(result, s1);
 8815               		.loc 7 17 0
 8816 2288 B701      		movw r22,r14
 8817 228a 0E94 0000 		call strcpy
 8818               	.LVL543:
  18:concat/concat.h ****     strcat(result, s2);
 8819               		.loc 7 18 0
 8820 228e 812F      		mov r24,r17
 8821 2290 902F      		mov r25,r16
 8822 2292 B601      		movw r22,r12
 8823 2294 0E94 0000 		call strcat
 8824               	.LBE2547:
 8825               	.LBE2557:
 8826               		.loc 13 95 0
 8827 2298 1093 0000 		sts snFull,r17
 8828 229c 0093 0000 		sts snFull+1,r16
 8829               	.LVL544:
  69:sms/sms.h     **** void ProcessGprsMsg(USART_t* USART) {
 8830               		.loc 13 69 0
 8831 22a0 A12F      		mov r26,r17
 8832 22a2 B02F      		mov r27,r16
 8833 22a4 ED01      		movw r28,r26
 8834 22a6 0990      		ld __tmp_reg__,Y+
 8835 22a8 0020      		tst __tmp_reg__
 8836 22aa 01F4      		brne .-6
 8837 22ac 9E01      		movw r18,r28
 8838               		.loc 13 95 0
 8839 22ae 53E0      		ldi r21,lo8(3)
 8840 22b0 C52E      		mov r12,r21
 8841 22b2 D12C      		mov r13,__zero_reg__
 8842               	.LVL545:
 8843 22b4 CA0C      		add r12,r10
 8844 22b6 DB1C      		adc r13,r11
 8845               	.LVL546:
 8846               	.LBB2558:
 8847               	.LBB2548:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 8848               		.loc 7 15 0
 8849 22b8 E601      		movw r28,r12
 8850 22ba 0990      		ld __tmp_reg__,Y+
 8851 22bc 0020      		tst __tmp_reg__
 8852 22be 01F4      		brne .-6
 8853 22c0 CE01      		movw r24,r28
 8854 22c2 0197      		sbiw r24,1
 8855 22c4 8C19      		sub r24,r12
 8856 22c6 9D09      		sbc r25,r13
 8857 22c8 8A1B      		sub r24,r26
 8858 22ca 9B0B      		sbc r25,r27
 8859 22cc 820F      		add r24,r18
 8860 22ce 931F      		adc r25,r19
 8861 22d0 0E94 0000 		call malloc
 8862 22d4 F82E      		mov r15,r24
 8863 22d6 E92E      		mov r14,r25
 8864               	.LVL547:
  17:concat/concat.h ****     strcpy(result, s1);
 8865               		.loc 7 17 0
 8866 22d8 612F      		mov r22,r17
 8867 22da 702F      		mov r23,r16
 8868 22dc 0E94 0000 		call strcpy
 8869               	.LVL548:
  18:concat/concat.h ****     strcat(result, s2);
 8870               		.loc 7 18 0
 8871 22e0 8F2D      		mov r24,r15
 8872 22e2 9E2D      		mov r25,r14
 8873 22e4 B601      		movw r22,r12
 8874 22e6 0E94 0000 		call strcat
 8875               	.LBE2548:
 8876               	.LBE2558:
 8877               		.loc 13 95 0
 8878 22ea F092 0000 		sts snFull,r15
 8879 22ee E092 0000 		sts snFull+1,r14
 8880               	.LVL549:
  69:sms/sms.h     **** void ProcessGprsMsg(USART_t* USART) {
 8881               		.loc 13 69 0
 8882 22f2 AF2D      		mov r26,r15
 8883 22f4 BE2D      		mov r27,r14
 8884 22f6 FD01      		movw r30,r26
 8885 22f8 0190      		ld __tmp_reg__,Z+
 8886 22fa 0020      		tst __tmp_reg__
 8887 22fc 01F4      		brne .-6
 8888 22fe 9F01      		movw r18,r30
 8889               		.loc 13 95 0
 8890 2300 14E0      		ldi r17,lo8(4)
 8891 2302 C12E      		mov r12,r17
 8892 2304 D12C      		mov r13,__zero_reg__
 8893               	.LVL550:
 8894 2306 CA0C      		add r12,r10
 8895 2308 DB1C      		adc r13,r11
 8896               	.LVL551:
 8897               	.LBB2559:
 8898               	.LBB2549:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 8899               		.loc 7 15 0
 8900 230a E601      		movw r28,r12
 8901 230c 0990      		ld __tmp_reg__,Y+
 8902 230e 0020      		tst __tmp_reg__
 8903 2310 01F4      		brne .-6
 8904 2312 CE01      		movw r24,r28
 8905 2314 0197      		sbiw r24,1
 8906 2316 8C19      		sub r24,r12
 8907 2318 9D09      		sbc r25,r13
 8908 231a 8A1B      		sub r24,r26
 8909 231c 9B0B      		sbc r25,r27
 8910 231e 820F      		add r24,r18
 8911 2320 931F      		adc r25,r19
 8912 2322 0E94 0000 		call malloc
 8913 2326 182F      		mov r17,r24
 8914 2328 092F      		mov r16,r25
 8915               	.LVL552:
  17:concat/concat.h ****     strcpy(result, s1);
 8916               		.loc 7 17 0
 8917 232a 6F2D      		mov r22,r15
 8918 232c 7E2D      		mov r23,r14
 8919 232e 0E94 0000 		call strcpy
 8920               	.LVL553:
  18:concat/concat.h ****     strcat(result, s2);
 8921               		.loc 7 18 0
 8922 2332 812F      		mov r24,r17
 8923 2334 902F      		mov r25,r16
 8924 2336 B601      		movw r22,r12
 8925 2338 0E94 0000 		call strcat
 8926               	.LBE2549:
 8927               	.LBE2559:
 8928               		.loc 13 95 0
 8929 233c 1093 0000 		sts snFull,r17
 8930 2340 0093 0000 		sts snFull+1,r16
 8931               	.LVL554:
  69:sms/sms.h     **** void ProcessGprsMsg(USART_t* USART) {
 8932               		.loc 13 69 0
 8933 2344 A12F      		mov r26,r17
 8934 2346 B02F      		mov r27,r16
 8935 2348 FD01      		movw r30,r26
 8936 234a 0190      		ld __tmp_reg__,Z+
 8937 234c 0020      		tst __tmp_reg__
 8938 234e 01F4      		brne .-6
 8939 2350 9F01      		movw r18,r30
 8940               		.loc 13 95 0
 8941 2352 85E0      		ldi r24,lo8(5)
 8942 2354 C82E      		mov r12,r24
 8943 2356 D12C      		mov r13,__zero_reg__
 8944               	.LVL555:
 8945 2358 CA0C      		add r12,r10
 8946 235a DB1C      		adc r13,r11
 8947               	.LVL556:
 8948               	.LBB2560:
 8949               	.LBB2550:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 8950               		.loc 7 15 0
 8951 235c E601      		movw r28,r12
 8952 235e 0990      		ld __tmp_reg__,Y+
 8953 2360 0020      		tst __tmp_reg__
 8954 2362 01F4      		brne .-6
 8955 2364 CE01      		movw r24,r28
 8956 2366 0197      		sbiw r24,1
 8957 2368 8C19      		sub r24,r12
 8958 236a 9D09      		sbc r25,r13
 8959 236c 8A1B      		sub r24,r26
 8960 236e 9B0B      		sbc r25,r27
 8961 2370 820F      		add r24,r18
 8962 2372 931F      		adc r25,r19
 8963 2374 0E94 0000 		call malloc
 8964 2378 F82E      		mov r15,r24
 8965 237a E92E      		mov r14,r25
 8966               	.LVL557:
  17:concat/concat.h ****     strcpy(result, s1);
 8967               		.loc 7 17 0
 8968 237c 612F      		mov r22,r17
 8969 237e 702F      		mov r23,r16
 8970 2380 0E94 0000 		call strcpy
 8971               	.LVL558:
  18:concat/concat.h ****     strcat(result, s2);
 8972               		.loc 7 18 0
 8973 2384 8F2D      		mov r24,r15
 8974 2386 9E2D      		mov r25,r14
 8975 2388 B601      		movw r22,r12
 8976 238a 0E94 0000 		call strcat
 8977               	.LBE2550:
 8978               	.LBE2560:
 8979               		.loc 13 95 0
 8980 238e F092 0000 		sts snFull,r15
 8981 2392 E092 0000 		sts snFull+1,r14
 8982               	.LVL559:
  69:sms/sms.h     **** void ProcessGprsMsg(USART_t* USART) {
 8983               		.loc 13 69 0
 8984 2396 AF2D      		mov r26,r15
 8985 2398 BE2D      		mov r27,r14
 8986 239a FD01      		movw r30,r26
 8987 239c 0190      		ld __tmp_reg__,Z+
 8988 239e 0020      		tst __tmp_reg__
 8989 23a0 01F4      		brne .-6
 8990 23a2 9F01      		movw r18,r30
 8991               		.loc 13 95 0
 8992 23a4 96E0      		ldi r25,lo8(6)
 8993 23a6 C92E      		mov r12,r25
 8994 23a8 D12C      		mov r13,__zero_reg__
 8995               	.LVL560:
 8996 23aa CA0C      		add r12,r10
 8997 23ac DB1C      		adc r13,r11
 8998               	.LVL561:
 8999               	.LBB2561:
 9000               	.LBB2551:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 9001               		.loc 7 15 0
 9002 23ae E601      		movw r28,r12
 9003 23b0 0990      		ld __tmp_reg__,Y+
 9004 23b2 0020      		tst __tmp_reg__
 9005 23b4 01F4      		brne .-6
 9006 23b6 CE01      		movw r24,r28
 9007 23b8 0197      		sbiw r24,1
 9008 23ba 8C19      		sub r24,r12
 9009 23bc 9D09      		sbc r25,r13
 9010 23be 8A1B      		sub r24,r26
 9011 23c0 9B0B      		sbc r25,r27
 9012 23c2 820F      		add r24,r18
 9013 23c4 931F      		adc r25,r19
 9014 23c6 0E94 0000 		call malloc
 9015 23ca 182F      		mov r17,r24
 9016 23cc 092F      		mov r16,r25
 9017               	.LVL562:
  17:concat/concat.h ****     strcpy(result, s1);
 9018               		.loc 7 17 0
 9019 23ce 6F2D      		mov r22,r15
 9020 23d0 7E2D      		mov r23,r14
 9021 23d2 0E94 0000 		call strcpy
 9022               	.LVL563:
  18:concat/concat.h ****     strcat(result, s2);
 9023               		.loc 7 18 0
 9024 23d6 812F      		mov r24,r17
 9025 23d8 902F      		mov r25,r16
 9026 23da B601      		movw r22,r12
 9027 23dc 0E94 0000 		call strcat
 9028               	.LBE2551:
 9029               	.LBE2561:
 9030               		.loc 13 95 0
 9031 23e0 1093 0000 		sts snFull,r17
 9032 23e4 0093 0000 		sts snFull+1,r16
 9033               	.LVL564:
  69:sms/sms.h     **** void ProcessGprsMsg(USART_t* USART) {
 9034               		.loc 13 69 0
 9035 23e8 A12F      		mov r26,r17
 9036 23ea B02F      		mov r27,r16
 9037 23ec FD01      		movw r30,r26
 9038 23ee 0190      		ld __tmp_reg__,Z+
 9039 23f0 0020      		tst __tmp_reg__
 9040 23f2 01F4      		brne .-6
 9041 23f4 9F01      		movw r18,r30
 9042               		.loc 13 95 0
 9043 23f6 47E0      		ldi r20,lo8(7)
 9044 23f8 C42E      		mov r12,r20
 9045 23fa D12C      		mov r13,__zero_reg__
 9046               	.LVL565:
 9047 23fc CA0C      		add r12,r10
 9048 23fe DB1C      		adc r13,r11
 9049               	.LVL566:
 9050               	.LBB2562:
 9051               	.LBB2552:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 9052               		.loc 7 15 0
 9053 2400 E601      		movw r28,r12
 9054 2402 0990      		ld __tmp_reg__,Y+
 9055 2404 0020      		tst __tmp_reg__
 9056 2406 01F4      		brne .-6
 9057 2408 CE01      		movw r24,r28
 9058 240a 0197      		sbiw r24,1
 9059 240c 8C19      		sub r24,r12
 9060 240e 9D09      		sbc r25,r13
 9061 2410 8A1B      		sub r24,r26
 9062 2412 9B0B      		sbc r25,r27
 9063 2414 820F      		add r24,r18
 9064 2416 931F      		adc r25,r19
 9065 2418 0E94 0000 		call malloc
 9066 241c F82E      		mov r15,r24
 9067 241e E92E      		mov r14,r25
 9068               	.LVL567:
  17:concat/concat.h ****     strcpy(result, s1);
 9069               		.loc 7 17 0
 9070 2420 612F      		mov r22,r17
 9071 2422 702F      		mov r23,r16
 9072 2424 0E94 0000 		call strcpy
 9073               	.LVL568:
  18:concat/concat.h ****     strcat(result, s2);
 9074               		.loc 7 18 0
 9075 2428 8F2D      		mov r24,r15
 9076 242a 9E2D      		mov r25,r14
 9077 242c B601      		movw r22,r12
 9078 242e 0E94 0000 		call strcat
 9079               	.LBE2552:
 9080               	.LBE2562:
 9081               		.loc 13 95 0
 9082 2432 F092 0000 		sts snFull,r15
 9083 2436 E092 0000 		sts snFull+1,r14
 9084               	.LVL569:
  69:sms/sms.h     **** void ProcessGprsMsg(USART_t* USART) {
 9085               		.loc 13 69 0
 9086 243a AF2D      		mov r26,r15
 9087 243c BE2D      		mov r27,r14
 9088 243e FD01      		movw r30,r26
 9089 2440 0190      		ld __tmp_reg__,Z+
 9090 2442 0020      		tst __tmp_reg__
 9091 2444 01F4      		brne .-6
 9092 2446 9F01      		movw r18,r30
 9093               		.loc 13 95 0
 9094 2448 58E0      		ldi r21,lo8(8)
 9095 244a C52E      		mov r12,r21
 9096 244c D12C      		mov r13,__zero_reg__
 9097               	.LVL570:
 9098 244e CA0C      		add r12,r10
 9099 2450 DB1C      		adc r13,r11
 9100               	.LVL571:
 9101               	.LBB2563:
 9102               	.LBB2553:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 9103               		.loc 7 15 0
 9104 2452 E601      		movw r28,r12
 9105 2454 0990      		ld __tmp_reg__,Y+
 9106 2456 0020      		tst __tmp_reg__
 9107 2458 01F4      		brne .-6
 9108 245a CE01      		movw r24,r28
 9109 245c 0197      		sbiw r24,1
 9110 245e 8C19      		sub r24,r12
 9111 2460 9D09      		sbc r25,r13
 9112 2462 8A1B      		sub r24,r26
 9113 2464 9B0B      		sbc r25,r27
 9114 2466 820F      		add r24,r18
 9115 2468 931F      		adc r25,r19
 9116 246a 0E94 0000 		call malloc
 9117 246e 182F      		mov r17,r24
 9118 2470 092F      		mov r16,r25
 9119               	.LVL572:
  17:concat/concat.h ****     strcpy(result, s1);
 9120               		.loc 7 17 0
 9121 2472 6F2D      		mov r22,r15
 9122 2474 7E2D      		mov r23,r14
 9123 2476 0E94 0000 		call strcpy
 9124               	.LVL573:
  18:concat/concat.h ****     strcat(result, s2);
 9125               		.loc 7 18 0
 9126 247a 812F      		mov r24,r17
 9127 247c 902F      		mov r25,r16
 9128 247e B601      		movw r22,r12
 9129 2480 0E94 0000 		call strcat
 9130               	.LBE2553:
 9131               	.LBE2563:
 9132               		.loc 13 95 0
 9133 2484 1093 0000 		sts snFull,r17
 9134 2488 0093 0000 		sts snFull+1,r16
 9135               	.LVL574:
  69:sms/sms.h     **** void ProcessGprsMsg(USART_t* USART) {
 9136               		.loc 13 69 0
 9137 248c A12F      		mov r26,r17
 9138 248e B02F      		mov r27,r16
 9139 2490 FD01      		movw r30,r26
 9140 2492 0190      		ld __tmp_reg__,Z+
 9141 2494 0020      		tst __tmp_reg__
 9142 2496 01F4      		brne .-6
 9143 2498 9F01      		movw r18,r30
 9144               		.loc 13 95 0
 9145 249a 89E0      		ldi r24,lo8(9)
 9146 249c C82E      		mov r12,r24
 9147 249e D12C      		mov r13,__zero_reg__
 9148               	.LVL575:
 9149 24a0 CA0C      		add r12,r10
 9150 24a2 DB1C      		adc r13,r11
 9151               	.LVL576:
 9152               	.LBB2564:
 9153               	.LBB2554:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 9154               		.loc 7 15 0
 9155 24a4 E601      		movw r28,r12
 9156 24a6 0990      		ld __tmp_reg__,Y+
 9157 24a8 0020      		tst __tmp_reg__
 9158 24aa 01F4      		brne .-6
 9159 24ac CE01      		movw r24,r28
 9160 24ae 0197      		sbiw r24,1
 9161 24b0 8C19      		sub r24,r12
 9162 24b2 9D09      		sbc r25,r13
 9163 24b4 8A1B      		sub r24,r26
 9164 24b6 9B0B      		sbc r25,r27
 9165 24b8 820F      		add r24,r18
 9166 24ba 931F      		adc r25,r19
 9167 24bc 0E94 0000 		call malloc
 9168 24c0 F82E      		mov r15,r24
 9169 24c2 E92E      		mov r14,r25
 9170               	.LVL577:
  17:concat/concat.h ****     strcpy(result, s1);
 9171               		.loc 7 17 0
 9172 24c4 612F      		mov r22,r17
 9173 24c6 702F      		mov r23,r16
 9174 24c8 0E94 0000 		call strcpy
 9175               	.LVL578:
  18:concat/concat.h ****     strcat(result, s2);
 9176               		.loc 7 18 0
 9177 24cc 8F2D      		mov r24,r15
 9178 24ce 9E2D      		mov r25,r14
 9179 24d0 B601      		movw r22,r12
 9180 24d2 0E94 0000 		call strcat
 9181               	.LBE2554:
 9182               	.LBE2564:
 9183               		.loc 13 95 0
 9184 24d6 F092 0000 		sts snFull,r15
 9185 24da E092 0000 		sts snFull+1,r14
 9186               	.LVL579:
  69:sms/sms.h     **** void ProcessGprsMsg(USART_t* USART) {
 9187               		.loc 13 69 0
 9188 24de AF2D      		mov r26,r15
 9189 24e0 BE2D      		mov r27,r14
 9190 24e2 FD01      		movw r30,r26
 9191 24e4 0190      		ld __tmp_reg__,Z+
 9192 24e6 0020      		tst __tmp_reg__
 9193 24e8 01F4      		brne .-6
 9194 24ea 9F01      		movw r18,r30
 9195               		.loc 13 95 0
 9196 24ec 9AE0      		ldi r25,lo8(10)
 9197 24ee C92E      		mov r12,r25
 9198 24f0 D12C      		mov r13,__zero_reg__
 9199               	.LVL580:
 9200 24f2 CA0C      		add r12,r10
 9201 24f4 DB1C      		adc r13,r11
 9202               	.LVL581:
 9203               	.LBB2565:
 9204               	.LBB2555:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 9205               		.loc 7 15 0
 9206 24f6 E601      		movw r28,r12
 9207 24f8 0990      		ld __tmp_reg__,Y+
 9208 24fa 0020      		tst __tmp_reg__
 9209 24fc 01F4      		brne .-6
 9210 24fe CE01      		movw r24,r28
 9211 2500 0197      		sbiw r24,1
 9212 2502 8C19      		sub r24,r12
 9213 2504 9D09      		sbc r25,r13
 9214 2506 8A1B      		sub r24,r26
 9215 2508 9B0B      		sbc r25,r27
 9216 250a 820F      		add r24,r18
 9217 250c 931F      		adc r25,r19
 9218 250e 0E94 0000 		call malloc
 9219 2512 C82F      		mov r28,r24
 9220 2514 192F      		mov r17,r25
 9221               	.LVL582:
  17:concat/concat.h ****     strcpy(result, s1);
 9222               		.loc 7 17 0
 9223 2516 6F2D      		mov r22,r15
 9224 2518 7E2D      		mov r23,r14
 9225 251a 0E94 0000 		call strcpy
 9226               	.LVL583:
  18:concat/concat.h ****     strcat(result, s2);
 9227               		.loc 7 18 0
 9228 251e 8C2F      		mov r24,r28
 9229 2520 912F      		mov r25,r17
 9230 2522 B601      		movw r22,r12
 9231 2524 0E94 0000 		call strcat
 9232               	.LBE2555:
 9233               	.LBE2565:
 9234               		.loc 13 95 0
 9235 2528 C093 0000 		sts snFull,r28
 9236 252c 1093 0000 		sts snFull+1,r17
 9237               	.LVL584:
  69:sms/sms.h     **** void ProcessGprsMsg(USART_t* USART) {
 9238               		.loc 13 69 0
 9239 2530 EC2F      		mov r30,r28
 9240 2532 F12F      		mov r31,r17
 9241 2534 DF01      		movw r26,r30
 9242 2536 0D90      		ld __tmp_reg__,X+
 9243 2538 0020      		tst __tmp_reg__
 9244 253a 01F4      		brne .-6
 9245 253c 1197      		sbiw r26,1
 9246 253e AE1B      		sub r26,r30
 9247 2540 BF0B      		sbc r27,r31
 9248               		.loc 13 95 0
 9249 2542 4BE0      		ldi r20,lo8(11)
 9250 2544 E42E      		mov r14,r20
 9251 2546 F12C      		mov r15,__zero_reg__
 9252               	.LVL585:
 9253 2548 EA0C      		add r14,r10
 9254 254a FB1C      		adc r15,r11
 9255               	.LVL586:
 9256               	.LBB2566:
 9257               	.LBB2556:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 9258               		.loc 7 15 0
 9259 254c F701      		movw r30,r14
 9260 254e 0190      		ld __tmp_reg__,Z+
 9261 2550 0020      		tst __tmp_reg__
 9262 2552 01F4      		brne .-6
 9263 2554 CF01      		movw r24,r30
 9264 2556 8E19      		sub r24,r14
 9265 2558 9F09      		sbc r25,r15
 9266 255a 8A0F      		add r24,r26
 9267 255c 9B1F      		adc r25,r27
 9268 255e 0E94 0000 		call malloc
 9269 2562 C82E      		mov r12,r24
 9270 2564 092F      		mov r16,r25
 9271               	.LVL587:
  17:concat/concat.h ****     strcpy(result, s1);
 9272               		.loc 7 17 0
 9273 2566 6C2F      		mov r22,r28
 9274 2568 712F      		mov r23,r17
 9275 256a 0E94 0000 		call strcpy
 9276               	.LVL588:
  18:concat/concat.h ****     strcat(result, s2);
 9277               		.loc 7 18 0
 9278 256e 8C2D      		mov r24,r12
 9279 2570 902F      		mov r25,r16
 9280 2572 B701      		movw r22,r14
 9281 2574 0E94 0000 		call strcat
 9282               	.LBE2556:
 9283               	.LBE2566:
 9284               		.loc 13 95 0
 9285 2578 C092 0000 		sts snFull,r12
 9286 257c 0093 0000 		sts snFull+1,r16
 9287               	.LVL589:
 9288               	.LBE2544:
  96:sms/sms.h     ****       }
  97:sms/sms.h     ****       send_string(snFull);
 9289               		.loc 13 97 0
 9290 2580 8C2D      		mov r24,r12
 9291 2582 902F      		mov r25,r16
 9292 2584 0E94 0000 		call send_string
  98:sms/sms.h     **** 
  99:sms/sms.h     ****       SmsContentFlag = 1;
 9293               		.loc 13 99 0
 9294 2588 81E0      		ldi r24,lo8(1)
 9295 258a 90E0      		ldi r25,hi8(1)
 9296 258c 8093 0000 		sts SmsContentFlag,r24
 9297 2590 9093 0000 		sts SmsContentFlag+1,r25
 9298               	.LBB2567:
 9299               	.LBB2568:
  57:sms/sms.h     ****   msg = "";
 9300               		.loc 13 57 0
 9301 2594 8092 0000 		sts msg,r8
 9302 2598 9092 0000 		sts msg+1,r9
 9303               	.LVL590:
 9304               	.L335:
 9305               	/* epilogue start */
 9306               	.LBE2568:
 9307               	.LBE2567:
 100:sms/sms.h     ****       ClearGprsMsg();
 101:sms/sms.h     ****       return;
 102:sms/sms.h     ****     } 
 103:sms/sms.h     ****   }
 104:sms/sms.h     **** 
 105:sms/sms.h     ****   if (SmsContentFlag == 1){
 106:sms/sms.h     ****     send_string(msg);
 107:sms/sms.h     ****     ProcessSms(msg);
 108:sms/sms.h     ****     delSMS(USART);
 109:sms/sms.h     ****   }
 110:sms/sms.h     **** 
 111:sms/sms.h     ****   ClearGprsMsg();
 112:sms/sms.h     ****   SmsContentFlag = 0; 
 113:sms/sms.h     **** }
 9308               		.loc 13 113 0
 9309 259c DF91      		pop r29
 9310 259e CF91      		pop r28
 9311 25a0 1F91      		pop r17
 9312 25a2 0F91      		pop r16
 9313 25a4 FF90      		pop r15
 9314 25a6 EF90      		pop r14
 9315 25a8 DF90      		pop r13
 9316 25aa CF90      		pop r12
 9317 25ac BF90      		pop r11
 9318 25ae AF90      		pop r10
 9319 25b0 9F90      		pop r9
 9320 25b2 8F90      		pop r8
 9321 25b4 0895      		ret
 9322               	.LVL591:
 9323               	.L339:
 105:sms/sms.h     ****   if (SmsContentFlag == 1){
 9324               		.loc 13 105 0
 9325 25b6 8091 0000 		lds r24,SmsContentFlag
 9326 25ba 9091 0000 		lds r25,SmsContentFlag+1
 9327               	.LVL592:
 9328 25be 8130      		cpi r24,1
 9329 25c0 9105      		cpc r25,__zero_reg__
 9330 25c2 01F0      		breq .L345
 9331               	.L341:
 9332               	.LBB2569:
 9333               	.LBB2570:
  57:sms/sms.h     ****   msg = "";
 9334               		.loc 13 57 0
 9335 25c4 80E0      		ldi r24,lo8(.LC6)
 9336 25c6 90E0      		ldi r25,hi8(.LC6)
 9337 25c8 8093 0000 		sts msg,r24
 9338 25cc 9093 0000 		sts msg+1,r25
 9339               	.LBE2570:
 9340               	.LBE2569:
 112:sms/sms.h     ****   SmsContentFlag = 0; 
 9341               		.loc 13 112 0
 9342 25d0 1092 0000 		sts SmsContentFlag,__zero_reg__
 9343 25d4 1092 0000 		sts SmsContentFlag+1,__zero_reg__
 9344 25d8 00C0      		rjmp .L335
 9345               	.L345:
 106:sms/sms.h     ****     send_string(msg);
 9346               		.loc 13 106 0
 9347 25da CE01      		movw r24,r28
 9348 25dc 0E94 0000 		call send_string
 9349               	.LVL593:
 9350               	.LBB2571:
 9351               	.LBB2572:
  48:sms/sms.h     ****   char* delete_cmd = concat(cmd, smsStorePos);
 9352               		.loc 13 48 0
 9353 25e0 0091 0000 		lds r16,smsStorePos
 9354 25e4 F090 0000 		lds r15,smsStorePos+1
 9355               	.LVL594:
 9356               	.LBB2573:
 9357               	.LBB2574:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 9358               		.loc 7 15 0
 9359 25e8 E02F      		mov r30,r16
 9360 25ea FF2D      		mov r31,r15
 9361 25ec DF01      		movw r26,r30
 9362 25ee 0D90      		ld __tmp_reg__,X+
 9363 25f0 0020      		tst __tmp_reg__
 9364 25f2 01F4      		brne .-6
 9365 25f4 CD01      		movw r24,r26
 9366 25f6 8E1B      		sub r24,r30
 9367 25f8 9F0B      		sbc r25,r31
 9368 25fa 0896      		adiw r24,8
 9369 25fc 0E94 0000 		call malloc
 9370               	.LVL595:
 9371 2600 182F      		mov r17,r24
 9372 2602 C92F      		mov r28,r25
 9373               	.LVL596:
  17:concat/concat.h ****     strcpy(result, s1);
 9374               		.loc 7 17 0
 9375 2604 E82F      		mov r30,r24
 9376 2606 F92F      		mov r31,r25
 9377 2608 A0E0      		ldi r26,lo8(.LC5)
 9378 260a B0E0      		ldi r27,hi8(.LC5)
 9379 260c 89E0      		ldi r24,lo8(9)
 9380               	.LVL597:
 9381               	.L342:
 9382 260e 0D90      		ld r0,X+
 9383 2610 0192      		st Z+,r0
 9384 2612 8150      		subi r24,lo8(-(-1))
 9385 2614 01F4      		brne .L342
  18:concat/concat.h ****     strcat(result, s2);
 9386               		.loc 7 18 0
 9387 2616 812F      		mov r24,r17
 9388 2618 9C2F      		mov r25,r28
 9389               	.LVL598:
 9390 261a 602F      		mov r22,r16
 9391 261c 7F2D      		mov r23,r15
 9392 261e 0E94 0000 		call strcat
 9393               	.LBE2574:
 9394               	.LBE2573:
  49:sms/sms.h     ****   send_uart(delete_cmd, USART);
 9395               		.loc 13 49 0
 9396 2622 812F      		mov r24,r17
 9397 2624 9C2F      		mov r25,r28
 9398 2626 B601      		movw r22,r12
 9399 2628 0E94 0000 		call send_uart
 9400 262c 00C0      		rjmp .L341
 9401               	.LBE2572:
 9402               	.LBE2571:
 9403               		.cfi_endproc
 9404               	.LFE80:
 9406               	.global	ReceiveTextMessage
 9408               	ReceiveTextMessage:
 9409               	.LFB81:
 114:sms/sms.h     **** 
 115:sms/sms.h     **** void ReceiveTextMessage(USART_t* USART) {
 9410               		.loc 13 115 0
 9411               		.cfi_startproc
 9412               	.LVL599:
 9413 262e CF93      		push r28
 9414               	.LCFI143:
 9415               		.cfi_def_cfa_offset 3
 9416               		.cfi_offset 28, -2
 9417 2630 DF93      		push r29
 9418               	.LCFI144:
 9419               		.cfi_def_cfa_offset 4
 9420               		.cfi_offset 29, -3
 9421 2632 00D0      		rcall .
 9422               	.LCFI145:
 9423               		.cfi_def_cfa_offset 6
 9424 2634 CDB7      		in r28,__SP_L__
 9425 2636 DEB7      		in r29,__SP_H__
 9426               	.LCFI146:
 9427               		.cfi_def_cfa_register 28
 9428               	/* prologue: function */
 9429               	/* frame size = 2 */
 9430               	/* stack size = 4 */
 9431               	.L__stack_usage = 4
 9432 2638 6C01      		movw r12,r24
 9433 263a 00E0      		ldi r16,lo8(SerialInByte)
 9434 263c 10E0      		ldi r17,hi8(SerialInByte)
 9435               	.LVL600:
 9436               	.L353:
 9437               	.LBB2579:
 9438               	.LBB2580:
  30:uart/uart.h   ****     while ( !( USART->STATUS & USART_RXCIF_bm) ); 
 9439               		.loc 9 30 0
 9440 263e D601      		movw r26,r12
 9441 2640 1196      		adiw r26,1
 9442 2642 8C91      		ld r24,X
 9443 2644 1197      		sbiw r26,1
 9444 2646 87FF      		sbrs r24,7
 9445 2648 00C0      		rjmp .L353
  33:uart/uart.h   ****     return USART->DATA; 
 9446               		.loc 9 33 0
 9447 264a 8C91      		ld r24,X
 9448               	.LBE2580:
 9449               	.LBE2579:
 116:sms/sms.h     ****   while(1) {
 117:sms/sms.h     ****     SerialInByte = uart_getchar(USART);
 9450               		.loc 13 117 0
 9451 264c 8093 0000 		sts SerialInByte,r24
 118:sms/sms.h     ****     if (SerialInByte == 13){
 9452               		.loc 13 118 0
 9453 2650 8D30      		cpi r24,lo8(13)
 9454 2652 01F0      		breq .L354
 119:sms/sms.h     ****       ProcessGprsMsg(USART);
 120:sms/sms.h     ****     } else if (SerialInByte == 10){
 9455               		.loc 13 120 0
 9456 2654 8A30      		cpi r24,lo8(10)
 9457 2656 01F0      		breq .L353
 121:sms/sms.h     ****       //pass
 122:sms/sms.h     ****     } else{
 123:sms/sms.h     ****       msg = concat(msg, &SerialInByte);
 9458               		.loc 13 123 0
 9459 2658 6091 0000 		lds r22,msg
 9460 265c 7091 0000 		lds r23,msg+1
 9461               	.LVL601:
 9462               	.LBB2581:
 9463               	.LBB2582:
  15:concat/concat.h ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 9464               		.loc 7 15 0
 9465 2660 FB01      		movw r30,r22
 9466 2662 DF01      		movw r26,r30
 9467 2664 0D90      		ld __tmp_reg__,X+
 9468 2666 0020      		tst __tmp_reg__
 9469 2668 01F4      		brne .-6
 9470 266a CD01      		movw r24,r26
 9471 266c 0197      		sbiw r24,1
 9472 266e 8E1B      		sub r24,r30
 9473 2670 9F0B      		sbc r25,r31
 9474 2672 F801      		movw r30,r16
 9475 2674 0190      		ld __tmp_reg__,Z+
 9476 2676 0020      		tst __tmp_reg__
 9477 2678 01F4      		brne .-6
 9478 267a 8E0F      		add r24,r30
 9479 267c 9F1F      		adc r25,r31
 9480 267e 8050      		subi r24,lo8(SerialInByte)
 9481 2680 9040      		sbci r25,hi8(SerialInByte)
 9482 2682 6983      		std Y+1,r22
 9483 2684 7A83      		std Y+2,r23
 9484 2686 0E94 0000 		call malloc
 9485               	.LVL602:
 9486 268a 7C01      		movw r14,r24
 9487               	.LVL603:
  17:concat/concat.h ****     strcpy(result, s1);
 9488               		.loc 7 17 0
 9489 268c 6981      		ldd r22,Y+1
 9490 268e 7A81      		ldd r23,Y+2
 9491 2690 0E94 0000 		call strcpy
 9492               	.LVL604:
  18:concat/concat.h ****     strcat(result, s2);
 9493               		.loc 7 18 0
 9494 2694 C701      		movw r24,r14
 9495 2696 60E0      		ldi r22,lo8(SerialInByte)
 9496 2698 70E0      		ldi r23,hi8(SerialInByte)
 9497 269a 0E94 0000 		call strcat
 9498               	.LBE2582:
 9499               	.LBE2581:
 9500               		.loc 13 123 0
 9501 269e E092 0000 		sts msg,r14
 9502 26a2 F092 0000 		sts msg+1,r15
 9503 26a6 00C0      		rjmp .L353
 9504               	.LVL605:
 9505               	.L354:
 119:sms/sms.h     ****       ProcessGprsMsg(USART);
 9506               		.loc 13 119 0
 9507 26a8 C601      		movw r24,r12
 9508 26aa 0E94 0000 		call ProcessGprsMsg
 9509 26ae 00C0      		rjmp .L353
 9510               		.cfi_endproc
 9511               	.LFE81:
 9513               		.data
 9514               	.LC14:
 9515 00be 5049 4E47 		.string	"PING"
 9515      00
 9516               	.LC15:
 9517 00c3 5465 7874 		.string	"Text Mode"
 9517      204D 6F64 
 9517      6500 
 9518               	.LC16:
 9519 00cd 4154 2B43 		.string	"AT+CMGL=\"ALL\""
 9519      4D47 4C3D 
 9519      2241 4C4C 
 9519      2200 
 9520               	.LC17:
 9521 00db 5265 6164 		.string	"Read Messages"
 9521      204D 6573 
 9521      7361 6765 
 9521      7300 
 9522               		.text
 9523               	.global	SimpleReceive
 9525               	SimpleReceive:
 9526               	.LFB82:
 124:sms/sms.h     ****     }
 125:sms/sms.h     ****   }
 126:sms/sms.h     **** }
 127:sms/sms.h     **** 
 128:sms/sms.h     **** void SimpleReceive(USART_t* USART) {
 9527               		.loc 13 128 0
 9528               		.cfi_startproc
 9529               	.LVL606:
 9530 26b0 4F92      		push r4
 9531               	.LCFI147:
 9532               		.cfi_def_cfa_offset 3
 9533               		.cfi_offset 4, -2
 9534 26b2 5F92      		push r5
 9535               	.LCFI148:
 9536               		.cfi_def_cfa_offset 4
 9537               		.cfi_offset 5, -3
 9538 26b4 6F92      		push r6
 9539               	.LCFI149:
 9540               		.cfi_def_cfa_offset 5
 9541               		.cfi_offset 6, -4
 9542 26b6 7F92      		push r7
 9543               	.LCFI150:
 9544               		.cfi_def_cfa_offset 6
 9545               		.cfi_offset 7, -5
 9546 26b8 8F92      		push r8
 9547               	.LCFI151:
 9548               		.cfi_def_cfa_offset 7
 9549               		.cfi_offset 8, -6
 9550 26ba 9F92      		push r9
 9551               	.LCFI152:
 9552               		.cfi_def_cfa_offset 8
 9553               		.cfi_offset 9, -7
 9554 26bc AF92      		push r10
 9555               	.LCFI153:
 9556               		.cfi_def_cfa_offset 9
 9557               		.cfi_offset 10, -8
 9558 26be BF92      		push r11
 9559               	.LCFI154:
 9560               		.cfi_def_cfa_offset 10
 9561               		.cfi_offset 11, -9
 9562 26c0 CF92      		push r12
 9563               	.LCFI155:
 9564               		.cfi_def_cfa_offset 11
 9565               		.cfi_offset 12, -10
 9566 26c2 DF92      		push r13
 9567               	.LCFI156:
 9568               		.cfi_def_cfa_offset 12
 9569               		.cfi_offset 13, -11
 9570 26c4 EF92      		push r14
 9571               	.LCFI157:
 9572               		.cfi_def_cfa_offset 13
 9573               		.cfi_offset 14, -12
 9574 26c6 FF92      		push r15
 9575               	.LCFI158:
 9576               		.cfi_def_cfa_offset 14
 9577               		.cfi_offset 15, -13
 9578 26c8 0F93      		push r16
 9579               	.LCFI159:
 9580               		.cfi_def_cfa_offset 15
 9581               		.cfi_offset 16, -14
 9582 26ca 1F93      		push r17
 9583               	.LCFI160:
 9584               		.cfi_def_cfa_offset 16
 9585               		.cfi_offset 17, -15
 9586 26cc CF93      		push r28
 9587               	.LCFI161:
 9588               		.cfi_def_cfa_offset 17
 9589               		.cfi_offset 28, -16
 9590 26ce DF93      		push r29
 9591               	.LCFI162:
 9592               		.cfi_def_cfa_offset 18
 9593               		.cfi_offset 29, -17
 9594               	/* prologue: function */
 9595               	/* frame size = 0 */
 9596               	/* stack size = 16 */
 9597               	.L__stack_usage = 16
 9598 26d0 EC01      		movw r28,r24
 9599               	.LVL607:
 9600               	.L356:
 9601               	.LBB2761:
 9602               	.LBB2762:
  18:uart/uart.h   ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 9603               		.loc 9 18 0
 9604 26d2 8981      		ldd r24,Y+1
 9605 26d4 85FF      		sbrs r24,5
 9606 26d6 00C0      		rjmp .L356
  21:uart/uart.h   ****     USART->DATA = c; 
 9607               		.loc 9 21 0
 9608 26d8 8DE0      		ldi r24,lo8(13)
 9609 26da 8883      		st Y,r24
 9610               	.LVL608:
 9611               	.LBE2762:
 9612               	.LBE2761:
 9613               	.LBB2763:
 9614               	.LBB2764:
 9615               		.loc 11 164 0
 9616 26dc 8FEF      		 ldi r24,lo8(639999)
 9617 26de 93EC      	    ldi r25,hi8(639999)
 9618 26e0 A9E0      	    ldi r26,hlo8(639999)
 9619 26e2 8150      	    1:subi r24,1
 9620 26e4 9040      	    sbci r25,0
 9621 26e6 A040      	    sbci r26,0
 9622 26e8 01F4      	    brne 1b
 9623 26ea 00C0      		rjmp .
 9624 26ec 0000      		nop
 9625               	.LBE2764:
 9626               	.LBE2763:
 129:sms/sms.h     ****   char c;
 130:sms/sms.h     ****   uart_putchar('\r', USART);
 131:sms/sms.h     ****   _delay_ms(100);
 132:sms/sms.h     ****   send_string("PING");
 9627               		.loc 13 132 0
 9628 26ee 80E0      		ldi r24,lo8(.LC14)
 9629 26f0 90E0      		ldi r25,hi8(.LC14)
 9630 26f2 0E94 0000 		call send_string
 9631               	.LVL609:
 9632               	.LBB2765:
 9633               	.LBB2766:
  53:sms/sms.h     ****   send_uart("AT+CMGF=1", USART);
 9634               		.loc 13 53 0
 9635 26f6 80E0      		ldi r24,lo8(.LC3)
 9636 26f8 90E0      		ldi r25,hi8(.LC3)
 9637 26fa BE01      		movw r22,r28
 9638 26fc 0E94 0000 		call send_uart
 9639               	.LVL610:
 9640               	.LBE2766:
 9641               	.LBE2765:
 9642               	.LBB2767:
 9643               	.LBB2768:
 9644               		.loc 11 164 0
 9645 2700 8FEF      		 ldi r24,lo8(639999)
 9646 2702 93EC      	    ldi r25,hi8(639999)
 9647 2704 A9E0      	    ldi r26,hlo8(639999)
 9648 2706 8150      	    1:subi r24,1
 9649 2708 9040      	    sbci r25,0
 9650 270a A040      	    sbci r26,0
 9651 270c 01F4      	    brne 1b
 9652 270e 00C0      		rjmp .
 9653 2710 0000      		nop
 9654               	.LBE2768:
 9655               	.LBE2767:
 133:sms/sms.h     ****   GprsTextModeSMS(USART);
 134:sms/sms.h     ****   _delay_ms(100);
 135:sms/sms.h     ****   send_string("Text Mode");
 9656               		.loc 13 135 0
 9657 2712 80E0      		ldi r24,lo8(.LC15)
 9658 2714 90E0      		ldi r25,hi8(.LC15)
 9659 2716 0E94 0000 		call send_string
 136:sms/sms.h     ****   send_uart("AT+CMGL=\"ALL\"", USART); // Read Message 
 9660               		.loc 13 136 0
 9661 271a 80E0      		ldi r24,lo8(.LC16)
 9662 271c 90E0      		ldi r25,hi8(.LC16)
 9663 271e BE01      		movw r22,r28
 9664 2720 0E94 0000 		call send_uart
 9665               	.LVL611:
 9666               	.LBB2769:
 9667               	.LBB2770:
 9668               		.loc 11 164 0
 9669 2724 8FEF      		 ldi r24,lo8(6399999)
 9670 2726 97EA      	    ldi r25,hi8(6399999)
 9671 2728 A1E6      	    ldi r26,hlo8(6399999)
 9672 272a 8150      	    1:subi r24,1
 9673 272c 9040      	    sbci r25,0
 9674 272e A040      	    sbci r26,0
 9675 2730 01F4      	    brne 1b
 9676 2732 00C0      		rjmp .
 9677 2734 0000      		nop
 9678               	.LBE2770:
 9679               	.LBE2769:
 137:sms/sms.h     ****   _delay_ms(1000);
 138:sms/sms.h     ****   send_string("Read Messages");
 9680               		.loc 13 138 0
 9681 2736 80E0      		ldi r24,lo8(.LC17)
 9682 2738 90E0      		ldi r25,hi8(.LC17)
 9683 273a 0E94 0000 		call send_string
 9684               	.LVL612:
 9685 273e 54E6      		ldi r21,lo8(100)
 9686 2740 A52E      		mov r10,r21
 9687 2742 B12C      		mov r11,__zero_reg__
 9688 2744 A0E0      		ldi r26,lo8(endpoints+24)
 9689 2746 B0E0      		ldi r27,hi8(endpoints+24)
 9690               	.LBB2771:
 9691               	.LBB2772:
 9692               	.LBB2773:
 9693               	.LBB2774:
 9694               	.LBB2775:
 9695               	.LBB2776:
 9696               	.LBB2777:
 9697               	.LBB2778:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 9698               		.loc 4 57 0
 9699 2748 46E0      		ldi r20,lo8(6)
 9700               	.LBE2778:
 9701               	.LBE2777:
 9702               	.LBE2776:
 9703               	.LBE2775:
 9704               	.LBE2774:
 9705               	.LBE2773:
 9706               	.LBE2772:
 9707               	.LBB2857:
 9708               	.LBB2858:
 9709               	.LBB2859:
 9710               	.LBB2860:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 9711               		.loc 2 110 0
 9712 274a 4424      		clr r4
 9713 274c 4394      		inc r4
 9714               	.LBE2860:
 9715               	.LBE2859:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 9716               		.loc 1 27 0
 9717 274e E0EC      		ldi r30,lo8(1216)
 9718 2750 6E2E      		mov r6,r30
 9719 2752 E4E0      		ldi r30,hi8(1216)
 9720 2754 7E2E      		mov r7,r30
 9721 2756 F2E0      		ldi r31,lo8(2)
 9722 2758 5F2E      		mov r5,r31
 9723               	.LBB2924:
 9724               	.LBB2925:
 9725               	.LBB2926:
 9726               	.LBB2927:
 9727               	.LBB2928:
 9728               		.loc 4 91 0
 9729 275a 10E0      		ldi r17,lo8(ep_in_pipe_buffer)
 9730 275c 812E      		mov r8,r17
 9731 275e 10E0      		ldi r17,hi8(ep_in_pipe_buffer)
 9732 2760 912E      		mov r9,r17
 9733               	.LBE2928:
 9734               	.LBE2927:
 9735               	.LBE2926:
 9736               	.LBE2925:
 9737               	.LBE2924:
 9738               	.LBB2939:
 9739               	.LBB2919:
 9740               	.LBB2861:
 9741               	.LBB2862:
 9742               	.LBB2863:
 9743               	.LBB2864:
 9744               	.LBB2865:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 9745               		.loc 2 69 0
 9746 2762 01E0      		ldi r16,lo8(1)
 9747 2764 E02E      		mov r14,r16
 9748 2766 F12C      		mov r15,__zero_reg__
 9749               	.LBE2865:
 9750               	.LBE2864:
 9751               	.LBB2873:
 9752               	.LBB2874:
 9753               	.LBB2875:
 9754               	.LBB2876:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9755               		.loc 5 169 0
 9756 2768 20E4      		ldi r18,lo8(64)
 9757 276a C22E      		mov r12,r18
 9758 276c D12C      		mov r13,__zero_reg__
 9759               	.LVL613:
 9760               	.L394:
 9761               	.LBE2876:
 9762               	.LBE2875:
 9763               	.LBE2874:
 9764               	.LBE2873:
 9765               	.LBE2863:
 9766               	.LBE2862:
 9767               	.LBE2861:
 9768               	.LBE2919:
 9769               	.LBE2939:
 9770               	.LBE2858:
 9771               	.LBE2857:
 9772               	.LBB2962:
 9773               	.LBB2963:
  30:uart/uart.h   ****     while ( !( USART->STATUS & USART_RXCIF_bm) ); 
 9774               		.loc 9 30 0
 9775 276e 8981      		ldd r24,Y+1
 9776 2770 87FF      		sbrs r24,7
 9777 2772 00C0      		rjmp .L394
  33:uart/uart.h   ****     return USART->DATA; 
 9778               		.loc 9 33 0
 9779 2774 3881      		ld r19,Y
 9780               	.LVL614:
 9781               	.L360:
 9782               	.LBE2963:
 9783               	.LBE2962:
 9784               	.LBB2964:
 9785               	.LBB2853:
 9786               	.LBB2789:
 9787               	.LBB2787:
 9788               	.LBB2785:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 9789               		.loc 2 123 0
 9790 2776 9FB7      		in r25,__SREG__
 9791               	.LVL615:
 9792               	.LBB2780:
 9793               	.LBB2781:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 9794               		.loc 3 50 0
 9795               	/* #APP */
 9796               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 9797 2778 F894      		cli
 9798               	 ;  0 "" 2
 9799               	.LVL616:
 9800               	/* #NOAPP */
 9801               	.LBE2781:
 9802               	.LBE2780:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 9803               		.loc 2 124 0
 9804 277a 8091 0000 		lds r24,ep_in_data+1
 9805 277e 8823      		tst r24
 9806 2780 01F4      		brne .+2
 9807 2782 00C0      		rjmp .L397
 9808               	.L387:
 125:usb/usb_pipe.h **** 			r = false;
 9809               		.loc 2 125 0
 9810 2784 80E0      		ldi r24,lo8(0)
 9811               	.L358:
 9812               	.LBB2782:
 9813               	.LBB2783:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 9814               		.loc 3 70 0
 9815 2786 9FBF      		out __SREG__,r25
 9816               		.loc 3 71 0
 9817               	.LBE2783:
 9818               	.LBE2782:
 9819               	.LBE2785:
 9820               	.LBE2787:
 9821               	.LBE2789:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 9822               		.loc 1 20 0
 9823 2788 8823      		tst r24
 9824 278a 01F0      		breq .L360
 9825               	.LVL617:
 9826               	.LBB2790:
 9827               	.LBB2791:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 9828               		.loc 2 175 0
 9829 278c 8091 0000 		lds r24,ep_in_data+2
 9830 2790 9091 0000 		lds r25,ep_in_data+2+1
 9831 2794 E091 0000 		lds r30,ep_in_pipe_data+2
 9832 2798 F091 0000 		lds r31,ep_in_pipe_data+2+1
 9833 279c E80F      		add r30,r24
 9834 279e F91F      		adc r31,r25
 9835 27a0 3083      		st Z,r19
 9836 27a2 0196      		adiw r24,1
 9837 27a4 8093 0000 		sts ep_in_data+2,r24
 9838 27a8 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 9839               		.loc 2 176 0
 9840 27ac 8034      		cpi r24,64
 9841 27ae 9105      		cpc r25,__zero_reg__
 9842 27b0 01F4      		brne .+2
 9843 27b2 00C0      		rjmp .L398
 9844               	.LVL618:
 9845               	.L361:
 9846               	.LBE2791:
 9847               	.LBE2790:
 9848               	.LBE2853:
 9849               	.LBE2964:
 9850               	.LBB2965:
 9851               	.LBB2957:
 9852               	.LBB2940:
 9853               	.LBB2920:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 9854               		.loc 2 110 0
 9855 27b4 4092 0000 		sts ep_in_data+1,r4
 9856               	.LVL619:
 9857               	.LBB2915:
 9858               	.LBB2911:
 9859               	.LBB2907:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 9860               		.loc 2 80 0
 9861 27b8 1FB7      		in r17,__SREG__
 9862               	.LVL620:
 9863               	.LBB2883:
 9864               	.LBB2884:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 9865               		.loc 3 50 0
 9866               	/* #APP */
 9867               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 9868 27ba F894      		cli
 9869               	 ;  0 "" 2
 9870               	.LVL621:
 9871               	/* #NOAPP */
 9872               	.LBE2884:
 9873               	.LBE2883:
 9874               	.LBB2885:
 9875               	.LBB2886:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 9876               		.loc 5 220 0
 9877 27bc 8091 0000 		lds r24,endpoints+24
 9878 27c0 8670      		andi r24,lo8(6)
 9879               	.LBE2886:
 9880               	.LBE2885:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 9881               		.loc 2 82 0
 9882 27c2 01F0      		breq .+2
 9883 27c4 00C0      		rjmp .L399
 9884               	.LVL622:
 9885               	.L372:
 9886               	.LBB2887:
 9887               	.LBB2888:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 9888               		.loc 3 70 0
 9889 27c6 1FBF      		out __SREG__,r17
 9890               		.loc 3 71 0
 9891               	.LBE2888:
 9892               	.LBE2887:
 9893               	.LBE2907:
 9894               	.LBE2911:
 9895               	.LBE2915:
 9896               	.LBE2920:
 9897               	.LBE2940:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 9898               		.loc 1 27 0
 9899 27c8 F301      		movw r30,r6
 9900 27ca 5586      		std Z+13,r5
 9901               	.L381:
 9902               	.LVL623:
 9903               	.LBB2941:
 9904               	.LBB2942:
 9905               	.LBB2943:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 9906               		.loc 2 123 0
 9907 27cc 9FB7      		in r25,__SREG__
 9908               	.LVL624:
 9909               	.LBB2944:
 9910               	.LBB2945:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 9911               		.loc 3 50 0
 9912               	/* #APP */
 9913               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 9914 27ce F894      		cli
 9915               	 ;  0 "" 2
 9916               	.LVL625:
 9917               	/* #NOAPP */
 9918               	.LBE2945:
 9919               	.LBE2944:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 9920               		.loc 2 124 0
 9921 27d0 8091 0000 		lds r24,ep_in_data+1
 9922 27d4 8823      		tst r24
 9923 27d6 01F4      		brne .+2
 9924 27d8 00C0      		rjmp .L400
 9925               	.L388:
 125:usb/usb_pipe.h **** 			r = false;
 9926               		.loc 2 125 0
 9927 27da 80E0      		ldi r24,lo8(0)
 9928               	.L383:
 9929               	.LBB2946:
 9930               	.LBB2947:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 9931               		.loc 3 70 0
 9932 27dc 9FBF      		out __SREG__,r25
 9933               		.loc 3 71 0
 9934               	.LBE2947:
 9935               	.LBE2946:
 9936               	.LBE2943:
 9937               	.LBE2942:
 9938               	.LBE2941:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 9939               		.loc 1 28 0
 9940 27de 8823      		tst r24
 9941 27e0 01F4      		brne .L382
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 9942               		.loc 1 29 0
 9943 27e2 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 9944 27e6 8823      		tst r24
 9945 27e8 01F0      		breq .L381
 9946               	.LVL626:
 9947               	.LBB2952:
 9948               	.LBB2938:
 9949               	.LBB2937:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 9950               		.loc 2 54 0
 9951 27ea 8FB7      		in r24,__SREG__
 9952               	.LVL627:
 9953               	.LBB2930:
 9954               	.LBB2931:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 9955               		.loc 3 50 0
 9956               	/* #APP */
 9957               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 9958 27ec F894      		cli
 9959               	 ;  0 "" 2
 9960               	.LVL628:
 9961               	/* #NOAPP */
 9962               	.LBE2931:
 9963               	.LBE2930:
 9964               	.LBB2932:
 9965               	.LBB2929:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 9966               		.loc 4 90 0
 9967 27ee 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 9968               		.loc 4 91 0
 9969 27f2 8092 0000 		sts ep_in_pipe_data+2,r8
 9970 27f6 9092 0000 		sts ep_in_pipe_data+2+1,r9
 9971 27fa 8092 0000 		sts ep_in_pipe_data,r8
 9972 27fe 9092 0000 		sts ep_in_pipe_data+1,r9
 9973               	.LVL629:
 9974               	.LBE2929:
 9975               	.LBE2932:
 9976               	.LBB2933:
 9977               	.LBB2934:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 9978               		.loc 5 158 0
 9979 2802 FD01      		movw r30,r26
 9980               	/* #APP */
 9981               	 ;  158 "usb/usb.h" 1
 9982 2804 06E0      		ldi r16, 6
 9983 2806 0593      		.dc.w 0x9305
 9984               		
 9985               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 9986               		.loc 5 159 0
 9987               	 ;  159 "usb/usb.h" 1
 9988 2808 08E0      		ldi r16, 8
 9989 280a 0693      		.dc.w 0x9306
 9990               		
 9991               	 ;  0 "" 2
 9992               	/* #NOAPP */
 9993               	.LBE2934:
 9994               	.LBE2933:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 9995               		.loc 2 57 0
 9996 280c 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 9997               		.loc 2 58 0
 9998 2810 1092 0000 		sts ep_in_data+2,__zero_reg__
 9999 2814 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 10000               		.loc 2 59 0
 10001 2818 1092 0000 		sts ep_in_data,__zero_reg__
 10002               	.LVL630:
 10003               	.LBB2935:
 10004               	.LBB2936:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 10005               		.loc 3 70 0
 10006 281c 8FBF      		out __SREG__,r24
 10007               		.loc 3 71 0
 10008               	.LVL631:
 10009               	.L382:
 10010               	.LBE2936:
 10011               	.LBE2935:
 10012               	.LBE2937:
 10013               	.LBE2938:
 10014               	.LBE2952:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 10015               		.loc 1 28 0
 10016 281e 0894      		sec
 10017 2820 A108      		sbc r10,__zero_reg__
 10018 2822 B108      		sbc r11,__zero_reg__
 10019               	.LBE2957:
 10020               	.LBE2965:
 139:sms/sms.h     ****   for (int i=0; i<100; i++) {
 10021               		.loc 13 139 0
 10022 2824 A114      		cp r10,__zero_reg__
 10023 2826 B104      		cpc r11,__zero_reg__
 10024 2828 01F0      		breq .+2
 10025 282a 00C0      		rjmp .L394
 10026               	/* epilogue start */
 10027               	.LBE2771:
 140:sms/sms.h     ****     c = uart_getchar(USART);  
 141:sms/sms.h     ****     send_byte(c);
 142:sms/sms.h     ****     break_and_flush();
 143:sms/sms.h     ****   }
 144:sms/sms.h     **** }...
 10028               		.loc 13 144 0
 10029 282c DF91      		pop r29
 10030 282e CF91      		pop r28
 10031               	.LVL632:
 10032 2830 1F91      		pop r17
 10033               	.LVL633:
 10034 2832 0F91      		pop r16
 10035 2834 FF90      		pop r15
 10036 2836 EF90      		pop r14
 10037 2838 DF90      		pop r13
 10038 283a CF90      		pop r12
 10039 283c BF90      		pop r11
 10040 283e AF90      		pop r10
 10041 2840 9F90      		pop r9
 10042 2842 8F90      		pop r8
 10043 2844 7F90      		pop r7
 10044 2846 6F90      		pop r6
 10045 2848 5F90      		pop r5
 10046 284a 4F90      		pop r4
 10047 284c 0895      		ret
 10048               	.LVL634:
 10049               	.L400:
 10050               	.LBB2973:
 10051               	.LBB2966:
 10052               	.LBB2958:
 10053               	.LBB2953:
 10054               	.LBB2951:
 10055               	.LBB2950:
 10056               	.LBB2948:
 10057               	.LBB2949:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 10058               		.loc 4 57 0
 10059 284e 8091 0000 		lds r24,ep_in_pipe_data+4
 10060 2852 242F      		mov r18,r20
 10061 2854 281B      		sub r18,r24
 10062               	.LBE2949:
 10063               	.LBE2948:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 10064               		.loc 2 127 0
 10065 2856 81E0      		ldi r24,lo8(1)
 10066 2858 1216      		cp __zero_reg__,r18
 10067 285a 04F4      		brge .+2
 10068 285c 00C0      		rjmp .L383
 10069 285e 00C0      		rjmp .L388
 10070               	.LVL635:
 10071               	.L397:
 10072               	.LBE2950:
 10073               	.LBE2951:
 10074               	.LBE2953:
 10075               	.LBE2958:
 10076               	.LBE2966:
 10077               	.LBB2967:
 10078               	.LBB2854:
 10079               	.LBB2792:
 10080               	.LBB2788:
 10081               	.LBB2786:
 10082               	.LBB2784:
 10083               	.LBB2779:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 10084               		.loc 4 57 0
 10085 2860 8091 0000 		lds r24,ep_in_pipe_data+4
 10086 2864 242F      		mov r18,r20
 10087 2866 281B      		sub r18,r24
 10088               	.LBE2779:
 10089               	.LBE2784:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 10090               		.loc 2 127 0
 10091 2868 81E0      		ldi r24,lo8(1)
 10092 286a 1216      		cp __zero_reg__,r18
 10093 286c 04F4      		brge .+2
 10094 286e 00C0      		rjmp .L358
 10095 2870 00C0      		rjmp .L387
 10096               	.LVL636:
 10097               	.L399:
 10098               	.LBE2786:
 10099               	.LBE2788:
 10100               	.LBE2792:
 10101               	.LBE2854:
 10102               	.LBE2967:
 10103               	.LBB2968:
 10104               	.LBB2959:
 10105               	.LBB2954:
 10106               	.LBB2921:
 10107               	.LBB2916:
 10108               	.LBB2912:
 10109               	.LBB2908:
 10110               	.LBB2889:
 10111               	.LBB2890:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 10112               		.loc 4 51 0
 10113 2872 5091 0000 		lds r21,ep_in_pipe_data+4
 10114               	.LBE2890:
 10115               	.LBE2889:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 10116               		.loc 2 83 0
 10117 2876 1516      		cp __zero_reg__,r21
 10118 2878 04F0      		brlt .+2
 10119 287a 00C0      		rjmp .L373
 10120               	.LBB2891:
 10121               	.LBB2892:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 10122               		.loc 4 62 0
 10123 287c 2091 0000 		lds r18,ep_in_pipe_data
 10124 2880 3091 0000 		lds r19,ep_in_pipe_data+1
 10125               	.LVL637:
 10126               	.LBE2892:
 10127               	.LBE2891:
 10128               	.LBB2893:
 10129               	.LBB2881:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 10130               		.loc 2 68 0
 10131 2884 6091 0000 		lds r22,ep_in_data
 10132               	.LVL638:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 10133               		.loc 2 69 0
 10134 2888 862F      		mov r24,r22
 10135 288a 90E0      		ldi r25,lo8(0)
 10136 288c 71E0      		ldi r23,lo8(1)
 10137 288e 8E15      		cp r24,r14
 10138 2890 9F05      		cpc r25,r15
 10139 2892 01F4      		brne .L374
 10140 2894 70E0      		ldi r23,lo8(0)
 10141               	.L374:
 10142 2896 7093 0000 		sts ep_in_data,r23
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 10143               		.loc 2 72 0
 10144 289a 6623      		tst r22
 10145 289c 01F4      		brne .L375
 10146               	.LVL639:
 10147               	.LBB2878:
 10148               	.LBB2879:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10149               		.loc 5 168 0
 10150 289e 2093 0000 		sts endpoints+28,r18
 10151 28a2 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10152               		.loc 5 169 0
 10153 28a6 C092 0000 		sts endpoints+26,r12
 10154 28aa D092 0000 		sts endpoints+26+1,r13
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10155               		.loc 5 174 0
 10156 28ae FD01      		movw r30,r26
 10157               	/* #APP */
 10158               	 ;  174 "usb/usb.h" 1
 10159 28b0 02E2      		ldi r16, 34
 10160 28b2 0693      		.dc.w 0x9306
 10161               		
 10162               	 ;  0 "" 2
 10163               	.LVL640:
 10164               	/* #NOAPP */
 10165               	.L376:
 10166               	.LBE2879:
 10167               	.LBE2878:
 10168               	.LBE2881:
 10169               	.LBE2893:
 10170               	.LBB2894:
 10171               	.LBB2895:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 10172               		.loc 4 72 0
 10173 28b4 852F      		mov r24,r21
 10174 28b6 8150      		subi r24,lo8(-(-1))
 10175 28b8 8093 0000 		sts ep_in_pipe_data+4,r24
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 10176               		.loc 4 73 0
 10177 28bc C901      		movw r24,r18
 10178 28be 805C      		subi r24,lo8(-(64))
 10179 28c0 9F4F      		sbci r25,hi8(-(64))
 10180 28c2 8093 0000 		sts ep_in_pipe_data,r24
 10181 28c6 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 10182               		.loc 4 75 0
 10183 28ca F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 10184 28cc 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 10185 28ce 9F07      		cpc r25,r31
 10186 28d0 01F0      		breq .+2
 10187 28d2 00C0      		rjmp .L372
 10188               	.LBE2895:
 10189               	.LBE2894:
 10190               	.LBB2896:
 10191               	.LBB2897:
 10192               		.loc 4 91 0
 10193 28d4 8092 0000 		sts ep_in_pipe_data,r8
 10194 28d8 9092 0000 		sts ep_in_pipe_data+1,r9
 10195               	.LVL641:
 10196 28dc 00C0      		rjmp .L372
 10197               	.LVL642:
 10198               	.L375:
 10199               	.LBE2897:
 10200               	.LBE2896:
 10201               	.LBB2899:
 10202               	.LBB2882:
 10203               	.LBB2880:
 10204               	.LBB2877:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10205               		.loc 5 168 0
 10206 28de 2093 0000 		sts endpoints+20,r18
 10207 28e2 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10208               		.loc 5 169 0
 10209 28e6 C092 0000 		sts endpoints+18,r12
 10210 28ea D092 0000 		sts endpoints+18+1,r13
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 10211               		.loc 5 176 0
 10212 28ee FD01      		movw r30,r26
 10213               	/* #APP */
 10214               	 ;  176 "usb/usb.h" 1
 10215 28f0 04E1      		ldi r16, 20
 10216 28f2 0693      		.dc.w 0x9306
 10217               		
 10218               	 ;  0 "" 2
 10219               	/* #NOAPP */
 10220 28f4 00C0      		rjmp .L376
 10221               	.LVL643:
 10222               	.L398:
 10223               	.LBE2877:
 10224               	.LBE2880:
 10225               	.LBE2882:
 10226               	.LBE2899:
 10227               	.LBE2908:
 10228               	.LBE2912:
 10229               	.LBE2916:
 10230               	.LBE2921:
 10231               	.LBE2954:
 10232               	.LBE2959:
 10233               	.LBE2968:
 10234               	.LBB2969:
 10235               	.LBB2855:
 10236               	.LBB2793:
 10237               	.LBB2794:
 10238               	.LBB2795:
 10239               	.LBB2796:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 10240               		.loc 2 177 0
 10241 28f6 1FB7      		in r17,__SREG__
 10242               	.LVL644:
 10243               	.LBB2797:
 10244               	.LBB2798:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 10245               		.loc 3 50 0
 10246               	/* #APP */
 10247               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 10248 28f8 F894      		cli
 10249               	 ;  0 "" 2
 10250               	.LVL645:
 10251               	/* #NOAPP */
 10252               	.LBE2798:
 10253               	.LBE2797:
 10254               		.loc 2 178 0
 10255 28fa 1092 0000 		sts ep_in_data+2,__zero_reg__
 10256 28fe 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 10257               	.LVL646:
 10258               	.LBB2799:
 10259               	.LBB2800:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 10260               		.loc 4 81 0
 10261 2902 8091 0000 		lds r24,ep_in_pipe_data+4
 10262 2906 8F5F      		subi r24,lo8(-(1))
 10263 2908 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 10264               		.loc 4 82 0
 10265 290c 8091 0000 		lds r24,ep_in_pipe_data+2
 10266 2910 9091 0000 		lds r25,ep_in_pipe_data+2+1
 10267 2914 805C      		subi r24,lo8(-(64))
 10268 2916 9F4F      		sbci r25,hi8(-(64))
 10269 2918 8093 0000 		sts ep_in_pipe_data+2,r24
 10270 291c 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 10271               		.loc 4 84 0
 10272 2920 E0E0      		ldi r30,hi8(ep_in_pipe_buffer+512)
 10273 2922 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 10274 2924 9E07      		cpc r25,r30
 10275 2926 01F4      		brne .L362
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 10276               		.loc 4 85 0
 10277 2928 8092 0000 		sts ep_in_pipe_data+2,r8
 10278 292c 9092 0000 		sts ep_in_pipe_data+2+1,r9
 10279               	.L362:
 10280               	.LVL647:
 10281               	.LBE2800:
 10282               	.LBE2799:
 10283               	.LBB2801:
 10284               	.LBB2802:
 10285               	.LBB2803:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 10286               		.loc 2 80 0
 10287 2930 6FB7      		in r22,__SREG__
 10288               	.LVL648:
 10289               	.LBB2804:
 10290               	.LBB2805:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 10291               		.loc 3 50 0
 10292               	/* #APP */
 10293               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 10294 2932 F894      		cli
 10295               	 ;  0 "" 2
 10296               	.LVL649:
 10297               	/* #NOAPP */
 10298               	.LBE2805:
 10299               	.LBE2804:
 10300               	.LBB2806:
 10301               	.LBB2807:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 10302               		.loc 5 220 0
 10303 2934 8091 0000 		lds r24,endpoints+24
 10304 2938 8670      		andi r24,lo8(6)
 10305               	.LBE2807:
 10306               	.LBE2806:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 10307               		.loc 2 82 0
 10308 293a 01F4      		brne .L401
 10309               	.LVL650:
 10310               	.L363:
 10311               	.LBB2808:
 10312               	.LBB2809:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 10313               		.loc 3 70 0
 10314 293c 6FBF      		out __SREG__,r22
 10315               		.loc 3 71 0
 10316               	.LVL651:
 10317               	.LBE2809:
 10318               	.LBE2808:
 10319               	.LBE2803:
 10320               	.LBE2802:
 10321               	.LBE2801:
 10322               	.LBB2845:
 10323               	.LBB2846:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 10324               		.loc 3 70 0
 10325 293e 1FBF      		out __SREG__,r17
 10326               		.loc 3 71 0
 10327 2940 00C0      		rjmp .L361
 10328               	.LVL652:
 10329               	.L401:
 10330               	.LBE2846:
 10331               	.LBE2845:
 10332               	.LBB2847:
 10333               	.LBB2843:
 10334               	.LBB2841:
 10335               	.LBB2810:
 10336               	.LBB2811:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 10337               		.loc 4 51 0
 10338 2942 5091 0000 		lds r21,ep_in_pipe_data+4
 10339               	.LBE2811:
 10340               	.LBE2810:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 10341               		.loc 2 83 0
 10342 2946 1516      		cp __zero_reg__,r21
 10343 2948 04F0      		brlt .+2
 10344 294a 00C0      		rjmp .L364
 10345               	.LBB2812:
 10346               	.LBB2813:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 10347               		.loc 4 62 0
 10348 294c 2091 0000 		lds r18,ep_in_pipe_data
 10349 2950 3091 0000 		lds r19,ep_in_pipe_data+1
 10350               	.LVL653:
 10351               	.LBE2813:
 10352               	.LBE2812:
 10353               	.LBB2814:
 10354               	.LBB2815:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 10355               		.loc 2 68 0
 10356 2954 7091 0000 		lds r23,ep_in_data
 10357               	.LVL654:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 10358               		.loc 2 69 0
 10359 2958 872F      		mov r24,r23
 10360 295a 90E0      		ldi r25,lo8(0)
 10361 295c E1E0      		ldi r30,lo8(1)
 10362 295e 8E15      		cp r24,r14
 10363 2960 9F05      		cpc r25,r15
 10364 2962 01F4      		brne .L365
 10365 2964 E0E0      		ldi r30,lo8(0)
 10366               	.L365:
 10367 2966 E093 0000 		sts ep_in_data,r30
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 10368               		.loc 2 72 0
 10369 296a 7723      		tst r23
 10370 296c 01F4      		brne .L366
 10371               	.LVL655:
 10372               	.LBB2816:
 10373               	.LBB2817:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10374               		.loc 5 168 0
 10375 296e 2093 0000 		sts endpoints+28,r18
 10376 2972 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10377               		.loc 5 169 0
 10378 2976 C092 0000 		sts endpoints+26,r12
 10379 297a D092 0000 		sts endpoints+26+1,r13
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10380               		.loc 5 174 0
 10381 297e FD01      		movw r30,r26
 10382               	/* #APP */
 10383               	 ;  174 "usb/usb.h" 1
 10384 2980 02E2      		ldi r16, 34
 10385 2982 0693      		.dc.w 0x9306
 10386               		
 10387               	 ;  0 "" 2
 10388               	.LVL656:
 10389               	/* #NOAPP */
 10390               	.L367:
 10391               	.LBE2817:
 10392               	.LBE2816:
 10393               	.LBE2815:
 10394               	.LBE2814:
 10395               	.LBB2821:
 10396               	.LBB2822:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 10397               		.loc 4 72 0
 10398 2984 5150      		subi r21,lo8(-(-1))
 10399 2986 5093 0000 		sts ep_in_pipe_data+4,r21
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 10400               		.loc 4 73 0
 10401 298a C901      		movw r24,r18
 10402 298c 805C      		subi r24,lo8(-(64))
 10403 298e 9F4F      		sbci r25,hi8(-(64))
 10404 2990 8093 0000 		sts ep_in_pipe_data,r24
 10405 2994 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 10406               		.loc 4 75 0
 10407 2998 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 10408 299a 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 10409 299c 9F07      		cpc r25,r31
 10410 299e 01F4      		brne .L363
 10411               	.LBE2822:
 10412               	.LBE2821:
 10413               	.LBB2823:
 10414               	.LBB2824:
 10415               		.loc 4 91 0
 10416 29a0 8092 0000 		sts ep_in_pipe_data,r8
 10417 29a4 9092 0000 		sts ep_in_pipe_data+1,r9
 10418               	.LVL657:
 10419 29a8 00C0      		rjmp .L363
 10420               	.LVL658:
 10421               	.L366:
 10422               	.LBE2824:
 10423               	.LBE2823:
 10424               	.LBB2826:
 10425               	.LBB2820:
 10426               	.LBB2818:
 10427               	.LBB2819:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10428               		.loc 5 168 0
 10429 29aa 2093 0000 		sts endpoints+20,r18
 10430 29ae 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10431               		.loc 5 169 0
 10432 29b2 C092 0000 		sts endpoints+18,r12
 10433 29b6 D092 0000 		sts endpoints+18+1,r13
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 10434               		.loc 5 176 0
 10435 29ba FD01      		movw r30,r26
 10436               	/* #APP */
 10437               	 ;  176 "usb/usb.h" 1
 10438 29bc 04E1      		ldi r16, 20
 10439 29be 0693      		.dc.w 0x9306
 10440               		
 10441               	 ;  0 "" 2
 10442               	/* #NOAPP */
 10443 29c0 00C0      		rjmp .L367
 10444               	.LVL659:
 10445               	.L364:
 10446               	.LBE2819:
 10447               	.LBE2818:
 10448               	.LBE2820:
 10449               	.LBE2826:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 10450               		.loc 2 87 0
 10451 29c2 8091 0000 		lds r24,ep_in_data+1
 10452 29c6 8130      		cpi r24,lo8(1)
 10453 29c8 01F0      		breq .L402
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 10454               		.loc 2 91 0
 10455 29ca 8230      		cpi r24,lo8(2)
 10456 29cc 01F0      		breq .+2
 10457 29ce 00C0      		rjmp .L363
 10458               	.LVL660:
 10459               	.LBB2827:
 10460               	.LBB2828:
 10461               	.LBB2829:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 10462               		.loc 5 228 0
 10463 29d0 8091 0000 		lds r24,endpoints+24
 10464 29d4 8670      		andi r24,lo8(6)
 10465               	.LBE2829:
 10466               	.LBE2828:
 10467               	.LBE2827:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 10468               		.loc 2 91 0
 10469 29d6 8630      		cpi r24,lo8(6)
 10470 29d8 01F0      		breq .+2
 10471 29da 00C0      		rjmp .L363
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 10472               		.loc 2 92 0
 10473 29dc 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 10474               		.loc 2 93 0
 10475 29e0 1092 0000 		sts ep_in_data+2,__zero_reg__
 10476 29e4 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 10477               	.LBB2830:
 10478               	.LBB2825:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 10479               		.loc 4 90 0
 10480 29e8 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 10481               		.loc 4 91 0
 10482 29ec 8092 0000 		sts ep_in_pipe_data+2,r8
 10483 29f0 9092 0000 		sts ep_in_pipe_data+2+1,r9
 10484 29f4 8092 0000 		sts ep_in_pipe_data,r8
 10485 29f8 9092 0000 		sts ep_in_pipe_data+1,r9
 10486               	.LVL661:
 10487 29fc 00C0      		rjmp .L363
 10488               	.LVL662:
 10489               	.L402:
 10490               	.LBE2825:
 10491               	.LBE2830:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 10492               		.loc 2 88 0
 10493 29fe 5092 0000 		sts ep_in_data+1,r5
 10494               	.LBB2831:
 10495               	.LBB2832:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 10496               		.loc 4 62 0
 10497 2a02 E091 0000 		lds r30,ep_in_pipe_data
 10498 2a06 F091 0000 		lds r31,ep_in_pipe_data+1
 10499               	.LBE2832:
 10500               	.LBE2831:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 10501               		.loc 2 90 0
 10502 2a0a 2091 0000 		lds r18,ep_in_data+2
 10503 2a0e 3091 0000 		lds r19,ep_in_data+2+1
 10504               	.LVL663:
 10505               	.LBB2833:
 10506               	.LBB2834:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 10507               		.loc 2 68 0
 10508 2a12 7091 0000 		lds r23,ep_in_data
 10509               	.LVL664:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 10510               		.loc 2 69 0
 10511 2a16 872F      		mov r24,r23
 10512 2a18 90E0      		ldi r25,lo8(0)
 10513 2a1a 51E0      		ldi r21,lo8(1)
 10514 2a1c 8E15      		cp r24,r14
 10515 2a1e 9F05      		cpc r25,r15
 10516 2a20 01F4      		brne .L370
 10517 2a22 50E0      		ldi r21,lo8(0)
 10518               	.L370:
 10519 2a24 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 10520               		.loc 2 72 0
 10521 2a28 7723      		tst r23
 10522 2a2a 01F4      		brne .L371
 10523               	.LVL665:
 10524               	.LBB2835:
 10525               	.LBB2836:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10526               		.loc 5 168 0
 10527 2a2c E093 0000 		sts endpoints+28,r30
 10528 2a30 F093 0000 		sts endpoints+28+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10529               		.loc 5 169 0
 10530 2a34 2093 0000 		sts endpoints+26,r18
 10531 2a38 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10532               		.loc 5 174 0
 10533 2a3c FD01      		movw r30,r26
 10534               	/* #APP */
 10535               	 ;  174 "usb/usb.h" 1
 10536 2a3e 02E2      		ldi r16, 34
 10537 2a40 0693      		.dc.w 0x9306
 10538               		
 10539               	 ;  0 "" 2
 10540               	/* #NOAPP */
 10541 2a42 00C0      		rjmp .L363
 10542               	.LVL666:
 10543               	.L373:
 10544               	.LBE2836:
 10545               	.LBE2835:
 10546               	.LBE2834:
 10547               	.LBE2833:
 10548               	.LBE2841:
 10549               	.LBE2843:
 10550               	.LBE2847:
 10551               	.LBE2796:
 10552               	.LBE2795:
 10553               	.LBE2794:
 10554               	.LBE2793:
 10555               	.LBE2855:
 10556               	.LBE2969:
 10557               	.LBB2970:
 10558               	.LBB2960:
 10559               	.LBB2955:
 10560               	.LBB2922:
 10561               	.LBB2917:
 10562               	.LBB2913:
 10563               	.LBB2909:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 10564               		.loc 2 87 0
 10565 2a44 8091 0000 		lds r24,ep_in_data+1
 10566 2a48 8130      		cpi r24,lo8(1)
 10567 2a4a 01F0      		breq .L403
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 10568               		.loc 2 91 0
 10569 2a4c 8230      		cpi r24,lo8(2)
 10570 2a4e 01F0      		breq .+2
 10571 2a50 00C0      		rjmp .L372
 10572               	.LVL667:
 10573               	.LBB2900:
 10574               	.LBB2901:
 10575               	.LBB2902:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 10576               		.loc 5 228 0
 10577 2a52 8091 0000 		lds r24,endpoints+24
 10578 2a56 8670      		andi r24,lo8(6)
 10579               	.LBE2902:
 10580               	.LBE2901:
 10581               	.LBE2900:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 10582               		.loc 2 91 0
 10583 2a58 8630      		cpi r24,lo8(6)
 10584 2a5a 01F0      		breq .+2
 10585 2a5c 00C0      		rjmp .L372
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 10586               		.loc 2 92 0
 10587 2a5e 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 10588               		.loc 2 93 0
 10589 2a62 1092 0000 		sts ep_in_data+2,__zero_reg__
 10590 2a66 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 10591               	.LBB2903:
 10592               	.LBB2898:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 10593               		.loc 4 90 0
 10594 2a6a 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 10595               		.loc 4 91 0
 10596 2a6e 8092 0000 		sts ep_in_pipe_data+2,r8
 10597 2a72 9092 0000 		sts ep_in_pipe_data+2+1,r9
 10598 2a76 8092 0000 		sts ep_in_pipe_data,r8
 10599 2a7a 9092 0000 		sts ep_in_pipe_data+1,r9
 10600               	.LVL668:
 10601 2a7e 00C0      		rjmp .L372
 10602               	.LVL669:
 10603               	.L371:
 10604               	.LBE2898:
 10605               	.LBE2903:
 10606               	.LBE2909:
 10607               	.LBE2913:
 10608               	.LBE2917:
 10609               	.LBE2922:
 10610               	.LBE2955:
 10611               	.LBE2960:
 10612               	.LBE2970:
 10613               	.LBB2971:
 10614               	.LBB2856:
 10615               	.LBB2852:
 10616               	.LBB2851:
 10617               	.LBB2850:
 10618               	.LBB2849:
 10619               	.LBB2848:
 10620               	.LBB2844:
 10621               	.LBB2842:
 10622               	.LBB2840:
 10623               	.LBB2839:
 10624               	.LBB2837:
 10625               	.LBB2838:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10626               		.loc 5 168 0
 10627 2a80 E093 0000 		sts endpoints+20,r30
 10628 2a84 F093 0000 		sts endpoints+20+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10629               		.loc 5 169 0
 10630 2a88 2093 0000 		sts endpoints+18,r18
 10631 2a8c 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 10632               		.loc 5 176 0
 10633 2a90 FD01      		movw r30,r26
 10634               	.LVL670:
 10635               	/* #APP */
 10636               	 ;  176 "usb/usb.h" 1
 10637 2a92 04E1      		ldi r16, 20
 10638 2a94 0693      		.dc.w 0x9306
 10639               		
 10640               	 ;  0 "" 2
 10641               	/* #NOAPP */
 10642 2a96 00C0      		rjmp .L363
 10643               	.LVL671:
 10644               	.L403:
 10645               	.LBE2838:
 10646               	.LBE2837:
 10647               	.LBE2839:
 10648               	.LBE2840:
 10649               	.LBE2842:
 10650               	.LBE2844:
 10651               	.LBE2848:
 10652               	.LBE2849:
 10653               	.LBE2850:
 10654               	.LBE2851:
 10655               	.LBE2852:
 10656               	.LBE2856:
 10657               	.LBE2971:
 10658               	.LBB2972:
 10659               	.LBB2961:
 10660               	.LBB2956:
 10661               	.LBB2923:
 10662               	.LBB2918:
 10663               	.LBB2914:
 10664               	.LBB2910:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 10665               		.loc 2 88 0
 10666 2a98 5092 0000 		sts ep_in_data+1,r5
 10667               	.LBB2904:
 10668               	.LBB2905:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 10669               		.loc 4 62 0
 10670 2a9c 7091 0000 		lds r23,ep_in_pipe_data
 10671 2aa0 E091 0000 		lds r30,ep_in_pipe_data+1
 10672               	.LBE2905:
 10673               	.LBE2904:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 10674               		.loc 2 90 0
 10675 2aa4 2091 0000 		lds r18,ep_in_data+2
 10676 2aa8 3091 0000 		lds r19,ep_in_data+2+1
 10677               	.LVL672:
 10678               	.LBB2906:
 10679               	.LBB2872:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 10680               		.loc 2 68 0
 10681 2aac 6091 0000 		lds r22,ep_in_data
 10682               	.LVL673:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 10683               		.loc 2 69 0
 10684 2ab0 862F      		mov r24,r22
 10685 2ab2 90E0      		ldi r25,lo8(0)
 10686 2ab4 51E0      		ldi r21,lo8(1)
 10687 2ab6 8E15      		cp r24,r14
 10688 2ab8 9F05      		cpc r25,r15
 10689 2aba 01F4      		brne .L379
 10690 2abc 50E0      		ldi r21,lo8(0)
 10691               	.L379:
 10692 2abe 5093 0000 		sts ep_in_data,r21
 10693               	.LBB2866:
 10694               	.LBB2867:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10695               		.loc 5 168 0
 10696 2ac2 872F      		mov r24,r23
 10697 2ac4 9E2F      		mov r25,r30
 10698               	.LBE2867:
 10699               	.LBE2866:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 10700               		.loc 2 72 0
 10701 2ac6 6623      		tst r22
 10702 2ac8 01F4      		brne .L380
 10703               	.LVL674:
 10704               	.LBB2869:
 10705               	.LBB2868:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10706               		.loc 5 168 0
 10707 2aca 8093 0000 		sts endpoints+28,r24
 10708 2ace 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10709               		.loc 5 169 0
 10710 2ad2 2093 0000 		sts endpoints+26,r18
 10711 2ad6 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10712               		.loc 5 174 0
 10713 2ada FD01      		movw r30,r26
 10714               	/* #APP */
 10715               	 ;  174 "usb/usb.h" 1
 10716 2adc 02E2      		ldi r16, 34
 10717 2ade 0693      		.dc.w 0x9306
 10718               		
 10719               	 ;  0 "" 2
 10720               	/* #NOAPP */
 10721 2ae0 00C0      		rjmp .L372
 10722               	.LVL675:
 10723               	.L380:
 10724               	.LBE2868:
 10725               	.LBE2869:
 10726               	.LBB2870:
 10727               	.LBB2871:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10728               		.loc 5 168 0
 10729 2ae2 8093 0000 		sts endpoints+20,r24
 10730 2ae6 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10731               		.loc 5 169 0
 10732 2aea 2093 0000 		sts endpoints+18,r18
 10733 2aee 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 10734               		.loc 5 176 0
 10735 2af2 FD01      		movw r30,r26
 10736               	/* #APP */
 10737               	 ;  176 "usb/usb.h" 1
 10738 2af4 04E1      		ldi r16, 20
 10739 2af6 0693      		.dc.w 0x9306
 10740               		
 10741               	 ;  0 "" 2
 10742               	/* #NOAPP */
 10743 2af8 00C0      		rjmp .L372
 10744               	.LBE2871:
 10745               	.LBE2870:
 10746               	.LBE2872:
 10747               	.LBE2906:
 10748               	.LBE2910:
 10749               	.LBE2914:
 10750               	.LBE2918:
 10751               	.LBE2923:
 10752               	.LBE2956:
 10753               	.LBE2961:
 10754               	.LBE2972:
 10755               	.LBE2973:
 10756               		.cfi_endproc
 10757               	.LFE82:
 10759               		.data
 10760               	.LC18:
 10761 00e9 4265 6769 		.string	"Begin"
 10761      6E00 
 10762               		.section	.text.startup,"ax",@progbits
 10763               	.global	main
 10765               	main:
 10766               	.LFB83:
  21:main.c        **** int main(void){
 10767               		.loc 6 21 0
 10768               		.cfi_startproc
 10769               	/* prologue: function */
 10770               	/* frame size = 0 */
 10771               	/* stack size = 0 */
 10772               	.L__stack_usage = 0
  24:main.c        **** 	USB_ConfigureClock();
 10773               		.loc 6 24 0
 10774 0000 0E94 0000 		call USB_ConfigureClock
  25:main.c        **** 	USB_Init();
 10775               		.loc 6 25 0
 10776 0004 0E94 0000 		call USB_Init
  26:main.c        **** 	USB.INTCTRLA = USB_BUSEVIE_bm | USB_INTLVL_MED_gc;
 10777               		.loc 6 26 0
 10778 0008 E0EC      		ldi r30,lo8(1216)
 10779 000a F4E0      		ldi r31,hi8(1216)
 10780 000c 82E4      		ldi r24,lo8(66)
 10781 000e 8087      		std Z+8,r24
  27:main.c        **** 	USB.INTCTRLB = USB_TRNIE_bm | USB_SETUPIE_bm;
 10782               		.loc 6 27 0
 10783 0010 83E0      		ldi r24,lo8(3)
 10784 0012 8187      		std Z+9,r24
  28:main.c        **** 	PMIC.CTRL = PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm;
 10785               		.loc 6 28 0
 10786 0014 E0EA      		ldi r30,lo8(160)
 10787 0016 F0E0      		ldi r31,hi8(160)
 10788 0018 8283      		std Z+2,r24
  29:main.c        **** 	sei();
 10789               		.loc 6 29 0
 10790               	/* #APP */
 10791               	 ;  29 "main.c" 1
 10792 001a 7894      		sei
 10793               	 ;  0 "" 2
 10794               	/* #NOAPP */
 10795               	.LBB3060:
 10796               	.LBB3061:
  15:gprs/gprs.h   ****   PORTD.DIRSET = PIN3_bm; 
 10797               		.loc 12 15 0
 10798 001c E0E6      		ldi r30,lo8(1632)
 10799 001e F6E0      		ldi r31,hi8(1632)
 10800 0020 98E0      		ldi r25,lo8(8)
 10801 0022 9183      		std Z+1,r25
  18:gprs/gprs.h   ****   PORTD.OUTSET = PIN3_bm; 
 10802               		.loc 12 18 0
 10803 0024 9583      		std Z+5,r25
 10804               	.LVL676:
  22:gprs/gprs.h   ****   USARTD0_BAUDCTRLA = BSEL & 0XFF;
 10805               		.loc 12 22 0
 10806 0026 96E0      		ldi r25,lo8(6)
 10807 0028 9093 A609 		sts 2470,r25
  23:gprs/gprs.h   ****   USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
 10808               		.loc 12 23 0
 10809 002c 1092 A709 		sts 2471,__zero_reg__
  27:gprs/gprs.h   ****   USARTD0.CTRLA = 0x00;
 10810               		.loc 12 27 0
 10811 0030 E0EA      		ldi r30,lo8(2464)
 10812 0032 F9E0      		ldi r31,hi8(2464)
 10813 0034 1382      		std Z+3,__zero_reg__
  30:gprs/gprs.h   ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 10814               		.loc 12 30 0
 10815 0036 98E1      		ldi r25,lo8(24)
 10816 0038 9483      		std Z+4,r25
  34:gprs/gprs.h   ****   USARTD0.CTRLC = 0x03;  
 10817               		.loc 12 34 0
 10818 003a 8583      		std Z+5,r24
 10819               	.LVL677:
 10820               	.LBE3061:
 10821               	.LBE3060:
 10822               	.LBB3062:
 10823               	.LBB3063:
 10824               	.LBB3064:
 10825               	.LBB3065:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 10826               		.loc 2 110 0
 10827 003c 81E0      		ldi r24,lo8(1)
 10828 003e 8093 0000 		sts ep_in_data+1,r24
 10829               	.LVL678:
 10830               	.LBB3066:
 10831               	.LBB3067:
 10832               	.LBB3068:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 10833               		.loc 2 80 0
 10834 0042 2FB7      		in r18,__SREG__
 10835               	.LVL679:
 10836               	.LBB3069:
 10837               	.LBB3070:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 10838               		.loc 3 50 0
 10839               	/* #APP */
 10840               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 10841 0044 F894      		cli
 10842               	 ;  0 "" 2
 10843               	.LVL680:
 10844               	/* #NOAPP */
 10845               	.LBE3070:
 10846               	.LBE3069:
 10847               	.LBB3071:
 10848               	.LBB3072:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 10849               		.loc 5 220 0
 10850 0046 8091 0000 		lds r24,endpoints+24
 10851 004a 8670      		andi r24,lo8(6)
 10852               	.LBE3072:
 10853               	.LBE3071:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 10854               		.loc 2 82 0
 10855 004c 01F4      		brne .+2
 10856 004e 00C0      		rjmp .L430
 10857               	.LBB3073:
 10858               	.LBB3074:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 10859               		.loc 4 51 0
 10860 0050 3091 0000 		lds r19,ep_in_pipe_data+4
 10861               	.LBE3074:
 10862               	.LBE3073:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 10863               		.loc 2 83 0
 10864 0054 1316      		cp __zero_reg__,r19
 10865 0056 04F0      		brlt .+2
 10866 0058 00C0      		rjmp .L406
 10867               	.LBB3075:
 10868               	.LBB3076:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 10869               		.loc 4 62 0
 10870 005a 8091 0000 		lds r24,ep_in_pipe_data
 10871 005e 9091 0000 		lds r25,ep_in_pipe_data+1
 10872               	.LVL681:
 10873               	.LBE3076:
 10874               	.LBE3075:
 10875               	.LBB3077:
 10876               	.LBB3078:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 10877               		.loc 2 68 0
 10878 0062 4091 0000 		lds r20,ep_in_data
 10879               	.LVL682:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 10880               		.loc 2 69 0
 10881 0066 51E0      		ldi r21,lo8(1)
 10882 0068 4130      		cpi r20,lo8(1)
 10883 006a 01F4      		brne .L407
 10884 006c 50E0      		ldi r21,lo8(0)
 10885               	.L407:
 10886 006e 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 10887               		.loc 2 72 0
 10888 0072 4423      		tst r20
 10889 0074 01F0      		breq .+2
 10890 0076 00C0      		rjmp .L408
 10891               	.LVL683:
 10892               	.LBB3079:
 10893               	.LBB3080:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10894               		.loc 5 168 0
 10895 0078 8093 0000 		sts endpoints+28,r24
 10896 007c 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10897               		.loc 5 169 0
 10898 0080 40E4      		ldi r20,lo8(64)
 10899 0082 50E0      		ldi r21,hi8(64)
 10900 0084 4093 0000 		sts endpoints+26,r20
 10901 0088 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10902               		.loc 5 174 0
 10903 008c E0E0      		ldi r30,lo8(endpoints+24)
 10904 008e F0E0      		ldi r31,hi8(endpoints+24)
 10905               	/* #APP */
 10906               	 ;  174 "usb/usb.h" 1
 10907 0090 02E2      		ldi r16, 34
 10908 0092 0693      		.dc.w 0x9306
 10909               		
 10910               	 ;  0 "" 2
 10911               	.LVL684:
 10912               	/* #NOAPP */
 10913               	.L409:
 10914               	.LBE3080:
 10915               	.LBE3079:
 10916               	.LBE3078:
 10917               	.LBE3077:
 10918               	.LBB3084:
 10919               	.LBB3085:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 10920               		.loc 4 72 0
 10921 0094 3150      		subi r19,lo8(-(-1))
 10922 0096 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 10923               		.loc 4 73 0
 10924 009a 805C      		subi r24,lo8(-(64))
 10925 009c 9F4F      		sbci r25,hi8(-(64))
 10926 009e 8093 0000 		sts ep_in_pipe_data,r24
 10927 00a2 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 10928               		.loc 4 75 0
 10929 00a6 30E0      		ldi r19,hi8(ep_in_pipe_buffer+512)
 10930 00a8 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 10931 00aa 9307      		cpc r25,r19
 10932 00ac 01F4      		brne .+2
 10933 00ae 00C0      		rjmp .L427
 10934               	.LVL685:
 10935               	.L431:
 10936 00b0 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 10937 00b2 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 10938               	.LVL686:
 10939               	.L405:
 10940               	.LBE3085:
 10941               	.LBE3084:
 10942               	.LBB3087:
 10943               	.LBB3088:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 10944               		.loc 3 70 0
 10945 00b4 2FBF      		out __SREG__,r18
 10946               		.loc 3 71 0
 10947               	.LBE3088:
 10948               	.LBE3087:
 10949               	.LBE3068:
 10950               	.LBE3067:
 10951               	.LBE3066:
 10952               	.LBE3065:
 10953               	.LBE3064:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 10954               		.loc 1 27 0
 10955 00b6 22E0      		ldi r18,lo8(2)
 10956               	.LVL687:
 10957 00b8 A0EC      		ldi r26,lo8(1216)
 10958 00ba B4E0      		ldi r27,hi8(1216)
 10959 00bc 1D96      		adiw r26,13
 10960 00be 2C93      		st X,r18
 10961 00c0 1D97      		sbiw r26,13
 10962               	.LBB3110:
 10963               	.LBB3111:
 10964               	.LBB3112:
 10965               	.LBB3113:
 10966               	.LBB3114:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 10967               		.loc 4 57 0
 10968 00c2 36E0      		ldi r19,lo8(6)
 10969               	.L414:
 10970               	.LVL688:
 10971               	.LBE3114:
 10972               	.LBE3113:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 10973               		.loc 2 123 0
 10974 00c4 4FB7      		in r20,__SREG__
 10975               	.LVL689:
 10976               	.LBB3116:
 10977               	.LBB3117:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 10978               		.loc 3 50 0
 10979               	/* #APP */
 10980               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 10981 00c6 F894      		cli
 10982               	 ;  0 "" 2
 10983               	.LVL690:
 10984               	/* #NOAPP */
 10985               	.LBE3117:
 10986               	.LBE3116:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 10987               		.loc 2 124 0
 10988 00c8 2091 0000 		lds r18,ep_in_data+1
 10989 00cc 2223      		tst r18
 10990 00ce 01F0      		breq .L432
 10991               	.L420:
 125:usb/usb_pipe.h **** 			r = false;
 10992               		.loc 2 125 0
 10993 00d0 20E0      		ldi r18,lo8(0)
 10994               	.L416:
 10995               	.LBB3118:
 10996               	.LBB3119:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 10997               		.loc 3 70 0
 10998 00d2 4FBF      		out __SREG__,r20
 10999               		.loc 3 71 0
 11000               	.LBE3119:
 11001               	.LBE3118:
 11002               	.LBE3112:
 11003               	.LBE3111:
 11004               	.LBE3110:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 11005               		.loc 1 28 0
 11006 00d4 2223      		tst r18
 11007 00d6 01F4      		brne .L415
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 11008               		.loc 1 29 0
 11009 00d8 2091 0000 		lds r18,timeout_or_sampling_no_longer_enabled
 11010 00dc 2223      		tst r18
 11011 00de 01F0      		breq .L414
 11012               	.LVL691:
 11013               	.LBB3123:
 11014               	.LBB3124:
 11015               	.LBB3125:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 11016               		.loc 2 54 0
 11017 00e0 2FB7      		in r18,__SREG__
 11018               	.LVL692:
 11019               	.LBB3126:
 11020               	.LBB3127:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 11021               		.loc 3 50 0
 11022               	/* #APP */
 11023               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 11024 00e2 F894      		cli
 11025               	 ;  0 "" 2
 11026               	.LVL693:
 11027               	/* #NOAPP */
 11028               	.LBE3127:
 11029               	.LBE3126:
 11030               	.LBB3128:
 11031               	.LBB3129:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 11032               		.loc 4 90 0
 11033 00e4 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 11034               		.loc 4 91 0
 11035 00e8 8093 0000 		sts ep_in_pipe_data+2,r24
 11036 00ec 9093 0000 		sts ep_in_pipe_data+2+1,r25
 11037 00f0 8093 0000 		sts ep_in_pipe_data,r24
 11038 00f4 9093 0000 		sts ep_in_pipe_data+1,r25
 11039               	.LVL694:
 11040               	.LBE3129:
 11041               	.LBE3128:
 11042               	.LBB3130:
 11043               	.LBB3131:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 11044               		.loc 5 158 0
 11045               	/* #APP */
 11046               	 ;  158 "usb/usb.h" 1
 11047 00f8 06E0      		ldi r16, 6
 11048 00fa 0593      		.dc.w 0x9305
 11049               		
 11050               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 11051               		.loc 5 159 0
 11052               	 ;  159 "usb/usb.h" 1
 11053 00fc 08E0      		ldi r16, 8
 11054 00fe 0693      		.dc.w 0x9306
 11055               		
 11056               	 ;  0 "" 2
 11057               	/* #NOAPP */
 11058               	.LBE3131:
 11059               	.LBE3130:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 11060               		.loc 2 57 0
 11061 0100 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 11062               		.loc 2 58 0
 11063 0104 1092 0000 		sts ep_in_data+2,__zero_reg__
 11064 0108 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 11065               		.loc 2 59 0
 11066 010c 1092 0000 		sts ep_in_data,__zero_reg__
 11067               	.LVL695:
 11068               	.LBB3132:
 11069               	.LBB3133:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 11070               		.loc 3 70 0
 11071 0110 2FBF      		out __SREG__,r18
 11072               		.loc 3 71 0
 11073               	.LVL696:
 11074               	.L415:
 11075               	.LBE3133:
 11076               	.LBE3132:
 11077               	.LBE3125:
 11078               	.LBE3124:
 11079               	.LBE3123:
 11080               	.LBE3063:
 11081               	.LBE3062:
  49:main.c        ****   send_string("Begin");
 11082               		.loc 6 49 0
 11083 0112 80E0      		ldi r24,lo8(.LC18)
 11084 0114 90E0      		ldi r25,hi8(.LC18)
 11085 0116 0E94 0000 		call send_string
 11086               	.LVL697:
  50:main.c        ****   SimpleReceive(&USARTD0);
 11087               		.loc 6 50 0
 11088 011a 80EA      		ldi r24,lo8(2464)
 11089 011c 99E0      		ldi r25,hi8(2464)
 11090 011e 0E94 0000 		call SimpleReceive
 11091               	.L419:
 11092 0122 00C0      		rjmp .L419
 11093               	.LVL698:
 11094               	.L432:
 11095               	.LBB3137:
 11096               	.LBB3136:
 11097               	.LBB3134:
 11098               	.LBB3122:
 11099               	.LBB3121:
 11100               	.LBB3120:
 11101               	.LBB3115:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 11102               		.loc 4 57 0
 11103 0124 2091 0000 		lds r18,ep_in_pipe_data+4
 11104 0128 532F      		mov r21,r19
 11105 012a 521B      		sub r21,r18
 11106               	.LBE3115:
 11107               	.LBE3120:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 11108               		.loc 2 127 0
 11109 012c 21E0      		ldi r18,lo8(1)
 11110 012e 1516      		cp __zero_reg__,r21
 11111 0130 04F0      		brlt .L416
 11112 0132 00C0      		rjmp .L420
 11113               	.LVL699:
 11114               	.L406:
 11115               	.LBE3121:
 11116               	.LBE3122:
 11117               	.LBE3134:
 11118               	.LBB3135:
 11119               	.LBB3109:
 11120               	.LBB3108:
 11121               	.LBB3107:
 11122               	.LBB3106:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 11123               		.loc 2 87 0
 11124 0134 8091 0000 		lds r24,ep_in_data+1
 11125 0138 8130      		cpi r24,lo8(1)
 11126 013a 01F0      		breq .L433
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 11127               		.loc 2 91 0
 11128 013c 8230      		cpi r24,lo8(2)
 11129 013e 01F0      		breq .L428
 11130               	.L430:
 11131 0140 E0E0      		ldi r30,lo8(endpoints+24)
 11132 0142 F0E0      		ldi r31,hi8(endpoints+24)
 11133 0144 00C0      		rjmp .L431
 11134               	.L428:
 11135               	.LVL700:
 11136               	.LBB3089:
 11137               	.LBB3090:
 11138               	.LBB3091:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 11139               		.loc 5 228 0
 11140 0146 8091 0000 		lds r24,endpoints+24
 11141 014a 8670      		andi r24,lo8(6)
 11142               	.LBE3091:
 11143               	.LBE3090:
 11144               	.LBE3089:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 11145               		.loc 2 91 0
 11146 014c 8630      		cpi r24,lo8(6)
 11147 014e 01F4      		brne .L430
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 11148               		.loc 2 92 0
 11149 0150 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 11150               		.loc 2 93 0
 11151 0154 1092 0000 		sts ep_in_data+2,__zero_reg__
 11152 0158 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 11153               	.LBB3092:
 11154               	.LBB3093:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 11155               		.loc 4 90 0
 11156 015c 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 11157               		.loc 4 91 0
 11158 0160 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 11159 0162 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 11160 0164 8093 0000 		sts ep_in_pipe_data+2,r24
 11161 0168 9093 0000 		sts ep_in_pipe_data+2+1,r25
 11162 016c 8093 0000 		sts ep_in_pipe_data,r24
 11163 0170 9093 0000 		sts ep_in_pipe_data+1,r25
 11164               	.LVL701:
 11165 0174 E0E0      		ldi r30,lo8(endpoints+24)
 11166 0176 F0E0      		ldi r31,hi8(endpoints+24)
 11167 0178 00C0      		rjmp .L405
 11168               	.LVL702:
 11169               	.L433:
 11170               	.LBE3093:
 11171               	.LBE3092:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 11172               		.loc 2 88 0
 11173 017a 82E0      		ldi r24,lo8(2)
 11174 017c 8093 0000 		sts ep_in_data+1,r24
 11175               	.LBB3094:
 11176               	.LBB3095:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 11177               		.loc 4 62 0
 11178 0180 6091 0000 		lds r22,ep_in_pipe_data
 11179 0184 3091 0000 		lds r19,ep_in_pipe_data+1
 11180               	.LBE3095:
 11181               	.LBE3094:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 11182               		.loc 2 90 0
 11183 0188 4091 0000 		lds r20,ep_in_data+2
 11184 018c 5091 0000 		lds r21,ep_in_data+2+1
 11185               	.LVL703:
 11186               	.LBB3096:
 11187               	.LBB3097:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 11188               		.loc 2 68 0
 11189 0190 8091 0000 		lds r24,ep_in_data
 11190               	.LVL704:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 11191               		.loc 2 69 0
 11192 0194 91E0      		ldi r25,lo8(1)
 11193 0196 8130      		cpi r24,lo8(1)
 11194 0198 01F4      		brne .L412
 11195 019a 90E0      		ldi r25,lo8(0)
 11196               	.L412:
 11197 019c 9093 0000 		sts ep_in_data,r25
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 11198               		.loc 2 72 0
 11199 01a0 8823      		tst r24
 11200 01a2 01F4      		brne .L413
 11201               	.LVL705:
 11202               	.LBB3098:
 11203               	.LBB3099:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 11204               		.loc 5 168 0
 11205 01a4 862F      		mov r24,r22
 11206 01a6 932F      		mov r25,r19
 11207 01a8 8093 0000 		sts endpoints+28,r24
 11208 01ac 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 11209               		.loc 5 169 0
 11210 01b0 4093 0000 		sts endpoints+26,r20
 11211 01b4 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 11212               		.loc 5 174 0
 11213 01b8 E0E0      		ldi r30,lo8(endpoints+24)
 11214 01ba F0E0      		ldi r31,hi8(endpoints+24)
 11215               	.LVL706:
 11216               	/* #APP */
 11217               	 ;  174 "usb/usb.h" 1
 11218 01bc 02E2      		ldi r16, 34
 11219 01be 0693      		.dc.w 0x9306
 11220               		
 11221               	 ;  0 "" 2
 11222               	/* #NOAPP */
 11223 01c0 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 11224 01c2 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 11225 01c4 00C0      		rjmp .L405
 11226               	.LVL707:
 11227               	.L427:
 11228               	.LBE3099:
 11229               	.LBE3098:
 11230               	.LBE3097:
 11231               	.LBE3096:
 11232               	.LBB3103:
 11233               	.LBB3086:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 11234               		.loc 4 76 0
 11235 01c6 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 11236 01c8 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 11237 01ca 8093 0000 		sts ep_in_pipe_data,r24
 11238 01ce 9093 0000 		sts ep_in_pipe_data+1,r25
 11239 01d2 00C0      		rjmp .L405
 11240               	.LVL708:
 11241               	.L408:
 11242               	.LBE3086:
 11243               	.LBE3103:
 11244               	.LBB3104:
 11245               	.LBB3083:
 11246               	.LBB3081:
 11247               	.LBB3082:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 11248               		.loc 5 168 0
 11249 01d4 8093 0000 		sts endpoints+20,r24
 11250 01d8 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 11251               		.loc 5 169 0
 11252 01dc 40E4      		ldi r20,lo8(64)
 11253 01de 50E0      		ldi r21,hi8(64)
 11254 01e0 4093 0000 		sts endpoints+18,r20
 11255 01e4 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 11256               		.loc 5 176 0
 11257 01e8 E0E0      		ldi r30,lo8(endpoints+24)
 11258 01ea F0E0      		ldi r31,hi8(endpoints+24)
 11259               	/* #APP */
 11260               	 ;  176 "usb/usb.h" 1
 11261 01ec 04E1      		ldi r16, 20
 11262 01ee 0693      		.dc.w 0x9306
 11263               		
 11264               	 ;  0 "" 2
 11265               	/* #NOAPP */
 11266 01f0 00C0      		rjmp .L409
 11267               	.LVL709:
 11268               	.L413:
 11269               	.LBE3082:
 11270               	.LBE3081:
 11271               	.LBE3083:
 11272               	.LBE3104:
 11273               	.LBB3105:
 11274               	.LBB3102:
 11275               	.LBB3100:
 11276               	.LBB3101:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 11277               		.loc 5 168 0
 11278 01f2 862F      		mov r24,r22
 11279               	.LVL710:
 11280 01f4 932F      		mov r25,r19
 11281 01f6 8093 0000 		sts endpoints+20,r24
 11282 01fa 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 11283               		.loc 5 169 0
 11284 01fe 4093 0000 		sts endpoints+18,r20
 11285 0202 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 11286               		.loc 5 176 0
 11287 0206 E0E0      		ldi r30,lo8(endpoints+24)
 11288 0208 F0E0      		ldi r31,hi8(endpoints+24)
 11289               	/* #APP */
 11290               	 ;  176 "usb/usb.h" 1
 11291 020a 04E1      		ldi r16, 20
 11292 020c 0693      		.dc.w 0x9306
 11293               		
 11294               	 ;  0 "" 2
 11295               	/* #NOAPP */
 11296 020e 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 11297 0210 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 11298 0212 00C0      		rjmp .L405
 11299               	.LBE3101:
 11300               	.LBE3100:
 11301               	.LBE3102:
 11302               	.LBE3105:
 11303               	.LBE3106:
 11304               	.LBE3107:
 11305               	.LBE3108:
 11306               	.LBE3109:
 11307               	.LBE3135:
 11308               	.LBE3136:
 11309               	.LBE3137:
 11310               		.cfi_endproc
 11311               	.LFE83:
 11313               		.text
 11314               	.global	EVENT_USB_Device_ControlRequest
 11316               	EVENT_USB_Device_ControlRequest:
 11317               	.LFB84:
  74:main.c        **** bool EVENT_USB_Device_ControlRequest(USB_Request_Header_t* req){
 11318               		.loc 6 74 0
 11319               		.cfi_startproc
 11320               	.LVL711:
 11321 2afa 0F93      		push r16
 11322               	.LCFI163:
 11323               		.cfi_def_cfa_offset 3
 11324               		.cfi_offset 16, -2
 11325 2afc 1F93      		push r17
 11326               	.LCFI164:
 11327               		.cfi_def_cfa_offset 4
 11328               		.cfi_offset 17, -3
 11329 2afe CF93      		push r28
 11330               	.LCFI165:
 11331               		.cfi_def_cfa_offset 5
 11332               		.cfi_offset 28, -4
 11333 2b00 DF93      		push r29
 11334               	.LCFI166:
 11335               		.cfi_def_cfa_offset 6
 11336               		.cfi_offset 29, -5
 11337               	/* prologue: function */
 11338               	/* frame size = 0 */
 11339               	/* stack size = 4 */
 11340               	.L__stack_usage = 4
 11341 2b02 9C01      		movw r18,r24
 11342               	.LVL712:
 134:main.c        **** 	return false;
 11343               		.loc 6 134 0
 11344 2b04 A0E0      		ldi r26,lo8(ep0_buf_in)
 11345 2b06 B0E0      		ldi r27,hi8(ep0_buf_in)
  74:main.c        **** bool EVENT_USB_Device_ControlRequest(USB_Request_Header_t* req){
 11346               		.loc 6 74 0
 11347 2b08 8D01      		movw r16,r26
 11348 2b0a 80E0      		ldi r24,lo8(ep0_buf_in+64)
 11349 2b0c 90E0      		ldi r25,hi8(ep0_buf_in+64)
 11350               	.LVL713:
 11351 2b0e FD01      		movw r30,r26
 11352               	.LVL714:
 11353               	.L435:
 11354               	.LBB3138:
  76:main.c        **** 	for (uint8_t i = 0; i < 64; i++) ep0_buf_in[i] = 0;
 11355               		.loc 6 76 0 discriminator 2
 11356 2b10 1192      		st Z+,__zero_reg__
 11357 2b12 40E0      		ldi r20,hi8(ep0_buf_in+64)
 11358 2b14 E030      		cpi r30,lo8(ep0_buf_in+64)
 11359 2b16 F407      		cpc r31,r20
 11360 2b18 01F4      		brne .L435
 11361               	.LBE3138:
  77:main.c        **** 	usb_cmd = 0;
 11362               		.loc 6 77 0
 11363 2b1a 1092 0000 		sts usb_cmd,__zero_reg__
  78:main.c        **** 	if ((req->bmRequestType & CONTROL_REQTYPE_TYPE) == REQTYPE_VENDOR){
 11364               		.loc 6 78 0
 11365 2b1e F901      		movw r30,r18
 11366 2b20 C081      		ld r28,Z
 11367 2b22 D0E0      		ldi r29,lo8(0)
 11368 2b24 C076      		andi r28,lo8(96)
 11369 2b26 D070      		andi r29,hi8(96)
 11370 2b28 C034      		cpi r28,64
 11371 2b2a D105      		cpc r29,__zero_reg__
 11372 2b2c 01F0      		breq .L459
 11373               	.L453:
 134:main.c        **** 	return false;
 11374               		.loc 6 134 0
 11375 2b2e 80E0      		ldi r24,lo8(0)
 11376               	.LVL715:
 11377               	.L436:
 11378               	/* epilogue start */
 135:main.c        **** }
 11379               		.loc 6 135 0
 11380 2b30 DF91      		pop r29
 11381 2b32 CF91      		pop r28
 11382 2b34 1F91      		pop r17
 11383 2b36 0F91      		pop r16
 11384 2b38 0895      		ret
 11385               	.LVL716:
 11386               	.L459:
  79:main.c        **** 		switch(req->bRequest){
 11387               		.loc 6 79 0
 11388 2b3a 4181      		ldd r20,Z+1
 11389 2b3c 4631      		cpi r20,lo8(22)
 11390 2b3e 01F4      		brne .+2
 11391 2b40 00C0      		rjmp .L441
 11392 2b42 4731      		cpi r20,lo8(23)
 11393 2b44 00F0      		brlo .L460
 11394 2b46 4B3B      		cpi r20,lo8(-69)
 11395 2b48 01F4      		brne .+2
 11396 2b4a 00C0      		rjmp .L443
 11397 2b4c 4C3B      		cpi r20,lo8(-68)
 11398 2b4e 00F0      		brlo .+2
 11399 2b50 00C0      		rjmp .L448
 11400 2b52 4731      		cpi r20,lo8(23)
 11401 2b54 01F4      		brne .L453
 11402               	.LBB3139:
 110:main.c        **** 				addr = (uint16_t *) req->wIndex;
 11403               		.loc 6 110 0
 11404 2b56 0480      		ldd __tmp_reg__,Z+4
 11405 2b58 F581      		ldd r31,Z+5
 11406 2b5a E02D      		mov r30,__tmp_reg__
 11407               	.LVL717:
 111:main.c        **** 				ep0_buf_in[0] = *addr & 0xFF;
 11408               		.loc 6 111 0
 11409 2b5c 8081      		ld r24,Z
 11410 2b5e 8093 0000 		sts ep0_buf_in,r24
 112:main.c        **** 				ep0_buf_in[1] = *addr >> 8;
 11411               		.loc 6 112 0
 11412 2b62 8181      		ldd r24,Z+1
 11413 2b64 8093 0000 		sts ep0_buf_in+1,r24
 11414               	.LVL718:
 11415               	.LBB3140:
 11416               	.LBB3141:
 11417               	.LBB3142:
 11418               	.LBB3143:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 11419               		.loc 5 168 0
 11420 2b68 0093 0000 		sts endpoints+12,r16
 11421 2b6c 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 11422               		.loc 5 169 0
 11423 2b70 82E0      		ldi r24,lo8(2)
 11424 2b72 90E0      		ldi r25,hi8(2)
 11425 2b74 8093 0000 		sts endpoints+10,r24
 11426 2b78 9093 0000 		sts endpoints+10+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 11427               		.loc 5 174 0
 11428 2b7c E0E0      		ldi r30,lo8(endpoints+8)
 11429 2b7e F0E0      		ldi r31,hi8(endpoints+8)
 11430               	/* #APP */
 11431               	 ;  174 "usb/usb.h" 1
 11432 2b80 02E2      		ldi r16, 34
 11433 2b82 0693      		.dc.w 0x9306
 11434               		
 11435               	 ;  0 "" 2
 11436               	/* #NOAPP */
 11437               	.LBE3143:
 11438               	.LBE3142:
 11439               	.LBE3141:
 11440               	.LBE3140:
 11441               	.LBE3139:
 114:main.c        **** 				return true;
 11442               		.loc 6 114 0
 11443 2b84 81E0      		ldi r24,lo8(1)
 11444 2b86 00C0      		rjmp .L436
 11445               	.LVL719:
 11446               	.L460:
  79:main.c        **** 		switch(req->bRequest){
 11447               		.loc 6 79 0
 11448 2b88 4230      		cpi r20,lo8(2)
 11449 2b8a 01F4      		brne .+2
 11450 2b8c 00C0      		rjmp .L438
 11451 2b8e 4330      		cpi r20,lo8(3)
 11452 2b90 00F4      		brsh .L447
 11453 2b92 4423      		tst r20
 11454 2b94 01F4      		brne .L453
  81:main.c        **** 				if (req->wIndex == 0){
 11455               		.loc 6 81 0
 11456 2b96 8481      		ldd r24,Z+4
 11457 2b98 9581      		ldd r25,Z+5
 11458 2b9a 0097      		sbiw r24,0
 11459 2b9c 01F4      		brne .+2
 11460 2b9e 00C0      		rjmp .L461
  83:main.c        **** 				}else if (req->wIndex == 1){
 11461               		.loc 6 83 0
 11462 2ba0 8130      		cpi r24,1
 11463 2ba2 9105      		cpc r25,__zero_reg__
 11464 2ba4 01F4      		brne .+2
 11465 2ba6 00C0      		rjmp .L462
  86:main.c        **** 				return true;
 11466               		.loc 6 86 0
 11467 2ba8 81E0      		ldi r24,lo8(1)
 11468 2baa 00C0      		rjmp .L436
 11469               	.L447:
  79:main.c        **** 		switch(req->bRequest){
 11470               		.loc 6 79 0
 11471 2bac 4830      		cpi r20,lo8(8)
 11472 2bae 01F0      		breq .L439
 11473 2bb0 4930      		cpi r20,lo8(9)
 11474 2bb2 01F0      		breq .+2
 11475 2bb4 00C0      		rjmp .L453
 101:main.c        **** 				ep0_buf_in[0] = * ((uint8_t *) req->wIndex);
 11476               		.loc 6 101 0
 11477 2bb6 0480      		ldd __tmp_reg__,Z+4
 11478 2bb8 F581      		ldd r31,Z+5
 11479 2bba E02D      		mov r30,__tmp_reg__
 11480 2bbc 8081      		ld r24,Z
 11481 2bbe 8093 0000 		sts ep0_buf_in,r24
 11482               	.LVL720:
 11483               	.LBB3144:
 11484               	.LBB3145:
 11485               	.LBB3146:
 11486               	.LBB3147:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 11487               		.loc 5 168 0
 11488 2bc2 0093 0000 		sts endpoints+12,r16
 11489 2bc6 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 11490               		.loc 5 169 0
 11491 2bca 81E0      		ldi r24,lo8(1)
 11492 2bcc 90E0      		ldi r25,hi8(1)
 11493 2bce 8093 0000 		sts endpoints+10,r24
 11494 2bd2 9093 0000 		sts endpoints+10+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 11495               		.loc 5 174 0
 11496 2bd6 E0E0      		ldi r30,lo8(endpoints+8)
 11497 2bd8 F0E0      		ldi r31,hi8(endpoints+8)
 11498               	.LVL721:
 11499               	/* #APP */
 11500               	 ;  174 "usb/usb.h" 1
 11501 2bda 02E2      		ldi r16, 34
 11502 2bdc 0693      		.dc.w 0x9306
 11503               		
 11504               	 ;  0 "" 2
 11505               	/* #NOAPP */
 11506               	.LBE3147:
 11507               	.LBE3146:
 11508               	.LBE3145:
 11509               	.LBE3144:
 103:main.c        **** 				return true;
 11510               		.loc 6 103 0
 11511 2bde 81E0      		ldi r24,lo8(1)
 11512 2be0 00C0      		rjmp .L436
 11513               	.LVL722:
 11514               	.L448:
  79:main.c        **** 		switch(req->bRequest){
 11515               		.loc 6 79 0
 11516 2be2 403E      		cpi r20,lo8(-32)
 11517 2be4 01F0      		breq .L444
 11518 2be6 413E      		cpi r20,lo8(-31)
 11519 2be8 01F0      		breq .+2
 11520 2bea 00C0      		rjmp .L453
 123:main.c        **** 				usb_cmd = req->bRequest;
 11521               		.loc 6 123 0
 11522 2bec 4093 0000 		sts usb_cmd,r20
 124:main.c        **** 				cmd_data = req->wIndex;
 11523               		.loc 6 124 0
 11524 2bf0 8481      		ldd r24,Z+4
 11525 2bf2 8093 0000 		sts cmd_data,r24
 11526               	.LVL723:
 11527               	.L458:
 11528               	.LBB3148:
 11529               	.LBB3149:
 11530               	.LBB3150:
 11531               	.LBB3151:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 11532               		.loc 5 168 0
 11533 2bf6 0093 0000 		sts endpoints+12,r16
 11534 2bfa 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 11535               		.loc 5 169 0
 11536 2bfe 1092 0000 		sts endpoints+10,__zero_reg__
 11537 2c02 1092 0000 		sts endpoints+10+1,__zero_reg__
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 11538               		.loc 5 174 0
 11539 2c06 E0E0      		ldi r30,lo8(endpoints+8)
 11540 2c08 F0E0      		ldi r31,hi8(endpoints+8)
 11541               	.LVL724:
 11542               	/* #APP */
 11543               	 ;  174 "usb/usb.h" 1
 11544 2c0a 02E2      		ldi r16, 34
 11545 2c0c 0693      		.dc.w 0x9306
 11546               		
 11547               	 ;  0 "" 2
 11548               	/* #NOAPP */
 11549               	.LBE3151:
 11550               	.LBE3150:
 11551               	.LBE3149:
 11552               	.LBE3148:
 107:main.c        **** 				return true;
 11553               		.loc 6 107 0
 11554 2c0e 81E0      		ldi r24,lo8(1)
 11555               	/* epilogue start */
 135:main.c        **** }
 11556               		.loc 6 135 0
 11557 2c10 DF91      		pop r29
 11558 2c12 CF91      		pop r28
 11559 2c14 1F91      		pop r17
 11560 2c16 0F91      		pop r16
 11561 2c18 0895      		ret
 11562               	.LVL725:
 11563               	.L439:
  97:main.c        **** 				* ((uint8_t *) req->wIndex) = req->wValue;
 11564               		.loc 6 97 0
 11565 2c1a D901      		movw r26,r18
 11566 2c1c 0480      		ldd __tmp_reg__,Z+4
 11567 2c1e F581      		ldd r31,Z+5
 11568 2c20 E02D      		mov r30,__tmp_reg__
 11569 2c22 1296      		adiw r26,2
 11570 2c24 8C91      		ld r24,X
 11571 2c26 1297      		sbiw r26,2
 11572 2c28 8083      		st Z,r24
 11573               	.LVL726:
 11574 2c2a 00C0      		rjmp .L458
 11575               	.LVL727:
 11576               	.L444:
 117:main.c        **** 				eeprom_read_block(ep0_buf_in, (void*)(req->wIndex*64), 64);
 11577               		.loc 6 117 0
 11578 2c2c F901      		movw r30,r18
 11579 2c2e 6481      		ldd r22,Z+4
 11580 2c30 7581      		ldd r23,Z+5
 11581 2c32 0024      		clr __tmp_reg__
 11582 2c34 7695      		lsr r23
 11583 2c36 6795      		ror r22
 11584 2c38 0794      		ror __tmp_reg__
 11585 2c3a 7695      		lsr r23
 11586 2c3c 6795      		ror r22
 11587 2c3e 0794      		ror __tmp_reg__
 11588 2c40 762F      		mov r23,r22
 11589 2c42 602D      		mov r22,__tmp_reg__
 11590 2c44 80E0      		ldi r24,lo8(ep0_buf_in)
 11591 2c46 90E0      		ldi r25,hi8(ep0_buf_in)
 11592 2c48 40E4      		ldi r20,lo8(64)
 11593 2c4a 50E0      		ldi r21,hi8(64)
 11594 2c4c 0E94 0000 		call __eerd_block_x32a4u
 11595               	.LVL728:
 11596               	.LBB3152:
 11597               	.LBB3153:
 11598               	.LBB3154:
 11599               	.LBB3155:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 11600               		.loc 5 168 0
 11601 2c50 0093 0000 		sts endpoints+12,r16
 11602 2c54 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 11603               		.loc 5 169 0
 11604 2c58 C093 0000 		sts endpoints+10,r28
 11605 2c5c D093 0000 		sts endpoints+10+1,r29
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 11606               		.loc 5 174 0
 11607 2c60 E0E0      		ldi r30,lo8(endpoints+8)
 11608 2c62 F0E0      		ldi r31,hi8(endpoints+8)
 11609               	.LVL729:
 11610               	/* #APP */
 11611               	 ;  174 "usb/usb.h" 1
 11612 2c64 02E2      		ldi r16, 34
 11613 2c66 0693      		.dc.w 0x9306
 11614               		
 11615               	 ;  0 "" 2
 11616               	/* #NOAPP */
 11617               	.LBE3155:
 11618               	.LBE3154:
 11619               	.LBE3153:
 11620               	.LBE3152:
 119:main.c        **** 				return true;
 11621               		.loc 6 119 0
 11622 2c68 81E0      		ldi r24,lo8(1)
 11623 2c6a 00C0      		rjmp .L436
 11624               	.LVL730:
 11625               	.L443:
 11626               	.LBB3156:
 11627               	.LBB3157:
 330:usb/usb.h     **** 		USB_ep0_enableOut();
 331:usb/usb.h     **** 	}
 332:usb/usb.h     **** }
 333:usb/usb.h     **** 
 334:usb/usb.h     **** static inline void USB_enter_bootloader(void){
 335:usb/usb.h     **** 	cli();
 11628               		.loc 5 335 0
 11629               	/* #APP */
 11630               	 ;  335 "usb/usb.h" 1
 11631 2c6c F894      		cli
 11632               	 ;  0 "" 2
 11633               	.LVL731:
 11634               	/* #NOAPP */
 11635               	.LBB3158:
 11636               	.LBB3159:
 11637               	.LBB3160:
 11638               	.LBB3161:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 11639               		.loc 5 168 0
 11640 2c6e 0093 0000 		sts endpoints+12,r16
 11641 2c72 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 11642               		.loc 5 169 0
 11643 2c76 1092 0000 		sts endpoints+10,__zero_reg__
 11644 2c7a 1092 0000 		sts endpoints+10+1,__zero_reg__
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 11645               		.loc 5 174 0
 11646 2c7e E0E0      		ldi r30,lo8(endpoints+8)
 11647 2c80 F0E0      		ldi r31,hi8(endpoints+8)
 11648               	.LVL732:
 11649               	/* #APP */
 11650               	 ;  174 "usb/usb.h" 1
 11651 2c82 02E2      		ldi r16, 34
 11652 2c84 0693      		.dc.w 0x9306
 11653               		
 11654               	 ;  0 "" 2
 11655               	/* #NOAPP */
 11656               	.LBE3161:
 11657               	.LBE3160:
 11658               	.LBE3159:
 11659               	.LBE3158:
 11660               	.LBB3162:
 11661               	.LBB3163:
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 11662               		.loc 5 280 0
 11663 2c86 3897      		sbiw r30,8
 11664               	.LVL733:
 11665               	/* #APP */
 11666               	 ;  280 "usb/usb.h" 1
 11667 2c88 02E7      		ldi r16, 114
 11668 2c8a 0693      		.dc.w 0x9306
 11669               		
 11670               	 ;  0 "" 2
 11671               	.LVL734:
 11672               	/* #NOAPP */
 11673               	.L451:
 11674               	.LBE3163:
 11675               	.LBE3162:
 11676               	.LBB3164:
 11677               	.LBB3165:
 11678               	.LBB3166:
 11679               	.LBB3167:
 202:usb/usb.h     **** 		return e->STATUS & USB_EP_TRNCOMPL0_bm;
 11680               		.loc 5 202 0
 11681 2c8c 8091 0000 		lds r24,endpoints
 11682               	.LBE3167:
 11683               	.LBE3166:
 253:usb/usb.h     **** 	while (!USB_ep_done(ep)){};
 11684               		.loc 5 253 0
 11685 2c90 85FF      		sbrs r24,5
 11686 2c92 00C0      		rjmp .L451
 11687               	.LVL735:
 11688               	.LBE3165:
 11689               	.LBE3164:
 11690               	.LBB3168:
 11691               	.LBB3169:
 11692               		.loc 11 164 0
 11693 2c94 8FEF      		 ldi r24,lo8(63999)
 11694 2c96 99EF      	    ldi r25,hi8(63999)
 11695 2c98 A0E0      	    ldi r26,hlo8(63999)
 11696 2c9a 8150      	    1:subi r24,1
 11697 2c9c 9040      	    sbci r25,0
 11698 2c9e A040      	    sbci r26,0
 11699 2ca0 01F4      	    brne 1b
 11700 2ca2 00C0      		rjmp .
 11701 2ca4 0000      		nop
 11702               	.LBE3169:
 11703               	.LBE3168:
 11704               	.LBB3170:
 11705               	.LBB3171:
 296:usb/usb.h     **** 	USB.CTRLB &= ~USB_ATTACH_bm;
 11706               		.loc 5 296 0
 11707 2ca6 8091 C104 		lds r24,1217
 11708 2caa 8E7F      		andi r24,lo8(-2)
 11709 2cac E0EC      		ldi r30,lo8(1216)
 11710 2cae F4E0      		ldi r31,hi8(1216)
 11711               	.LVL736:
 11712 2cb0 8183      		std Z+1,r24
 11713               	.LVL737:
 11714               	.LBE3171:
 11715               	.LBE3170:
 11716               	.LBB3172:
 11717               	.LBB3173:
 11718               		.loc 11 164 0
 11719 2cb2 8FEF      		 ldi r24,lo8(639999)
 11720 2cb4 93EC      	    ldi r25,hi8(639999)
 11721 2cb6 A9E0      	    ldi r26,hlo8(639999)
 11722 2cb8 8150      	    1:subi r24,1
 11723 2cba 9040      	    sbci r25,0
 11724 2cbc A040      	    sbci r26,0
 11725 2cbe 01F4      	    brne 1b
 11726 2cc0 00C0      		rjmp .
 11727 2cc2 0000      		nop
 11728               	.LVL738:
 11729               	.LBE3173:
 11730               	.LBE3172:
 336:usb/usb.h     **** 	USB_ep0_send(0);
 337:usb/usb.h     **** 	USB_ep0_enableOut();
 338:usb/usb.h     **** 	USB_ep_wait(0x00); // Wait for the status stage to complete
 339:usb/usb.h     **** 	_delay_ms(10);
 340:usb/usb.h     **** 	USB_Detach();
 341:usb/usb.h     **** 	_delay_ms(100);
 342:usb/usb.h     **** 	void (*enter_bootloader)(void) = (void*) 0x47fc /*0x8ff8/2*/;
 343:usb/usb.h     **** 	enter_bootloader();
 11731               		.loc 5 343 0
 11732 2cc4 ECEF      		ldi r30,lo8(18428)
 11733 2cc6 F7E4      		ldi r31,hi8(18428)
 11734 2cc8 0995      		icall
 11735               	.LVL739:
 11736               	.LBE3157:
 11737               	.LBE3156:
 131:main.c        **** 				return true;
 11738               		.loc 6 131 0
 11739 2cca 81E0      		ldi r24,lo8(1)
 11740 2ccc 00C0      		rjmp .L436
 11741               	.LVL740:
 11742               	.L438:
 11743               	.LBB3174:
  89:main.c        **** 					int l = strlen(message);
 11744               		.loc 6 89 0
 11745 2cce 3091 0000 		lds r19,message
 11746 2cd2 2091 0000 		lds r18,message+1
 11747               	.LVL741:
 11748 2cd6 C32F      		mov r28,r19
 11749 2cd8 D22F      		mov r29,r18
 11750 2cda FE01      		movw r30,r28
 11751               	.LVL742:
 11752 2cdc 0190      		ld __tmp_reg__,Z+
 11753 2cde 0020      		tst __tmp_reg__
 11754 2ce0 01F4      		brne .-6
 11755 2ce2 3197      		sbiw r30,1
 11756 2ce4 E31B      		sub r30,r19
 11757               	.LVL743:
 11758               	.L450:
 11759               	.LBB3175:
  91:main.c        **** 						ep0_buf_in[i] = message[i];
 11760               		.loc 6 91 0 discriminator 2
 11761 2ce6 2991      		ld r18,Y+
 11762 2ce8 2D93      		st X+,r18
  90:main.c        **** 					for (uint8_t i=0; i<64; i++) {
 11763               		.loc 6 90 0 discriminator 2
 11764 2cea 8A17      		cp r24,r26
 11765 2cec 9B07      		cpc r25,r27
 11766 2cee 01F4      		brne .L450
 11767               	.LVL744:
 11768               	.LBE3175:
 11769               	.LBB3176:
 11770               	.LBB3177:
 247:usb/usb.h     **** 	USB_ep_in_start(0x80, ep0_buf_in, size);
 11771               		.loc 5 247 0
 11772 2cf0 8E2F      		mov r24,r30
 11773 2cf2 90E0      		ldi r25,lo8(0)
 11774               	.LVL745:
 11775               	.LBB3178:
 11776               	.LBB3179:
 11777               	.LBB3180:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 11778               		.loc 5 168 0
 11779 2cf4 0093 0000 		sts endpoints+12,r16
 11780 2cf8 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 11781               		.loc 5 169 0
 11782 2cfc 8093 0000 		sts endpoints+10,r24
 11783 2d00 9093 0000 		sts endpoints+10+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 11784               		.loc 5 174 0
 11785 2d04 E0E0      		ldi r30,lo8(endpoints+8)
 11786 2d06 F0E0      		ldi r31,hi8(endpoints+8)
 11787               	.LVL746:
 11788               	/* #APP */
 11789               	 ;  174 "usb/usb.h" 1
 11790 2d08 02E2      		ldi r16, 34
 11791 2d0a 0693      		.dc.w 0x9306
 11792               		
 11793               	 ;  0 "" 2
 11794               	/* #NOAPP */
 11795               	.LBE3180:
 11796               	.LBE3179:
 11797               	.LBE3178:
 11798               	.LBE3177:
 11799               	.LBE3176:
  94:main.c        **** 					return true;
 11800               		.loc 6 94 0
 11801 2d0c 81E0      		ldi r24,lo8(1)
 11802               	.LVL747:
 11803 2d0e 00C0      		rjmp .L436
 11804               	.LVL748:
 11805               	.L441:
 11806               	.LBE3174:
 105:main.c        **** 				* ((uint16_t *) req->wIndex) = req->wValue;
 11807               		.loc 6 105 0
 11808 2d10 F901      		movw r30,r18
 11809 2d12 8281      		ldd r24,Z+2
 11810 2d14 9381      		ldd r25,Z+3
 11811 2d16 0480      		ldd __tmp_reg__,Z+4
 11812 2d18 F581      		ldd r31,Z+5
 11813 2d1a E02D      		mov r30,__tmp_reg__
 11814 2d1c 8083      		st Z,r24
 11815 2d1e 9183      		std Z+1,r25
 11816 2d20 00C0      		rjmp .L458
 11817               	.L462:
  84:main.c        **** 					USB_ep0_send_progmem((uint8_t*)fwversion, sizeof(fwversion));
 11818               		.loc 6 84 0
 11819 2d22 80E0      		ldi r24,lo8(fwversion)
 11820 2d24 90E0      		ldi r25,hi8(fwversion)
 11821 2d26 6BE0      		ldi r22,lo8(11)
 11822 2d28 70E0      		ldi r23,hi8(11)
 11823 2d2a 0E94 0000 		call USB_ep0_send_progmem
 11824               	.LVL749:
  86:main.c        **** 				return true;
 11825               		.loc 6 86 0
 11826 2d2e 81E0      		ldi r24,lo8(1)
 11827 2d30 00C0      		rjmp .L436
 11828               	.LVL750:
 11829               	.L461:
  82:main.c        **** 					USB_ep0_send_progmem((uint8_t*)hwversion, sizeof(hwversion));
 11830               		.loc 6 82 0
 11831 2d32 80E0      		ldi r24,lo8(hwversion)
 11832 2d34 90E0      		ldi r25,hi8(hwversion)
 11833 2d36 6BE0      		ldi r22,lo8(11)
 11834 2d38 70E0      		ldi r23,hi8(11)
 11835 2d3a 0E94 0000 		call USB_ep0_send_progmem
 11836               	.LVL751:
  86:main.c        **** 				return true;
 11837               		.loc 6 86 0
 11838 2d3e 81E0      		ldi r24,lo8(1)
 11839 2d40 00C0      		rjmp .L436
 11840               		.cfi_endproc
 11841               	.LFE84:
 11843               	.global	EVENT_USB_Device_ControlOUT
 11845               	EVENT_USB_Device_ControlOUT:
 11846               	.LFB85:
 137:main.c        **** void EVENT_USB_Device_ControlOUT(uint8_t* buf, uint8_t count){
 11847               		.loc 6 137 0
 11848               		.cfi_startproc
 11849               	.LVL752:
 11850               	/* prologue: function */
 11851               	/* frame size = 0 */
 11852               	/* stack size = 0 */
 11853               	.L__stack_usage = 0
 11854 2d42 462F      		mov r20,r22
 138:main.c        **** 	switch (usb_cmd){
 11855               		.loc 6 138 0
 11856 2d44 2091 0000 		lds r18,usb_cmd
 11857 2d48 213E      		cpi r18,lo8(-31)
 11858 2d4a 01F0      		breq .L466
 11859               	.LVL753:
 11860 2d4c 0895      		ret
 11861               	.L466:
 11862               		.loc 6 140 0
 11863 2d4e 2091 0000 		lds r18,cmd_data
 11864 2d52 30E0      		ldi r19,lo8(0)
 11865 2d54 0024      		clr __tmp_reg__
 11866 2d56 3695      		lsr r19
 11867 2d58 2795      		ror r18
 11868 2d5a 0794      		ror __tmp_reg__
 11869 2d5c 3695      		lsr r19
 11870 2d5e 2795      		ror r18
 11871 2d60 0794      		ror __tmp_reg__
 11872 2d62 322F      		mov r19,r18
 11873 2d64 202D      		mov r18,__tmp_reg__
 11874 2d66 B901      		movw r22,r18
 11875 2d68 50E0      		ldi r21,lo8(0)
 11876 2d6a 0E94 0000 		call __eeupd_block_x32a4u
 11877               	.LVL754:
 11878 2d6e 0895      		ret
 11879               		.cfi_endproc
 11880               	.LFE85:
 11882               	.global	cmd_data
 11883               	.global	cmd_data
 11884               		.section .bss
 11887               	cmd_data:
 11888 0000 00        		.skip 1,0
 11889               	.global	usb_cmd
 11890               	.global	usb_cmd
 11893               	usb_cmd:
 11894 0001 00        		.skip 1,0
 11895               	.global	fwversion
 11896               		.section	.progmem.data,"a",@progbits
 11899               	fwversion:
 11900 0000 4657 5F56 		.string	"FW_VERSION"
 11900      4552 5349 
 11900      4F4E 00
 11901               	.global	hwversion
 11904               	hwversion:
 11905 000b 4857 5F56 		.string	"HW_VERSION"
 11905      4552 5349 
 11905      4F4E 00
 11906               	.global	updating
 11907               	.global	updating
 11908               		.section .bss
 11911               	updating:
 11912 0002 00        		.skip 1,0
 11913               		.comm message,2,1
 11914               	.global	twilio_number
 11915               		.data
 11916               	.LC19:
 11917 00ef 2B31 3330 		.string	"+13042493059"
 11917      3432 3439 
 11917      3330 3539 
 11917      00
 11920               	twilio_number:
 11921 00fc 0000      		.word	.LC19
 11922               		.comm SerialInByte,1,1
 11923               		.comm SmsContentFlag,2,1
 11924               	.global	snFull
 11927               	snFull:
 11928 00fe 0000      		.word	.LC6
 11929               	.global	snTmp
 11932               	snTmp:
 11933 0100 0000      		.word	.LC6
 11934               	.global	msg
 11937               	msg:
 11938 0102 0000      		.word	.LC6
 11939               	.global	smsStorePos
 11942               	smsStorePos:
 11943 0104 0000      		.word	.LC6
 11944               	.global	debug
 11945               	.global	debug
 11946               		.section .bss
 11949               	debug:
 11950 0003 00        		.skip 1,0
 11951               	.global	max_dist
 11952               		.data
 11955               	max_dist:
 11956 0106 CD        		.byte	-51
 11957 0107 CC        		.byte	-52
 11958 0108 4C        		.byte	76
 11959 0109 3E        		.byte	62
 11960               	.global	lng
 11963               	lng:
 11964 010a 7D        		.byte	125
 11965 010b 87        		.byte	-121
 11966 010c 8E        		.byte	-114
 11967 010d C2        		.byte	-62
 11968               	.global	lat
 11971               	lat:
 11972 010e C6        		.byte	-58
 11973 010f 2B        		.byte	43
 11974 0110 29        		.byte	41
 11975 0111 42        		.byte	66
 11976               	.global	timeout_or_sampling_no_longer_enabled
 11977               	.global	timeout_or_sampling_no_longer_enabled
 11978               		.section .bss
 11981               	timeout_or_sampling_no_longer_enabled:
 11982 0004 00        		.skip 1,0
 11983               	.global	ep_in_data
 11984               	.global	ep_in_data
 11987               	ep_in_data:
 11988 0005 0000 0000 		.skip 4,0
 11989               	.global	ep_in_pipe_data
 11990               		.data
 11993               	ep_in_pipe_data:
 11994 0112 0000      		.word	ep_in_pipe_buffer
 11995 0114 0000      		.word	ep_in_pipe_buffer
 11996 0116 00        		.byte	0
 11997               		.comm ep_in_pipe_buffer,512,1
 11998               		.text
 11999               	.Letext0:
 12000               		.file 14 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/stdint.h"
 12001               		.file 15 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/avr/iox32a4u.h"
 12002               		.file 16 "usb/StdRequestType.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cczBaV8a.s:2      *ABS*:000000000000003f __SREG__
     /tmp/cczBaV8a.s:3      *ABS*:000000000000003e __SP_H__
     /tmp/cczBaV8a.s:4      *ABS*:000000000000003d __SP_L__
     /tmp/cczBaV8a.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/cczBaV8a.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cczBaV8a.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cczBaV8a.s:15     .text:0000000000000000 EVENT_USB_Device_ConfigurationChanged
     /tmp/cczBaV8a.s:11993  .data:0000000000000112 ep_in_pipe_data
                            *COM*:0000000000000200 ep_in_pipe_buffer
     /tmp/cczBaV8a.s:11987  .bss:0000000000000005 ep_in_data
     /tmp/cczBaV8a.s:108    .text:000000000000004e __vector_125
     /tmp/cczBaV8a.s:246    .text:00000000000000d8 __vector_126
     /tmp/cczBaV8a.s:11893  .bss:0000000000000001 usb_cmd
     /tmp/cczBaV8a.s:11887  .bss:0000000000000000 cmd_data
     /tmp/cczBaV8a.s:782    .text:00000000000002ea send_string
     /tmp/cczBaV8a.s:11981  .bss:0000000000000004 timeout_or_sampling_no_longer_enabled
     /tmp/cczBaV8a.s:1921   .text:00000000000006e2 concat
     /tmp/cczBaV8a.s:2015   .text:000000000000074e distance
     /tmp/cczBaV8a.s:11971  .data:000000000000010e lat
     /tmp/cczBaV8a.s:11963  .data:000000000000010a lng
     /tmp/cczBaV8a.s:2308   .text:000000000000090e parse_nmea_string
     /tmp/cczBaV8a.s:2440   .text:00000000000009aa parse_nmea
     /tmp/cczBaV8a.s:11955  .data:0000000000000106 max_dist
     /tmp/cczBaV8a.s:6057   .text:000000000000182e uart_putchar
     /tmp/cczBaV8a.s:6103   .text:000000000000184e uart_getchar
     /tmp/cczBaV8a.s:6129   .text:000000000000185a send_uart
     /tmp/cczBaV8a.s:11949  .bss:0000000000000003 debug
     /tmp/cczBaV8a.s:7347   .text:0000000000001cd0 turn_on_gps
     /tmp/cczBaV8a.s:7387   .text:0000000000001cee wake_up_gps
     /tmp/cczBaV8a.s:7403   .text:0000000000001cf0 gps_init
     /tmp/cczBaV8a.s:7467   .text:0000000000001d2e wake_up_gprs
     /tmp/cczBaV8a.s:7484   .text:0000000000001d30 gprs_init
     /tmp/cczBaV8a.s:7529   .text:0000000000001d54 send_message
     /tmp/cczBaV8a.s:8268   .text:0000000000002042 delSMS
     /tmp/cczBaV8a.s:11942  .data:0000000000000104 smsStorePos
     /tmp/cczBaV8a.s:8363   .text:00000000000020a2 GprsTextModeSMS
     /tmp/cczBaV8a.s:8391   .text:00000000000020ae ClearGprsMsg
     /tmp/cczBaV8a.s:11937  .data:0000000000000102 msg
     /tmp/cczBaV8a.s:8416   .text:00000000000020bc GprsReadSmsStore
     /tmp/cczBaV8a.s:8509   .text:0000000000002118 ProcessSms
     /tmp/cczBaV8a.s:8540   .text:000000000000211a ProcessGprsMsg
     /tmp/cczBaV8a.s:11932  .data:0000000000000100 snTmp
     /tmp/cczBaV8a.s:11927  .data:00000000000000fe snFull
                            *COM*:0000000000000002 SmsContentFlag
     /tmp/cczBaV8a.s:9408   .text:000000000000262e ReceiveTextMessage
                            *COM*:0000000000000001 SerialInByte
     /tmp/cczBaV8a.s:9525   .text:00000000000026b0 SimpleReceive
     /tmp/cczBaV8a.s:10765  .text.startup:0000000000000000 main
     /tmp/cczBaV8a.s:11316  .text:0000000000002afa EVENT_USB_Device_ControlRequest
                            *COM*:0000000000000002 message
     /tmp/cczBaV8a.s:11899  .progmem.data:0000000000000000 fwversion
     /tmp/cczBaV8a.s:11904  .progmem.data:000000000000000b hwversion
     /tmp/cczBaV8a.s:11845  .text:0000000000002d42 EVENT_USB_Device_ControlOUT
     /tmp/cczBaV8a.s:11911  .bss:0000000000000002 updating
     /tmp/cczBaV8a.s:11920  .data:00000000000000fc twilio_number

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
endpoints
USB_Init
USB_HandleSetup
ep0_buf_out
__eeupd_block_x32a4u
malloc
strcpy
strcat
__subsf3
__mulsf3
sin
cos
__addsf3
sqrt
atan2
strtok
atof
__divsf3
__gtsf2
sprintf
strstr
strchr
USB_ConfigureClock
ep0_buf_in
__eerd_block_x32a4u
USB_ep0_send_progmem
