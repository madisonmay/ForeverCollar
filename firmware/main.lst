   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.text
  11               	.Ltext0:
  12               		.cfi_sections	.debug_frame
  14               	gps_putchar.constprop.11:
  15               	.LFB89:
  16               		.file 1 "main.c"
   1:main.c        **** #include "Framework.h"
   2:main.c        **** #include <avr/io.h>
   3:main.c        **** #include <inttypes.h>
   4:main.c        **** #include <stdio.h> 
   5:main.c        **** #include <stdlib.h>
   6:main.c        **** #include <util/delay.h>
   7:main.c        **** #include <string.h> 
   8:main.c        **** #include <math.h>
   9:main.c        **** #include "nmea/nmea.h"
  10:main.c        **** 
  11:main.c        **** //sample nmea strings for testing parser
  12:main.c        **** double lat = 42.292747;
  13:main.c        **** double lng = -71.264622;
  14:main.c        **** double max_dist = .200;
  15:main.c        **** 
  16:main.c        **** typedef struct _latlng {
  17:main.c        ****   double lat;
  18:main.c        ****   double lng;
  19:main.c        **** } latlng;
  20:main.c        **** 
  21:main.c        **** int gps_putchar(char c); 
  22:main.c        **** char gps_getchar();
  23:main.c        **** int gprs_putchar(char c); 
  24:main.c        **** char gprs_getchar();
  25:main.c        **** 
  26:main.c        **** void send_string(char* s);
  27:main.c        **** 
  28:main.c        **** void gps_init (void);
  29:main.c        **** void grps_init(void);
  30:main.c        **** 
  31:main.c        **** double distance(double, double);
  32:main.c        **** 
  33:main.c        **** void turn_on_gps(void);
  34:main.c        **** 
  35:main.c        **** void wake_up_gps(void);
  36:main.c        **** void wake_up_gprs(void);
  37:main.c        **** 
  38:main.c        **** void send_usb_data(char *s);
  39:main.c        **** bool updating = false;
  40:main.c        **** void parse_nmea(void);
  41:main.c        **** 
  42:main.c        **** void send_message(char* number, char* message);
  43:main.c        **** 
  44:main.c        **** extern void parse_nmea_string(char *s, latlng *gps);
  45:main.c        **** 
  46:main.c        **** char *message;
  47:main.c        **** 
  48:main.c        **** void send_string(char* s) {
  49:main.c        ****   int length = strlen(s);
  50:main.c        ****   for (int i=0; i<length; i++) {
  51:main.c        ****     send_byte(s[i]);
  52:main.c        ****   }
  53:main.c        **** }
  54:main.c        **** 
  55:main.c        **** void turn_on_gps(void) {
  56:main.c        ****   // wait one second after powering on, as recommended by a2235-h data sheet
  57:main.c        ****   _delay_ms(1000);
  58:main.c        **** 
  59:main.c        ****   // // May or may not be necessary -- docs on wakeup are a bit sketchy
  60:main.c        ****   // // Does the gps module transmit anything before locking on to a gps position?
  61:main.c        ****   // // Or do we need to wait before querying for location data?
  62:main.c        ****   // Set PD5 direction to output
  63:main.c        ****   PORTD.DIRSET = PIN5_bm;
  64:main.c        **** 
  65:main.c        ****   // LOW/HIGH transmission of PD5 to wakeup gps module 
  66:main.c        ****   PORTD.OUTTGL = PIN5_bm;
  67:main.c        **** }
  68:main.c        **** 
  69:main.c        **** void wake_up_gps(void) {
  70:main.c        **** 
  71:main.c        **** }
  72:main.c        **** 
  73:main.c        **** void gps_init(void) {
  74:main.c        ****   /*
  75:main.c        ****   
  76:main.c        ****   Port numbers, baud rate, etc will need to be changed when switching 
  77:main.c        ****   to a different port.  This is a bit complex to abstract out to a new 
  78:main.c        ****   code layer at the moment (too many inputs required for things to work right)
  79:main.c        ****   so we'll have to keep it as is.  
  80:main.c        **** 
  81:main.c        ****   Specifically, we'll have to change PORTD, USARTDO, BSEL, BSCALE, and the Tx bitmask
  82:main.c        **** 
  83:main.c        ****   */
  84:main.c        **** 
  85:main.c        ****   turn_on_gps();
  86:main.c        **** 
  87:main.c        ****   // Set the TxD pin as an output - set PORTD OUT register bit 3 to 1 
  88:main.c        ****   PORTD.DIRSET = PIN3_bm; 
  89:main.c        **** 
  90:main.c        ****   // Set the TxD pin high - set PORTD DIR register bit 3 to 1 
  91:main.c        ****   PORTD.OUTSET = PIN3_bm; 
  92:main.c        **** 
  93:main.c        **** 	//Baud rate of 4800
  94:main.c        **** 	uint16_t BSEL = 12;
  95:main.c        **** 	uint8_t BSCALE = 1;
  96:main.c        **** 	USARTD0_BAUDCTRLA = BSEL & 0XFF;
  97:main.c        **** 	USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
  98:main.c        **** 
  99:main.c        **** 	// no interrupts
 100:main.c        **** 	// can't overwrite bits 7:6
 101:main.c        **** 	USARTD0.CTRLA = 0x00;
 102:main.c        **** 
 103:main.c        ****   // Enable transmitter and receiver
 104:main.c        ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 105:main.c        **** 
 106:main.c        **** 	// async, no parity, 1 stop bit, 8 bit data,
 107:main.c        **** 	// 00     00         00          11    
 108:main.c        ****   USARTD0.CTRLC = 0x03;  
 109:main.c        **** }
 110:main.c        **** 
 111:main.c        **** void wake_up_gprs(void) {
 112:main.c        ****   // 
 113:main.c        **** }
 114:main.c        **** 
 115:main.c        **** void gprs_init(void) {
 116:main.c        ****   //change port numbers when we get our proto board
 117:main.c        **** 
 118:main.c        ****   wake_up_gprs();
 119:main.c        ****   //Baud rate of 19200
 120:main.c        **** 
 121:main.c        ****   // Set the TxD pin as an output - set PORTD OUT register bit 3 to 1 
 122:main.c        ****   PORTD.DIRSET = PIN3_bm; 
 123:main.c        **** 
 124:main.c        ****   // Set the TxD pin high - set PORTD DIR register bit 3 to 1 
 125:main.c        ****   PORTD.OUTSET = PIN3_bm; 
 126:main.c        **** 
 127:main.c        ****   uint16_t BSEL = 6;
 128:main.c        ****   uint8_t BSCALE = 0;
 129:main.c        ****   USARTD0_BAUDCTRLA = BSEL & 0XFF;
 130:main.c        ****   USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
 131:main.c        **** 
 132:main.c        ****   // no interrupts
 133:main.c        ****   // can't overwrite bits 7:6
 134:main.c        ****   USARTD0.CTRLA = 0x00;
 135:main.c        **** 
 136:main.c        ****   // Enable transmitter and receiver
 137:main.c        ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 138:main.c        **** 
 139:main.c        ****   // async, no parity, 1 stop bit, 8 bit data,
 140:main.c        ****   // 00     00         00          11    
 141:main.c        ****   USARTD0.CTRLC = 0x03;  
 142:main.c        **** }
 143:main.c        **** 
 144:main.c        **** char* concat(char *s1, char *s2)
 145:main.c        **** {
 146:main.c        ****     //string concatenation -- not needed now, but might prove useful later
 147:main.c        ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 148:main.c        ****     //should also check for memory allocation errors here
 149:main.c        ****     strcpy(result, s1);
 150:main.c        ****     strcat(result, s2);
 151:main.c        ****     return result;
 152:main.c        **** }
 153:main.c        **** 
 154:main.c        **** void parse_nmea_string(char *s, latlng *gps)
 155:main.c        **** {
 156:main.c        ****   int i=0; // used to iterate through array
 157:main.c        ****   char *token[20]; //stores the chunks of string after splitting the string on commas
 158:main.c        **** 
 159:main.c        ****   token[0] = strtok(s, ","); //get pointer to first token found and store in
 160:main.c        ****                              //first element of array
 161:main.c        ****   while(token[i] != NULL) {  //while commas continue to be found
 162:main.c        ****       i++;  
 163:main.c        ****       token[i] = strtok(NULL, ","); //continue to split the string
 164:main.c        ****   }
 165:main.c        **** 
 166:main.c        ****   //Example: token = [], s = "a,b,c"
 167:main.c        ****   //Iteration 1
 168:main.c        ****   //token --> ["a"], s-->"b,c"
 169:main.c        ****   //token --> ["a", "b"], s-->"c"
 170:main.c        ****   //token --> ["a", "b", "c"], s-->""
 171:main.c        ****   //end
 172:main.c        **** 
 173:main.c        ****   //when parsing GPRMC data
 174:main.c        ****   //longitude should be stored at index 3
 175:main.c        ****   //latitude should be stord at index 5
 176:main.c        **** 
 177:main.c        ****   //indices will have to be changed if our gps module
 178:main.c        ****   //speaks a different dialog of NMEA
 179:main.c        **** 
 180:main.c        ****   char* lat_str = token[3]; //longitude
 181:main.c        ****   char* lng_str = token[5]; //latitude
 182:main.c        **** 
 183:main.c        ****   //converts string stored in gps->lat_str to double and stores in lat
 184:main.c        ****   gps->lat = atof(lat_str)/100.;
 185:main.c        **** 
 186:main.c        ****   //converts string stored in gps->lng_str to double and stores in lng
 187:main.c        ****   gps->lng = atof(lng_str)/100.;
 188:main.c        **** }
 189:main.c        **** 
 190:main.c        **** #define d2r (M_PI / 180.0)
 191:main.c        **** 
 192:main.c        **** //calculate distance, assuming earth is spherical
 193:main.c        **** double distance(double gpslat, double gpslng) {
 194:main.c        ****     double dlong = (gpslng - lng) * d2r;
 195:main.c        ****     double dlat = (gpslat - lat) * d2r;
 196:main.c        ****     double a = pow(sin(dlat/2.0), 2) + cos(lat*d2r) * cos(gpslat*d2r) * pow(sin(dlong/2.0), 2);
 197:main.c        ****     double c = 2 * atan2(sqrt(a), sqrt(1-a));
 198:main.c        ****     double d = 6367 * c;
 199:main.c        **** 
 200:main.c        ****     return d;
 201:main.c        **** }
 202:main.c        **** 
 203:main.c        **** 
 204:main.c        **** 
 205:main.c        **** void parse_nmea(void) {
 206:main.c        **** 
 207:main.c        ****     char *buff = "$GPRMC,71.132,A,4230.00,N,-7130.00,E,11.2,0.0,261206,0.0,E*50\r\n";
 208:main.c        **** 
 209:main.c        ****     //latlng struct to store gps data in
 210:main.c        ****     //reused in every iterationif (d
 211:main.c        ****     latlng gps;
 212:main.c        **** 
 213:main.c        ****     //parse lat and lng out of raw nmea string
 214:main.c        ****     parse_nmea_string(buff, &gps);
 215:main.c        **** 
 216:main.c        ****     double dist = distance(gps.lat, gps.lng);
 217:main.c        **** 
 218:main.c        ****     if (dist > max_dist) {
 219:main.c        **** 
 220:main.c        ****       char lat_buff[100];
 221:main.c        ****       char lng_buff[100];
 222:main.c        ****       char dist_buff[100];
 223:main.c        **** 
 224:main.c        ****       sprintf(lat_buff, "%f", gps.lat);
 225:main.c        ****       sprintf(lng_buff, "%f", gps.lng);
 226:main.c        ****       sprintf(dist_buff, "%f", dist);
 227:main.c        **** 
 228:main.c        ****       //determine how many characters are in the gps latitude and longitude strings
 229:main.c        ****       int len_lat = strlen(lat_buff);
 230:main.c        ****       int len_lng = strlen(lng_buff);
 231:main.c        ****       int len_dist = strlen(dist_buff);
 232:main.c        **** 
 233:main.c        ****       //iterate over lat and lng strings, sending them char by char over usb
 234:main.c        ****       for (int i=0; i<len_lat; i++) {
 235:main.c        ****         send_byte(lat_buff[i]);  
 236:main.c        ****       }
 237:main.c        **** 
 238:main.c        ****       //lat/lng seperator 
 239:main.c        ****       send_byte(' ');  
 240:main.c        ****       for (int j=0; j<len_lng; j++) {
 241:main.c        ****         send_byte(lng_buff[j]);  
 242:main.c        ****       }
 243:main.c        **** 
 244:main.c        ****             //lat/lng seperator 
 245:main.c        ****       send_byte(' ');  
 246:main.c        ****       for (int k=0; k<len_dist; k++) {
 247:main.c        ****         send_byte(dist_buff[k]);  
 248:main.c        ****       }
 249:main.c        ****     }
 250:main.c        **** 
 251:main.c        ****     //presumably has to do with memory management
 252:main.c        ****     //for now, just make sure to call if after you're done sending bytes over usb
 253:main.c        ****     break_and_flush();
 254:main.c        **** }
 255:main.c        **** 
 256:main.c        **** // code for communicating with the gps module via uart
 257:main.c        **** int gps_putchar (char c) { 
  17               		.loc 1 257 0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               	.L2:
 258:main.c        ****     if (c == '\n') 
 259:main.c        ****         gps_putchar('\r'); 
 260:main.c        **** 
 261:main.c        ****     // Wait for the transmit buffer to be empty 
 262:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
  24               		.loc 1 262 0
  25 0000 8091 A109 		lds r24,2465
  26 0004 85FF      		sbrs r24,5
  27 0006 00C0      		rjmp .L2
 263:main.c        **** 
 264:main.c        ****     // Put our character into the transmit buffer 
 265:main.c        ****     USARTD0.DATA = c; 
  28               		.loc 1 265 0
  29 0008 8DE0      		ldi r24,lo8(13)
  30 000a 8093 A009 		sts 2464,r24
 266:main.c        **** 
 267:main.c        ****     return 0; 
 268:main.c        **** } 
  31               		.loc 1 268 0
  32 000e 80E0      		ldi r24,lo8(0)
  33 0010 90E0      		ldi r25,hi8(0)
  34               	/* epilogue start */
  35 0012 0895      		ret
  36               		.cfi_endproc
  37               	.LFE89:
  39               	.global	EVENT_USB_Device_ConfigurationChanged
  41               	EVENT_USB_Device_ConfigurationChanged:
  42               	.LFB57:
  43               		.file 2 "Framework.h"
   1:Framework.h   **** #pragma once
   2:Framework.h   **** #define F_CPU 32000000UL
   3:Framework.h   **** 
   4:Framework.h   **** // includes
   5:Framework.h   **** #include <avr/interrupt.h>
   6:Framework.h   **** #include <util/delay.h>
   7:Framework.h   **** #include "Descriptors.h"
   8:Framework.h   **** #include "usb/usb.h"
   9:Framework.h   **** #include "usb/usb_pipe.h"
  10:Framework.h   **** #include <avr/eeprom.h>
  11:Framework.h   **** #include <avr/io.h>
  12:Framework.h   **** 
  13:Framework.h   **** USB_PIPE(ep_in, 0x81 | USB_EP_PP, USB_EP_TYPE_BULK_gc, 64, 8, PIPE_ENABLE_FLUSH);
  14:Framework.h   **** 
  15:Framework.h   **** bool timeout_or_sampling_no_longer_enabled = 0;
  16:Framework.h   **** 
  17:Framework.h   **** // Queue a byte to be sent over the bulk EP. Blocks if the buffer is full
  18:Framework.h   **** static inline void send_byte(uint8_t byte){
  19:Framework.h   ****     // this should never actually block if your buffer is big enough
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
  21:Framework.h   **** 	usb_pipe_write_byte(&ep_in, byte);
  22:Framework.h   **** }
  23:Framework.h   **** 
  24:Framework.h   **** // Sends a break to end the USB read and flushes the USB pipe
  25:Framework.h   **** static inline void break_and_flush(){
  26:Framework.h   ****     usb_pipe_flush(&ep_in);
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
  30:Framework.h   ****             usb_pipe_reset(&ep_in);
  31:Framework.h   ****             return;
  32:Framework.h   ****         }
  33:Framework.h   ****     }
  34:Framework.h   **** } 
  35:Framework.h   **** 
  36:Framework.h   **** void EVENT_USB_Device_ConfigurationChanged(uint8_t config){
  44               		.loc 2 36 0
  45               		.cfi_startproc
  46               	.LVL0:
  47               	/* prologue: function */
  48               	/* frame size = 0 */
  49               	/* stack size = 0 */
  50               	.L__stack_usage = 0
  51               	.LBB389:
  52               	.LBB390:
  53               		.file 3 "usb/usb_pipe.h"
   1:usb/usb_pipe.h **** #include "pipe.h"
   2:usb/usb_pipe.h **** #include "usb.h"
   3:usb/usb_pipe.h **** 
   4:usb/usb_pipe.h **** #include <util/atomic.h>
   5:usb/usb_pipe.h **** #ifndef PIPE_ATOMIC
   6:usb/usb_pipe.h **** #define PIPE_ATOMIC ATOMIC_RESTORESTATE
   7:usb/usb_pipe.h **** #endif 
   8:usb/usb_pipe.h **** 
   9:usb/usb_pipe.h **** typedef struct USB_Pipe_data{
  10:usb/usb_pipe.h **** 	bool bank;
  11:usb/usb_pipe.h **** 	uint8_t flush;
  12:usb/usb_pipe.h **** 	uint16_t packet_offset; // Index into current packet for byte mode
  13:usb/usb_pipe.h **** } USB_Pipe_data;
  14:usb/usb_pipe.h **** 
  15:usb/usb_pipe.h **** // Immutable part, constant-folded at compile time
  16:usb/usb_pipe.h **** typedef struct USB_Pipe{
  17:usb/usb_pipe.h **** 	uint8_t ep;
  18:usb/usb_pipe.h **** 	uint8_t type;
  19:usb/usb_pipe.h **** 	USB_Pipe_data* data;
  20:usb/usb_pipe.h **** 	const Pipe* pipe;
  21:usb/usb_pipe.h **** 	uint8_t features;
  22:usb/usb_pipe.h **** } USB_Pipe;
  23:usb/usb_pipe.h **** 
  24:usb/usb_pipe.h **** #define PIPE_ENABLE_FLUSH (1<<0)
  25:usb/usb_pipe.h **** 
  26:usb/usb_pipe.h **** #define USB_PIPE(NAME, EPNO, TYPE, PACKET_SIZE, BUFFER_PACKETS, FEATURES) \
  27:usb/usb_pipe.h **** 	PIPE(NAME##_pipe, (BUFFER_PACKETS), (PACKET_SIZE),               \
  28:usb/usb_pipe.h **** 		((EPNO)&USB_EP_IN)?0:2,                      \
  29:usb/usb_pipe.h **** 		((EPNO)&USB_EP_IN)?2:0                       \
  30:usb/usb_pipe.h **** 	);                                               \
  31:usb/usb_pipe.h **** 	USB_Pipe_data NAME##_data = {      \
  32:usb/usb_pipe.h **** 		.bank = 0,                   \
  33:usb/usb_pipe.h **** 		.flush = 0,                    \
  34:usb/usb_pipe.h **** 	};                                 \
  35:usb/usb_pipe.h **** 	const static USB_Pipe NAME = {     \
  36:usb/usb_pipe.h **** 		.ep = (EPNO),                  \
  37:usb/usb_pipe.h **** 		.type = (TYPE),                \
  38:usb/usb_pipe.h **** 		.data = &(NAME##_data),        \
  39:usb/usb_pipe.h **** 		.pipe = &(NAME##_pipe),        \
  40:usb/usb_pipe.h **** 		.features = (FEATURES),        \
  41:usb/usb_pipe.h **** 	};                                 \
  42:usb/usb_pipe.h **** 
  43:usb/usb_pipe.h **** static inline void usb_pipe_init(const USB_Pipe* p){
  44:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
  54               		.loc 3 44 0
  55 0014 2FB7      		in r18,__SREG__
  56               	.LVL1:
  57               	.LBB391:
  58               	.LBB392:
  59               		.file 4 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h"
   1:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    All rights reserved.
   3:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
   4:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
   7:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  10:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      the documentation and/or other materials provided with the
  13:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      distribution.
  14:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  15:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      from this software without specific prior written permission.
  18:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  19:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** */
  31:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  32:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** /* $Id: atomic.h 2158 2010-06-10 15:48:28Z joerg_wunsch $ */
  33:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  34:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  37:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #include <avr/io.h>
  38:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #include <avr/interrupt.h>
  39:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  40:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #if !defined(__DOXYGEN__)
  41:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** /* Internal helper functions. */
  42:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  44:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     sei();
  45:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     return 1;
  46:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  47:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  48:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  49:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
  60               		.loc 4 50 0
  61               	/* #APP */
  62               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
  63 0016 F894      		cli
  64               	 ;  0 "" 2
  65               	.LVL2:
  66               	/* #NOAPP */
  67               	.LBE392:
  68               	.LBE391:
  69               	.LBB393:
  70               	.LBB394:
  71               		.file 5 "usb/pipe.h"
   1:usb/pipe.h    **** // Ring buffer that takes heavy advantage of constant folding
   2:usb/pipe.h    **** #pragma once
   3:usb/pipe.h    **** 
   4:usb/pipe.h    **** #include "Common.h"
   5:usb/pipe.h    **** 
   6:usb/pipe.h    **** // Mutable part, becomes an actual struct
   7:usb/pipe.h    **** typedef struct Pipe_data{
   8:usb/pipe.h    **** 	uint8_t* read_ptr;
   9:usb/pipe.h    **** 	uint8_t* write_ptr;
  10:usb/pipe.h    **** 	int8_t count; // available slots
  11:usb/pipe.h    **** } Pipe_data;
  12:usb/pipe.h    **** 
  13:usb/pipe.h    **** // Immutable part, constant-folded at compile time
  14:usb/pipe.h    **** typedef struct Pipe{
  15:usb/pipe.h    **** 	Pipe_data* data;
  16:usb/pipe.h    **** 	uint8_t* buffer;
  17:usb/pipe.h    **** 	uint8_t  slots;         // Number of slots in the buffer
  18:usb/pipe.h    **** 	uint8_t reserve_read;  // Slots to prevent reading so they are available to writer
  19:usb/pipe.h    **** 	uint8_t reserve_write; // Slots to prevent writing so they are available to reader
  20:usb/pipe.h    **** 	uint16_t size;          // Size of a buffer slot in bytes
  21:usb/pipe.h    **** } Pipe;
  22:usb/pipe.h    **** 
  23:usb/pipe.h    **** #define PIPE_H(NAME, SLOTS, SIZE, RESERVE_READ, RESERVE_WRITE)       \
  24:usb/pipe.h    **** 	extern Pipe_data NAME##_data;         \
  25:usb/pipe.h    **** 	extern uint8_t NAME##_buffer[(SLOTS)*(SIZE)]; \
  26:usb/pipe.h    **** 	const static Pipe NAME = {            \
  27:usb/pipe.h    **** 		.data = &(NAME##_data),           \
  28:usb/pipe.h    **** 		.buffer = &((NAME##_buffer)[0]),  \
  29:usb/pipe.h    **** 		.slots = (SLOTS),                 \
  30:usb/pipe.h    **** 		.size = (SIZE),                   \
  31:usb/pipe.h    **** 		.reserve_read = (RESERVE_READ),   \
  32:usb/pipe.h    **** 		.reserve_write = (RESERVE_WRITE), \
  33:usb/pipe.h    **** 	};
  34:usb/pipe.h    **** 
  35:usb/pipe.h    **** 
  36:usb/pipe.h    **** #define PIPE_C(NAME, SLOTS, SIZE)                   \
  37:usb/pipe.h    **** 	uint8_t NAME##_buffer[(SLOTS)*(SIZE)];           \
  38:usb/pipe.h    **** 	Pipe_data NAME##_data = {                \
  39:usb/pipe.h    **** 		.count = 0,                          \
  40:usb/pipe.h    **** 		.read_ptr = &((NAME##_buffer)[0]),                       \
  41:usb/pipe.h    **** 		.write_ptr = &((NAME##_buffer)[0]),                      \
  42:usb/pipe.h    **** 	};
  43:usb/pipe.h    **** 
  44:usb/pipe.h    **** #define PIPE(NAME, SLOTS, SIZE, RESERVE_READ, RESERVE_WRITE) \
  45:usb/pipe.h    **** 	PIPE_H(NAME, SLOTS, SIZE, RESERVE_READ, RESERVE_WRITE)   \
  46:usb/pipe.h    **** 	PIPE_C(NAME, SLOTS, SIZE)
  47:usb/pipe.h    **** 
  48:usb/pipe.h    **** // Number of slots available to read
  49:usb/pipe.h    **** static inline int8_t pipe_can_read(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  50:usb/pipe.h    **** static inline int8_t pipe_can_read(const Pipe* pipe){
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
  52:usb/pipe.h    **** }
  53:usb/pipe.h    **** 
  54:usb/pipe.h    **** // Number of slots available to write
  55:usb/pipe.h    **** static inline int8_t pipe_can_write(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  56:usb/pipe.h    **** static inline int8_t pipe_can_write(const Pipe* pipe){
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
  58:usb/pipe.h    **** }
  59:usb/pipe.h    **** 
  60:usb/pipe.h    **** static inline uint8_t* pipe_read_ptr(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  61:usb/pipe.h    **** static inline uint8_t* pipe_read_ptr(const Pipe* pipe){
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
  63:usb/pipe.h    **** }
  64:usb/pipe.h    **** 
  65:usb/pipe.h    **** static inline uint8_t* pipe_write_ptr(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  66:usb/pipe.h    **** static inline uint8_t* pipe_write_ptr(const Pipe* pipe){
  67:usb/pipe.h    **** 	return pipe->data->write_ptr;
  68:usb/pipe.h    **** }
  69:usb/pipe.h    **** 
  70:usb/pipe.h    **** static inline void pipe_done_read(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  71:usb/pipe.h    **** static inline void pipe_done_read(const Pipe* pipe){
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
  74:usb/pipe.h    **** 	// Assumes buffer_size % slot_size == 0 and all accesses aligned
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
  77:usb/pipe.h    **** }
  78:usb/pipe.h    **** 
  79:usb/pipe.h    **** static inline void pipe_done_write(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  80:usb/pipe.h    **** static inline void pipe_done_write(const Pipe* pipe){
  81:usb/pipe.h    **** 	pipe->data->count += 1;
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
  83:usb/pipe.h    **** 	// Assumes buffer_size % slot_size == 0 and all accesses aligned
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
  86:usb/pipe.h    **** }
  87:usb/pipe.h    **** 
  88:usb/pipe.h    **** static inline void pipe_reset(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  89:usb/pipe.h    **** static inline void pipe_reset(const Pipe* pipe){
  90:usb/pipe.h    **** 	pipe->data->count = 0;
  72               		.loc 5 90 0
  73 0018 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
  91:usb/pipe.h    **** 	pipe->data->read_ptr = pipe->data->write_ptr = pipe->buffer;
  74               		.loc 5 91 0
  75 001c 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
  76 001e 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
  77               	.LVL3:
  78 0020 8093 0000 		sts ep_in_pipe_data+2,r24
  79 0024 9093 0000 		sts ep_in_pipe_data+2+1,r25
  80 0028 8093 0000 		sts ep_in_pipe_data,r24
  81 002c 9093 0000 		sts ep_in_pipe_data+1,r25
  82               	.LVL4:
  83               	.LBE394:
  84               	.LBE393:
  85               	.LBB395:
  86               	.LBB396:
  87               	.LBB397:
  88               		.file 6 "usb/usb.h"
   1:usb/usb.h     **** // Minimal USB Stack for ATxmega32a4u and related
   2:usb/usb.h     **** // http://nonolithlabs.com
   3:usb/usb.h     **** // (C) 2011 Kevin Mehall (Nonolith Labs) <km@kevinmehall.net>
   4:usb/usb.h     **** //
   5:usb/usb.h     **** // Heavily borrows from LUFA
   6:usb/usb.h     **** // Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
   7:usb/usb.h     **** //
   8:usb/usb.h     **** // Licensed under the terms of the GNU GPLv3+
   9:usb/usb.h     **** 
  10:usb/usb.h     **** #pragma once
  11:usb/usb.h     **** 
  12:usb/usb.h     **** #include <avr/io.h>
  13:usb/usb.h     **** 
  14:usb/usb.h     **** #define CPU_TO_LE16(x) x
  15:usb/usb.h     **** 
  16:usb/usb.h     **** struct USB_Request_Header;
  17:usb/usb.h     **** typedef struct USB_Request_Header USB_Requst_Header_t;
  18:usb/usb.h     **** 
  19:usb/usb.h     **** #include "StdDescriptors.h"
  20:usb/usb.h     **** #include "StdRequestType.h"
  21:usb/usb.h     **** #include "Events.h"
  22:usb/usb.h     **** 
  23:usb/usb.h     **** #ifndef USB_MAXEP
  24:usb/usb.h     **** 	#define USB_MAXEP 1
  25:usb/usb.h     **** #endif
  26:usb/usb.h     **** 
  27:usb/usb.h     **** #ifndef USB_EP0SIZE
  28:usb/usb.h     **** 	#define EP0SIZE 64
  29:usb/usb.h     **** #endif
  30:usb/usb.h     **** 
  31:usb/usb.h     **** typedef union USB_EP_pair{
  32:usb/usb.h     **** 	union{
  33:usb/usb.h     **** 		struct{
  34:usb/usb.h     **** 			USB_EP_t out;
  35:usb/usb.h     **** 			USB_EP_t in;
  36:usb/usb.h     **** 		};
  37:usb/usb.h     **** 		USB_EP_t ep[2];
  38:usb/usb.h     **** 	};
  39:usb/usb.h     **** } ATTR_PACKED USB_EP_pair_t;
  40:usb/usb.h     **** 
  41:usb/usb.h     **** extern uint8_t ep0_buf_in[USB_EP0SIZE];
  42:usb/usb.h     **** extern uint8_t ep0_buf_out[USB_EP0SIZE];
  43:usb/usb.h     **** extern USB_EP_pair_t endpoints[USB_MAXEP+1];
  44:usb/usb.h     **** 
  45:usb/usb.h     **** /** String descriptor index for the device's unique serial number string descriptor within the devi
  46:usb/usb.h     ****  *  This unique serial number is used by the host to associate resources to the device (such as dri
  47:usb/usb.h     ****  *  number allocations) to a device regardless of the port it is plugged in to on the host. Some mi
  48:usb/usb.h     ****  *  a unique serial number internally, and setting the device descriptors serial number string inde
  49:usb/usb.h     ****  *  will cause it to use the internal serial number.
  50:usb/usb.h     ****  *
  51:usb/usb.h     ****  *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host to 
  52:usb/usb.h     ****  *  number for the device.
  53:usb/usb.h     ****  */
  54:usb/usb.h     **** #define USE_INTERNAL_SERIAL            0xDC
  55:usb/usb.h     **** 
  56:usb/usb.h     **** /** Length of the device's unique internal serial number, in bits, if present on the selected micro
  57:usb/usb.h     ****  *  model.
  58:usb/usb.h     ****  */
  59:usb/usb.h     **** #define INTERNAL_SERIAL_LENGTH_BITS    (8 * (1 + (offsetof(NVM_PROD_SIGNATURES_t, COORDY1) - offset
  60:usb/usb.h     **** 
  61:usb/usb.h     **** /** Start address of the internal serial number, in the appropriate address space, if present on th
  62:usb/usb.h     ****  *  model.
  63:usb/usb.h     ****  */
  64:usb/usb.h     **** #define INTERNAL_SERIAL_START_ADDRESS  offsetof(NVM_PROD_SIGNATURES_t, LOTNUM0)
  65:usb/usb.h     **** 
  66:usb/usb.h     **** /* Enums: */
  67:usb/usb.h     **** 	/** Enum for the various states of the USB Device state machine. Only some states are
  68:usb/usb.h     **** 	 *  implemented in the LUFA library - other states are left to the user to implement.
  69:usb/usb.h     **** 	 *
  70:usb/usb.h     **** 	 *  For information on each possible USB device state, refer to the USB 2.0 specification.
  71:usb/usb.h     **** 	 *
  72:usb/usb.h     **** 	 *  \see \ref USB_DeviceState, which stores the current device state machine state.
  73:usb/usb.h     **** 	 */
  74:usb/usb.h     **** 	enum USB_Device_States_t
  75:usb/usb.h     **** 	{
  76:usb/usb.h     **** 		DEVICE_STATE_Unattached                   = 0, /**< Internally implemented by the library. This s
  77:usb/usb.h     **** 		                                                *   that the device is not currently connected to
  78:usb/usb.h     **** 		                                                */
  79:usb/usb.h     **** 		DEVICE_STATE_Powered                      = 1, /**< Internally implemented by the library. This s
  80:usb/usb.h     **** 		                                                *   that the device is connected to a host, but e
  81:usb/usb.h     **** 		                                                *   yet begun.
  82:usb/usb.h     **** 		                                                */
  83:usb/usb.h     **** 		DEVICE_STATE_Default                      = 2, /**< Internally implemented by the library. This s
  84:usb/usb.h     **** 		                                                *   that the device's USB bus has been reset by t
  85:usb/usb.h     **** 		                                                *   now waiting for the host to begin the enumera
  86:usb/usb.h     **** 		                                                */
  87:usb/usb.h     **** 		DEVICE_STATE_Addressed                    = 3, /**< Internally implemented by the library. This s
  88:usb/usb.h     **** 		                                                *   that the device has been addressed by the USB
  89:usb/usb.h     **** 		                                                *   yet configured.
  90:usb/usb.h     **** 		                                                */
  91:usb/usb.h     **** 		DEVICE_STATE_Configured                   = 4, /**< May be implemented by the user project. This 
  92:usb/usb.h     **** 		                                                *   that the device has been enumerated by the ho
  93:usb/usb.h     **** 		                                                *   for USB communications to begin.
  94:usb/usb.h     **** 		                                                */
  95:usb/usb.h     **** 		DEVICE_STATE_Suspended                    = 5, /**< May be implemented by the user project. This 
  96:usb/usb.h     **** 		                                                *   that the USB bus has been suspended by the ho
  97:usb/usb.h     **** 		                                                *   should power down to a minimal power level un
  98:usb/usb.h     **** 		                                                *   resumed.
  99:usb/usb.h     **** 		                                                */
 100:usb/usb.h     **** 	};
 101:usb/usb.h     **** 
 102:usb/usb.h     **** #define USB_EP_size_to_gc(x)  ((x <= 8   )?USB_EP_BUFSIZE_8_gc:\
 103:usb/usb.h     ****                                (x <= 16  )?USB_EP_BUFSIZE_16_gc:\
 104:usb/usb.h     ****                                (x <= 32  )?USB_EP_BUFSIZE_32_gc:\
 105:usb/usb.h     ****                                (x <= 64  )?USB_EP_BUFSIZE_64_gc:\
 106:usb/usb.h     ****                                (x <= 128 )?USB_EP_BUFSIZE_128_gc:\
 107:usb/usb.h     ****                                (x <= 256 )?USB_EP_BUFSIZE_256_gc:\
 108:usb/usb.h     ****                                (x <= 512 )?USB_EP_BUFSIZE_512_gc:\
 109:usb/usb.h     ****                                            USB_EP_BUFSIZE_1023_gc)
 110:usb/usb.h     **** 
 111:usb/usb.h     **** #define USB_EP_IN 0x80
 112:usb/usb.h     **** 
 113:usb/usb.h     **** // Flag in the endpoint address to indicate that the endpoint should use
 114:usb/usb.h     **** // PingPong (double buffer) mode. This is not actually part of the endpoint
 115:usb/usb.h     **** // address as seen by the host. If PP is enabled, this flag needs to be part
 116:usb/usb.h     **** // of the address passed to all USB_EP_* functions.
 117:usb/usb.h     **** #define USB_EP_PP 0x40
 118:usb/usb.h     **** 	
 119:usb/usb.h     **** extern volatile uint8_t USB_DeviceState;
 120:usb/usb.h     **** extern volatile uint8_t USB_Device_ConfigurationNumber;
 121:usb/usb.h     **** 
 122:usb/usb.h     **** /** Configure the XMEGA's clock for use with USB.  */
 123:usb/usb.h     **** void USB_ConfigureClock(void);
 124:usb/usb.h     **** 
 125:usb/usb.h     **** /** Initialize USB functionality */
 126:usb/usb.h     **** void USB_Init(void);
 127:usb/usb.h     **** void USB_ResetInterface(void);
 128:usb/usb.h     **** 
 129:usb/usb.h     **** #define _USB_EP(epaddr) \
 130:usb/usb.h     **** 	USB_EP_pair_t* pair = &endpoints[(epaddr & 0x3F)]; \
 131:usb/usb.h     **** 	USB_EP_t* e __attribute__ ((unused)) = &pair->ep[!!(epaddr&0x80)]; \
 132:usb/usb.h     **** 	
 133:usb/usb.h     **** #define _USB_EP_OTHER(epaddr) \
 134:usb/usb.h     **** 	USB_EP_t* other = &pair->ep[!(epaddr&0x80)]
 135:usb/usb.h     **** 	
 136:usb/usb.h     **** #define _USB_EP_BANK(epaddr, bank) \
 137:usb/usb.h     **** 	USB_EP_t* b = &pair->ep[!!(epaddr&0x80) != bank]
 138:usb/usb.h     **** 
 139:usb/usb.h     **** inline void USB_ep_init(uint8_t ep, uint8_t type, uint16_t bufsize) ATTR_ALWAYS_INLINE;
 140:usb/usb.h     **** inline void USB_ep_init(uint8_t ep, uint8_t type, uint16_t bufsize){
 141:usb/usb.h     **** 	_USB_EP(ep);
 142:usb/usb.h     **** 	if (ep & USB_EP_PP){
 143:usb/usb.h     **** 		_USB_EP_OTHER(ep);
 144:usb/usb.h     **** 		e->STATUS = USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm;
  89               		.loc 6 144 0
  90 0030 80E0      		ldi r24,lo8(endpoints+24)
  91 0032 90E0      		ldi r25,hi8(endpoints+24)
  92 0034 36E0      		ldi r19,lo8(6)
  93 0036 3093 0000 		sts endpoints+24,r19
 145:usb/usb.h     **** 		e->CTRL = type | USB_EP_size_to_gc(bufsize) | USB_EP_PINGPONG_bm;
  94               		.loc 6 145 0
  95 003a 33E9      		ldi r19,lo8(-109)
  96 003c 3093 0000 		sts endpoints+25,r19
 146:usb/usb.h     **** 		other->CTRL = 0;
  97               		.loc 6 146 0
  98 0040 FC01      		movw r30,r24
  99 0042 3797      		sbiw r30,7
 100 0044 1082      		st Z,__zero_reg__
 147:usb/usb.h     **** 		other->STATUS = USB_EP_BUSNACK0_bm;
 101               		.loc 6 147 0
 102 0046 0897      		sbiw r24,8
 103 0048 32E0      		ldi r19,lo8(2)
 104 004a FC01      		movw r30,r24
 105 004c 3083      		st Z,r19
 106               	.LBE397:
 107               	.LBE396:
 108               	.LBE395:
  45:usb/usb_pipe.h **** 		pipe_reset(p->pipe);
  46:usb/usb_pipe.h **** 		USB_ep_init(p->ep, p->type, p->pipe->size);
  47:usb/usb_pipe.h **** 		p->data->bank = 0;
 109               		.loc 3 47 0
 110 004e 1092 0000 		sts ep_in_data,__zero_reg__
  48:usb/usb_pipe.h **** 		p->data->flush = 0;
 111               		.loc 3 48 0
 112 0052 1092 0000 		sts ep_in_data+1,__zero_reg__
  49:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 113               		.loc 3 49 0
 114 0056 1092 0000 		sts ep_in_data+2,__zero_reg__
 115 005a 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 116               	.LVL5:
 117               	.LBB398:
 118               	.LBB399:
  51:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     return 1;
  52:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  53:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  54:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  56:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     sei();
  57:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  58:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     (void)__s;
  59:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  60:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  61:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ void __iCliParam(const uint8_t *__s)
  62:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  63:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
  64:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  65:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     (void)__s;
  66:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  67:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  68:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ void __iRestore(const  uint8_t *__s)
  69:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 119               		.loc 4 70 0
 120 005e 2FBF      		out __SREG__,r18
  71:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 121               		.loc 4 71 0
 122               	/* epilogue start */
 123               	.LBE399:
 124               	.LBE398:
 125               	.LBE390:
 126               	.LBE389:
  37:Framework.h   **** 	usb_pipe_init(&ep_in);
  38:Framework.h   **** }
 127               		.loc 2 38 0
 128 0060 0895      		ret
 129               		.cfi_endproc
 130               	.LFE57:
 132               	.global	__vector_125
 134               	__vector_125:
 135               	.LFB58:
  39:Framework.h   **** 
  40:Framework.h   **** ISR(USB_BUSEVENT_vect){
 136               		.loc 2 40 0
 137               		.cfi_startproc
 138 0062 1F92      		push r1
 139               	.LCFI0:
 140               		.cfi_def_cfa_offset 3
 141               		.cfi_offset 1, -2
 142 0064 0F92      		push r0
 143               	.LCFI1:
 144               		.cfi_def_cfa_offset 4
 145               		.cfi_offset 0, -3
 146 0066 0FB6      		in r0,__SREG__
 147 0068 0F92      		push r0
 148 006a 1124      		clr __zero_reg__
 149 006c 2F93      		push r18
 150               	.LCFI2:
 151               		.cfi_def_cfa_offset 5
 152               		.cfi_offset 18, -4
 153 006e 3F93      		push r19
 154               	.LCFI3:
 155               		.cfi_def_cfa_offset 6
 156               		.cfi_offset 19, -5
 157 0070 4F93      		push r20
 158               	.LCFI4:
 159               		.cfi_def_cfa_offset 7
 160               		.cfi_offset 20, -6
 161 0072 5F93      		push r21
 162               	.LCFI5:
 163               		.cfi_def_cfa_offset 8
 164               		.cfi_offset 21, -7
 165 0074 6F93      		push r22
 166               	.LCFI6:
 167               		.cfi_def_cfa_offset 9
 168               		.cfi_offset 22, -8
 169 0076 7F93      		push r23
 170               	.LCFI7:
 171               		.cfi_def_cfa_offset 10
 172               		.cfi_offset 23, -9
 173 0078 8F93      		push r24
 174               	.LCFI8:
 175               		.cfi_def_cfa_offset 11
 176               		.cfi_offset 24, -10
 177 007a 9F93      		push r25
 178               	.LCFI9:
 179               		.cfi_def_cfa_offset 12
 180               		.cfi_offset 25, -11
 181 007c AF93      		push r26
 182               	.LCFI10:
 183               		.cfi_def_cfa_offset 13
 184               		.cfi_offset 26, -12
 185 007e BF93      		push r27
 186               	.LCFI11:
 187               		.cfi_def_cfa_offset 14
 188               		.cfi_offset 27, -13
 189 0080 EF93      		push r30
 190               	.LCFI12:
 191               		.cfi_def_cfa_offset 15
 192               		.cfi_offset 30, -14
 193 0082 FF93      		push r31
 194               	.LCFI13:
 195               		.cfi_def_cfa_offset 16
 196               		.cfi_offset 31, -15
 197               	/* prologue: Signal */
 198               	/* frame size = 0 */
 199               	/* stack size = 15 */
 200               	.L__stack_usage = 15
  41:Framework.h   **** 	if (USB.INTFLAGSACLR & USB_SOFIF_bm){
 201               		.loc 2 41 0
 202 0084 E0EC      		ldi r30,lo8(1216)
 203 0086 F4E0      		ldi r31,hi8(1216)
 204 0088 8091 CA04 		lds r24,1226
 205 008c 87FD      		sbrc r24,7
 206 008e 00C0      		rjmp .L11
  42:Framework.h   **** 		USB.INTFLAGSACLR = USB_SOFIF_bm;
  43:Framework.h   **** 	}else if (USB.INTFLAGSACLR & (USB_CRCIF_bm | USB_UNFIF_bm | USB_OVFIF_bm)){
 207               		.loc 2 43 0
 208 0090 8091 CA04 		lds r24,1226
 209 0094 8E70      		andi r24,lo8(14)
 210 0096 01F4      		brne .L12
  44:Framework.h   **** 		USB.INTFLAGSACLR = (USB_CRCIF_bm | USB_UNFIF_bm | USB_OVFIF_bm);
  45:Framework.h   **** 	}else if (USB.INTFLAGSACLR & USB_STALLIF_bm){
 211               		.loc 2 45 0
 212 0098 8091 CA04 		lds r24,1226
 213 009c 80FD      		sbrc r24,0
 214 009e 00C0      		rjmp .L13
  46:Framework.h   **** 		USB.INTFLAGSACLR = USB_STALLIF_bm;
  47:Framework.h   **** 	}else{
  48:Framework.h   **** 		USB.INTFLAGSACLR = USB_SUSPENDIF_bm | USB_RESUMEIF_bm | USB_RSTIF_bm;
 215               		.loc 2 48 0
 216 00a0 80E7      		ldi r24,lo8(112)
 217 00a2 8287      		std Z+10,r24
 218               	.LBB400:
 219               	.LBB401:
 148:usb/usb.h     **** 	}else{
 149:usb/usb.h     **** 		e->STATUS = USB_EP_BUSNACK0_bm;
 150:usb/usb.h     **** 		e->CTRL = type | USB_EP_size_to_gc(bufsize);
 151:usb/usb.h     **** 	}
 152:usb/usb.h     **** }
 153:usb/usb.h     **** 
 154:usb/usb.h     **** inline void USB_ep_cancel(uint8_t ep) ATTR_ALWAYS_INLINE;
 155:usb/usb.h     **** inline void USB_ep_cancel(uint8_t ep){
 156:usb/usb.h     **** 	_USB_EP(ep);
 157:usb/usb.h     **** 	if (ep & USB_EP_PP){
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 160:usb/usb.h     **** 	}else{
 161:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm);
 162:usb/usb.h     **** 	}
 163:usb/usb.h     **** }
 164:usb/usb.h     **** 
 165:usb/usb.h     **** inline void USB_ep_start_bank(uint8_t ep, uint8_t bank, uint8_t* addr, uint16_t size){
 166:usb/usb.h     **** 	_USB_EP(ep);
 167:usb/usb.h     **** 	_USB_EP_BANK(ep, bank);
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 170:usb/usb.h     **** 	
 171:usb/usb.h     **** 	//TODO: the OVF, STALL, and TRNCOMPL flags are in b->STATUS. Clear them if anyone cares.
 172:usb/usb.h     **** 
 173:usb/usb.h     **** 	if (bank==0){
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 175:usb/usb.h     **** 	}else{
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 177:usb/usb.h     **** 	}
 178:usb/usb.h     **** }
 179:usb/usb.h     **** 
 180:usb/usb.h     **** inline void USB_ep_out_start(uint8_t ep, uint8_t* addr) ATTR_ALWAYS_INLINE;
 181:usb/usb.h     **** inline void USB_ep_out_start(uint8_t ep, uint8_t* addr){
 182:usb/usb.h     **** 	USB_ep_start_bank(ep, 0, addr, 0);
 183:usb/usb.h     **** }
 184:usb/usb.h     **** 
 185:usb/usb.h     **** inline void USB_ep_in_start(uint8_t ep, uint8_t* addr, uint16_t size) ATTR_ALWAYS_INLINE;
 186:usb/usb.h     **** inline void USB_ep_in_start(uint8_t ep, uint8_t* addr, uint16_t size){
 187:usb/usb.h     **** 	USB_ep_start_bank(ep, 0, addr, size);
 188:usb/usb.h     **** }
 189:usb/usb.h     **** 
 190:usb/usb.h     **** inline bool USB_ep_done_bank(uint8_t ep, uint8_t bank){
 191:usb/usb.h     **** 	_USB_EP(ep);
 192:usb/usb.h     **** 	return e->STATUS & (bank?USB_EP_TRNCOMPL1_bm:USB_EP_TRNCOMPL0_bm);
 193:usb/usb.h     **** }
 194:usb/usb.h     **** 
 195:usb/usb.h     **** inline bool USB_ep_done(uint8_t ep) ATTR_ALWAYS_INLINE;
 196:usb/usb.h     **** inline bool USB_ep_done(uint8_t ep){
 197:usb/usb.h     **** 	_USB_EP(ep);
 198:usb/usb.h     **** 	if (ep & USB_EP_PP){
 199:usb/usb.h     **** 		return e->STATUS & (USB_EP_TRNCOMPL0_bm|USB_EP_TRNCOMPL1_bm);
 200:usb/usb.h     **** 	}else{
 201:usb/usb.h     **** 		// Because for ep0, TRNCOMPL1 is SETUP
 202:usb/usb.h     **** 		return e->STATUS & USB_EP_TRNCOMPL0_bm;
 203:usb/usb.h     **** 	}
 204:usb/usb.h     **** }
 205:usb/usb.h     **** 
 206:usb/usb.h     **** inline void USB_ep_clear_done(uint8_t ep) ATTR_ALWAYS_INLINE;
 207:usb/usb.h     **** inline void USB_ep_clear_done(uint8_t ep){
 208:usb/usb.h     **** 	_USB_EP(ep);
 209:usb/usb.h     **** 	if (ep & USB_EP_PP){
 210:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_TRNCOMPL0_bm|USB_EP_TRNCOMPL1_bm);
 211:usb/usb.h     **** 	}else{
 212:usb/usb.h     **** 		// Because for ep0, TRNCOMPL1 is SETUP
 213:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_TRNCOMPL0_bm);
 214:usb/usb.h     **** 	}
 215:usb/usb.h     **** }
 216:usb/usb.h     **** 
 217:usb/usb.h     **** inline bool USB_ep_ready(uint8_t ep) ATTR_ALWAYS_INLINE;
 218:usb/usb.h     **** inline bool USB_ep_ready(uint8_t ep){
 219:usb/usb.h     **** 	_USB_EP(ep);
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 221:usb/usb.h     **** }
 222:usb/usb.h     **** 
 223:usb/usb.h     **** inline bool USB_ep_empty(uint8_t ep) ATTR_ALWAYS_INLINE;
 224:usb/usb.h     **** inline bool USB_ep_empty(uint8_t ep){
 225:usb/usb.h     **** 	_USB_EP(ep);
 226:usb/usb.h     **** 	if (ep & USB_EP_PP){
 227:usb/usb.h     **** 		const uint8_t mask = (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 229:usb/usb.h     **** 	}else{
 230:usb/usb.h     **** 		return e->STATUS & USB_EP_BUSNACK0_bm;
 231:usb/usb.h     **** 	}
 232:usb/usb.h     **** }
 233:usb/usb.h     **** 
 234:usb/usb.h     **** inline uint16_t USB_ep_count_bank(uint8_t ep, uint8_t bank) ATTR_ALWAYS_INLINE;
 235:usb/usb.h     **** inline uint16_t USB_ep_count_bank(uint8_t ep, uint8_t bank){
 236:usb/usb.h     **** 	_USB_EP(ep);
 237:usb/usb.h     **** 	_USB_EP_BANK(ep, bank);
 238:usb/usb.h     **** 	return b->CNT;
 239:usb/usb.h     **** }
 240:usb/usb.h     **** 
 241:usb/usb.h     **** inline uint16_t USB_ep_count(uint8_t ep) ATTR_ALWAYS_INLINE;
 242:usb/usb.h     **** inline uint16_t USB_ep_count(uint8_t ep){
 243:usb/usb.h     **** 	return USB_ep_count_bank(ep, 0);
 244:usb/usb.h     **** }
 245:usb/usb.h     **** 
 246:usb/usb.h     **** inline void USB_ep0_send(uint8_t size){
 247:usb/usb.h     **** 	USB_ep_in_start(0x80, ep0_buf_in, size);
 248:usb/usb.h     **** }
 249:usb/usb.h     **** void USB_ep0_send_progmem(const uint8_t* addr, uint16_t size);
 250:usb/usb.h     **** 
 251:usb/usb.h     **** inline void USB_ep_wait(uint8_t ep) ATTR_ALWAYS_INLINE;
 252:usb/usb.h     **** inline void USB_ep_wait(uint8_t ep){
 253:usb/usb.h     **** 	while (!USB_ep_done(ep)){};
 254:usb/usb.h     **** }
 255:usb/usb.h     **** 
 256:usb/usb.h     **** /// Select a certain bank of an endpoint for the next transfer
 257:usb/usb.h     **** inline void USB_ep_set_bank(uint8_t ep, uint8_t bank) ATTR_ALWAYS_INLINE;
 258:usb/usb.h     **** inline void USB_ep_set_bank(uint8_t ep, uint8_t bank){
 259:usb/usb.h     **** 	_USB_EP(ep);
 260:usb/usb.h     **** 	if (bank){
 261:usb/usb.h     **** 		LASR16(&(e->STATUS), USB_EP_BANK_bm);
 262:usb/usb.h     **** 	}else{
 263:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BANK_bm);
 264:usb/usb.h     **** 	}
 265:usb/usb.h     **** }
 266:usb/usb.h     **** 
 267:usb/usb.h     **** /// Get the bank 0/1 which will handle the next request on this endpoint
 268:usb/usb.h     **** inline uint8_t USB_ep_get_bank(uint8_t ep) ATTR_ALWAYS_INLINE;
 269:usb/usb.h     **** inline uint8_t USB_ep_get_bank(uint8_t ep){
 270:usb/usb.h     **** 	_USB_EP(ep);
 271:usb/usb.h     **** 	return !!(e->STATUS & USB_EP_BANK_bm);
 272:usb/usb.h     **** }
 273:usb/usb.h     **** 
 274:usb/usb.h     **** 
 275:usb/usb.h     **** // Enable the OUT stage on the default control pipe. This happens automatically
 276:usb/usb.h     **** // upon the return of HandleSetup, but use this function if it needs to happen
 277:usb/usb.h     **** // before returning (e.g. with USB_ep_wait()).
 278:usb/usb.h     **** inline void USB_ep0_enableOut(void) ATTR_ALWAYS_INLINE;
 279:usb/usb.h     **** inline void USB_ep0_enableOut(void){
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 281:usb/usb.h     **** }
 282:usb/usb.h     **** 
 283:usb/usb.h     **** bool USB_HandleSetup(void);
 284:usb/usb.h     **** 
 285:usb/usb.h     **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 286:usb/usb.h     ****                                     const uint8_t wIndex,
 287:usb/usb.h     ****                                     const void** const DescriptorAddress);
 288:usb/usb.h     **** 
 289:usb/usb.h     **** /** Detaches the device from the USB bus. This has the effect of removing the device from any
 290:usb/usb.h     ****  *  attached host, ceasing USB communications. If no host is present, this prevents any host from
 291:usb/usb.h     ****  *  enumerating the device once attached until \ref USB_Attach() is called.
 292:usb/usb.h     ****  */
 293:usb/usb.h     **** static inline void USB_Detach(void) ATTR_ALWAYS_INLINE;
 294:usb/usb.h     **** static inline void USB_Detach(void)
 295:usb/usb.h     **** {
 296:usb/usb.h     **** 	USB.CTRLB &= ~USB_ATTACH_bm;
 297:usb/usb.h     **** }
 298:usb/usb.h     **** 
 299:usb/usb.h     **** /** Attaches the device to the USB bus. This announces the device's presence to any attached
 300:usb/usb.h     ****  *  USB host, starting the enumeration process. If no host is present, attaching the device
 301:usb/usb.h     ****  *  will allow for enumeration once a host is connected to the device.
 302:usb/usb.h     ****  */
 303:usb/usb.h     **** static inline void USB_Attach(void) ATTR_ALWAYS_INLINE;
 304:usb/usb.h     **** static inline void USB_Attach(void)
 305:usb/usb.h     **** {
 306:usb/usb.h     **** 	USB.CTRLB |= USB_ATTACH_bm;
 307:usb/usb.h     **** }
 308:usb/usb.h     **** 
 309:usb/usb.h     **** inline void USB_Evt_Task(void) ATTR_ALWAYS_INLINE;
 310:usb/usb.h     **** inline void USB_Evt_Task(void){
 311:usb/usb.h     **** 	if (USB.STATUS & USB_BUSRST_bm){
 220               		.loc 6 311 0
 221 00a4 8091 C204 		lds r24,1218
 222 00a8 80FF      		sbrs r24,0
 223 00aa 00C0      		rjmp .L6
 312:usb/usb.h     **** 		USB.STATUS &= ~USB_BUSRST_bm;
 224               		.loc 6 312 0
 225 00ac 8091 C204 		lds r24,1218
 226 00b0 8E7F      		andi r24,lo8(-2)
 227 00b2 8283      		std Z+2,r24
 313:usb/usb.h     **** 		USB_Init();
 228               		.loc 6 313 0
 229 00b4 0E94 0000 		call USB_Init
 230 00b8 00C0      		rjmp .L6
 231               	.L12:
 232               	.LBE401:
 233               	.LBE400:
  44:Framework.h   **** 		USB.INTFLAGSACLR = (USB_CRCIF_bm | USB_UNFIF_bm | USB_OVFIF_bm);
 234               		.loc 2 44 0
 235 00ba 8EE0      		ldi r24,lo8(14)
 236 00bc 8287      		std Z+10,r24
 237               	.L6:
 238               	/* epilogue start */
  49:Framework.h   **** 		USB_Evt_Task();
  50:Framework.h   **** 	}
  51:Framework.h   **** }
 239               		.loc 2 51 0
 240 00be FF91      		pop r31
 241 00c0 EF91      		pop r30
 242 00c2 BF91      		pop r27
 243 00c4 AF91      		pop r26
 244 00c6 9F91      		pop r25
 245 00c8 8F91      		pop r24
 246 00ca 7F91      		pop r23
 247 00cc 6F91      		pop r22
 248 00ce 5F91      		pop r21
 249 00d0 4F91      		pop r20
 250 00d2 3F91      		pop r19
 251 00d4 2F91      		pop r18
 252 00d6 0F90      		pop r0
 253 00d8 0FBE      		out __SREG__,r0
 254 00da 0F90      		pop r0
 255 00dc 1F90      		pop r1
 256 00de 1895      		reti
 257               	.L13:
  46:Framework.h   **** 		USB.INTFLAGSACLR = USB_STALLIF_bm;
 258               		.loc 2 46 0
 259 00e0 81E0      		ldi r24,lo8(1)
 260 00e2 8287      		std Z+10,r24
 261 00e4 00C0      		rjmp .L6
 262               	.L11:
  42:Framework.h   **** 		USB.INTFLAGSACLR = USB_SOFIF_bm;
 263               		.loc 2 42 0
 264 00e6 80E8      		ldi r24,lo8(-128)
 265 00e8 8287      		std Z+10,r24
 266 00ea 00C0      		rjmp .L6
 267               		.cfi_endproc
 268               	.LFE58:
 270               	.global	__vector_126
 272               	__vector_126:
 273               	.LFB59:
  52:Framework.h   **** 
  53:Framework.h   **** ISR(USB_TRNCOMPL_vect){
 274               		.loc 2 53 0
 275               		.cfi_startproc
 276 00ec 1F92      		push r1
 277               	.LCFI14:
 278               		.cfi_def_cfa_offset 3
 279               		.cfi_offset 1, -2
 280 00ee 0F92      		push r0
 281               	.LCFI15:
 282               		.cfi_def_cfa_offset 4
 283               		.cfi_offset 0, -3
 284 00f0 0FB6      		in r0,__SREG__
 285 00f2 0F92      		push r0
 286 00f4 1124      		clr __zero_reg__
 287 00f6 0F93      		push r16
 288               	.LCFI16:
 289               		.cfi_def_cfa_offset 5
 290               		.cfi_offset 16, -4
 291 00f8 2F93      		push r18
 292               	.LCFI17:
 293               		.cfi_def_cfa_offset 6
 294               		.cfi_offset 18, -5
 295 00fa 3F93      		push r19
 296               	.LCFI18:
 297               		.cfi_def_cfa_offset 7
 298               		.cfi_offset 19, -6
 299 00fc 4F93      		push r20
 300               	.LCFI19:
 301               		.cfi_def_cfa_offset 8
 302               		.cfi_offset 20, -7
 303 00fe 5F93      		push r21
 304               	.LCFI20:
 305               		.cfi_def_cfa_offset 9
 306               		.cfi_offset 21, -8
 307 0100 6F93      		push r22
 308               	.LCFI21:
 309               		.cfi_def_cfa_offset 10
 310               		.cfi_offset 22, -9
 311 0102 7F93      		push r23
 312               	.LCFI22:
 313               		.cfi_def_cfa_offset 11
 314               		.cfi_offset 23, -10
 315 0104 8F93      		push r24
 316               	.LCFI23:
 317               		.cfi_def_cfa_offset 12
 318               		.cfi_offset 24, -11
 319 0106 9F93      		push r25
 320               	.LCFI24:
 321               		.cfi_def_cfa_offset 13
 322               		.cfi_offset 25, -12
 323 0108 AF93      		push r26
 324               	.LCFI25:
 325               		.cfi_def_cfa_offset 14
 326               		.cfi_offset 26, -13
 327 010a BF93      		push r27
 328               	.LCFI26:
 329               		.cfi_def_cfa_offset 15
 330               		.cfi_offset 27, -14
 331 010c EF93      		push r30
 332               	.LCFI27:
 333               		.cfi_def_cfa_offset 16
 334               		.cfi_offset 30, -15
 335 010e FF93      		push r31
 336               	.LCFI28:
 337               		.cfi_def_cfa_offset 17
 338               		.cfi_offset 31, -16
 339               	/* prologue: Signal */
 340               	/* frame size = 0 */
 341               	/* stack size = 16 */
 342               	.L__stack_usage = 16
  54:Framework.h   **** 	USB.FIFOWP = 0;
 343               		.loc 2 54 0
 344 0110 E0EC      		ldi r30,lo8(1216)
 345 0112 F4E0      		ldi r31,hi8(1216)
 346 0114 1482      		std Z+4,__zero_reg__
  55:Framework.h   **** 	USB.INTFLAGSBCLR = USB_SETUPIF_bm | USB_TRNIF_bm;
 347               		.loc 2 55 0
 348 0116 83E0      		ldi r24,lo8(3)
 349 0118 8487      		std Z+12,r24
 350               	.LVL6:
 351               	.LBB458:
 352               	.LBB459:
 353               	.LBB460:
  50:usb/usb_pipe.h **** 	}
  51:usb/usb_pipe.h **** }
  52:usb/usb_pipe.h **** 
  53:usb/usb_pipe.h **** static inline void usb_pipe_reset(const USB_Pipe* p){
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
  55:usb/usb_pipe.h **** 		pipe_reset(p->pipe);
  56:usb/usb_pipe.h **** 		USB_ep_cancel(p->ep);
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
  60:usb/usb_pipe.h **** 	}
  61:usb/usb_pipe.h **** }
  62:usb/usb_pipe.h **** 
  63:usb/usb_pipe.h **** static inline void _usb_pipe_ep_start(const USB_Pipe* p, uint8_t* data, uint16_t size) ATTR_ALWAYS_
  64:usb/usb_pipe.h **** static inline void _usb_pipe_ep_start(const USB_Pipe* p, uint8_t* data, uint16_t size){
  65:usb/usb_pipe.h **** 	bool bank = 0;
  66:usb/usb_pipe.h **** 
  67:usb/usb_pipe.h **** 	if (p->ep & USB_EP_PP){
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
  70:usb/usb_pipe.h **** 	}
  71:usb/usb_pipe.h **** 
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
  73:usb/usb_pipe.h **** 		USB_ep_start_bank(p->ep, 0, data, size);
  74:usb/usb_pipe.h **** 	}else{
  75:usb/usb_pipe.h **** 		USB_ep_start_bank(p->ep, 1, data, size);
  76:usb/usb_pipe.h **** 	}
  77:usb/usb_pipe.h **** }
  78:usb/usb_pipe.h **** 
  79:usb/usb_pipe.h **** static inline void usb_pipe_handle(const USB_Pipe* p){
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 354               		.loc 3 80 0
 355 011a 2FB7      		in r18,__SREG__
 356               	.LVL7:
 357               	.LBB461:
 358               	.LBB462:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 359               		.loc 4 50 0
 360               	/* #APP */
 361               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 362 011c F894      		cli
 363               	 ;  0 "" 2
 364               	.LVL8:
 365               	/* #NOAPP */
 366               	.LBE462:
 367               	.LBE461:
 368               	.LBB463:
 369               	.LBB464:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 370               		.loc 6 220 0
 371 011e 8091 0000 		lds r24,endpoints+24
 372 0122 8670      		andi r24,lo8(6)
 373               	.LBE464:
 374               	.LBE463:
  81:usb/usb_pipe.h **** 		if (p->ep & USB_EP_IN){
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 375               		.loc 3 82 0
 376 0124 01F4      		brne .L29
 377               	.LVL9:
 378               	.L15:
 379               	.LBB465:
 380               	.LBB466:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 381               		.loc 4 70 0
 382 0126 2FBF      		out __SREG__,r18
 383               		.loc 4 71 0
 384               	.LBE466:
 385               	.LBE465:
 386               	.LBE460:
 387               	.LBE459:
 388               	.LBE458:
 389               	.LBB504:
 390               	.LBB505:
 314:usb/usb.h     **** 	}
 315:usb/usb.h     **** }
 316:usb/usb.h     **** 
 317:usb/usb.h     **** inline void USB_Task(void) ATTR_ALWAYS_INLINE;
 318:usb/usb.h     **** inline void USB_Task(void){
 319:usb/usb.h     **** 	// Read once to prevent race condition where SETUP packet is interpreted as OUT
 320:usb/usb.h     **** 	uint8_t status = endpoints[0].out.STATUS;
 391               		.loc 6 320 0
 392 0128 8091 0000 		lds r24,endpoints
 393               	.LVL10:
 321:usb/usb.h     **** 
 322:usb/usb.h     **** 	if (status & USB_EP_SETUP_bm){
 394               		.loc 6 322 0
 395 012c 84FD      		sbrc r24,4
 396 012e 00C0      		rjmp .L30
 397               	.L24:
 323:usb/usb.h     **** 		if (!USB_HandleSetup()){
 324:usb/usb.h     **** 			endpoints[0].out.CTRL |= USB_EP_STALL_bm;
 325:usb/usb.h     **** 			endpoints[0].in.CTRL |= USB_EP_STALL_bm; 
 326:usb/usb.h     **** 		}
 327:usb/usb.h     **** 		USB_ep0_enableOut();
 328:usb/usb.h     **** 	}else if(status & USB_EP_TRNCOMPL0_bm){
 398               		.loc 6 328 0
 399 0130 85FD      		sbrc r24,5
 400 0132 00C0      		rjmp .L31
 401               	.LVL11:
 402               	.L14:
 403               	/* epilogue start */
 404               	.LBE505:
 405               	.LBE504:
  56:Framework.h   **** 	usb_pipe_handle(&ep_in);
  57:Framework.h   **** 	USB_Task();
  58:Framework.h   **** }
 406               		.loc 2 58 0
 407 0134 FF91      		pop r31
 408 0136 EF91      		pop r30
 409 0138 BF91      		pop r27
 410 013a AF91      		pop r26
 411 013c 9F91      		pop r25
 412 013e 8F91      		pop r24
 413 0140 7F91      		pop r23
 414 0142 6F91      		pop r22
 415 0144 5F91      		pop r21
 416 0146 4F91      		pop r20
 417 0148 3F91      		pop r19
 418 014a 2F91      		pop r18
 419 014c 0F91      		pop r16
 420 014e 0F90      		pop r0
 421 0150 0FBE      		out __SREG__,r0
 422 0152 0F90      		pop r0
 423 0154 1F90      		pop r1
 424 0156 1895      		reti
 425               	.LVL12:
 426               	.L29:
 427               	.LBB514:
 428               	.LBB501:
 429               	.LBB498:
 430               	.LBB468:
 431               	.LBB469:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 432               		.loc 5 51 0
 433 0158 3091 0000 		lds r19,ep_in_pipe_data+4
 434               	.LBE469:
 435               	.LBE468:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 436               		.loc 3 83 0
 437 015c 1316      		cp __zero_reg__,r19
 438 015e 04F0      		brlt .+2
 439 0160 00C0      		rjmp .L16
 440               	.LBB470:
 441               	.LBB471:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 442               		.loc 5 62 0
 443 0162 8091 0000 		lds r24,ep_in_pipe_data
 444 0166 9091 0000 		lds r25,ep_in_pipe_data+1
 445               	.LVL13:
 446               	.LBE471:
 447               	.LBE470:
 448               	.LBB472:
 449               	.LBB473:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 450               		.loc 3 68 0
 451 016a 4091 0000 		lds r20,ep_in_data
 452               	.LVL14:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 453               		.loc 3 69 0
 454 016e 51E0      		ldi r21,lo8(1)
 455 0170 4130      		cpi r20,lo8(1)
 456 0172 01F4      		brne .+2
 457 0174 00C0      		rjmp .L32
 458 0176 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 459               		.loc 3 72 0
 460 017a 4423      		tst r20
 461 017c 01F4      		brne .+2
 462 017e 00C0      		rjmp .L33
 463               	.L18:
 464               	.LVL15:
 465               	.LBB474:
 466               	.LBB475:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 467               		.loc 6 168 0
 468 0180 8093 0000 		sts endpoints+20,r24
 469 0184 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 470               		.loc 6 169 0
 471 0188 40E4      		ldi r20,lo8(64)
 472 018a 50E0      		ldi r21,hi8(64)
 473 018c 4093 0000 		sts endpoints+18,r20
 474 0190 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 475               		.loc 6 176 0
 476 0194 E0E0      		ldi r30,lo8(endpoints+24)
 477 0196 F0E0      		ldi r31,hi8(endpoints+24)
 478               	/* #APP */
 479               	 ;  176 "usb/usb.h" 1
 480 0198 04E1      		ldi r16, 20
 481 019a 0693      		.dc.w 0x9306
 482               		
 483               	 ;  0 "" 2
 484               	.LVL16:
 485               	/* #NOAPP */
 486               	.L19:
 487               	.LBE475:
 488               	.LBE474:
 489               	.LBE473:
 490               	.LBE472:
 491               	.LBB479:
 492               	.LBB480:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 493               		.loc 5 72 0
 494 019c 3150      		subi r19,lo8(-(-1))
 495 019e 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 496               		.loc 5 73 0
 497 01a2 805C      		subi r24,lo8(-(64))
 498 01a4 9F4F      		sbci r25,hi8(-(64))
 499 01a6 8093 0000 		sts ep_in_pipe_data,r24
 500 01aa 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 501               		.loc 5 75 0
 502 01ae 30E0      		ldi r19,hi8(ep_in_pipe_buffer+512)
 503 01b0 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 504 01b2 9307      		cpc r25,r19
 505 01b4 01F0      		breq .+2
 506 01b6 00C0      		rjmp .L15
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 507               		.loc 5 76 0
 508 01b8 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 509 01ba 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 510 01bc 8093 0000 		sts ep_in_pipe_data,r24
 511 01c0 9093 0000 		sts ep_in_pipe_data+1,r25
 512               	.LBE480:
 513               	.LBE479:
 514               	.LBB481:
 515               	.LBB467:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 516               		.loc 4 70 0
 517 01c4 2FBF      		out __SREG__,r18
 518               		.loc 4 71 0
 519               	.LBE467:
 520               	.LBE481:
 521               	.LBE498:
 522               	.LBE501:
 523               	.LBE514:
 524               	.LBB515:
 525               	.LBB512:
 320:usb/usb.h     **** 	uint8_t status = endpoints[0].out.STATUS;
 526               		.loc 6 320 0
 527 01c6 8091 0000 		lds r24,endpoints
 528               	.LVL17:
 322:usb/usb.h     **** 	if (status & USB_EP_SETUP_bm){
 529               		.loc 6 322 0
 530 01ca 84FF      		sbrs r24,4
 531 01cc 00C0      		rjmp .L24
 532               	.LVL18:
 533               	.L30:
 323:usb/usb.h     **** 		if (!USB_HandleSetup()){
 534               		.loc 6 323 0
 535 01ce 0E94 0000 		call USB_HandleSetup
 536               	.LVL19:
 537 01d2 8823      		tst r24
 538 01d4 01F4      		brne .L27
 324:usb/usb.h     **** 			endpoints[0].out.CTRL |= USB_EP_STALL_bm;
 539               		.loc 6 324 0
 540 01d6 8091 0000 		lds r24,endpoints+1
 541 01da 8460      		ori r24,lo8(4)
 542 01dc 8093 0000 		sts endpoints+1,r24
 325:usb/usb.h     **** 			endpoints[0].in.CTRL |= USB_EP_STALL_bm; 
 543               		.loc 6 325 0
 544 01e0 8091 0000 		lds r24,endpoints+9
 545 01e4 8460      		ori r24,lo8(4)
 546 01e6 8093 0000 		sts endpoints+9,r24
 547               	.L27:
 548               	.LBB506:
 549               	.LBB507:
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 550               		.loc 6 280 0
 551 01ea E0E0      		ldi r30,lo8(endpoints)
 552 01ec F0E0      		ldi r31,hi8(endpoints)
 553               	/* #APP */
 554               	 ;  280 "usb/usb.h" 1
 555 01ee 02E7      		ldi r16, 114
 556 01f0 0693      		.dc.w 0x9306
 557               		
 558               	 ;  0 "" 2
 559               	/* #NOAPP */
 560 01f2 00C0      		rjmp .L14
 561               	.LVL20:
 562               	.L32:
 563               	.LBE507:
 564               	.LBE506:
 565               	.LBE512:
 566               	.LBE515:
 567               	.LBB516:
 568               	.LBB502:
 569               	.LBB499:
 570               	.LBB482:
 571               	.LBB478:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 572               		.loc 3 69 0
 573 01f4 50E0      		ldi r21,lo8(0)
 574 01f6 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 575               		.loc 3 72 0
 576 01fa 4423      		tst r20
 577 01fc 01F0      		breq .+2
 578 01fe 00C0      		rjmp .L18
 579               	.L33:
 580               	.LVL21:
 581               	.LBB476:
 582               	.LBB477:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 583               		.loc 6 168 0
 584 0200 8093 0000 		sts endpoints+28,r24
 585 0204 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 586               		.loc 6 169 0
 587 0208 40E4      		ldi r20,lo8(64)
 588 020a 50E0      		ldi r21,hi8(64)
 589               	.LVL22:
 590 020c 4093 0000 		sts endpoints+26,r20
 591 0210 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 592               		.loc 6 174 0
 593 0214 E0E0      		ldi r30,lo8(endpoints+24)
 594 0216 F0E0      		ldi r31,hi8(endpoints+24)
 595               	.LVL23:
 596               	/* #APP */
 597               	 ;  174 "usb/usb.h" 1
 598 0218 02E2      		ldi r16, 34
 599 021a 0693      		.dc.w 0x9306
 600               		
 601               	 ;  0 "" 2
 602               	/* #NOAPP */
 603 021c 00C0      		rjmp .L19
 604               	.LVL24:
 605               	.L31:
 606               	.LBE477:
 607               	.LBE476:
 608               	.LBE478:
 609               	.LBE482:
 610               	.LBE499:
 611               	.LBE502:
 612               	.LBE516:
 613               	.LBB517:
 614               	.LBB513:
 329:usb/usb.h     **** 		EVENT_USB_Device_ControlOUT((uint8_t *) ep0_buf_out, endpoints[0].out.CNT);
 615               		.loc 6 329 0
 616 021e 4091 0000 		lds r20,endpoints+2
 617 0222 5091 0000 		lds r21,endpoints+2+1
 618               	.LVL25:
 619               	.LBB509:
 620               	.LBB510:
 269:main.c        **** 
 270:main.c        **** // code for communicating with the gps module via uart
 271:main.c        **** char gps_getchar () { 
 272:main.c        **** 
 273:main.c        ****     // Wait for the receive buffer to be empty 
 274:main.c        ****     while ( !( USARTD0.STATUS & DMA_CH_TRIGSRC_USARTD0_RXC_gc) ); 
 275:main.c        **** 
 276:main.c        ****     // Receive char from receive buffer 
 277:main.c        ****     return USARTD0.DATA; 
 278:main.c        **** } 
 279:main.c        **** 
 280:main.c        **** // code for communicating with the gprs module via uart
 281:main.c        **** int gprs_putchar (char c) { 
 282:main.c        ****     if (c == '\n') 
 283:main.c        ****         gps_putchar('\r'); 
 284:main.c        **** 
 285:main.c        ****     // Wait for the transmit buffer to be empty 
 286:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 287:main.c        **** 
 288:main.c        ****     // Put our character into the transmit buffer 
 289:main.c        ****     USARTD0.DATA = c; 
 290:main.c        **** 
 291:main.c        ****     return 0; 
 292:main.c        **** } 
 293:main.c        **** 
 294:main.c        **** // code for communicating with the gprs module via uart
 295:main.c        **** char gprs_getchar () { 
 296:main.c        **** 
 297:main.c        ****     // Wait for the receive buffer to be empty 
 298:main.c        ****     while ( !( USARTD0.STATUS & DMA_CH_TRIGSRC_USARTD0_RXC_gc) ); 
 299:main.c        **** 
 300:main.c        ****     // Receive char from receive buffer 
 301:main.c        ****     return USARTD0.DATA; 
 302:main.c        **** } 
 303:main.c        **** 
 304:main.c        **** void send_message(char* number, char* text_message) {
 305:main.c        **** 
 306:main.c        ****   gprs_putchar('\r');
 307:main.c        ****   _delay_ms(1000);
 308:main.c        **** 
 309:main.c        ****   char* text_mode = "AT+CMGF=1\r";
 310:main.c        ****   _delay_ms(1000);
 311:main.c        **** 
 312:main.c        ****   // char c;
 313:main.c        **** 
 314:main.c        ****   int length = strlen(text_mode) + 2;
 315:main.c        ****   for (int i=0; i<length; i++) {
 316:main.c        ****     gprs_putchar(text_mode[i]);
 317:main.c        **** 
 318:main.c        ****     // debugging
 319:main.c        ****     // c = gprs_getchar();
 320:main.c        ****     // send_byte(c);
 321:main.c        ****   }
 322:main.c        ****   _delay_ms(100);
 323:main.c        ****   break_and_flush();
 324:main.c        **** 
 325:main.c        **** 
 326:main.c        ****   //build number string
 327:main.c        ****   char* number_string = concat("AT+CMGS=\"", number);
 328:main.c        ****   char* new_number_string = concat(number_string, "\"\r");
 329:main.c        **** 
 330:main.c        ****   //more sketchiness
 331:main.c        ****   length = strlen(new_number_string) + 2;
 332:main.c        **** 
 333:main.c        ****   for (int j=0; j<length; j++) {
 334:main.c        ****     gprs_putchar(new_number_string[j]);
 335:main.c        **** 
 336:main.c        ****     //debugging
 337:main.c        ****     // c = gprs_getchar();
 338:main.c        ****     // send_byte(c);
 339:main.c        ****   }
 340:main.c        ****   _delay_ms(100);
 341:main.c        ****   break_and_flush();
 342:main.c        **** 
 343:main.c        **** 
 344:main.c        ****   //even more sketchiness
 345:main.c        ****   length = strlen(text_message) + 3;
 346:main.c        ****   for (int k=0; k<length; k++) {
 347:main.c        ****     gprs_putchar(text_message[k]);
 348:main.c        **** 
 349:main.c        ****     //debugging
 350:main.c        ****     // c = gprs_getchar();
 351:main.c        ****     // send_byte(c);
 352:main.c        ****   }
 353:main.c        ****   _delay_ms(100);
 354:main.c        ****   break_and_flush();
 355:main.c        **** 
 356:main.c        ****   //check this later to ensure ^Z is being sent
 357:main.c        ****   gprs_putchar(26);
 358:main.c        ****   // c = gprs_getchar();
 359:main.c        ****   // send_byte(c);
 360:main.c        **** 
 361:main.c        ****   _delay_ms(100);
 362:main.c        ****   break_and_flush();
 363:main.c        **** }
 364:main.c        **** 
 365:main.c        **** int main(void){
 366:main.c        **** 
 367:main.c        ****   //usb configuration
 368:main.c        **** 	USB_ConfigureClock();
 369:main.c        **** 	USB_Init();
 370:main.c        **** 	USB.INTCTRLA = USB_BUSEVIE_bm | USB_INTLVL_MED_gc;
 371:main.c        **** 	USB.INTCTRLB = USB_TRNIE_bm | USB_SETUPIE_bm;
 372:main.c        **** 	PMIC.CTRL = PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm;
 373:main.c        **** 	sei();
 374:main.c        **** 
 375:main.c        ****   //uart init code -- change condition to true when we're ready to communicate with the gps
 376:main.c        **** 	if (false) {
 377:main.c        **** 		gps_init();
 378:main.c        ****     gps_putchar('a');
 379:main.c        ****     gps_getchar();
 380:main.c        **** 	}
 381:main.c        **** 
 382:main.c        ****   if (true) {
 383:main.c        ****     gprs_init();
 384:main.c        ****   }
 385:main.c        **** 
 386:main.c        ****   //call break and flush to make sure the buffer is cleared
 387:main.c        **** 	break_and_flush();
 388:main.c        **** 
 389:main.c        ****   // parse nmea string and send result over usb
 390:main.c        ****   parse_nmea();
 391:main.c        **** 
 392:main.c        ****   char* phonenumber = "+12153166262";
 393:main.c        ****   char* text_message = "hello world";
 394:main.c        ****   send_message(phonenumber, text_message);
 395:main.c        **** 
 396:main.c        **** 	for (;;){
 397:main.c        ****     //heart of the firmware logic goes here
 398:main.c        **** 	}
 399:main.c        **** }
 400:main.c        **** 
 401:main.c        **** #define stringify(s) #s
 402:main.c        **** 
 403:main.c        **** const char PROGMEM hwversion[] = stringify(HW_VERSION);
 404:main.c        **** const char PROGMEM fwversion[] = stringify(FW_VERSION);
 405:main.c        **** 
 406:main.c        **** uint8_t usb_cmd = 0;
 407:main.c        **** uint8_t cmd_data = 0;
 408:main.c        **** 
 409:main.c        **** // void send_usb_data(char *message) {
 410:main.c        **** // 	for (uint8_t = 0; i < 64; i++) ep0_buf_in[i] = 0;
 411:main.c        **** // 	int l = strlen(message);
 412:main.c        **** // 	for (int i=0; i<l; i++) {
 413:main.c        **** // 		ep0_buf_in[i] = message[i];
 414:main.c        **** // 	}
 415:main.c        **** // }
 416:main.c        **** 
 417:main.c        **** /** Event handler for the library USB Control Request reception event. */
 418:main.c        **** bool EVENT_USB_Device_ControlRequest(USB_Request_Header_t* req){
 419:main.c        **** 	// zero out ep0_buf_in
 420:main.c        **** 	for (uint8_t i = 0; i < 64; i++) ep0_buf_in[i] = 0;
 421:main.c        **** 	usb_cmd = 0;
 422:main.c        **** 	if ((req->bmRequestType & CONTROL_REQTYPE_TYPE) == REQTYPE_VENDOR){
 423:main.c        **** 		switch(req->bRequest){
 424:main.c        **** 			case 0x00: // Info
 425:main.c        **** 				if (req->wIndex == 0){
 426:main.c        **** 					USB_ep0_send_progmem((uint8_t*)hwversion, sizeof(hwversion));
 427:main.c        **** 				}else if (req->wIndex == 1){
 428:main.c        **** 					USB_ep0_send_progmem((uint8_t*)fwversion, sizeof(fwversion));
 429:main.c        **** 				}
 430:main.c        **** 				return true;
 431:main.c        **** 			case 0x02:
 432:main.c        **** 				{
 433:main.c        **** 					int l = strlen(message);
 434:main.c        **** 					for (uint8_t i=0; i<64; i++) {
 435:main.c        **** 						ep0_buf_in[i] = message[i];
 436:main.c        **** 					}
 437:main.c        **** 					USB_ep0_send(l);
 438:main.c        **** 					return true;
 439:main.c        **** 				}
 440:main.c        **** 			case 0x08:
 441:main.c        **** 				* ((uint8_t *) req->wIndex) = req->wValue;
 442:main.c        **** 				USB_ep0_send(0);
 443:main.c        **** 				return true;
 444:main.c        **** 			case 0x09:
 445:main.c        **** 				ep0_buf_in[0] = * ((uint8_t *) req->wIndex);
 446:main.c        **** 				USB_ep0_send(1);
 447:main.c        **** 				return true;
 448:main.c        **** 			case 0x16:
 449:main.c        **** 				* ((uint16_t *) req->wIndex) = req->wValue;
 450:main.c        **** 				USB_ep0_send(0);
 451:main.c        **** 				return true;
 452:main.c        **** 			case 0x17:{
 453:main.c        **** 				uint16_t *addr;
 454:main.c        **** 				addr = (uint16_t *) req->wIndex;
 455:main.c        **** 				ep0_buf_in[0] = *addr & 0xFF;
 456:main.c        **** 				ep0_buf_in[1] = *addr >> 8;
 457:main.c        **** 				USB_ep0_send(2);}
 458:main.c        **** 				return true;
 459:main.c        **** 			// read EEPROM	
 460:main.c        **** 			case 0xE0: 
 461:main.c        **** 				eeprom_read_block(ep0_buf_in, (void*)(req->wIndex*64), 64);
 462:main.c        **** 				USB_ep0_send(64);
 463:main.c        **** 				return true;
 464:main.c        **** 
 465:main.c        **** 			// write EEPROM	
 466:main.c        **** 			case 0xE1: 
 467:main.c        **** 				usb_cmd = req->bRequest;
 468:main.c        **** 				cmd_data = req->wIndex;
 469:main.c        **** 				USB_ep0_send(0);
 470:main.c        **** 				return true; // Wait for OUT data (expecting an OUT transfer)
 471:main.c        **** 
 472:main.c        **** 			// disconnect from USB, jump to bootloader	
 473:main.c        **** 			case 0xBB: 
 474:main.c        **** 				USB_enter_bootloader();
 475:main.c        **** 				return true;
 476:main.c        **** 		}
 477:main.c        **** 	}
 478:main.c        **** 	return false;
 479:main.c        **** }
 480:main.c        **** 
 481:main.c        **** void EVENT_USB_Device_ControlOUT(uint8_t* buf, uint8_t count){
 482:main.c        **** 	switch (usb_cmd){
 621               		.loc 1 482 0
 622 0226 8091 0000 		lds r24,usb_cmd
 623               	.LVL26:
 624 022a 813E      		cpi r24,lo8(-31)
 625 022c 01F4      		brne .L27
 483:main.c        **** 		case 0xE1: // Write EEPROM
 484:main.c        **** 			eeprom_update_block(buf, (void*)(cmd_data*64), count);
 626               		.loc 1 484 0
 627 022e 6091 0000 		lds r22,cmd_data
 628 0232 70E0      		ldi r23,lo8(0)
 629 0234 0024      		clr __tmp_reg__
 630 0236 7695      		lsr r23
 631 0238 6795      		ror r22
 632 023a 0794      		ror __tmp_reg__
 633 023c 7695      		lsr r23
 634 023e 6795      		ror r22
 635 0240 0794      		ror __tmp_reg__
 636 0242 762F      		mov r23,r22
 637 0244 602D      		mov r22,__tmp_reg__
 638 0246 80E0      		ldi r24,lo8(ep0_buf_out)
 639 0248 90E0      		ldi r25,hi8(ep0_buf_out)
 640 024a 50E0      		ldi r21,lo8(0)
 641 024c 0E94 0000 		call __eeupd_block_x32a4u
 642               	.LVL27:
 643               	.LBE510:
 644               	.LBE509:
 645               	.LBB511:
 646               	.LBB508:
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 647               		.loc 6 280 0
 648 0250 E0E0      		ldi r30,lo8(endpoints)
 649 0252 F0E0      		ldi r31,hi8(endpoints)
 650               	/* #APP */
 651               	 ;  280 "usb/usb.h" 1
 652 0254 02E7      		ldi r16, 114
 653 0256 0693      		.dc.w 0x9306
 654               		
 655               	 ;  0 "" 2
 656               	/* #NOAPP */
 657 0258 00C0      		rjmp .L14
 658               	.LVL28:
 659               	.L16:
 660               	.LBE508:
 661               	.LBE511:
 662               	.LBE513:
 663               	.LBE517:
 664               	.LBB518:
 665               	.LBB503:
 666               	.LBB500:
  84:usb/usb_pipe.h **** 					_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->pipe->size);
  85:usb/usb_pipe.h **** 					pipe_done_read(p->pipe);
  86:usb/usb_pipe.h **** 				}else if (p->features & PIPE_ENABLE_FLUSH){
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 667               		.loc 3 87 0
 668 025a 8091 0000 		lds r24,ep_in_data+1
 669 025e 8130      		cpi r24,lo8(1)
 670 0260 01F0      		breq .L34
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
  89:usb/usb_pipe.h **** 						// Send short packet
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 671               		.loc 3 91 0
 672 0262 8230      		cpi r24,lo8(2)
 673 0264 01F0      		breq .+2
 674 0266 00C0      		rjmp .L15
 675               	.LVL29:
 676               	.LBB483:
 677               	.LBB484:
 678               	.LBB485:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 679               		.loc 6 228 0
 680 0268 8091 0000 		lds r24,endpoints+24
 681 026c 8670      		andi r24,lo8(6)
 682               	.LBE485:
 683               	.LBE484:
 684               	.LBE483:
 685               		.loc 3 91 0
 686 026e 8630      		cpi r24,lo8(6)
 687 0270 01F0      		breq .+2
 688 0272 00C0      		rjmp .L15
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 689               		.loc 3 92 0
 690 0274 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 691               		.loc 3 93 0
 692 0278 1092 0000 		sts ep_in_data+2,__zero_reg__
 693 027c 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 694               	.LBB486:
 695               	.LBB487:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 696               		.loc 5 90 0
 697 0280 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 698               		.loc 5 91 0
 699 0284 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 700 0286 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 701 0288 8093 0000 		sts ep_in_pipe_data+2,r24
 702 028c 9093 0000 		sts ep_in_pipe_data+2+1,r25
 703 0290 8093 0000 		sts ep_in_pipe_data,r24
 704 0294 9093 0000 		sts ep_in_pipe_data+1,r25
 705               	.LVL30:
 706 0298 00C0      		rjmp .L15
 707               	.LVL31:
 708               	.L34:
 709               	.LBE487:
 710               	.LBE486:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 711               		.loc 3 88 0
 712 029a 82E0      		ldi r24,lo8(2)
 713 029c 8093 0000 		sts ep_in_data+1,r24
 714               	.LBB488:
 715               	.LBB489:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 716               		.loc 5 62 0
 717 02a0 7091 0000 		lds r23,ep_in_pipe_data
 718 02a4 6091 0000 		lds r22,ep_in_pipe_data+1
 719               	.LBE489:
 720               	.LBE488:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 721               		.loc 3 90 0
 722 02a8 8091 0000 		lds r24,ep_in_data+2
 723 02ac 9091 0000 		lds r25,ep_in_data+2+1
 724               	.LVL32:
 725               	.LBB490:
 726               	.LBB491:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 727               		.loc 3 68 0
 728 02b0 3091 0000 		lds r19,ep_in_data
 729               	.LVL33:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 730               		.loc 3 69 0
 731 02b4 41E0      		ldi r20,lo8(1)
 732 02b6 3130      		cpi r19,lo8(1)
 733 02b8 01F0      		breq .L35
 734               	.L22:
 735 02ba 4093 0000 		sts ep_in_data,r20
 736               	.LBB492:
 737               	.LBB493:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 738               		.loc 6 168 0
 739 02be 472F      		mov r20,r23
 740 02c0 562F      		mov r21,r22
 741               	.LBE493:
 742               	.LBE492:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 743               		.loc 3 72 0
 744 02c2 3323      		tst r19
 745 02c4 01F4      		brne .L23
 746               	.LVL34:
 747               	.LBB495:
 748               	.LBB494:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 749               		.loc 6 168 0
 750 02c6 4093 0000 		sts endpoints+28,r20
 751 02ca 5093 0000 		sts endpoints+28+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 752               		.loc 6 169 0
 753 02ce 8093 0000 		sts endpoints+26,r24
 754 02d2 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 755               		.loc 6 174 0
 756 02d6 E0E0      		ldi r30,lo8(endpoints+24)
 757 02d8 F0E0      		ldi r31,hi8(endpoints+24)
 758               	.LVL35:
 759               	/* #APP */
 760               	 ;  174 "usb/usb.h" 1
 761 02da 02E2      		ldi r16, 34
 762 02dc 0693      		.dc.w 0x9306
 763               		
 764               	 ;  0 "" 2
 765               	/* #NOAPP */
 766 02de 00C0      		rjmp .L15
 767               	.LVL36:
 768               	.L23:
 769               	.LBE494:
 770               	.LBE495:
 771               	.LBB496:
 772               	.LBB497:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 773               		.loc 6 168 0
 774 02e0 4093 0000 		sts endpoints+20,r20
 775 02e4 5093 0000 		sts endpoints+20+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 776               		.loc 6 169 0
 777 02e8 8093 0000 		sts endpoints+18,r24
 778 02ec 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 779               		.loc 6 176 0
 780 02f0 E0E0      		ldi r30,lo8(endpoints+24)
 781 02f2 F0E0      		ldi r31,hi8(endpoints+24)
 782               	/* #APP */
 783               	 ;  176 "usb/usb.h" 1
 784 02f4 04E1      		ldi r16, 20
 785 02f6 0693      		.dc.w 0x9306
 786               		
 787               	 ;  0 "" 2
 788               	/* #NOAPP */
 789 02f8 00C0      		rjmp .L15
 790               	.LVL37:
 791               	.L35:
 792               	.LBE497:
 793               	.LBE496:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 794               		.loc 3 69 0
 795 02fa 40E0      		ldi r20,lo8(0)
 796 02fc 00C0      		rjmp .L22
 797               	.LBE491:
 798               	.LBE490:
 799               	.LBE500:
 800               	.LBE503:
 801               	.LBE518:
 802               		.cfi_endproc
 803               	.LFE59:
 805               	.global	send_string
 807               	send_string:
 808               	.LFB61:
  48:main.c        **** void send_string(char* s) {
 809               		.loc 1 48 0
 810               		.cfi_startproc
 811               	.LVL38:
 812 02fe 6F92      		push r6
 813               	.LCFI29:
 814               		.cfi_def_cfa_offset 3
 815               		.cfi_offset 6, -2
 816 0300 7F92      		push r7
 817               	.LCFI30:
 818               		.cfi_def_cfa_offset 4
 819               		.cfi_offset 7, -3
 820 0302 8F92      		push r8
 821               	.LCFI31:
 822               		.cfi_def_cfa_offset 5
 823               		.cfi_offset 8, -4
 824 0304 9F92      		push r9
 825               	.LCFI32:
 826               		.cfi_def_cfa_offset 6
 827               		.cfi_offset 9, -5
 828 0306 AF92      		push r10
 829               	.LCFI33:
 830               		.cfi_def_cfa_offset 7
 831               		.cfi_offset 10, -6
 832 0308 BF92      		push r11
 833               	.LCFI34:
 834               		.cfi_def_cfa_offset 8
 835               		.cfi_offset 11, -7
 836 030a CF92      		push r12
 837               	.LCFI35:
 838               		.cfi_def_cfa_offset 9
 839               		.cfi_offset 12, -8
 840 030c DF92      		push r13
 841               	.LCFI36:
 842               		.cfi_def_cfa_offset 10
 843               		.cfi_offset 13, -9
 844 030e EF92      		push r14
 845               	.LCFI37:
 846               		.cfi_def_cfa_offset 11
 847               		.cfi_offset 14, -10
 848 0310 FF92      		push r15
 849               	.LCFI38:
 850               		.cfi_def_cfa_offset 12
 851               		.cfi_offset 15, -11
 852 0312 0F93      		push r16
 853               	.LCFI39:
 854               		.cfi_def_cfa_offset 13
 855               		.cfi_offset 16, -12
 856 0314 1F93      		push r17
 857               	.LCFI40:
 858               		.cfi_def_cfa_offset 14
 859               		.cfi_offset 17, -13
 860 0316 CF93      		push r28
 861               	.LCFI41:
 862               		.cfi_def_cfa_offset 15
 863               		.cfi_offset 28, -14
 864 0318 DF93      		push r29
 865               	.LCFI42:
 866               		.cfi_def_cfa_offset 16
 867               		.cfi_offset 29, -15
 868               	/* prologue: function */
 869               	/* frame size = 0 */
 870               	/* stack size = 14 */
 871               	.L__stack_usage = 14
  49:main.c        ****   int length = strlen(s);
 872               		.loc 1 49 0
 873 031a DC01      		movw r26,r24
 874 031c 0D90      		ld __tmp_reg__,X+
 875 031e 0020      		tst __tmp_reg__
 876 0320 01F4      		brne .-6
 877 0322 5D01      		movw r10,r26
 878 0324 0894      		sec
 879 0326 A108      		sbc r10,__zero_reg__
 880 0328 B108      		sbc r11,__zero_reg__
 881 032a A81A      		sub r10,r24
 882 032c B90A      		sbc r11,r25
 883               	.LVL39:
 884               	.LBB601:
  50:main.c        ****   for (int i=0; i<length; i++) {
 885               		.loc 1 50 0
 886 032e 1A14      		cp __zero_reg__,r10
 887 0330 1B04      		cpc __zero_reg__,r11
 888 0332 04F4      		brge .L36
 889 0334 4C01      		movw r8,r24
 890 0336 CC24      		clr r12
 891 0338 DD24      		clr r13
 892               	.LBB602:
 893               	.LBB603:
 894               	.LBB604:
 895               	.LBB605:
 896               	.LBB606:
 897               	.LBB607:
 898               	.LBB608:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 899               		.loc 5 57 0
 900 033a 46E0      		ldi r20,lo8(6)
 901               	.LBE608:
 902               	.LBE607:
 903               	.LBE606:
 904               	.LBE605:
 905               	.LBE604:
 906               	.LBB619:
 907               	.LBB620:
 908               	.LBB621:
 909               	.LBB622:
 910               	.LBB623:
 911               	.LBB624:
 912               	.LBB625:
 913               	.LBB626:
 914               	.LBB627:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 915               		.loc 6 220 0
 916 033c A0E0      		ldi r26,lo8(endpoints+24)
 917 033e B0E0      		ldi r27,hi8(endpoints+24)
 918               	.LBE627:
 919               	.LBE626:
 920               	.LBB629:
 921               	.LBB630:
 922               		.loc 5 91 0
 923 0340 90E0      		ldi r25,lo8(ep_in_pipe_buffer)
 924 0342 692E      		mov r6,r25
 925 0344 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 926 0346 792E      		mov r7,r25
 927               	.LBE630:
 928               	.LBE629:
 929               	.LBB633:
 930               	.LBB634:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 931               		.loc 3 69 0
 932 0348 C1E0      		ldi r28,lo8(1)
 933 034a D0E0      		ldi r29,hi8(1)
 934               	.LBE634:
 935               	.LBE633:
 936               	.LBB640:
 937               	.LBB641:
 938               	.LBB642:
 939               	.LBB643:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 940               		.loc 6 169 0
 941 034c 20E4      		ldi r18,lo8(64)
 942 034e E22E      		mov r14,r18
 943 0350 F12C      		mov r15,__zero_reg__
 944               	.LVL40:
 945               	.L52:
 946               	.LBE643:
 947               	.LBE642:
 948               	.LBE641:
 949               	.LBE640:
 950               	.LBE625:
 951               	.LBE624:
 952               	.LBE623:
 953               	.LBE622:
 954               	.LBE621:
 955               	.LBE620:
 956               	.LBE619:
 957               	.LBE603:
 958               	.LBE602:
  51:main.c        ****     send_byte(s[i]);
 959               		.loc 1 51 0 discriminator 2
 960 0352 F401      		movw r30,r8
 961 0354 3191      		ld r19,Z+
 962 0356 4F01      		movw r8,r30
 963               	.LVL41:
 964               	.L40:
 965               	.LBB693:
 966               	.LBB691:
 967               	.LBB686:
 968               	.LBB617:
 969               	.LBB615:
  94:usb/usb_pipe.h **** 						pipe_reset(p->pipe);
  95:usb/usb_pipe.h **** 					}
  96:usb/usb_pipe.h **** 				}
  97:usb/usb_pipe.h **** 			}
  98:usb/usb_pipe.h **** 		}else{
  99:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep) && pipe_can_write(p->pipe) >= 1){
 100:usb/usb_pipe.h **** 				_usb_pipe_ep_start(p, pipe_write_ptr(p->pipe), p->pipe->size);
 101:usb/usb_pipe.h **** 				pipe_done_write(p->pipe);
 102:usb/usb_pipe.h **** 			}
 103:usb/usb_pipe.h **** 		}
 104:usb/usb_pipe.h **** 	}
 105:usb/usb_pipe.h **** }
 106:usb/usb_pipe.h **** 
 107:usb/usb_pipe.h **** static inline void usb_pipe_flush(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 108:usb/usb_pipe.h **** static inline void usb_pipe_flush(const USB_Pipe* p){
 109:usb/usb_pipe.h **** 	GCC_ASSERT(p->features&PIPE_ENABLE_FLUSH && p->ep&USB_EP_IN);
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 111:usb/usb_pipe.h **** 	usb_pipe_handle(p);
 112:usb/usb_pipe.h **** }
 113:usb/usb_pipe.h **** 
 114:usb/usb_pipe.h **** static inline bool usb_pipe_flush_done(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 115:usb/usb_pipe.h **** static inline bool usb_pipe_flush_done(const USB_Pipe* p){
 116:usb/usb_pipe.h **** 	GCC_ASSERT(p->features&PIPE_ENABLE_FLUSH);
 117:usb/usb_pipe.h **** 	return p->data->flush;
 118:usb/usb_pipe.h **** }
 119:usb/usb_pipe.h **** 
 120:usb/usb_pipe.h **** static inline bool usb_pipe_can_write(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 121:usb/usb_pipe.h **** static inline bool usb_pipe_can_write(const USB_Pipe* p){
 122:usb/usb_pipe.h **** 	bool r;
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 970               		.loc 3 123 0
 971 0358 9FB7      		in r25,__SREG__
 972               	.LVL42:
 973               	.LBB610:
 974               	.LBB611:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 975               		.loc 4 50 0
 976               	/* #APP */
 977               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 978 035a F894      		cli
 979               	 ;  0 "" 2
 980               	.LVL43:
 981               	/* #NOAPP */
 982               	.LBE611:
 983               	.LBE610:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 984               		.loc 3 124 0
 985 035c 8091 0000 		lds r24,ep_in_data+1
 986 0360 8823      		tst r24
 987 0362 01F0      		breq .L57
 988               	.L53:
 125:usb/usb_pipe.h **** 			r = false;
 989               		.loc 3 125 0
 990 0364 80E0      		ldi r24,lo8(0)
 991               	.L38:
 992               	.LBB612:
 993               	.LBB613:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 994               		.loc 4 70 0
 995 0366 9FBF      		out __SREG__,r25
 996               		.loc 4 71 0
 997               	.LBE613:
 998               	.LBE612:
 999               	.LBE615:
 1000               	.LBE617:
 1001               	.LBE686:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 1002               		.loc 2 20 0
 1003 0368 8823      		tst r24
 1004 036a 01F0      		breq .L40
 1005               	.LVL44:
 1006               	.LBB687:
 1007               	.LBB688:
 126:usb/usb_pipe.h **** 		}else{
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 128:usb/usb_pipe.h **** 		}
 129:usb/usb_pipe.h **** 	}
 130:usb/usb_pipe.h **** 	return r;
 131:usb/usb_pipe.h **** }
 132:usb/usb_pipe.h **** 
 133:usb/usb_pipe.h **** static inline uint8_t* usb_pipe_write_ptr(const USB_Pipe* p){
 134:usb/usb_pipe.h **** 	return pipe_write_ptr(p->pipe);
 135:usb/usb_pipe.h **** }
 136:usb/usb_pipe.h **** 
 137:usb/usb_pipe.h **** static inline void usb_pipe_done_write(const USB_Pipe* p){
 138:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 139:usb/usb_pipe.h **** 		pipe_done_write(p->pipe);
 140:usb/usb_pipe.h **** 	}
 141:usb/usb_pipe.h **** }
 142:usb/usb_pipe.h **** 
 143:usb/usb_pipe.h **** static inline bool usb_pipe_can_read(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 144:usb/usb_pipe.h **** static inline bool usb_pipe_can_read(const USB_Pipe* p){
 145:usb/usb_pipe.h **** 	bool r;
 146:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 147:usb/usb_pipe.h **** 		r = pipe_can_read(p->pipe) > 0;
 148:usb/usb_pipe.h **** 	}
 149:usb/usb_pipe.h **** 	return r;
 150:usb/usb_pipe.h **** }
 151:usb/usb_pipe.h **** 
 152:usb/usb_pipe.h **** static inline uint8_t* usb_pipe_read_ptr(const USB_Pipe* p){
 153:usb/usb_pipe.h **** 	return pipe_read_ptr(p->pipe);
 154:usb/usb_pipe.h **** }
 155:usb/usb_pipe.h **** 
 156:usb/usb_pipe.h **** static inline void usb_pipe_done_read(const USB_Pipe* p){
 157:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 158:usb/usb_pipe.h **** 		pipe_done_read(p->pipe);
 159:usb/usb_pipe.h **** 	}
 160:usb/usb_pipe.h **** }
 161:usb/usb_pipe.h **** 
 162:usb/usb_pipe.h **** static inline uint8_t usb_pipe_read_byte(const USB_Pipe* p){
 163:usb/usb_pipe.h **** 	uint8_t r = p->pipe->data->read_ptr[p->data->packet_offset++];
 164:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 165:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 166:usb/usb_pipe.h **** 			p->data->packet_offset = 0;
 167:usb/usb_pipe.h **** 			pipe_done_read(p->pipe);
 168:usb/usb_pipe.h **** 			usb_pipe_handle(p);
 169:usb/usb_pipe.h **** 		}
 170:usb/usb_pipe.h **** 	}
 171:usb/usb_pipe.h **** 	return r;
 172:usb/usb_pipe.h **** }
 173:usb/usb_pipe.h **** 
 174:usb/usb_pipe.h **** static inline void usb_pipe_write_byte(const USB_Pipe* p, uint8_t v){
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 1008               		.loc 3 175 0
 1009 036c 8091 0000 		lds r24,ep_in_data+2
 1010 0370 9091 0000 		lds r25,ep_in_data+2+1
 1011 0374 E091 0000 		lds r30,ep_in_pipe_data+2
 1012 0378 F091 0000 		lds r31,ep_in_pipe_data+2+1
 1013               	.LVL45:
 1014 037c E80F      		add r30,r24
 1015 037e F91F      		adc r31,r25
 1016 0380 3083      		st Z,r19
 1017 0382 0196      		adiw r24,1
 1018 0384 8093 0000 		sts ep_in_data+2,r24
 1019 0388 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 1020               		.loc 3 176 0
 1021 038c 8034      		cpi r24,64
 1022 038e 9105      		cpc r25,__zero_reg__
 1023 0390 01F0      		breq .L58
 1024               	.LVL46:
 1025               	.L41:
 1026               	.LBE688:
 1027               	.LBE687:
 1028               	.LBE691:
 1029               	.LBE693:
  50:main.c        ****   for (int i=0; i<length; i++) {
 1030               		.loc 1 50 0 discriminator 2
 1031 0392 0894      		sec
 1032 0394 C11C      		adc r12,__zero_reg__
 1033 0396 D11C      		adc r13,__zero_reg__
 1034               	.LVL47:
 1035 0398 AC14      		cp r10,r12
 1036 039a BD04      		cpc r11,r13
 1037 039c 01F4      		brne .L52
 1038               	.LVL48:
 1039               	.L36:
 1040               	/* epilogue start */
 1041               	.LBE601:
  53:main.c        **** }
 1042               		.loc 1 53 0
 1043 039e DF91      		pop r29
 1044 03a0 CF91      		pop r28
 1045 03a2 1F91      		pop r17
 1046 03a4 0F91      		pop r16
 1047 03a6 FF90      		pop r15
 1048 03a8 EF90      		pop r14
 1049 03aa DF90      		pop r13
 1050 03ac CF90      		pop r12
 1051 03ae BF90      		pop r11
 1052 03b0 AF90      		pop r10
 1053               	.LVL49:
 1054 03b2 9F90      		pop r9
 1055 03b4 8F90      		pop r8
 1056 03b6 7F90      		pop r7
 1057 03b8 6F90      		pop r6
 1058 03ba 0895      		ret
 1059               	.LVL50:
 1060               	.L57:
 1061               	.LBB695:
 1062               	.LBB694:
 1063               	.LBB692:
 1064               	.LBB689:
 1065               	.LBB618:
 1066               	.LBB616:
 1067               	.LBB614:
 1068               	.LBB609:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 1069               		.loc 5 57 0
 1070 03bc 8091 0000 		lds r24,ep_in_pipe_data+4
 1071 03c0 242F      		mov r18,r20
 1072 03c2 281B      		sub r18,r24
 1073               	.LBE609:
 1074               	.LBE614:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 1075               		.loc 3 127 0
 1076 03c4 81E0      		ldi r24,lo8(1)
 1077 03c6 1216      		cp __zero_reg__,r18
 1078 03c8 04F0      		brlt .L38
 1079 03ca 00C0      		rjmp .L53
 1080               	.LVL51:
 1081               	.L58:
 1082               	.LBE616:
 1083               	.LBE618:
 1084               	.LBE689:
 1085               	.LBB690:
 1086               	.LBB685:
 1087               	.LBB684:
 1088               	.LBB683:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 1089               		.loc 3 177 0
 1090 03cc 1FB7      		in r17,__SREG__
 1091               	.LVL52:
 1092               	.LBB675:
 1093               	.LBB676:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 1094               		.loc 4 50 0
 1095               	/* #APP */
 1096               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 1097 03ce F894      		cli
 1098               	 ;  0 "" 2
 1099               	.LVL53:
 1100               	/* #NOAPP */
 1101               	.LBE676:
 1102               	.LBE675:
 178:usb/usb_pipe.h **** 			p->data->packet_offset = 0;
 1103               		.loc 3 178 0
 1104 03d0 1092 0000 		sts ep_in_data+2,__zero_reg__
 1105 03d4 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 1106               	.LVL54:
 1107               	.LBB677:
 1108               	.LBB678:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 1109               		.loc 5 81 0
 1110 03d8 8091 0000 		lds r24,ep_in_pipe_data+4
 1111 03dc 8F5F      		subi r24,lo8(-(1))
 1112 03de 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 1113               		.loc 5 82 0
 1114 03e2 8091 0000 		lds r24,ep_in_pipe_data+2
 1115 03e6 9091 0000 		lds r25,ep_in_pipe_data+2+1
 1116 03ea 805C      		subi r24,lo8(-(64))
 1117 03ec 9F4F      		sbci r25,hi8(-(64))
 1118 03ee 8093 0000 		sts ep_in_pipe_data+2,r24
 1119 03f2 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 1120               		.loc 5 84 0
 1121 03f6 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 1122 03f8 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 1123 03fa 9F07      		cpc r25,r31
 1124 03fc 01F4      		brne .L42
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 1125               		.loc 5 85 0
 1126 03fe 6092 0000 		sts ep_in_pipe_data+2,r6
 1127 0402 7092 0000 		sts ep_in_pipe_data+2+1,r7
 1128               	.L42:
 1129               	.LVL55:
 1130               	.LBE678:
 1131               	.LBE677:
 1132               	.LBB679:
 1133               	.LBB673:
 1134               	.LBB671:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 1135               		.loc 3 80 0
 1136 0406 6FB7      		in r22,__SREG__
 1137               	.LVL56:
 1138               	.LBB650:
 1139               	.LBB651:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 1140               		.loc 4 50 0
 1141               	/* #APP */
 1142               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 1143 0408 F894      		cli
 1144               	 ;  0 "" 2
 1145               	.LVL57:
 1146               	/* #NOAPP */
 1147               	.LBE651:
 1148               	.LBE650:
 1149               	.LBB652:
 1150               	.LBB628:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 1151               		.loc 6 220 0
 1152 040a 8091 0000 		lds r24,endpoints+24
 1153 040e 8670      		andi r24,lo8(6)
 1154               	.LBE628:
 1155               	.LBE652:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 1156               		.loc 3 82 0
 1157 0410 01F4      		brne .L59
 1158               	.LVL58:
 1159               	.L43:
 1160               	.LBB653:
 1161               	.LBB654:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 1162               		.loc 4 70 0
 1163 0412 6FBF      		out __SREG__,r22
 1164               		.loc 4 71 0
 1165               	.LVL59:
 1166               	.LBE654:
 1167               	.LBE653:
 1168               	.LBE671:
 1169               	.LBE673:
 1170               	.LBE679:
 1171               	.LBB680:
 1172               	.LBB681:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 1173               		.loc 4 70 0
 1174 0414 1FBF      		out __SREG__,r17
 1175               		.loc 4 71 0
 1176 0416 00C0      		rjmp .L41
 1177               	.LVL60:
 1178               	.L59:
 1179               	.LBE681:
 1180               	.LBE680:
 1181               	.LBB682:
 1182               	.LBB674:
 1183               	.LBB672:
 1184               	.LBB655:
 1185               	.LBB656:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 1186               		.loc 5 51 0
 1187 0418 5091 0000 		lds r21,ep_in_pipe_data+4
 1188               	.LBE656:
 1189               	.LBE655:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 1190               		.loc 3 83 0
 1191 041c 1516      		cp __zero_reg__,r21
 1192 041e 04F0      		brlt .+2
 1193 0420 00C0      		rjmp .L44
 1194               	.LBB657:
 1195               	.LBB658:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 1196               		.loc 5 62 0
 1197 0422 2091 0000 		lds r18,ep_in_pipe_data
 1198 0426 3091 0000 		lds r19,ep_in_pipe_data+1
 1199               	.LVL61:
 1200               	.LBE658:
 1201               	.LBE657:
 1202               	.LBB659:
 1203               	.LBB648:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 1204               		.loc 3 68 0
 1205 042a 7091 0000 		lds r23,ep_in_data
 1206               	.LVL62:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 1207               		.loc 3 69 0
 1208 042e 872F      		mov r24,r23
 1209 0430 90E0      		ldi r25,lo8(0)
 1210 0432 E1E0      		ldi r30,lo8(1)
 1211 0434 8C17      		cp r24,r28
 1212 0436 9D07      		cpc r25,r29
 1213 0438 01F4      		brne .L45
 1214 043a E0E0      		ldi r30,lo8(0)
 1215               	.L45:
 1216 043c E093 0000 		sts ep_in_data,r30
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 1217               		.loc 3 72 0
 1218 0440 7723      		tst r23
 1219 0442 01F4      		brne .L46
 1220               	.LVL63:
 1221               	.LBB645:
 1222               	.LBB646:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1223               		.loc 6 168 0
 1224 0444 2093 0000 		sts endpoints+28,r18
 1225 0448 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1226               		.loc 6 169 0
 1227 044c E092 0000 		sts endpoints+26,r14
 1228 0450 F092 0000 		sts endpoints+26+1,r15
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 1229               		.loc 6 174 0
 1230 0454 FD01      		movw r30,r26
 1231               	/* #APP */
 1232               	 ;  174 "usb/usb.h" 1
 1233 0456 02E2      		ldi r16, 34
 1234 0458 0693      		.dc.w 0x9306
 1235               		
 1236               	 ;  0 "" 2
 1237               	.LVL64:
 1238               	/* #NOAPP */
 1239               	.L47:
 1240               	.LBE646:
 1241               	.LBE645:
 1242               	.LBE648:
 1243               	.LBE659:
 1244               	.LBB660:
 1245               	.LBB661:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 1246               		.loc 5 72 0
 1247 045a 5150      		subi r21,lo8(-(-1))
 1248 045c 5093 0000 		sts ep_in_pipe_data+4,r21
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 1249               		.loc 5 73 0
 1250 0460 C901      		movw r24,r18
 1251 0462 805C      		subi r24,lo8(-(64))
 1252 0464 9F4F      		sbci r25,hi8(-(64))
 1253 0466 8093 0000 		sts ep_in_pipe_data,r24
 1254 046a 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 1255               		.loc 5 75 0
 1256 046e F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 1257 0470 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 1258 0472 9F07      		cpc r25,r31
 1259 0474 01F4      		brne .L43
 1260               	.LBE661:
 1261               	.LBE660:
 1262               	.LBB662:
 1263               	.LBB631:
 1264               		.loc 5 91 0
 1265 0476 6092 0000 		sts ep_in_pipe_data,r6
 1266 047a 7092 0000 		sts ep_in_pipe_data+1,r7
 1267               	.LVL65:
 1268 047e 00C0      		rjmp .L43
 1269               	.LVL66:
 1270               	.L46:
 1271               	.LBE631:
 1272               	.LBE662:
 1273               	.LBB663:
 1274               	.LBB649:
 1275               	.LBB647:
 1276               	.LBB644:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1277               		.loc 6 168 0
 1278 0480 2093 0000 		sts endpoints+20,r18
 1279 0484 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1280               		.loc 6 169 0
 1281 0488 E092 0000 		sts endpoints+18,r14
 1282 048c F092 0000 		sts endpoints+18+1,r15
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 1283               		.loc 6 176 0
 1284 0490 FD01      		movw r30,r26
 1285               	/* #APP */
 1286               	 ;  176 "usb/usb.h" 1
 1287 0492 04E1      		ldi r16, 20
 1288 0494 0693      		.dc.w 0x9306
 1289               		
 1290               	 ;  0 "" 2
 1291               	/* #NOAPP */
 1292 0496 00C0      		rjmp .L47
 1293               	.LVL67:
 1294               	.L44:
 1295               	.LBE644:
 1296               	.LBE647:
 1297               	.LBE649:
 1298               	.LBE663:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 1299               		.loc 3 87 0
 1300 0498 8091 0000 		lds r24,ep_in_data+1
 1301 049c 8130      		cpi r24,lo8(1)
 1302 049e 01F0      		breq .L60
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 1303               		.loc 3 91 0
 1304 04a0 8230      		cpi r24,lo8(2)
 1305 04a2 01F0      		breq .+2
 1306 04a4 00C0      		rjmp .L43
 1307               	.LVL68:
 1308               	.LBB664:
 1309               	.LBB665:
 1310               	.LBB666:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 1311               		.loc 6 228 0
 1312 04a6 8091 0000 		lds r24,endpoints+24
 1313 04aa 8670      		andi r24,lo8(6)
 1314               	.LBE666:
 1315               	.LBE665:
 1316               	.LBE664:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 1317               		.loc 3 91 0
 1318 04ac 8630      		cpi r24,lo8(6)
 1319 04ae 01F0      		breq .+2
 1320 04b0 00C0      		rjmp .L43
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 1321               		.loc 3 92 0
 1322 04b2 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 1323               		.loc 3 93 0
 1324 04b6 1092 0000 		sts ep_in_data+2,__zero_reg__
 1325 04ba 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 1326               	.LBB667:
 1327               	.LBB632:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 1328               		.loc 5 90 0
 1329 04be 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 1330               		.loc 5 91 0
 1331 04c2 6092 0000 		sts ep_in_pipe_data+2,r6
 1332 04c6 7092 0000 		sts ep_in_pipe_data+2+1,r7
 1333 04ca 6092 0000 		sts ep_in_pipe_data,r6
 1334 04ce 7092 0000 		sts ep_in_pipe_data+1,r7
 1335               	.LVL69:
 1336 04d2 00C0      		rjmp .L43
 1337               	.LVL70:
 1338               	.L60:
 1339               	.LBE632:
 1340               	.LBE667:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 1341               		.loc 3 88 0
 1342 04d4 22E0      		ldi r18,lo8(2)
 1343 04d6 2093 0000 		sts ep_in_data+1,r18
 1344               	.LBB668:
 1345               	.LBB669:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 1346               		.loc 5 62 0
 1347 04da E091 0000 		lds r30,ep_in_pipe_data
 1348 04de F091 0000 		lds r31,ep_in_pipe_data+1
 1349               	.LBE669:
 1350               	.LBE668:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 1351               		.loc 3 90 0
 1352 04e2 2091 0000 		lds r18,ep_in_data+2
 1353 04e6 3091 0000 		lds r19,ep_in_data+2+1
 1354               	.LVL71:
 1355               	.LBB670:
 1356               	.LBB639:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 1357               		.loc 3 68 0
 1358 04ea 7091 0000 		lds r23,ep_in_data
 1359               	.LVL72:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 1360               		.loc 3 69 0
 1361 04ee 872F      		mov r24,r23
 1362 04f0 90E0      		ldi r25,lo8(0)
 1363 04f2 51E0      		ldi r21,lo8(1)
 1364 04f4 8C17      		cp r24,r28
 1365 04f6 9D07      		cpc r25,r29
 1366 04f8 01F4      		brne .L50
 1367 04fa 50E0      		ldi r21,lo8(0)
 1368               	.L50:
 1369 04fc 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 1370               		.loc 3 72 0
 1371 0500 7723      		tst r23
 1372 0502 01F4      		brne .L51
 1373               	.LVL73:
 1374               	.LBB635:
 1375               	.LBB636:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1376               		.loc 6 168 0
 1377 0504 E093 0000 		sts endpoints+28,r30
 1378 0508 F093 0000 		sts endpoints+28+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1379               		.loc 6 169 0
 1380 050c 2093 0000 		sts endpoints+26,r18
 1381 0510 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 1382               		.loc 6 174 0
 1383 0514 FD01      		movw r30,r26
 1384               	/* #APP */
 1385               	 ;  174 "usb/usb.h" 1
 1386 0516 02E2      		ldi r16, 34
 1387 0518 0693      		.dc.w 0x9306
 1388               		
 1389               	 ;  0 "" 2
 1390               	/* #NOAPP */
 1391 051a 00C0      		rjmp .L43
 1392               	.LVL74:
 1393               	.L51:
 1394               	.LBE636:
 1395               	.LBE635:
 1396               	.LBB637:
 1397               	.LBB638:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1398               		.loc 6 168 0
 1399 051c E093 0000 		sts endpoints+20,r30
 1400 0520 F093 0000 		sts endpoints+20+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1401               		.loc 6 169 0
 1402 0524 2093 0000 		sts endpoints+18,r18
 1403 0528 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 1404               		.loc 6 176 0
 1405 052c FD01      		movw r30,r26
 1406               	/* #APP */
 1407               	 ;  176 "usb/usb.h" 1
 1408 052e 04E1      		ldi r16, 20
 1409 0530 0693      		.dc.w 0x9306
 1410               		
 1411               	 ;  0 "" 2
 1412               	/* #NOAPP */
 1413 0532 00C0      		rjmp .L43
 1414               	.LBE638:
 1415               	.LBE637:
 1416               	.LBE639:
 1417               	.LBE670:
 1418               	.LBE672:
 1419               	.LBE674:
 1420               	.LBE682:
 1421               	.LBE683:
 1422               	.LBE684:
 1423               	.LBE685:
 1424               	.LBE690:
 1425               	.LBE692:
 1426               	.LBE694:
 1427               	.LBE695:
 1428               		.cfi_endproc
 1429               	.LFE61:
 1431               	.global	turn_on_gps
 1433               	turn_on_gps:
 1434               	.LFB62:
  55:main.c        **** void turn_on_gps(void) {
 1435               		.loc 1 55 0
 1436               		.cfi_startproc
 1437               	/* prologue: function */
 1438               	/* frame size = 0 */
 1439               	/* stack size = 0 */
 1440               	.L__stack_usage = 0
 1441               	.LVL75:
 1442               	.LBB696:
 1443               	.LBB697:
 1444               		.file 7 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h"
   1:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  41:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  42:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  46:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \code
  49:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     used.
  58:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  59:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  68:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  77:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  81:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** */
  82:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  93:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  94:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  97:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #  include <math.h>
 102:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
 103:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 104:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /**
 105:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 107:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 109:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 112:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 114:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 120:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 125:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 129:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 132:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 140:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****  */
 141:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** void
 142:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** {
 144:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 153:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 156:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 159:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#else
 160:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		//round up by default
 161:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#endif
 163:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 164:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1445               		.loc 7 164 0
 1446 0534 8FEF      		 ldi r24,lo8(6399999)
 1447 0536 97EA      	    ldi r25,hi8(6399999)
 1448 0538 A1E6      	    ldi r26,hlo8(6399999)
 1449 053a 8150      	    1:subi r24,1
 1450 053c 9040      	    sbci r25,0
 1451 053e A040      	    sbci r26,0
 1452 0540 01F4      	    brne 1b
 1453 0542 00C0      		rjmp .
 1454 0544 0000      		nop
 1455               	.LBE697:
 1456               	.LBE696:
  63:main.c        ****   PORTD.DIRSET = PIN5_bm;
 1457               		.loc 1 63 0
 1458 0546 E0E6      		ldi r30,lo8(1632)
 1459 0548 F6E0      		ldi r31,hi8(1632)
 1460 054a 80E2      		ldi r24,lo8(32)
 1461 054c 8183      		std Z+1,r24
  66:main.c        ****   PORTD.OUTTGL = PIN5_bm;
 1462               		.loc 1 66 0
 1463 054e 8783      		std Z+7,r24
 1464               	/* epilogue start */
  67:main.c        **** }
 1465               		.loc 1 67 0
 1466 0550 0895      		ret
 1467               		.cfi_endproc
 1468               	.LFE62:
 1470               	.global	wake_up_gps
 1472               	wake_up_gps:
 1473               	.LFB63:
  69:main.c        **** void wake_up_gps(void) {
 1474               		.loc 1 69 0
 1475               		.cfi_startproc
 1476               	/* prologue: function */
 1477               	/* frame size = 0 */
 1478               	/* stack size = 0 */
 1479               	.L__stack_usage = 0
 1480               	/* epilogue start */
  71:main.c        **** }
 1481               		.loc 1 71 0
 1482 0552 0895      		ret
 1483               		.cfi_endproc
 1484               	.LFE63:
 1486               	.global	gps_init
 1488               	gps_init:
 1489               	.LFB64:
  73:main.c        **** void gps_init(void) {
 1490               		.loc 1 73 0
 1491               		.cfi_startproc
 1492               	/* prologue: function */
 1493               	/* frame size = 0 */
 1494               	/* stack size = 0 */
 1495               	.L__stack_usage = 0
 1496               	.LVL76:
 1497               	.LBB698:
 1498               	.LBB699:
 1499               	.LBB700:
 1500               	.LBB701:
 1501               		.loc 7 164 0
 1502 0554 8FEF      		 ldi r24,lo8(6399999)
 1503 0556 97EA      	    ldi r25,hi8(6399999)
 1504 0558 A1E6      	    ldi r26,hlo8(6399999)
 1505 055a 8150      	    1:subi r24,1
 1506 055c 9040      	    sbci r25,0
 1507 055e A040      	    sbci r26,0
 1508 0560 01F4      	    brne 1b
 1509 0562 00C0      		rjmp .
 1510 0564 0000      		nop
 1511               	.LBE701:
 1512               	.LBE700:
  63:main.c        ****   PORTD.DIRSET = PIN5_bm;
 1513               		.loc 1 63 0
 1514 0566 E0E6      		ldi r30,lo8(1632)
 1515 0568 F6E0      		ldi r31,hi8(1632)
 1516 056a 80E2      		ldi r24,lo8(32)
 1517 056c 8183      		std Z+1,r24
  66:main.c        ****   PORTD.OUTTGL = PIN5_bm;
 1518               		.loc 1 66 0
 1519 056e 8783      		std Z+7,r24
 1520               	.LBE699:
 1521               	.LBE698:
  88:main.c        ****   PORTD.DIRSET = PIN3_bm; 
 1522               		.loc 1 88 0
 1523 0570 88E0      		ldi r24,lo8(8)
 1524 0572 8183      		std Z+1,r24
  91:main.c        ****   PORTD.OUTSET = PIN3_bm; 
 1525               		.loc 1 91 0
 1526 0574 8583      		std Z+5,r24
 1527               	.LVL77:
  96:main.c        **** 	USARTD0_BAUDCTRLA = BSEL & 0XFF;
 1528               		.loc 1 96 0
 1529 0576 8CE0      		ldi r24,lo8(12)
 1530 0578 8093 A609 		sts 2470,r24
  97:main.c        **** 	USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
 1531               		.loc 1 97 0
 1532 057c 80E1      		ldi r24,lo8(16)
 1533 057e 8093 A709 		sts 2471,r24
 101:main.c        **** 	USARTD0.CTRLA = 0x00;
 1534               		.loc 1 101 0
 1535 0582 E0EA      		ldi r30,lo8(2464)
 1536 0584 F9E0      		ldi r31,hi8(2464)
 1537 0586 1382      		std Z+3,__zero_reg__
 104:main.c        ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 1538               		.loc 1 104 0
 1539 0588 88E1      		ldi r24,lo8(24)
 1540 058a 8483      		std Z+4,r24
 108:main.c        ****   USARTD0.CTRLC = 0x03;  
 1541               		.loc 1 108 0
 1542 058c 83E0      		ldi r24,lo8(3)
 1543 058e 8583      		std Z+5,r24
 1544               	/* epilogue start */
 109:main.c        **** }
 1545               		.loc 1 109 0
 1546 0590 0895      		ret
 1547               		.cfi_endproc
 1548               	.LFE64:
 1550               	.global	wake_up_gprs
 1552               	wake_up_gprs:
 1553               	.LFB65:
 111:main.c        **** void wake_up_gprs(void) {
 1554               		.loc 1 111 0
 1555               		.cfi_startproc
 1556               	/* prologue: function */
 1557               	/* frame size = 0 */
 1558               	/* stack size = 0 */
 1559               	.L__stack_usage = 0
 1560               	/* epilogue start */
 113:main.c        **** }
 1561               		.loc 1 113 0
 1562 0592 0895      		ret
 1563               		.cfi_endproc
 1564               	.LFE65:
 1566               	.global	gprs_init
 1568               	gprs_init:
 1569               	.LFB66:
 115:main.c        **** void gprs_init(void) {
 1570               		.loc 1 115 0
 1571               		.cfi_startproc
 1572               	/* prologue: function */
 1573               	/* frame size = 0 */
 1574               	/* stack size = 0 */
 1575               	.L__stack_usage = 0
 122:main.c        ****   PORTD.DIRSET = PIN3_bm; 
 1576               		.loc 1 122 0
 1577 0594 E0E6      		ldi r30,lo8(1632)
 1578 0596 F6E0      		ldi r31,hi8(1632)
 1579 0598 88E0      		ldi r24,lo8(8)
 1580 059a 8183      		std Z+1,r24
 125:main.c        ****   PORTD.OUTSET = PIN3_bm; 
 1581               		.loc 1 125 0
 1582 059c 8583      		std Z+5,r24
 1583               	.LVL78:
 129:main.c        ****   USARTD0_BAUDCTRLA = BSEL & 0XFF;
 1584               		.loc 1 129 0
 1585 059e 86E0      		ldi r24,lo8(6)
 1586 05a0 8093 A609 		sts 2470,r24
 130:main.c        ****   USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
 1587               		.loc 1 130 0
 1588 05a4 1092 A709 		sts 2471,__zero_reg__
 134:main.c        ****   USARTD0.CTRLA = 0x00;
 1589               		.loc 1 134 0
 1590 05a8 E0EA      		ldi r30,lo8(2464)
 1591 05aa F9E0      		ldi r31,hi8(2464)
 1592 05ac 1382      		std Z+3,__zero_reg__
 137:main.c        ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 1593               		.loc 1 137 0
 1594 05ae 88E1      		ldi r24,lo8(24)
 1595 05b0 8483      		std Z+4,r24
 141:main.c        ****   USARTD0.CTRLC = 0x03;  
 1596               		.loc 1 141 0
 1597 05b2 83E0      		ldi r24,lo8(3)
 1598 05b4 8583      		std Z+5,r24
 1599               	/* epilogue start */
 142:main.c        **** }
 1600               		.loc 1 142 0
 1601 05b6 0895      		ret
 1602               		.cfi_endproc
 1603               	.LFE66:
 1605               	.global	concat
 1607               	concat:
 1608               	.LFB67:
 145:main.c        **** {
 1609               		.loc 1 145 0
 1610               		.cfi_startproc
 1611               	.LVL79:
 1612 05b8 EF92      		push r14
 1613               	.LCFI43:
 1614               		.cfi_def_cfa_offset 3
 1615               		.cfi_offset 14, -2
 1616 05ba FF92      		push r15
 1617               	.LCFI44:
 1618               		.cfi_def_cfa_offset 4
 1619               		.cfi_offset 15, -3
 1620 05bc 0F93      		push r16
 1621               	.LCFI45:
 1622               		.cfi_def_cfa_offset 5
 1623               		.cfi_offset 16, -4
 1624 05be 1F93      		push r17
 1625               	.LCFI46:
 1626               		.cfi_def_cfa_offset 6
 1627               		.cfi_offset 17, -5
 1628 05c0 CF93      		push r28
 1629               	.LCFI47:
 1630               		.cfi_def_cfa_offset 7
 1631               		.cfi_offset 28, -6
 1632 05c2 DF93      		push r29
 1633               	.LCFI48:
 1634               		.cfi_def_cfa_offset 8
 1635               		.cfi_offset 29, -7
 1636               	/* prologue: function */
 1637               	/* frame size = 0 */
 1638               	/* stack size = 6 */
 1639               	.L__stack_usage = 6
 1640 05c4 F82E      		mov r15,r24
 1641 05c6 E92E      		mov r14,r25
 1642 05c8 162F      		mov r17,r22
 1643 05ca 072F      		mov r16,r23
 147:main.c        ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 1644               		.loc 1 147 0
 1645 05cc A82F      		mov r26,r24
 1646 05ce B92F      		mov r27,r25
 1647 05d0 ED01      		movw r28,r26
 1648 05d2 0990      		ld __tmp_reg__,Y+
 1649 05d4 0020      		tst __tmp_reg__
 1650 05d6 01F4      		brne .-6
 1651 05d8 9E01      		movw r18,r28
 1652 05da E62F      		mov r30,r22
 1653 05dc F72F      		mov r31,r23
 1654 05de EF01      		movw r28,r30
 1655 05e0 0990      		ld __tmp_reg__,Y+
 1656 05e2 0020      		tst __tmp_reg__
 1657 05e4 01F4      		brne .-6
 1658 05e6 CE01      		movw r24,r28
 1659               	.LVL80:
 1660 05e8 0197      		sbiw r24,1
 1661 05ea 8E1B      		sub r24,r30
 1662 05ec 9F0B      		sbc r25,r31
 1663 05ee 8A1B      		sub r24,r26
 1664 05f0 9B0B      		sbc r25,r27
 1665 05f2 820F      		add r24,r18
 1666 05f4 931F      		adc r25,r19
 1667 05f6 0E94 0000 		call malloc
 1668               	.LVL81:
 1669 05fa D82F      		mov r29,r24
 1670 05fc C92F      		mov r28,r25
 1671               	.LVL82:
 149:main.c        ****     strcpy(result, s1);
 1672               		.loc 1 149 0
 1673 05fe 6F2D      		mov r22,r15
 1674 0600 7E2D      		mov r23,r14
 1675 0602 0E94 0000 		call strcpy
 1676               	.LVL83:
 150:main.c        ****     strcat(result, s2);
 1677               		.loc 1 150 0
 1678 0606 8D2F      		mov r24,r29
 1679 0608 9C2F      		mov r25,r28
 1680 060a 612F      		mov r22,r17
 1681 060c 702F      		mov r23,r16
 1682 060e 0E94 0000 		call strcat
 152:main.c        **** }
 1683               		.loc 1 152 0
 1684 0612 8D2F      		mov r24,r29
 1685 0614 9C2F      		mov r25,r28
 1686               	/* epilogue start */
 1687 0616 DF91      		pop r29
 1688               	.LVL84:
 1689 0618 CF91      		pop r28
 1690               	.LVL85:
 1691 061a 1F91      		pop r17
 1692 061c 0F91      		pop r16
 1693 061e FF90      		pop r15
 1694 0620 EF90      		pop r14
 1695 0622 0895      		ret
 1696               		.cfi_endproc
 1697               	.LFE67:
 1699               		.data
 1700               	.LC0:
 1701 0000 2C00      		.string	","
 1702               		.text
 1703               	.global	parse_nmea_string
 1705               	parse_nmea_string:
 1706               	.LFB68:
 155:main.c        **** {
 1707               		.loc 1 155 0
 1708               		.cfi_startproc
 1709               	.LVL86:
 1710 0624 EF92      		push r14
 1711               	.LCFI49:
 1712               		.cfi_def_cfa_offset 3
 1713               		.cfi_offset 14, -2
 1714 0626 FF92      		push r15
 1715               	.LCFI50:
 1716               		.cfi_def_cfa_offset 4
 1717               		.cfi_offset 15, -3
 1718 0628 0F93      		push r16
 1719               	.LCFI51:
 1720               		.cfi_def_cfa_offset 5
 1721               		.cfi_offset 16, -4
 1722 062a 1F93      		push r17
 1723               	.LCFI52:
 1724               		.cfi_def_cfa_offset 6
 1725               		.cfi_offset 17, -5
 1726 062c CF93      		push r28
 1727               	.LCFI53:
 1728               		.cfi_def_cfa_offset 7
 1729               		.cfi_offset 28, -6
 1730 062e DF93      		push r29
 1731               	.LCFI54:
 1732               		.cfi_def_cfa_offset 8
 1733               		.cfi_offset 29, -7
 1734 0630 CDB7      		in r28,__SP_L__
 1735 0632 DEB7      		in r29,__SP_H__
 1736 0634 A897      		sbiw r28,40
 1737               	.LCFI55:
 1738               		.cfi_def_cfa 28, 48
 1739 0636 CDBF      		out __SP_L__,r28
 1740 0638 DEBF      		out __SP_H__,r29
 1741               	/* prologue: function */
 1742               	/* frame size = 40 */
 1743               	/* stack size = 46 */
 1744               	.L__stack_usage = 46
 1745 063a 7B01      		movw r14,r22
 1746               	.LVL87:
 159:main.c        ****   token[0] = strtok(s, ","); //get pointer to first token found and store in
 1747               		.loc 1 159 0
 1748 063c 60E0      		ldi r22,lo8(.LC0)
 1749 063e 70E0      		ldi r23,hi8(.LC0)
 1750               	.LVL88:
 1751 0640 0E94 0000 		call strtok
 1752               	.LVL89:
 161:main.c        ****   while(token[i] != NULL) {  //while commas continue to be found
 1753               		.loc 1 161 0
 1754 0644 0097      		sbiw r24,0
 1755 0646 01F0      		breq .L68
 1756 0648 8E01      		movw r16,r28
 1757 064a 0D5F      		subi r16,lo8(-(3))
 1758 064c 1F4F      		sbci r17,hi8(-(3))
 1759               	.LVL90:
 1760               	.L69:
 163:main.c        ****       token[i] = strtok(NULL, ","); //continue to split the string
 1761               		.loc 1 163 0
 1762 064e 80E0      		ldi r24,lo8(0)
 1763 0650 90E0      		ldi r25,hi8(0)
 1764 0652 60E0      		ldi r22,lo8(.LC0)
 1765 0654 70E0      		ldi r23,hi8(.LC0)
 1766 0656 0E94 0000 		call strtok
 1767 065a F801      		movw r30,r16
 1768 065c 8193      		st Z+,r24
 1769 065e 9193      		st Z+,r25
 1770 0660 8F01      		movw r16,r30
 161:main.c        ****   while(token[i] != NULL) {  //while commas continue to be found
 1771               		.loc 1 161 0
 1772 0662 0097      		sbiw r24,0
 1773 0664 01F4      		brne .L69
 1774               	.L68:
 1775               	.LVL91:
 181:main.c        ****   char* lng_str = token[5]; //latitude
 1776               		.loc 1 181 0
 1777 0666 0B85      		ldd r16,Y+11
 1778 0668 1C85      		ldd r17,Y+12
 1779               	.LVL92:
 184:main.c        ****   gps->lat = atof(lat_str)/100.;
 1780               		.loc 1 184 0
 1781 066a 8F81      		ldd r24,Y+7
 1782 066c 9885      		ldd r25,Y+8
 1783 066e 0E94 0000 		call atof
 1784               	.LVL93:
 1785 0672 20E0      		ldi r18,lo8(0x42c80000)
 1786 0674 30E0      		ldi r19,hi8(0x42c80000)
 1787 0676 48EC      		ldi r20,hlo8(0x42c80000)
 1788 0678 52E4      		ldi r21,hhi8(0x42c80000)
 1789 067a 0E94 0000 		call __divsf3
 1790 067e DC01      		movw r26,r24
 1791 0680 CB01      		movw r24,r22
 1792 0682 F701      		movw r30,r14
 1793 0684 8083      		st Z,r24
 1794 0686 9183      		std Z+1,r25
 1795 0688 A283      		std Z+2,r26
 1796 068a B383      		std Z+3,r27
 187:main.c        ****   gps->lng = atof(lng_str)/100.;
 1797               		.loc 1 187 0
 1798 068c C801      		movw r24,r16
 1799 068e 0E94 0000 		call atof
 1800 0692 20E0      		ldi r18,lo8(0x42c80000)
 1801 0694 30E0      		ldi r19,hi8(0x42c80000)
 1802 0696 48EC      		ldi r20,hlo8(0x42c80000)
 1803 0698 52E4      		ldi r21,hhi8(0x42c80000)
 1804 069a 0E94 0000 		call __divsf3
 1805 069e DC01      		movw r26,r24
 1806 06a0 CB01      		movw r24,r22
 1807 06a2 F701      		movw r30,r14
 1808 06a4 8483      		std Z+4,r24
 1809 06a6 9583      		std Z+5,r25
 1810 06a8 A683      		std Z+6,r26
 1811 06aa B783      		std Z+7,r27
 1812               	/* epilogue start */
 188:main.c        **** }
 1813               		.loc 1 188 0
 1814 06ac A896      		adiw r28,40
 1815 06ae CDBF      		out __SP_L__,r28
 1816 06b0 DEBF      		out __SP_H__,r29
 1817 06b2 DF91      		pop r29
 1818 06b4 CF91      		pop r28
 1819 06b6 1F91      		pop r17
 1820 06b8 0F91      		pop r16
 1821               	.LVL94:
 1822 06ba FF90      		pop r15
 1823 06bc EF90      		pop r14
 1824               	.LVL95:
 1825 06be 0895      		ret
 1826               		.cfi_endproc
 1827               	.LFE68:
 1829               	.global	distance
 1831               	distance:
 1832               	.LFB69:
 193:main.c        **** double distance(double gpslat, double gpslng) {
 1833               		.loc 1 193 0
 1834               		.cfi_startproc
 1835               	.LVL96:
 1836 06c0 2F92      		push r2
 1837               	.LCFI56:
 1838               		.cfi_def_cfa_offset 3
 1839               		.cfi_offset 2, -2
 1840 06c2 3F92      		push r3
 1841               	.LCFI57:
 1842               		.cfi_def_cfa_offset 4
 1843               		.cfi_offset 3, -3
 1844 06c4 4F92      		push r4
 1845               	.LCFI58:
 1846               		.cfi_def_cfa_offset 5
 1847               		.cfi_offset 4, -4
 1848 06c6 5F92      		push r5
 1849               	.LCFI59:
 1850               		.cfi_def_cfa_offset 6
 1851               		.cfi_offset 5, -5
 1852 06c8 6F92      		push r6
 1853               	.LCFI60:
 1854               		.cfi_def_cfa_offset 7
 1855               		.cfi_offset 6, -6
 1856 06ca 7F92      		push r7
 1857               	.LCFI61:
 1858               		.cfi_def_cfa_offset 8
 1859               		.cfi_offset 7, -7
 1860 06cc 8F92      		push r8
 1861               	.LCFI62:
 1862               		.cfi_def_cfa_offset 9
 1863               		.cfi_offset 8, -8
 1864 06ce 9F92      		push r9
 1865               	.LCFI63:
 1866               		.cfi_def_cfa_offset 10
 1867               		.cfi_offset 9, -9
 1868 06d0 AF92      		push r10
 1869               	.LCFI64:
 1870               		.cfi_def_cfa_offset 11
 1871               		.cfi_offset 10, -10
 1872 06d2 BF92      		push r11
 1873               	.LCFI65:
 1874               		.cfi_def_cfa_offset 12
 1875               		.cfi_offset 11, -11
 1876 06d4 CF92      		push r12
 1877               	.LCFI66:
 1878               		.cfi_def_cfa_offset 13
 1879               		.cfi_offset 12, -12
 1880 06d6 DF92      		push r13
 1881               	.LCFI67:
 1882               		.cfi_def_cfa_offset 14
 1883               		.cfi_offset 13, -13
 1884 06d8 EF92      		push r14
 1885               	.LCFI68:
 1886               		.cfi_def_cfa_offset 15
 1887               		.cfi_offset 14, -14
 1888 06da FF92      		push r15
 1889               	.LCFI69:
 1890               		.cfi_def_cfa_offset 16
 1891               		.cfi_offset 15, -15
 1892 06dc 0F93      		push r16
 1893               	.LCFI70:
 1894               		.cfi_def_cfa_offset 17
 1895               		.cfi_offset 16, -16
 1896 06de 1F93      		push r17
 1897               	.LCFI71:
 1898               		.cfi_def_cfa_offset 18
 1899               		.cfi_offset 17, -17
 1900 06e0 CF93      		push r28
 1901               	.LCFI72:
 1902               		.cfi_def_cfa_offset 19
 1903               		.cfi_offset 28, -18
 1904 06e2 DF93      		push r29
 1905               	.LCFI73:
 1906               		.cfi_def_cfa_offset 20
 1907               		.cfi_offset 29, -19
 1908 06e4 CDB7      		in r28,__SP_L__
 1909 06e6 DEB7      		in r29,__SP_H__
 1910 06e8 2697      		sbiw r28,6
 1911               	.LCFI74:
 1912               		.cfi_def_cfa 28, 26
 1913 06ea CDBF      		out __SP_L__,r28
 1914 06ec DEBF      		out __SP_H__,r29
 1915               	/* prologue: function */
 1916               	/* frame size = 6 */
 1917               	/* stack size = 24 */
 1918               	.L__stack_usage = 24
 1919 06ee 4B01      		movw r8,r22
 1920 06f0 5C01      		movw r10,r24
 1921 06f2 2983      		std Y+1,r18
 1922 06f4 3A83      		std Y+2,r19
 1923 06f6 4B83      		std Y+3,r20
 1924 06f8 5C83      		std Y+4,r21
 1925               	.LVL97:
 195:main.c        ****     double dlat = (gpslat - lat) * d2r;
 1926               		.loc 1 195 0
 1927 06fa C090 0000 		lds r12,lat
 1928 06fe D090 0000 		lds r13,lat+1
 1929 0702 E090 0000 		lds r14,lat+2
 1930 0706 F090 0000 		lds r15,lat+3
 1931               	.LVL98:
 1932 070a A701      		movw r20,r14
 1933 070c 9601      		movw r18,r12
 1934               	.LVL99:
 1935 070e 0E94 0000 		call __subsf3
 1936               	.LVL100:
 1937 0712 25E3      		ldi r18,lo8(0x3c8efa35)
 1938 0714 3AEF      		ldi r19,hi8(0x3c8efa35)
 1939 0716 4EE8      		ldi r20,hlo8(0x3c8efa35)
 1940 0718 5CE3      		ldi r21,hhi8(0x3c8efa35)
 1941 071a 0E94 0000 		call __mulsf3
 196:main.c        ****     double a = pow(sin(dlat/2.0), 2) + cos(lat*d2r) * cos(gpslat*d2r) * pow(sin(dlong/2.0), 2);
 1942               		.loc 1 196 0
 1943 071e 20E0      		ldi r18,lo8(0x3f000000)
 1944 0720 30E0      		ldi r19,hi8(0x3f000000)
 1945 0722 40E0      		ldi r20,hlo8(0x3f000000)
 1946 0724 5FE3      		ldi r21,hhi8(0x3f000000)
 1947 0726 0E94 0000 		call __mulsf3
 1948 072a 0E94 0000 		call sin
 1949 072e 9B01      		movw r18,r22
 1950 0730 AC01      		movw r20,r24
 1951 0732 0E94 0000 		call __mulsf3
 1952 0736 362E      		mov r3,r22
 1953 0738 272E      		mov r2,r23
 1954 073a 8D83      		std Y+5,r24
 1955 073c 9E83      		std Y+6,r25
 1956 073e C701      		movw r24,r14
 1957 0740 B601      		movw r22,r12
 1958 0742 25E3      		ldi r18,lo8(0x3c8efa35)
 1959 0744 3AEF      		ldi r19,hi8(0x3c8efa35)
 1960 0746 4EE8      		ldi r20,hlo8(0x3c8efa35)
 1961 0748 5CE3      		ldi r21,hhi8(0x3c8efa35)
 1962 074a 0E94 0000 		call __mulsf3
 1963 074e 0E94 0000 		call cos
 1964 0752 7B01      		movw r14,r22
 1965 0754 8C01      		movw r16,r24
 1966 0756 C501      		movw r24,r10
 1967 0758 B401      		movw r22,r8
 1968 075a 25E3      		ldi r18,lo8(0x3c8efa35)
 1969 075c 3AEF      		ldi r19,hi8(0x3c8efa35)
 1970 075e 4EE8      		ldi r20,hlo8(0x3c8efa35)
 1971 0760 5CE3      		ldi r21,hhi8(0x3c8efa35)
 1972 0762 0E94 0000 		call __mulsf3
 1973 0766 0E94 0000 		call cos
 1974 076a 2B01      		movw r4,r22
 1975 076c 3C01      		movw r6,r24
 194:main.c        ****     double dlong = (gpslng - lng) * d2r;
 1976               		.loc 1 194 0
 1977 076e 6981      		ldd r22,Y+1
 1978 0770 7A81      		ldd r23,Y+2
 1979 0772 8B81      		ldd r24,Y+3
 1980 0774 9C81      		ldd r25,Y+4
 1981 0776 2091 0000 		lds r18,lng
 1982 077a 3091 0000 		lds r19,lng+1
 1983 077e 4091 0000 		lds r20,lng+2
 1984 0782 5091 0000 		lds r21,lng+3
 1985               	.LVL101:
 1986 0786 0E94 0000 		call __subsf3
 1987               	.LVL102:
 1988 078a 25E3      		ldi r18,lo8(0x3c8efa35)
 1989 078c 3AEF      		ldi r19,hi8(0x3c8efa35)
 1990 078e 4EE8      		ldi r20,hlo8(0x3c8efa35)
 1991 0790 5CE3      		ldi r21,hhi8(0x3c8efa35)
 1992 0792 0E94 0000 		call __mulsf3
 196:main.c        ****     double a = pow(sin(dlat/2.0), 2) + cos(lat*d2r) * cos(gpslat*d2r) * pow(sin(dlong/2.0), 2);
 1993               		.loc 1 196 0
 1994 0796 20E0      		ldi r18,lo8(0x3f000000)
 1995 0798 30E0      		ldi r19,hi8(0x3f000000)
 1996 079a 40E0      		ldi r20,hlo8(0x3f000000)
 1997 079c 5FE3      		ldi r21,hhi8(0x3f000000)
 1998 079e 0E94 0000 		call __mulsf3
 1999 07a2 0E94 0000 		call sin
 2000 07a6 9B01      		movw r18,r22
 2001 07a8 AC01      		movw r20,r24
 2002 07aa 0E94 0000 		call __mulsf3
 2003 07ae B62E      		mov r11,r22
 2004 07b0 D72E      		mov r13,r23
 2005 07b2 882E      		mov r8,r24
 2006               	.LVL103:
 2007 07b4 C92E      		mov r12,r25
 2008 07b6 C801      		movw r24,r16
 2009 07b8 B701      		movw r22,r14
 2010 07ba A301      		movw r20,r6
 2011 07bc 9201      		movw r18,r4
 2012 07be 0E94 0000 		call __mulsf3
 2013 07c2 0B2D      		mov r16,r11
 2014 07c4 1D2D      		mov r17,r13
 2015 07c6 282D      		mov r18,r8
 2016 07c8 3C2D      		mov r19,r12
 2017 07ca A901      		movw r20,r18
 2018 07cc 9801      		movw r18,r16
 2019 07ce 0E94 0000 		call __mulsf3
 2020 07d2 9B01      		movw r18,r22
 2021 07d4 AC01      		movw r20,r24
 2022 07d6 F101      		movw r30,r2
 2023 07d8 7D81      		ldd r23,Y+5
 2024 07da 6E81      		ldd r22,Y+6
 2025 07dc 8F2F      		mov r24,r31
 2026 07de 9E2F      		mov r25,r30
 2027 07e0 A72F      		mov r26,r23
 2028 07e2 B62F      		mov r27,r22
 2029 07e4 BC01      		movw r22,r24
 2030 07e6 CD01      		movw r24,r26
 2031 07e8 0E94 0000 		call __addsf3
 2032 07ec 862E      		mov r8,r22
 2033 07ee 072F      		mov r16,r23
 2034 07f0 382E      		mov r3,r24
 2035 07f2 492E      		mov r4,r25
 2036               	.LVL104:
 197:main.c        ****     double c = 2 * atan2(sqrt(a), sqrt(1-a));
 2037               		.loc 1 197 0
 2038 07f4 982F      		mov r25,r24
 2039               	.LVL105:
 2040 07f6 482D      		mov r20,r8
 2041 07f8 502F      		mov r21,r16
 2042 07fa 692F      		mov r22,r25
 2043               	.LVL106:
 2044 07fc 742D      		mov r23,r4
 2045               	.LVL107:
 2046 07fe CB01      		movw r24,r22
 2047 0800 BA01      		movw r22,r20
 2048 0802 0E94 0000 		call sqrt
 2049               	.LVL108:
 2050 0806 6B01      		movw r12,r22
 2051 0808 7C01      		movw r14,r24
 2052 080a 60E0      		ldi r22,lo8(0x3f800000)
 2053 080c 70E0      		ldi r23,hi8(0x3f800000)
 2054 080e 80E8      		ldi r24,hlo8(0x3f800000)
 2055 0810 9FE3      		ldi r25,hhi8(0x3f800000)
 2056 0812 E02F      		mov r30,r16
 2057 0814 082D      		mov r16,r8
 2058               	.LVL109:
 2059 0816 1E2F      		mov r17,r30
 2060 0818 232D      		mov r18,r3
 2061 081a 342D      		mov r19,r4
 2062 081c A901      		movw r20,r18
 2063 081e 9801      		movw r18,r16
 2064 0820 0E94 0000 		call __subsf3
 2065               	.LVL110:
 2066 0824 0E94 0000 		call sqrt
 2067 0828 9B01      		movw r18,r22
 2068 082a AC01      		movw r20,r24
 2069 082c C701      		movw r24,r14
 2070 082e B601      		movw r22,r12
 2071 0830 0E94 0000 		call atan2
 2072 0834 9B01      		movw r18,r22
 2073 0836 AC01      		movw r20,r24
 2074               	.LVL111:
 2075 0838 0E94 0000 		call __addsf3
 2076               	.LVL112:
 198:main.c        ****     double d = 6367 * c;
 2077               		.loc 1 198 0
 2078 083c 20E0      		ldi r18,lo8(0x45c6f800)
 2079 083e 38EF      		ldi r19,hi8(0x45c6f800)
 2080 0840 46EC      		ldi r20,hlo8(0x45c6f800)
 2081 0842 55E4      		ldi r21,hhi8(0x45c6f800)
 2082 0844 0E94 0000 		call __mulsf3
 201:main.c        **** }
 2083               		.loc 1 201 0
 2084 0848 462F      		mov r20,r22
 2085 084a 572F      		mov r21,r23
 2086 084c 682F      		mov r22,r24
 2087 084e 792F      		mov r23,r25
 2088 0850 CB01      		movw r24,r22
 2089 0852 BA01      		movw r22,r20
 2090               	/* epilogue start */
 2091 0854 2696      		adiw r28,6
 2092 0856 CDBF      		out __SP_L__,r28
 2093 0858 DEBF      		out __SP_H__,r29
 2094 085a DF91      		pop r29
 2095 085c CF91      		pop r28
 2096 085e 1F91      		pop r17
 2097               	.LVL113:
 2098 0860 0F91      		pop r16
 2099 0862 FF90      		pop r15
 2100 0864 EF90      		pop r14
 2101 0866 DF90      		pop r13
 2102 0868 CF90      		pop r12
 2103 086a BF90      		pop r11
 2104 086c AF90      		pop r10
 2105 086e 9F90      		pop r9
 2106 0870 8F90      		pop r8
 2107 0872 7F90      		pop r7
 2108 0874 6F90      		pop r6
 2109 0876 5F90      		pop r5
 2110 0878 4F90      		pop r4
 2111 087a 3F90      		pop r3
 2112 087c 2F90      		pop r2
 2113 087e 0895      		ret
 2114               		.cfi_endproc
 2115               	.LFE69:
 2117               		.data
 2118               	.LC1:
 2119 0002 2447 5052 		.string	"$GPRMC,71.132,A,4230.00,N,-7130.00,E,11.2,0.0,261206,0.0,E*50\r\n"
 2119      4D43 2C37 
 2119      312E 3133 
 2119      322C 412C 
 2119      3432 3330 
 2120               	.LC2:
 2121 0042 2566 00   		.string	"%f"
 2122               		.text
 2123               	.global	parse_nmea
 2125               	parse_nmea:
 2126               	.LFB70:
 205:main.c        **** void parse_nmea(void) {
 2127               		.loc 1 205 0
 2128               		.cfi_startproc
 2129 0880 2F92      		push r2
 2130               	.LCFI75:
 2131               		.cfi_def_cfa_offset 3
 2132               		.cfi_offset 2, -2
 2133 0882 3F92      		push r3
 2134               	.LCFI76:
 2135               		.cfi_def_cfa_offset 4
 2136               		.cfi_offset 3, -3
 2137 0884 4F92      		push r4
 2138               	.LCFI77:
 2139               		.cfi_def_cfa_offset 5
 2140               		.cfi_offset 4, -4
 2141 0886 5F92      		push r5
 2142               	.LCFI78:
 2143               		.cfi_def_cfa_offset 6
 2144               		.cfi_offset 5, -5
 2145 0888 6F92      		push r6
 2146               	.LCFI79:
 2147               		.cfi_def_cfa_offset 7
 2148               		.cfi_offset 6, -6
 2149 088a 7F92      		push r7
 2150               	.LCFI80:
 2151               		.cfi_def_cfa_offset 8
 2152               		.cfi_offset 7, -7
 2153 088c 8F92      		push r8
 2154               	.LCFI81:
 2155               		.cfi_def_cfa_offset 9
 2156               		.cfi_offset 8, -8
 2157 088e 9F92      		push r9
 2158               	.LCFI82:
 2159               		.cfi_def_cfa_offset 10
 2160               		.cfi_offset 9, -9
 2161 0890 AF92      		push r10
 2162               	.LCFI83:
 2163               		.cfi_def_cfa_offset 11
 2164               		.cfi_offset 10, -10
 2165 0892 BF92      		push r11
 2166               	.LCFI84:
 2167               		.cfi_def_cfa_offset 12
 2168               		.cfi_offset 11, -11
 2169 0894 CF92      		push r12
 2170               	.LCFI85:
 2171               		.cfi_def_cfa_offset 13
 2172               		.cfi_offset 12, -12
 2173 0896 DF92      		push r13
 2174               	.LCFI86:
 2175               		.cfi_def_cfa_offset 14
 2176               		.cfi_offset 13, -13
 2177 0898 EF92      		push r14
 2178               	.LCFI87:
 2179               		.cfi_def_cfa_offset 15
 2180               		.cfi_offset 14, -14
 2181 089a FF92      		push r15
 2182               	.LCFI88:
 2183               		.cfi_def_cfa_offset 16
 2184               		.cfi_offset 15, -15
 2185 089c 0F93      		push r16
 2186               	.LCFI89:
 2187               		.cfi_def_cfa_offset 17
 2188               		.cfi_offset 16, -16
 2189 089e 1F93      		push r17
 2190               	.LCFI90:
 2191               		.cfi_def_cfa_offset 18
 2192               		.cfi_offset 17, -17
 2193 08a0 CF93      		push r28
 2194               	.LCFI91:
 2195               		.cfi_def_cfa_offset 19
 2196               		.cfi_offset 28, -18
 2197 08a2 DF93      		push r29
 2198               	.LCFI92:
 2199               		.cfi_def_cfa_offset 20
 2200               		.cfi_offset 29, -19
 2201 08a4 CDB7      		in r28,__SP_L__
 2202 08a6 DEB7      		in r29,__SP_H__
 2203 08a8 C253      		subi r28,lo8(-(-306))
 2204 08aa D140      		sbci r29,hi8(-(-306))
 2205               	.LCFI93:
 2206               		.cfi_def_cfa 28, 326
 2207 08ac CDBF      		out __SP_L__,r28
 2208 08ae DEBF      		out __SP_H__,r29
 2209               	/* prologue: function */
 2210               	/* frame size = 306 */
 2211               	/* stack size = 324 */
 2212               	.L__stack_usage = 324
 2213               	.LVL114:
 2214               	.LBB1197:
 2215               	.LBB1198:
 159:main.c        ****   token[0] = strtok(s, ","); //get pointer to first token found and store in
 2216               		.loc 1 159 0
 2217 08b0 80E0      		ldi r24,lo8(.LC1)
 2218 08b2 90E0      		ldi r25,hi8(.LC1)
 2219 08b4 60E0      		ldi r22,lo8(.LC0)
 2220 08b6 70E0      		ldi r23,hi8(.LC0)
 2221 08b8 0E94 0000 		call strtok
 161:main.c        ****   while(token[i] != NULL) {  //while commas continue to be found
 2222               		.loc 1 161 0
 2223 08bc 0097      		sbiw r24,0
 2224 08be 01F0      		breq .L73
 2225 08c0 8E01      		movw r16,r28
 2226 08c2 0D5F      		subi r16,lo8(-(3))
 2227 08c4 1F4F      		sbci r17,hi8(-(3))
 2228               	.LVL115:
 2229               	.L74:
 163:main.c        ****       token[i] = strtok(NULL, ","); //continue to split the string
 2230               		.loc 1 163 0
 2231 08c6 80E0      		ldi r24,lo8(0)
 2232 08c8 90E0      		ldi r25,hi8(0)
 2233 08ca 60E0      		ldi r22,lo8(.LC0)
 2234 08cc 70E0      		ldi r23,hi8(.LC0)
 2235 08ce 0E94 0000 		call strtok
 2236 08d2 D801      		movw r26,r16
 2237 08d4 8D93      		st X+,r24
 2238 08d6 9D93      		st X+,r25
 2239 08d8 8D01      		movw r16,r26
 161:main.c        ****   while(token[i] != NULL) {  //while commas continue to be found
 2240               		.loc 1 161 0
 2241 08da 0097      		sbiw r24,0
 2242 08dc 01F4      		brne .L74
 2243               	.L73:
 2244               	.LVL116:
 181:main.c        ****   char* lng_str = token[5]; //latitude
 2245               		.loc 1 181 0
 2246 08de 0B85      		ldd r16,Y+11
 2247 08e0 1C85      		ldd r17,Y+12
 2248               	.LVL117:
 184:main.c        ****   gps->lat = atof(lat_str)/100.;
 2249               		.loc 1 184 0
 2250 08e2 8F81      		ldd r24,Y+7
 2251 08e4 9885      		ldd r25,Y+8
 2252 08e6 0E94 0000 		call atof
 2253               	.LVL118:
 2254 08ea 20E0      		ldi r18,lo8(0x42c80000)
 2255 08ec 30E0      		ldi r19,hi8(0x42c80000)
 2256 08ee 48EC      		ldi r20,hlo8(0x42c80000)
 2257 08f0 52E4      		ldi r21,hhi8(0x42c80000)
 2258 08f2 0E94 0000 		call __divsf3
 2259 08f6 862E      		mov r8,r22
 2260 08f8 672E      		mov r6,r23
 2261 08fa 482E      		mov r4,r24
 2262 08fc 292E      		mov r2,r25
 187:main.c        ****   gps->lng = atof(lng_str)/100.;
 2263               		.loc 1 187 0
 2264 08fe C801      		movw r24,r16
 2265 0900 0E94 0000 		call atof
 2266 0904 20E0      		ldi r18,lo8(0x42c80000)
 2267 0906 30E0      		ldi r19,hi8(0x42c80000)
 2268 0908 48EC      		ldi r20,hlo8(0x42c80000)
 2269 090a 52E4      		ldi r21,hhi8(0x42c80000)
 2270 090c 0E94 0000 		call __divsf3
 2271 0910 962E      		mov r9,r22
 2272 0912 772E      		mov r7,r23
 2273 0914 582E      		mov r5,r24
 2274 0916 392E      		mov r3,r25
 2275               	.LBE1198:
 2276               	.LBE1197:
 216:main.c        ****     double dist = distance(gps.lat, gps.lng);
 2277               		.loc 1 216 0
 2278 0918 882D      		mov r24,r8
 2279 091a 962D      		mov r25,r6
 2280 091c A42D      		mov r26,r4
 2281 091e B22D      		mov r27,r2
 2282 0920 BC01      		movw r22,r24
 2283 0922 CD01      		movw r24,r26
 2284 0924 092D      		mov r16,r9
 2285               	.LVL119:
 2286 0926 172D      		mov r17,r7
 2287 0928 252D      		mov r18,r5
 2288 092a 332D      		mov r19,r3
 2289 092c A901      		movw r20,r18
 2290 092e 9801      		movw r18,r16
 2291 0930 0E94 0000 		call distance
 2292 0934 6B01      		movw r12,r22
 2293 0936 7C01      		movw r14,r24
 2294               	.LVL120:
 218:main.c        ****     if (dist > max_dist) {
 2295               		.loc 1 218 0
 2296 0938 2091 0000 		lds r18,max_dist
 2297 093c 3091 0000 		lds r19,max_dist+1
 2298 0940 4091 0000 		lds r20,max_dist+2
 2299 0944 5091 0000 		lds r21,max_dist+3
 2300 0948 0E94 0000 		call __gtsf2
 2301               	.LVL121:
 2302 094c 1816      		cp __zero_reg__,r24
 2303 094e 04F4      		brge .+2
 2304 0950 00C0      		rjmp .L189
 2305               	.LVL122:
 2306               	.L75:
 2307               	.LBB1199:
 2308               	.LBB1200:
 2309               	.LBB1201:
 2310               	.LBB1202:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 2311               		.loc 3 110 0
 2312 0952 81E0      		ldi r24,lo8(1)
 2313 0954 8093 0000 		sts ep_in_data+1,r24
 2314               	.LVL123:
 2315               	.LBB1203:
 2316               	.LBB1204:
 2317               	.LBB1205:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 2318               		.loc 3 80 0
 2319 0958 2FB7      		in r18,__SREG__
 2320               	.LVL124:
 2321               	.LBB1206:
 2322               	.LBB1207:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 2323               		.loc 4 50 0
 2324               	/* #APP */
 2325               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 2326 095a F894      		cli
 2327               	 ;  0 "" 2
 2328               	.LVL125:
 2329               	/* #NOAPP */
 2330               	.LBE1207:
 2331               	.LBE1206:
 2332               	.LBB1208:
 2333               	.LBB1209:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 2334               		.loc 6 220 0
 2335 095c 8091 0000 		lds r24,endpoints+24
 2336 0960 8670      		andi r24,lo8(6)
 2337               	.LBE1209:
 2338               	.LBE1208:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 2339               		.loc 3 82 0
 2340 0962 01F0      		breq .L152
 2341               	.LBB1210:
 2342               	.LBB1211:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 2343               		.loc 5 51 0
 2344 0964 3091 0000 		lds r19,ep_in_pipe_data+4
 2345               	.LBE1211:
 2346               	.LBE1210:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 2347               		.loc 3 83 0
 2348 0968 1316      		cp __zero_reg__,r19
 2349 096a 04F0      		brlt .+2
 2350 096c 00C0      		rjmp .L153
 2351               	.LBB1212:
 2352               	.LBB1213:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 2353               		.loc 5 62 0
 2354 096e 8091 0000 		lds r24,ep_in_pipe_data
 2355 0972 9091 0000 		lds r25,ep_in_pipe_data+1
 2356               	.LVL126:
 2357               	.LBE1213:
 2358               	.LBE1212:
 2359               	.LBB1214:
 2360               	.LBB1215:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 2361               		.loc 3 68 0
 2362 0976 4091 0000 		lds r20,ep_in_data
 2363               	.LVL127:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 2364               		.loc 3 69 0
 2365 097a 51E0      		ldi r21,lo8(1)
 2366 097c 4130      		cpi r20,lo8(1)
 2367 097e 01F4      		brne .L154
 2368 0980 50E0      		ldi r21,lo8(0)
 2369               	.L154:
 2370 0982 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 2371               		.loc 3 72 0
 2372 0986 4423      		tst r20
 2373 0988 01F0      		breq .+2
 2374 098a 00C0      		rjmp .L155
 2375               	.LVL128:
 2376               	.LBB1216:
 2377               	.LBB1217:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 2378               		.loc 6 168 0
 2379 098c 8093 0000 		sts endpoints+28,r24
 2380 0990 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 2381               		.loc 6 169 0
 2382 0994 40E4      		ldi r20,lo8(64)
 2383 0996 50E0      		ldi r21,hi8(64)
 2384 0998 4093 0000 		sts endpoints+26,r20
 2385 099c 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 2386               		.loc 6 174 0
 2387 09a0 E0E0      		ldi r30,lo8(endpoints+24)
 2388 09a2 F0E0      		ldi r31,hi8(endpoints+24)
 2389               	/* #APP */
 2390               	 ;  174 "usb/usb.h" 1
 2391 09a4 02E2      		ldi r16, 34
 2392 09a6 0693      		.dc.w 0x9306
 2393               		
 2394               	 ;  0 "" 2
 2395               	.LVL129:
 2396               	/* #NOAPP */
 2397               	.L156:
 2398               	.LBE1217:
 2399               	.LBE1216:
 2400               	.LBE1215:
 2401               	.LBE1214:
 2402               	.LBB1221:
 2403               	.LBB1222:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 2404               		.loc 5 72 0
 2405 09a8 3150      		subi r19,lo8(-(-1))
 2406 09aa 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 2407               		.loc 5 73 0
 2408 09ae 805C      		subi r24,lo8(-(64))
 2409 09b0 9F4F      		sbci r25,hi8(-(64))
 2410 09b2 8093 0000 		sts ep_in_pipe_data,r24
 2411 09b6 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 2412               		.loc 5 75 0
 2413 09ba F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 2414 09bc 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 2415 09be 9F07      		cpc r25,r31
 2416 09c0 01F4      		brne .+2
 2417 09c2 00C0      		rjmp .L190
 2418               	.LVL130:
 2419               	.L152:
 2420               	.LBE1222:
 2421               	.LBE1221:
 2422               	.LBB1224:
 2423               	.LBB1225:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 2424               		.loc 4 70 0
 2425 09c4 2FBF      		out __SREG__,r18
 2426               		.loc 4 71 0
 2427               	.LBE1225:
 2428               	.LBE1224:
 2429               	.LBE1205:
 2430               	.LBE1204:
 2431               	.LBE1203:
 2432               	.LBE1202:
 2433               	.LBE1201:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 2434               		.loc 2 27 0
 2435 09c6 82E0      		ldi r24,lo8(2)
 2436 09c8 E0EC      		ldi r30,lo8(1216)
 2437 09ca F4E0      		ldi r31,hi8(1216)
 2438 09cc 8587      		std Z+13,r24
 2439               	.LBB1255:
 2440               	.LBB1256:
 2441               	.LBB1257:
 2442               	.LBB1258:
 2443               	.LBB1259:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 2444               		.loc 5 57 0
 2445 09ce 96E0      		ldi r25,lo8(6)
 2446               	.LVL131:
 2447               	.L161:
 2448               	.LBE1259:
 2449               	.LBE1258:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 2450               		.loc 3 123 0
 2451 09d0 2FB7      		in r18,__SREG__
 2452               	.LVL132:
 2453               	.LBB1261:
 2454               	.LBB1262:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 2455               		.loc 4 50 0
 2456               	/* #APP */
 2457               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 2458 09d2 F894      		cli
 2459               	 ;  0 "" 2
 2460               	.LVL133:
 2461               	/* #NOAPP */
 2462               	.LBE1262:
 2463               	.LBE1261:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 2464               		.loc 3 124 0
 2465 09d4 8091 0000 		lds r24,ep_in_data+1
 2466 09d8 8823      		tst r24
 2467 09da 01F4      		brne .+2
 2468 09dc 00C0      		rjmp .L191
 2469               	.L171:
 125:usb/usb_pipe.h **** 			r = false;
 2470               		.loc 3 125 0
 2471 09de 80E0      		ldi r24,lo8(0)
 2472               	.L163:
 2473               	.LBB1263:
 2474               	.LBB1264:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 2475               		.loc 4 70 0
 2476 09e0 2FBF      		out __SREG__,r18
 2477               		.loc 4 71 0
 2478               	.LBE1264:
 2479               	.LBE1263:
 2480               	.LBE1257:
 2481               	.LBE1256:
 2482               	.LBE1255:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 2483               		.loc 2 28 0
 2484 09e2 8823      		tst r24
 2485 09e4 01F4      		brne .L72
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 2486               		.loc 2 29 0
 2487 09e6 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 2488 09ea 8823      		tst r24
 2489 09ec 01F0      		breq .L161
 2490               	.LVL134:
 2491               	.LBB1268:
 2492               	.LBB1269:
 2493               	.LBB1270:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 2494               		.loc 3 54 0
 2495 09ee 2FB7      		in r18,__SREG__
 2496               	.LVL135:
 2497               	.LBB1271:
 2498               	.LBB1272:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 2499               		.loc 4 50 0
 2500               	/* #APP */
 2501               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 2502 09f0 F894      		cli
 2503               	 ;  0 "" 2
 2504               	.LVL136:
 2505               	/* #NOAPP */
 2506               	.LBE1272:
 2507               	.LBE1271:
 2508               	.LBB1273:
 2509               	.LBB1274:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 2510               		.loc 5 90 0
 2511 09f2 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 2512               		.loc 5 91 0
 2513 09f6 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 2514 09f8 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 2515 09fa 8093 0000 		sts ep_in_pipe_data+2,r24
 2516 09fe 9093 0000 		sts ep_in_pipe_data+2+1,r25
 2517 0a02 8093 0000 		sts ep_in_pipe_data,r24
 2518 0a06 9093 0000 		sts ep_in_pipe_data+1,r25
 2519               	.LVL137:
 2520               	.LBE1274:
 2521               	.LBE1273:
 2522               	.LBB1275:
 2523               	.LBB1276:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 2524               		.loc 6 158 0
 2525 0a0a E0E0      		ldi r30,lo8(endpoints+24)
 2526 0a0c F0E0      		ldi r31,hi8(endpoints+24)
 2527               	/* #APP */
 2528               	 ;  158 "usb/usb.h" 1
 2529 0a0e 06E0      		ldi r16, 6
 2530 0a10 0593      		.dc.w 0x9305
 2531               		
 2532               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 2533               		.loc 6 159 0
 2534               	 ;  159 "usb/usb.h" 1
 2535 0a12 08E0      		ldi r16, 8
 2536 0a14 0693      		.dc.w 0x9306
 2537               		
 2538               	 ;  0 "" 2
 2539               	/* #NOAPP */
 2540               	.LBE1276:
 2541               	.LBE1275:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 2542               		.loc 3 57 0
 2543 0a16 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 2544               		.loc 3 58 0
 2545 0a1a 1092 0000 		sts ep_in_data+2,__zero_reg__
 2546 0a1e 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 2547               		.loc 3 59 0
 2548 0a22 1092 0000 		sts ep_in_data,__zero_reg__
 2549               	.LVL138:
 2550               	.LBB1277:
 2551               	.LBB1278:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 2552               		.loc 4 70 0
 2553 0a26 2FBF      		out __SREG__,r18
 2554               		.loc 4 71 0
 2555               	.LVL139:
 2556               	.L72:
 2557               	/* epilogue start */
 2558               	.LBE1278:
 2559               	.LBE1277:
 2560               	.LBE1270:
 2561               	.LBE1269:
 2562               	.LBE1268:
 2563               	.LBE1200:
 2564               	.LBE1199:
 254:main.c        **** }
 2565               		.loc 1 254 0
 2566 0a28 CE5C      		subi r28,lo8(-(306))
 2567 0a2a DE4F      		sbci r29,hi8(-(306))
 2568 0a2c CDBF      		out __SP_L__,r28
 2569 0a2e DEBF      		out __SP_H__,r29
 2570 0a30 DF91      		pop r29
 2571 0a32 CF91      		pop r28
 2572 0a34 1F91      		pop r17
 2573 0a36 0F91      		pop r16
 2574 0a38 FF90      		pop r15
 2575 0a3a EF90      		pop r14
 2576 0a3c DF90      		pop r13
 2577 0a3e CF90      		pop r12
 2578 0a40 BF90      		pop r11
 2579 0a42 AF90      		pop r10
 2580 0a44 9F90      		pop r9
 2581 0a46 8F90      		pop r8
 2582 0a48 7F90      		pop r7
 2583 0a4a 6F90      		pop r6
 2584 0a4c 5F90      		pop r5
 2585 0a4e 4F90      		pop r4
 2586 0a50 3F90      		pop r3
 2587 0a52 2F90      		pop r2
 2588 0a54 0895      		ret
 2589               	.LVL140:
 2590               	.L191:
 2591               	.LBB1286:
 2592               	.LBB1283:
 2593               	.LBB1279:
 2594               	.LBB1267:
 2595               	.LBB1266:
 2596               	.LBB1265:
 2597               	.LBB1260:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 2598               		.loc 5 57 0
 2599 0a56 8091 0000 		lds r24,ep_in_pipe_data+4
 2600 0a5a 392F      		mov r19,r25
 2601 0a5c 381B      		sub r19,r24
 2602               	.LBE1260:
 2603               	.LBE1265:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 2604               		.loc 3 127 0
 2605 0a5e 81E0      		ldi r24,lo8(1)
 2606 0a60 1316      		cp __zero_reg__,r19
 2607 0a62 04F4      		brge .+2
 2608 0a64 00C0      		rjmp .L163
 2609 0a66 00C0      		rjmp .L171
 2610               	.LVL141:
 2611               	.L155:
 2612               	.LBE1266:
 2613               	.LBE1267:
 2614               	.LBE1279:
 2615               	.LBB1280:
 2616               	.LBB1252:
 2617               	.LBB1249:
 2618               	.LBB1246:
 2619               	.LBB1243:
 2620               	.LBB1226:
 2621               	.LBB1220:
 2622               	.LBB1218:
 2623               	.LBB1219:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 2624               		.loc 6 168 0
 2625 0a68 8093 0000 		sts endpoints+20,r24
 2626 0a6c 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 2627               		.loc 6 169 0
 2628 0a70 40E4      		ldi r20,lo8(64)
 2629 0a72 50E0      		ldi r21,hi8(64)
 2630               	.LVL142:
 2631 0a74 4093 0000 		sts endpoints+18,r20
 2632 0a78 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 2633               		.loc 6 176 0
 2634 0a7c E0E0      		ldi r30,lo8(endpoints+24)
 2635 0a7e F0E0      		ldi r31,hi8(endpoints+24)
 2636               	/* #APP */
 2637               	 ;  176 "usb/usb.h" 1
 2638 0a80 04E1      		ldi r16, 20
 2639 0a82 0693      		.dc.w 0x9306
 2640               		
 2641               	 ;  0 "" 2
 2642               	/* #NOAPP */
 2643 0a84 00C0      		rjmp .L156
 2644               	.LVL143:
 2645               	.L190:
 2646               	.LBE1219:
 2647               	.LBE1218:
 2648               	.LBE1220:
 2649               	.LBE1226:
 2650               	.LBB1227:
 2651               	.LBB1223:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 2652               		.loc 5 76 0
 2653 0a86 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 2654 0a88 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 2655 0a8a 8093 0000 		sts ep_in_pipe_data,r24
 2656 0a8e 9093 0000 		sts ep_in_pipe_data+1,r25
 2657 0a92 00C0      		rjmp .L152
 2658               	.LVL144:
 2659               	.L153:
 2660               	.LBE1223:
 2661               	.LBE1227:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 2662               		.loc 3 87 0
 2663 0a94 8091 0000 		lds r24,ep_in_data+1
 2664 0a98 8130      		cpi r24,lo8(1)
 2665 0a9a 01F4      		brne .+2
 2666 0a9c 00C0      		rjmp .L192
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 2667               		.loc 3 91 0
 2668 0a9e 8230      		cpi r24,lo8(2)
 2669 0aa0 01F0      		breq .+2
 2670 0aa2 00C0      		rjmp .L152
 2671               	.LVL145:
 2672               	.LBB1228:
 2673               	.LBB1229:
 2674               	.LBB1230:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 2675               		.loc 6 228 0
 2676 0aa4 8091 0000 		lds r24,endpoints+24
 2677 0aa8 8670      		andi r24,lo8(6)
 2678               	.LBE1230:
 2679               	.LBE1229:
 2680               	.LBE1228:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 2681               		.loc 3 91 0
 2682 0aaa 8630      		cpi r24,lo8(6)
 2683 0aac 01F0      		breq .+2
 2684 0aae 00C0      		rjmp .L152
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 2685               		.loc 3 92 0
 2686 0ab0 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 2687               		.loc 3 93 0
 2688 0ab4 1092 0000 		sts ep_in_data+2,__zero_reg__
 2689 0ab8 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 2690               	.LBB1231:
 2691               	.LBB1232:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 2692               		.loc 5 90 0
 2693 0abc 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 2694               		.loc 5 91 0
 2695 0ac0 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 2696 0ac2 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 2697 0ac4 8093 0000 		sts ep_in_pipe_data+2,r24
 2698 0ac8 9093 0000 		sts ep_in_pipe_data+2+1,r25
 2699 0acc 8093 0000 		sts ep_in_pipe_data,r24
 2700 0ad0 9093 0000 		sts ep_in_pipe_data+1,r25
 2701               	.LVL146:
 2702 0ad4 00C0      		rjmp .L152
 2703               	.LVL147:
 2704               	.L189:
 2705               	.LBE1232:
 2706               	.LBE1231:
 2707               	.LBE1243:
 2708               	.LBE1246:
 2709               	.LBE1249:
 2710               	.LBE1252:
 2711               	.LBE1280:
 2712               	.LBE1283:
 2713               	.LBE1286:
 2714               	.LBB1287:
 224:main.c        ****       sprintf(lat_buff, "%f", gps.lat);
 2715               		.loc 1 224 0
 2716 0ad6 EDB7      		in r30,__SP_L__
 2717 0ad8 FEB7      		in r31,__SP_H__
 2718 0ada 3897      		sbiw r30,8
 2719 0adc EDBF      		out __SP_L__,r30
 2720 0ade FEBF      		out __SP_H__,r31
 2721 0ae0 3196      		adiw r30,1
 2722 0ae2 8E01      		movw r16,r28
 2723 0ae4 0753      		subi r16,lo8(-(201))
 2724 0ae6 1F4F      		sbci r17,hi8(-(201))
 2725 0ae8 ADB7      		in r26,__SP_L__
 2726 0aea BEB7      		in r27,__SP_H__
 2727 0aec 1196      		adiw r26,1
 2728 0aee 0D93      		st X+,r16
 2729 0af0 1C93      		st X,r17
 2730 0af2 1297      		sbiw r26,1+1
 2731 0af4 40E0      		ldi r20,lo8(.LC2)
 2732 0af6 A42E      		mov r10,r20
 2733 0af8 40E0      		ldi r20,hi8(.LC2)
 2734 0afa B42E      		mov r11,r20
 2735 0afc A282      		std Z+2,r10
 2736 0afe B382      		std Z+3,r11
 2737 0b00 282D      		mov r18,r8
 2738 0b02 362D      		mov r19,r6
 2739 0b04 442D      		mov r20,r4
 2740 0b06 522D      		mov r21,r2
 2741 0b08 C901      		movw r24,r18
 2742 0b0a DA01      		movw r26,r20
 2743 0b0c 8483      		std Z+4,r24
 2744 0b0e 9583      		std Z+5,r25
 2745 0b10 A683      		std Z+6,r26
 2746 0b12 B783      		std Z+7,r27
 2747               		.cfi_escape 0x2e,0x8
 2748 0b14 0E94 0000 		call sprintf
 225:main.c        ****       sprintf(lng_buff, "%f", gps.lng);
 2749               		.loc 1 225 0
 2750 0b18 EDB7      		in r30,__SP_L__
 2751 0b1a FEB7      		in r31,__SP_H__
 2752 0b1c 3196      		adiw r30,1
 2753 0b1e 9E01      		movw r18,r28
 2754 0b20 2B59      		subi r18,lo8(-(101))
 2755 0b22 3F4F      		sbci r19,hi8(-(101))
 2756 0b24 C15D      		subi r28,lo8(-303)
 2757 0b26 DE4F      		sbci r29,hi8(-303)
 2758 0b28 2883      		st Y,r18
 2759 0b2a 3983      		std Y+1,r19
 2760 0b2c CF52      		subi r28,lo8(303)
 2761 0b2e D140      		sbci r29,hi8(303)
 2762 0b30 ADB7      		in r26,__SP_L__
 2763 0b32 BEB7      		in r27,__SP_H__
 2764 0b34 1196      		adiw r26,1
 2765 0b36 2D93      		st X+,r18
 2766 0b38 3C93      		st X,r19
 2767 0b3a 1297      		sbiw r26,1+1
 2768 0b3c A282      		std Z+2,r10
 2769 0b3e B382      		std Z+3,r11
 2770 0b40 292D      		mov r18,r9
 2771 0b42 372D      		mov r19,r7
 2772 0b44 452D      		mov r20,r5
 2773 0b46 532D      		mov r21,r3
 2774 0b48 C901      		movw r24,r18
 2775 0b4a DA01      		movw r26,r20
 2776 0b4c 8483      		std Z+4,r24
 2777 0b4e 9583      		std Z+5,r25
 2778 0b50 A683      		std Z+6,r26
 2779 0b52 B783      		std Z+7,r27
 2780 0b54 0E94 0000 		call sprintf
 226:main.c        ****       sprintf(dist_buff, "%f", dist);
 2781               		.loc 1 226 0
 2782 0b58 EDB7      		in r30,__SP_L__
 2783 0b5a FEB7      		in r31,__SP_H__
 2784 0b5c 3196      		adiw r30,1
 2785 0b5e 9E01      		movw r18,r28
 2786 0b60 2F5F      		subi r18,lo8(-(1))
 2787 0b62 3F4F      		sbci r19,hi8(-(1))
 2788 0b64 C35D      		subi r28,lo8(-301)
 2789 0b66 DE4F      		sbci r29,hi8(-301)
 2790 0b68 2883      		st Y,r18
 2791 0b6a 3983      		std Y+1,r19
 2792 0b6c CD52      		subi r28,lo8(301)
 2793 0b6e D140      		sbci r29,hi8(301)
 2794 0b70 ADB7      		in r26,__SP_L__
 2795 0b72 BEB7      		in r27,__SP_H__
 2796 0b74 1196      		adiw r26,1
 2797 0b76 2D93      		st X+,r18
 2798 0b78 3C93      		st X,r19
 2799 0b7a 1297      		sbiw r26,1+1
 2800 0b7c A282      		std Z+2,r10
 2801 0b7e B382      		std Z+3,r11
 2802 0b80 C482      		std Z+4,r12
 2803 0b82 D582      		std Z+5,r13
 2804 0b84 E682      		std Z+6,r14
 2805 0b86 F782      		std Z+7,r15
 2806 0b88 0E94 0000 		call sprintf
 229:main.c        ****       int len_lat = strlen(lat_buff);
 2807               		.loc 1 229 0
 2808 0b8c F801      		movw r30,r16
 2809 0b8e 0190      		ld __tmp_reg__,Z+
 2810 0b90 0020      		tst __tmp_reg__
 2811 0b92 01F4      		brne .-6
 2812 0b94 3197      		sbiw r30,1
 2813 0b96 E01B      		sub r30,r16
 2814 0b98 F10B      		sbc r31,r17
 2815               	.LVL148:
 230:main.c        ****       int len_lng = strlen(lng_buff);
 2816               		.loc 1 230 0
 2817 0b9a C15D      		subi r28,lo8(-303)
 2818 0b9c DE4F      		sbci r29,hi8(-303)
 2819 0b9e A881      		ld r26,Y
 2820 0ba0 B981      		ldd r27,Y+1
 2821 0ba2 CF52      		subi r28,lo8(303)
 2822 0ba4 D140      		sbci r29,hi8(303)
 2823 0ba6 0D90      		ld __tmp_reg__,X+
 2824 0ba8 0020      		tst __tmp_reg__
 2825 0baa 01F4      		brne .-6
 2826 0bac 2D01      		movw r4,r26
 2827 0bae 0894      		sec
 2828 0bb0 4108      		sbc r4,__zero_reg__
 2829 0bb2 5108      		sbc r5,__zero_reg__
 2830 0bb4 C15D      		subi r28,lo8(-303)
 2831 0bb6 DE4F      		sbci r29,hi8(-303)
 2832 0bb8 2881      		ld r18,Y
 2833 0bba 3981      		ldd r19,Y+1
 2834 0bbc CF52      		subi r28,lo8(303)
 2835 0bbe D140      		sbci r29,hi8(303)
 2836 0bc0 421A      		sub r4,r18
 2837 0bc2 530A      		sbc r5,r19
 2838               	.LVL149:
 231:main.c        ****       int len_dist = strlen(dist_buff);
 2839               		.loc 1 231 0
 2840 0bc4 C35D      		subi r28,lo8(-301)
 2841 0bc6 DE4F      		sbci r29,hi8(-301)
 2842 0bc8 A881      		ld r26,Y
 2843 0bca B981      		ldd r27,Y+1
 2844 0bcc CD52      		subi r28,lo8(301)
 2845 0bce D140      		sbci r29,hi8(301)
 2846 0bd0 0D90      		ld __tmp_reg__,X+
 2847 0bd2 0020      		tst __tmp_reg__
 2848 0bd4 01F4      		brne .-6
 2849 0bd6 1D01      		movw r2,r26
 2850 0bd8 0894      		sec
 2851 0bda 2108      		sbc r2,__zero_reg__
 2852 0bdc 3108      		sbc r3,__zero_reg__
 2853 0bde C35D      		subi r28,lo8(-301)
 2854 0be0 DE4F      		sbci r29,hi8(-301)
 2855 0be2 2881      		ld r18,Y
 2856 0be4 3981      		ldd r19,Y+1
 2857 0be6 CD52      		subi r28,lo8(301)
 2858 0be8 D140      		sbci r29,hi8(301)
 2859 0bea 221A      		sub r2,r18
 2860 0bec 330A      		sbc r3,r19
 2861               	.LVL150:
 2862               	.LBB1288:
 234:main.c        ****       for (int i=0; i<len_lat; i++) {
 2863               		.loc 1 234 0
 2864 0bee 8DB7      		in r24,__SP_L__
 2865 0bf0 9EB7      		in r25,__SP_H__
 2866 0bf2 0896      		adiw r24,8
 2867 0bf4 8DBF      		out __SP_L__,r24
 2868 0bf6 9EBF      		out __SP_H__,r25
 2869 0bf8 1E16      		cp __zero_reg__,r30
 2870 0bfa 1F06      		cpc __zero_reg__,r31
 2871 0bfc 04F0      		brlt .+2
 2872 0bfe 00C0      		rjmp .L95
 2873 0c00 4801      		movw r8,r16
 205:main.c        **** void parse_nmea(void) {
 2874               		.loc 1 205 0
 2875 0c02 D801      		movw r26,r16
 2876 0c04 AE0F      		add r26,r30
 2877 0c06 BF1F      		adc r27,r31
 2878 0c08 CF5C      		subi r28,lo8(-305)
 2879 0c0a DE4F      		sbci r29,hi8(-305)
 2880 0c0c A883      		st Y,r26
 2881 0c0e B983      		std Y+1,r27
 2882 0c10 C153      		subi r28,lo8(305)
 2883 0c12 D140      		sbci r29,hi8(305)
 2884               	.LBB1289:
 2885               	.LBB1290:
 2886               	.LBB1291:
 2887               	.LBB1292:
 2888               	.LBB1293:
 2889               	.LBB1294:
 2890               	.LBB1295:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 2891               		.loc 5 57 0
 2892 0c14 56E0      		ldi r21,lo8(6)
 2893               	.LBE1295:
 2894               	.LBE1294:
 2895               	.LBE1293:
 2896               	.LBE1292:
 2897               	.LBE1291:
 2898               	.LBB1306:
 2899               	.LBB1307:
 2900               	.LBB1308:
 2901               	.LBB1309:
 2902               	.LBB1310:
 2903               	.LBB1311:
 2904               	.LBB1312:
 2905               	.LBB1313:
 2906               	.LBB1314:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 2907               		.loc 6 220 0
 2908 0c16 80E0      		ldi r24,lo8(endpoints+24)
 2909 0c18 E82E      		mov r14,r24
 2910 0c1a 80E0      		ldi r24,hi8(endpoints+24)
 2911 0c1c F82E      		mov r15,r24
 2912               	.LBE1314:
 2913               	.LBE1313:
 2914               	.LBB1316:
 2915               	.LBB1317:
 2916               		.loc 5 91 0
 2917 0c1e 90E0      		ldi r25,lo8(ep_in_pipe_buffer)
 2918 0c20 692E      		mov r6,r25
 2919 0c22 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 2920 0c24 792E      		mov r7,r25
 2921               	.LBE1317:
 2922               	.LBE1316:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 2923               		.loc 3 88 0
 2924 0c26 12E0      		ldi r17,lo8(2)
 2925               	.LBB1320:
 2926               	.LBB1321:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 2927               		.loc 3 69 0
 2928 0c28 21E0      		ldi r18,lo8(1)
 2929 0c2a C22E      		mov r12,r18
 2930 0c2c D12C      		mov r13,__zero_reg__
 2931               	.LVL151:
 2932               	.LBE1321:
 2933               	.LBE1320:
 2934               	.LBB1329:
 2935               	.LBB1330:
 2936               	.LBB1331:
 2937               	.LBB1332:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 2938               		.loc 6 169 0
 2939 0c2e 30E4      		ldi r19,lo8(64)
 2940 0c30 A32E      		mov r10,r19
 2941 0c32 B12C      		mov r11,__zero_reg__
 2942               	.LVL152:
 2943               	.L92:
 2944               	.LBE1332:
 2945               	.LBE1331:
 2946               	.LBE1330:
 2947               	.LBE1329:
 2948               	.LBE1312:
 2949               	.LBE1311:
 2950               	.LBE1310:
 2951               	.LBE1309:
 2952               	.LBE1308:
 2953               	.LBE1307:
 2954               	.LBE1306:
 2955               	.LBE1290:
 2956               	.LBE1289:
 235:main.c        ****         send_byte(lat_buff[i]);  
 2957               		.loc 1 235 0 discriminator 2
 2958 0c34 F401      		movw r30,r8
 2959 0c36 2191      		ld r18,Z+
 2960 0c38 4F01      		movw r8,r30
 2961               	.LVL153:
 2962               	.L80:
 2963               	.LBB1382:
 2964               	.LBB1380:
 2965               	.LBB1375:
 2966               	.LBB1304:
 2967               	.LBB1302:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 2968               		.loc 3 123 0
 2969 0c3a 9FB7      		in r25,__SREG__
 2970               	.LVL154:
 2971               	.LBB1297:
 2972               	.LBB1298:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 2973               		.loc 4 50 0
 2974               	/* #APP */
 2975               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 2976 0c3c F894      		cli
 2977               	 ;  0 "" 2
 2978               	.LVL155:
 2979               	/* #NOAPP */
 2980               	.LBE1298:
 2981               	.LBE1297:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 2982               		.loc 3 124 0
 2983 0c3e 8091 0000 		lds r24,ep_in_data+1
 2984 0c42 8823      		tst r24
 2985 0c44 01F4      		brne .+2
 2986 0c46 00C0      		rjmp .L193
 2987               	.L166:
 125:usb/usb_pipe.h **** 			r = false;
 2988               		.loc 3 125 0
 2989 0c48 80E0      		ldi r24,lo8(0)
 2990               	.L78:
 2991               	.LBB1299:
 2992               	.LBB1300:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 2993               		.loc 4 70 0
 2994 0c4a 9FBF      		out __SREG__,r25
 2995               		.loc 4 71 0
 2996               	.LBE1300:
 2997               	.LBE1299:
 2998               	.LBE1302:
 2999               	.LBE1304:
 3000               	.LBE1375:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3001               		.loc 2 20 0
 3002 0c4c 8823      		tst r24
 3003 0c4e 01F0      		breq .L80
 3004               	.LVL156:
 3005               	.LBB1376:
 3006               	.LBB1377:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3007               		.loc 3 175 0
 3008 0c50 8091 0000 		lds r24,ep_in_data+2
 3009 0c54 9091 0000 		lds r25,ep_in_data+2+1
 3010 0c58 E091 0000 		lds r30,ep_in_pipe_data+2
 3011 0c5c F091 0000 		lds r31,ep_in_pipe_data+2+1
 3012               	.LVL157:
 3013 0c60 E80F      		add r30,r24
 3014 0c62 F91F      		adc r31,r25
 3015 0c64 2083      		st Z,r18
 3016 0c66 0196      		adiw r24,1
 3017 0c68 8093 0000 		sts ep_in_data+2,r24
 3018 0c6c 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3019               		.loc 3 176 0
 3020 0c70 8034      		cpi r24,64
 3021 0c72 9105      		cpc r25,__zero_reg__
 3022 0c74 01F4      		brne .+2
 3023 0c76 00C0      		rjmp .L194
 3024               	.LVL158:
 3025               	.L81:
 3026               	.LBE1377:
 3027               	.LBE1376:
 3028               	.LBE1380:
 3029               	.LBE1382:
 234:main.c        ****       for (int i=0; i<len_lat; i++) {
 3030               		.loc 1 234 0 discriminator 2
 3031 0c78 CF5C      		subi r28,lo8(-305)
 3032 0c7a DE4F      		sbci r29,hi8(-305)
 3033 0c7c 2881      		ld r18,Y
 3034 0c7e 3981      		ldd r19,Y+1
 3035 0c80 C153      		subi r28,lo8(305)
 3036 0c82 D140      		sbci r29,hi8(305)
 3037 0c84 8216      		cp r8,r18
 3038 0c86 9306      		cpc r9,r19
 3039 0c88 01F4      		brne .L92
 3040               	.LVL159:
 3041               	.L95:
 3042               	.LBE1288:
 3043               	.LBB1384:
 3044               	.LBB1385:
 3045               	.LBB1386:
 3046               	.LBB1387:
 3047               	.LBB1388:
 3048               	.LBB1389:
 3049               	.LBB1390:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3050               		.loc 5 57 0
 3051 0c8a 96E0      		ldi r25,lo8(6)
 3052               	.L175:
 3053               	.LVL160:
 3054               	.LBE1390:
 3055               	.LBE1389:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3056               		.loc 3 123 0
 3057 0c8c 2FB7      		in r18,__SREG__
 3058               	.LVL161:
 3059               	.LBB1392:
 3060               	.LBB1393:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3061               		.loc 4 50 0
 3062               	/* #APP */
 3063               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3064 0c8e F894      		cli
 3065               	 ;  0 "" 2
 3066               	.LVL162:
 3067               	/* #NOAPP */
 3068               	.LBE1393:
 3069               	.LBE1392:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3070               		.loc 3 124 0
 3071 0c90 8091 0000 		lds r24,ep_in_data+1
 3072 0c94 8823      		tst r24
 3073 0c96 01F4      		brne .+2
 3074 0c98 00C0      		rjmp .L195
 3075               	.L167:
 125:usb/usb_pipe.h **** 			r = false;
 3076               		.loc 3 125 0
 3077 0c9a 80E0      		ldi r24,lo8(0)
 3078               	.L93:
 3079               	.LBB1394:
 3080               	.LBB1395:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3081               		.loc 4 70 0
 3082 0c9c 2FBF      		out __SREG__,r18
 3083               		.loc 4 71 0
 3084               	.LBE1395:
 3085               	.LBE1394:
 3086               	.LBE1388:
 3087               	.LBE1387:
 3088               	.LBE1386:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3089               		.loc 2 20 0
 3090 0c9e 8823      		tst r24
 3091 0ca0 01F0      		breq .L175
 3092               	.LVL163:
 3093               	.LBB1399:
 3094               	.LBB1400:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3095               		.loc 3 175 0
 3096 0ca2 8091 0000 		lds r24,ep_in_data+2
 3097 0ca6 9091 0000 		lds r25,ep_in_data+2+1
 3098 0caa E091 0000 		lds r30,ep_in_pipe_data+2
 3099 0cae F091 0000 		lds r31,ep_in_pipe_data+2+1
 3100 0cb2 E80F      		add r30,r24
 3101 0cb4 F91F      		adc r31,r25
 3102 0cb6 20E2      		ldi r18,lo8(32)
 3103               	.LVL164:
 3104 0cb8 2083      		st Z,r18
 3105 0cba 0196      		adiw r24,1
 3106 0cbc 8093 0000 		sts ep_in_data+2,r24
 3107 0cc0 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3108               		.loc 3 176 0
 3109 0cc4 8034      		cpi r24,64
 3110 0cc6 9105      		cpc r25,__zero_reg__
 3111 0cc8 01F4      		brne .+2
 3112 0cca 00C0      		rjmp .L196
 3113               	.L96:
 3114               	.LVL165:
 3115               	.LBE1400:
 3116               	.LBE1399:
 3117               	.LBE1385:
 3118               	.LBE1384:
 3119               	.LBB1465:
 240:main.c        ****       for (int j=0; j<len_lng; j++) {
 3120               		.loc 1 240 0 discriminator 1
 3121 0ccc 1414      		cp __zero_reg__,r4
 3122 0cce 1504      		cpc __zero_reg__,r5
 3123 0cd0 04F4      		brge .L125
 240:main.c        ****       for (int j=0; j<len_lng; j++) {
 3124               		.loc 1 240 0 is_stmt 0
 3125 0cd2 75E6      		ldi r23,lo8(101)
 3126 0cd4 872E      		mov r8,r23
 3127 0cd6 912C      		mov r9,__zero_reg__
 3128 0cd8 8C0E      		add r8,r28
 3129 0cda 9D1E      		adc r9,r29
 205:main.c        **** void parse_nmea(void) {
 3130               		.loc 1 205 0 is_stmt 1
 3131 0cdc 480C      		add r4,r8
 3132 0cde 591C      		adc r5,r9
 3133               	.LVL166:
 3134               	.LBB1466:
 3135               	.LBB1467:
 3136               	.LBB1468:
 3137               	.LBB1469:
 3138               	.LBB1470:
 3139               	.LBB1471:
 3140               	.LBB1472:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3141               		.loc 5 57 0
 3142 0ce0 36E0      		ldi r19,lo8(6)
 3143               	.LBE1472:
 3144               	.LBE1471:
 3145               	.LBE1470:
 3146               	.LBE1469:
 3147               	.LBE1468:
 3148               	.LBB1483:
 3149               	.LBB1484:
 3150               	.LBB1485:
 3151               	.LBB1486:
 3152               	.LBB1487:
 3153               	.LBB1488:
 3154               	.LBB1489:
 3155               	.LBB1490:
 3156               	.LBB1491:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 3157               		.loc 6 220 0
 3158 0ce2 E0E0      		ldi r30,lo8(endpoints+24)
 3159 0ce4 EE2E      		mov r14,r30
 3160 0ce6 E0E0      		ldi r30,hi8(endpoints+24)
 3161 0ce8 FE2E      		mov r15,r30
 3162               	.LBE1491:
 3163               	.LBE1490:
 3164               	.LBB1493:
 3165               	.LBB1494:
 3166               		.loc 5 91 0
 3167 0cea F0E0      		ldi r31,lo8(ep_in_pipe_buffer)
 3168 0cec 6F2E      		mov r6,r31
 3169 0cee F0E0      		ldi r31,hi8(ep_in_pipe_buffer)
 3170 0cf0 7F2E      		mov r7,r31
 3171               	.LBE1494:
 3172               	.LBE1493:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 3173               		.loc 3 88 0
 3174 0cf2 12E0      		ldi r17,lo8(2)
 3175               	.LBB1497:
 3176               	.LBB1498:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 3177               		.loc 3 69 0
 3178 0cf4 A1E0      		ldi r26,lo8(1)
 3179 0cf6 CA2E      		mov r12,r26
 3180 0cf8 D12C      		mov r13,__zero_reg__
 3181               	.LBE1498:
 3182               	.LBE1497:
 3183               	.LBB1504:
 3184               	.LBB1505:
 3185               	.LBB1506:
 3186               	.LBB1507:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3187               		.loc 6 169 0
 3188 0cfa B0E4      		ldi r27,lo8(64)
 3189 0cfc AB2E      		mov r10,r27
 3190 0cfe B12C      		mov r11,__zero_reg__
 3191 0d00 D401      		movw r26,r8
 3192               	.LVL167:
 3193               	.L122:
 3194               	.LBE1507:
 3195               	.LBE1506:
 3196               	.LBE1505:
 3197               	.LBE1504:
 3198               	.LBE1489:
 3199               	.LBE1488:
 3200               	.LBE1487:
 3201               	.LBE1486:
 3202               	.LBE1485:
 3203               	.LBE1484:
 3204               	.LBE1483:
 3205               	.LBE1467:
 3206               	.LBE1466:
 241:main.c        ****         send_byte(lng_buff[j]);  
 3207               		.loc 1 241 0 discriminator 2
 3208 0d02 2D91      		ld r18,X+
 3209               	.LVL168:
 3210               	.L110:
 3211               	.LBB1557:
 3212               	.LBB1555:
 3213               	.LBB1550:
 3214               	.LBB1481:
 3215               	.LBB1479:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3216               		.loc 3 123 0
 3217 0d04 9FB7      		in r25,__SREG__
 3218               	.LVL169:
 3219               	.LBB1474:
 3220               	.LBB1475:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3221               		.loc 4 50 0
 3222               	/* #APP */
 3223               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3224 0d06 F894      		cli
 3225               	 ;  0 "" 2
 3226               	.LVL170:
 3227               	/* #NOAPP */
 3228               	.LBE1475:
 3229               	.LBE1474:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3230               		.loc 3 124 0
 3231 0d08 8091 0000 		lds r24,ep_in_data+1
 3232 0d0c 8823      		tst r24
 3233 0d0e 01F4      		brne .+2
 3234 0d10 00C0      		rjmp .L197
 3235               	.L168:
 125:usb/usb_pipe.h **** 			r = false;
 3236               		.loc 3 125 0
 3237 0d12 80E0      		ldi r24,lo8(0)
 3238               	.L108:
 3239               	.LBB1476:
 3240               	.LBB1477:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3241               		.loc 4 70 0
 3242 0d14 9FBF      		out __SREG__,r25
 3243               		.loc 4 71 0
 3244               	.LBE1477:
 3245               	.LBE1476:
 3246               	.LBE1479:
 3247               	.LBE1481:
 3248               	.LBE1550:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3249               		.loc 2 20 0
 3250 0d16 8823      		tst r24
 3251 0d18 01F0      		breq .L110
 3252               	.LVL171:
 3253               	.LBB1551:
 3254               	.LBB1552:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3255               		.loc 3 175 0
 3256 0d1a 8091 0000 		lds r24,ep_in_data+2
 3257 0d1e 9091 0000 		lds r25,ep_in_data+2+1
 3258 0d22 E091 0000 		lds r30,ep_in_pipe_data+2
 3259 0d26 F091 0000 		lds r31,ep_in_pipe_data+2+1
 3260 0d2a E80F      		add r30,r24
 3261 0d2c F91F      		adc r31,r25
 3262 0d2e 2083      		st Z,r18
 3263 0d30 0196      		adiw r24,1
 3264 0d32 8093 0000 		sts ep_in_data+2,r24
 3265 0d36 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3266               		.loc 3 176 0
 3267 0d3a 8034      		cpi r24,64
 3268 0d3c 9105      		cpc r25,__zero_reg__
 3269 0d3e 01F4      		brne .+2
 3270 0d40 00C0      		rjmp .L198
 3271               	.LVL172:
 3272               	.L111:
 3273               	.LBE1552:
 3274               	.LBE1551:
 3275               	.LBE1555:
 3276               	.LBE1557:
 240:main.c        ****       for (int j=0; j<len_lng; j++) {
 3277               		.loc 1 240 0 discriminator 2
 3278 0d42 A415      		cp r26,r4
 3279 0d44 B505      		cpc r27,r5
 3280 0d46 01F4      		brne .L122
 3281               	.LVL173:
 3282               	.L125:
 3283               	.LBE1465:
 3284               	.LBB1559:
 3285               	.LBB1560:
 3286               	.LBB1561:
 3287               	.LBB1562:
 3288               	.LBB1563:
 3289               	.LBB1564:
 3290               	.LBB1565:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3291               		.loc 5 57 0
 3292 0d48 96E0      		ldi r25,lo8(6)
 3293               	.L174:
 3294               	.LBE1565:
 3295               	.LBE1564:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3296               		.loc 3 123 0
 3297 0d4a 2FB7      		in r18,__SREG__
 3298               	.LVL174:
 3299               	.LBB1567:
 3300               	.LBB1568:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3301               		.loc 4 50 0
 3302               	/* #APP */
 3303               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3304 0d4c F894      		cli
 3305               	 ;  0 "" 2
 3306               	.LVL175:
 3307               	/* #NOAPP */
 3308               	.LBE1568:
 3309               	.LBE1567:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3310               		.loc 3 124 0
 3311 0d4e 8091 0000 		lds r24,ep_in_data+1
 3312 0d52 8823      		tst r24
 3313 0d54 01F4      		brne .+2
 3314 0d56 00C0      		rjmp .L199
 3315               	.L169:
 125:usb/usb_pipe.h **** 			r = false;
 3316               		.loc 3 125 0
 3317 0d58 80E0      		ldi r24,lo8(0)
 3318               	.L123:
 3319               	.LBB1569:
 3320               	.LBB1570:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3321               		.loc 4 70 0
 3322 0d5a 2FBF      		out __SREG__,r18
 3323               		.loc 4 71 0
 3324               	.LBE1570:
 3325               	.LBE1569:
 3326               	.LBE1563:
 3327               	.LBE1562:
 3328               	.LBE1561:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3329               		.loc 2 20 0
 3330 0d5c 8823      		tst r24
 3331 0d5e 01F0      		breq .L174
 3332               	.LVL176:
 3333               	.LBB1574:
 3334               	.LBB1575:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3335               		.loc 3 175 0
 3336 0d60 8091 0000 		lds r24,ep_in_data+2
 3337 0d64 9091 0000 		lds r25,ep_in_data+2+1
 3338 0d68 E091 0000 		lds r30,ep_in_pipe_data+2
 3339 0d6c F091 0000 		lds r31,ep_in_pipe_data+2+1
 3340 0d70 E80F      		add r30,r24
 3341 0d72 F91F      		adc r31,r25
 3342 0d74 20E2      		ldi r18,lo8(32)
 3343               	.LVL177:
 3344 0d76 2083      		st Z,r18
 3345 0d78 0196      		adiw r24,1
 3346 0d7a 8093 0000 		sts ep_in_data+2,r24
 3347 0d7e 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3348               		.loc 3 176 0
 3349 0d82 8034      		cpi r24,64
 3350 0d84 9105      		cpc r25,__zero_reg__
 3351 0d86 01F4      		brne .+2
 3352 0d88 00C0      		rjmp .L200
 3353               	.L126:
 3354               	.LVL178:
 3355               	.LBE1575:
 3356               	.LBE1574:
 3357               	.LBE1560:
 3358               	.LBE1559:
 3359               	.LBB1640:
 246:main.c        ****       for (int k=0; k<len_dist; k++) {
 3360               		.loc 1 246 0 discriminator 1
 3361 0d8a 1214      		cp __zero_reg__,r2
 3362 0d8c 1304      		cpc __zero_reg__,r3
 3363 0d8e 04F0      		brlt .+2
 3364 0d90 00C0      		rjmp .L75
 246:main.c        ****       for (int k=0; k<len_dist; k++) {
 3365               		.loc 1 246 0 is_stmt 0
 3366 0d92 5E01      		movw r10,r28
 3367 0d94 0894      		sec
 3368 0d96 A11C      		adc r10,__zero_reg__
 3369 0d98 B11C      		adc r11,__zero_reg__
 205:main.c        **** void parse_nmea(void) {
 3370               		.loc 1 205 0 is_stmt 1
 3371 0d9a 2A0C      		add r2,r10
 3372 0d9c 3B1C      		adc r3,r11
 3373               	.LVL179:
 3374               	.LBB1641:
 3375               	.LBB1642:
 3376               	.LBB1643:
 3377               	.LBB1644:
 3378               	.LBB1645:
 3379               	.LBB1646:
 3380               	.LBB1647:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3381               		.loc 5 57 0
 3382 0d9e 46E0      		ldi r20,lo8(6)
 3383               	.LBE1647:
 3384               	.LBE1646:
 3385               	.LBE1645:
 3386               	.LBE1644:
 3387               	.LBE1643:
 3388               	.LBB1658:
 3389               	.LBB1659:
 3390               	.LBB1660:
 3391               	.LBB1661:
 3392               	.LBB1662:
 3393               	.LBB1663:
 3394               	.LBB1664:
 3395               	.LBB1665:
 3396               	.LBB1666:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 3397               		.loc 6 220 0
 3398 0da0 A0E0      		ldi r26,lo8(endpoints+24)
 3399 0da2 B0E0      		ldi r27,hi8(endpoints+24)
 3400               	.LBE1666:
 3401               	.LBE1665:
 3402               	.LBB1668:
 3403               	.LBB1669:
 3404               		.loc 5 91 0
 3405 0da4 30E0      		ldi r19,lo8(ep_in_pipe_buffer)
 3406 0da6 632E      		mov r6,r19
 3407 0da8 30E0      		ldi r19,hi8(ep_in_pipe_buffer)
 3408 0daa 732E      		mov r7,r19
 3409               	.LBE1669:
 3410               	.LBE1668:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 3411               		.loc 3 88 0
 3412 0dac 12E0      		ldi r17,lo8(2)
 3413               	.LBB1672:
 3414               	.LBB1673:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 3415               		.loc 3 69 0
 3416 0dae 51E0      		ldi r21,lo8(1)
 3417 0db0 E52E      		mov r14,r21
 3418 0db2 F12C      		mov r15,__zero_reg__
 3419               	.LBE1673:
 3420               	.LBE1672:
 3421               	.LBB1679:
 3422               	.LBB1680:
 3423               	.LBB1681:
 3424               	.LBB1682:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3425               		.loc 6 169 0
 3426 0db4 60E4      		ldi r22,lo8(64)
 3427 0db6 C62E      		mov r12,r22
 3428 0db8 D12C      		mov r13,__zero_reg__
 3429               	.LVL180:
 3430               	.L151:
 3431               	.LBE1682:
 3432               	.LBE1681:
 3433               	.LBE1680:
 3434               	.LBE1679:
 3435               	.LBE1664:
 3436               	.LBE1663:
 3437               	.LBE1662:
 3438               	.LBE1661:
 3439               	.LBE1660:
 3440               	.LBE1659:
 3441               	.LBE1658:
 3442               	.LBE1642:
 3443               	.LBE1641:
 247:main.c        ****         send_byte(dist_buff[k]);  
 3444               		.loc 1 247 0 discriminator 2
 3445 0dba F501      		movw r30,r10
 3446 0dbc 2191      		ld r18,Z+
 3447 0dbe 5F01      		movw r10,r30
 3448               	.LVL181:
 3449               	.L139:
 3450               	.LBB1732:
 3451               	.LBB1730:
 3452               	.LBB1725:
 3453               	.LBB1656:
 3454               	.LBB1654:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3455               		.loc 3 123 0
 3456 0dc0 9FB7      		in r25,__SREG__
 3457               	.LVL182:
 3458               	.LBB1649:
 3459               	.LBB1650:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3460               		.loc 4 50 0
 3461               	/* #APP */
 3462               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3463 0dc2 F894      		cli
 3464               	 ;  0 "" 2
 3465               	.LVL183:
 3466               	/* #NOAPP */
 3467               	.LBE1650:
 3468               	.LBE1649:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3469               		.loc 3 124 0
 3470 0dc4 8091 0000 		lds r24,ep_in_data+1
 3471 0dc8 8823      		tst r24
 3472 0dca 01F4      		brne .+2
 3473 0dcc 00C0      		rjmp .L201
 3474               	.L170:
 125:usb/usb_pipe.h **** 			r = false;
 3475               		.loc 3 125 0
 3476 0dce 80E0      		ldi r24,lo8(0)
 3477               	.L137:
 3478               	.LBB1651:
 3479               	.LBB1652:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3480               		.loc 4 70 0
 3481 0dd0 9FBF      		out __SREG__,r25
 3482               		.loc 4 71 0
 3483               	.LBE1652:
 3484               	.LBE1651:
 3485               	.LBE1654:
 3486               	.LBE1656:
 3487               	.LBE1725:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3488               		.loc 2 20 0
 3489 0dd2 8823      		tst r24
 3490 0dd4 01F0      		breq .L139
 3491               	.LVL184:
 3492               	.LBB1726:
 3493               	.LBB1727:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3494               		.loc 3 175 0
 3495 0dd6 8091 0000 		lds r24,ep_in_data+2
 3496 0dda 9091 0000 		lds r25,ep_in_data+2+1
 3497 0dde E091 0000 		lds r30,ep_in_pipe_data+2
 3498 0de2 F091 0000 		lds r31,ep_in_pipe_data+2+1
 3499               	.LVL185:
 3500 0de6 E80F      		add r30,r24
 3501 0de8 F91F      		adc r31,r25
 3502 0dea 2083      		st Z,r18
 3503 0dec 0196      		adiw r24,1
 3504 0dee 8093 0000 		sts ep_in_data+2,r24
 3505 0df2 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3506               		.loc 3 176 0
 3507 0df6 8034      		cpi r24,64
 3508 0df8 9105      		cpc r25,__zero_reg__
 3509 0dfa 01F4      		brne .+2
 3510 0dfc 00C0      		rjmp .L202
 3511               	.LVL186:
 3512               	.L140:
 3513               	.LBE1727:
 3514               	.LBE1726:
 3515               	.LBE1730:
 3516               	.LBE1732:
 246:main.c        ****       for (int k=0; k<len_dist; k++) {
 3517               		.loc 1 246 0 discriminator 2
 3518 0dfe A214      		cp r10,r2
 3519 0e00 B304      		cpc r11,r3
 3520 0e02 01F4      		brne .L151
 3521 0e04 00C0      		rjmp .L75
 3522               	.LVL187:
 3523               	.L193:
 3524               	.LBE1640:
 3525               	.LBB1734:
 3526               	.LBB1383:
 3527               	.LBB1381:
 3528               	.LBB1378:
 3529               	.LBB1305:
 3530               	.LBB1303:
 3531               	.LBB1301:
 3532               	.LBB1296:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3533               		.loc 5 57 0
 3534 0e06 8091 0000 		lds r24,ep_in_pipe_data+4
 3535 0e0a 352F      		mov r19,r21
 3536 0e0c 381B      		sub r19,r24
 3537               	.LBE1296:
 3538               	.LBE1301:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 3539               		.loc 3 127 0
 3540 0e0e 81E0      		ldi r24,lo8(1)
 3541 0e10 1316      		cp __zero_reg__,r19
 3542 0e12 04F4      		brge .+2
 3543 0e14 00C0      		rjmp .L78
 3544 0e16 00C0      		rjmp .L166
 3545               	.LVL188:
 3546               	.L194:
 3547               	.LBE1303:
 3548               	.LBE1305:
 3549               	.LBE1378:
 3550               	.LBB1379:
 3551               	.LBB1374:
 3552               	.LBB1373:
 3553               	.LBB1372:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 3554               		.loc 3 177 0
 3555 0e18 BFB7      		in r27,__SREG__
 3556               	.LVL189:
 3557               	.LBB1364:
 3558               	.LBB1365:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3559               		.loc 4 50 0
 3560               	/* #APP */
 3561               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3562 0e1a F894      		cli
 3563               	 ;  0 "" 2
 3564               	.LVL190:
 3565               	/* #NOAPP */
 3566               	.LBE1365:
 3567               	.LBE1364:
 3568               		.loc 3 178 0
 3569 0e1c 1092 0000 		sts ep_in_data+2,__zero_reg__
 3570 0e20 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 3571               	.LVL191:
 3572               	.LBB1366:
 3573               	.LBB1367:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 3574               		.loc 5 81 0
 3575 0e24 8091 0000 		lds r24,ep_in_pipe_data+4
 3576 0e28 8F5F      		subi r24,lo8(-(1))
 3577 0e2a 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 3578               		.loc 5 82 0
 3579 0e2e 8091 0000 		lds r24,ep_in_pipe_data+2
 3580 0e32 9091 0000 		lds r25,ep_in_pipe_data+2+1
 3581 0e36 805C      		subi r24,lo8(-(64))
 3582 0e38 9F4F      		sbci r25,hi8(-(64))
 3583 0e3a 8093 0000 		sts ep_in_pipe_data+2,r24
 3584 0e3e 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 3585               		.loc 5 84 0
 3586 0e42 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 3587 0e44 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 3588 0e46 9F07      		cpc r25,r31
 3589 0e48 01F4      		brne .L82
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 3590               		.loc 5 85 0
 3591 0e4a 6092 0000 		sts ep_in_pipe_data+2,r6
 3592 0e4e 7092 0000 		sts ep_in_pipe_data+2+1,r7
 3593               	.L82:
 3594               	.LVL192:
 3595               	.LBE1367:
 3596               	.LBE1366:
 3597               	.LBB1368:
 3598               	.LBB1362:
 3599               	.LBB1360:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3600               		.loc 3 80 0
 3601 0e52 AFB7      		in r26,__SREG__
 3602               	.LVL193:
 3603               	.LBB1339:
 3604               	.LBB1340:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3605               		.loc 4 50 0
 3606               	/* #APP */
 3607               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3608 0e54 F894      		cli
 3609               	 ;  0 "" 2
 3610               	.LVL194:
 3611               	/* #NOAPP */
 3612               	.LBE1340:
 3613               	.LBE1339:
 3614               	.LBB1341:
 3615               	.LBB1315:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 3616               		.loc 6 220 0
 3617 0e56 8091 0000 		lds r24,endpoints+24
 3618 0e5a 8670      		andi r24,lo8(6)
 3619               	.LBE1315:
 3620               	.LBE1341:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 3621               		.loc 3 82 0
 3622 0e5c 01F4      		brne .L203
 3623               	.LVL195:
 3624               	.L83:
 3625               	.LBB1342:
 3626               	.LBB1343:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3627               		.loc 4 70 0
 3628 0e5e AFBF      		out __SREG__,r26
 3629               		.loc 4 71 0
 3630               	.LVL196:
 3631               	.LBE1343:
 3632               	.LBE1342:
 3633               	.LBE1360:
 3634               	.LBE1362:
 3635               	.LBE1368:
 3636               	.LBB1369:
 3637               	.LBB1370:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3638               		.loc 4 70 0
 3639 0e60 BFBF      		out __SREG__,r27
 3640               		.loc 4 71 0
 3641 0e62 00C0      		rjmp .L81
 3642               	.LVL197:
 3643               	.L203:
 3644               	.LBE1370:
 3645               	.LBE1369:
 3646               	.LBB1371:
 3647               	.LBB1363:
 3648               	.LBB1361:
 3649               	.LBB1344:
 3650               	.LBB1345:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 3651               		.loc 5 51 0
 3652 0e64 2091 0000 		lds r18,ep_in_pipe_data+4
 3653               	.LBE1345:
 3654               	.LBE1344:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 3655               		.loc 3 83 0
 3656 0e68 1216      		cp __zero_reg__,r18
 3657 0e6a 04F0      		brlt .+2
 3658 0e6c 00C0      		rjmp .L84
 3659               	.LBB1346:
 3660               	.LBB1347:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 3661               		.loc 5 62 0
 3662 0e6e 6091 0000 		lds r22,ep_in_pipe_data
 3663 0e72 7091 0000 		lds r23,ep_in_pipe_data+1
 3664               	.LVL198:
 3665               	.LBE1347:
 3666               	.LBE1346:
 3667               	.LBB1348:
 3668               	.LBB1337:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 3669               		.loc 3 68 0
 3670 0e76 3091 0000 		lds r19,ep_in_data
 3671               	.LVL199:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 3672               		.loc 3 69 0
 3673 0e7a 832F      		mov r24,r19
 3674 0e7c 90E0      		ldi r25,lo8(0)
 3675 0e7e 41E0      		ldi r20,lo8(1)
 3676 0e80 8C15      		cp r24,r12
 3677 0e82 9D05      		cpc r25,r13
 3678 0e84 01F4      		brne .L85
 3679 0e86 40E0      		ldi r20,lo8(0)
 3680               	.L85:
 3681 0e88 4093 0000 		sts ep_in_data,r20
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 3682               		.loc 3 72 0
 3683 0e8c 3323      		tst r19
 3684 0e8e 01F4      		brne .L86
 3685               	.LVL200:
 3686               	.LBB1334:
 3687               	.LBB1335:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 3688               		.loc 6 168 0
 3689 0e90 6093 0000 		sts endpoints+28,r22
 3690 0e94 7093 0000 		sts endpoints+28+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3691               		.loc 6 169 0
 3692 0e98 A092 0000 		sts endpoints+26,r10
 3693 0e9c B092 0000 		sts endpoints+26+1,r11
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 3694               		.loc 6 174 0
 3695 0ea0 F701      		movw r30,r14
 3696               	/* #APP */
 3697               	 ;  174 "usb/usb.h" 1
 3698 0ea2 02E2      		ldi r16, 34
 3699 0ea4 0693      		.dc.w 0x9306
 3700               		
 3701               	 ;  0 "" 2
 3702               	.LVL201:
 3703               	/* #NOAPP */
 3704               	.L87:
 3705               	.LBE1335:
 3706               	.LBE1334:
 3707               	.LBE1337:
 3708               	.LBE1348:
 3709               	.LBB1349:
 3710               	.LBB1350:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 3711               		.loc 5 72 0
 3712 0ea6 2150      		subi r18,lo8(-(-1))
 3713 0ea8 2093 0000 		sts ep_in_pipe_data+4,r18
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 3714               		.loc 5 73 0
 3715 0eac CB01      		movw r24,r22
 3716 0eae 805C      		subi r24,lo8(-(64))
 3717 0eb0 9F4F      		sbci r25,hi8(-(64))
 3718 0eb2 8093 0000 		sts ep_in_pipe_data,r24
 3719 0eb6 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 3720               		.loc 5 75 0
 3721 0eba F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 3722 0ebc 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 3723 0ebe 9F07      		cpc r25,r31
 3724 0ec0 01F4      		brne .L83
 3725               	.LBE1350:
 3726               	.LBE1349:
 3727               	.LBB1351:
 3728               	.LBB1318:
 3729               		.loc 5 91 0
 3730 0ec2 6092 0000 		sts ep_in_pipe_data,r6
 3731 0ec6 7092 0000 		sts ep_in_pipe_data+1,r7
 3732               	.LVL202:
 3733 0eca 00C0      		rjmp .L83
 3734               	.LVL203:
 3735               	.L86:
 3736               	.LBE1318:
 3737               	.LBE1351:
 3738               	.LBB1352:
 3739               	.LBB1338:
 3740               	.LBB1336:
 3741               	.LBB1333:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 3742               		.loc 6 168 0
 3743 0ecc 6093 0000 		sts endpoints+20,r22
 3744 0ed0 7093 0000 		sts endpoints+20+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3745               		.loc 6 169 0
 3746 0ed4 A092 0000 		sts endpoints+18,r10
 3747 0ed8 B092 0000 		sts endpoints+18+1,r11
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 3748               		.loc 6 176 0
 3749 0edc F701      		movw r30,r14
 3750               	/* #APP */
 3751               	 ;  176 "usb/usb.h" 1
 3752 0ede 04E1      		ldi r16, 20
 3753 0ee0 0693      		.dc.w 0x9306
 3754               		
 3755               	 ;  0 "" 2
 3756               	/* #NOAPP */
 3757 0ee2 00C0      		rjmp .L87
 3758               	.LVL204:
 3759               	.L84:
 3760               	.LBE1333:
 3761               	.LBE1336:
 3762               	.LBE1338:
 3763               	.LBE1352:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 3764               		.loc 3 87 0
 3765 0ee4 8091 0000 		lds r24,ep_in_data+1
 3766 0ee8 8130      		cpi r24,lo8(1)
 3767 0eea 01F0      		breq .L204
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 3768               		.loc 3 91 0
 3769 0eec 8230      		cpi r24,lo8(2)
 3770 0eee 01F0      		breq .+2
 3771 0ef0 00C0      		rjmp .L83
 3772               	.LVL205:
 3773               	.LBB1353:
 3774               	.LBB1354:
 3775               	.LBB1355:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 3776               		.loc 6 228 0
 3777 0ef2 8091 0000 		lds r24,endpoints+24
 3778 0ef6 8670      		andi r24,lo8(6)
 3779               	.LBE1355:
 3780               	.LBE1354:
 3781               	.LBE1353:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 3782               		.loc 3 91 0
 3783 0ef8 8630      		cpi r24,lo8(6)
 3784 0efa 01F0      		breq .+2
 3785 0efc 00C0      		rjmp .L83
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 3786               		.loc 3 92 0
 3787 0efe 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 3788               		.loc 3 93 0
 3789 0f02 1092 0000 		sts ep_in_data+2,__zero_reg__
 3790 0f06 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 3791               	.LBB1356:
 3792               	.LBB1319:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 3793               		.loc 5 90 0
 3794 0f0a 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 3795               		.loc 5 91 0
 3796 0f0e 6092 0000 		sts ep_in_pipe_data+2,r6
 3797 0f12 7092 0000 		sts ep_in_pipe_data+2+1,r7
 3798 0f16 6092 0000 		sts ep_in_pipe_data,r6
 3799 0f1a 7092 0000 		sts ep_in_pipe_data+1,r7
 3800               	.LVL206:
 3801 0f1e 00C0      		rjmp .L83
 3802               	.LVL207:
 3803               	.L204:
 3804               	.LBE1319:
 3805               	.LBE1356:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 3806               		.loc 3 88 0
 3807 0f20 1093 0000 		sts ep_in_data+1,r17
 3808               	.LBB1357:
 3809               	.LBB1358:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 3810               		.loc 5 62 0
 3811 0f24 7091 0000 		lds r23,ep_in_pipe_data
 3812 0f28 E091 0000 		lds r30,ep_in_pipe_data+1
 3813               	.LBE1358:
 3814               	.LBE1357:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 3815               		.loc 3 90 0
 3816 0f2c 2091 0000 		lds r18,ep_in_data+2
 3817 0f30 3091 0000 		lds r19,ep_in_data+2+1
 3818               	.LVL208:
 3819               	.LBB1359:
 3820               	.LBB1328:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 3821               		.loc 3 68 0
 3822 0f34 6091 0000 		lds r22,ep_in_data
 3823               	.LVL209:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 3824               		.loc 3 69 0
 3825 0f38 862F      		mov r24,r22
 3826 0f3a 90E0      		ldi r25,lo8(0)
 3827 0f3c 41E0      		ldi r20,lo8(1)
 3828 0f3e 8C15      		cp r24,r12
 3829 0f40 9D05      		cpc r25,r13
 3830 0f42 01F4      		brne .L90
 3831 0f44 40E0      		ldi r20,lo8(0)
 3832               	.L90:
 3833 0f46 4093 0000 		sts ep_in_data,r20
 3834               	.LBB1322:
 3835               	.LBB1323:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 3836               		.loc 6 168 0
 3837 0f4a 872F      		mov r24,r23
 3838 0f4c 9E2F      		mov r25,r30
 3839               	.LBE1323:
 3840               	.LBE1322:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 3841               		.loc 3 72 0
 3842 0f4e 6623      		tst r22
 3843 0f50 01F4      		brne .L91
 3844               	.LVL210:
 3845               	.LBB1325:
 3846               	.LBB1324:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 3847               		.loc 6 168 0
 3848 0f52 8093 0000 		sts endpoints+28,r24
 3849 0f56 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3850               		.loc 6 169 0
 3851 0f5a 2093 0000 		sts endpoints+26,r18
 3852 0f5e 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 3853               		.loc 6 174 0
 3854 0f62 F701      		movw r30,r14
 3855               	/* #APP */
 3856               	 ;  174 "usb/usb.h" 1
 3857 0f64 02E2      		ldi r16, 34
 3858 0f66 0693      		.dc.w 0x9306
 3859               		
 3860               	 ;  0 "" 2
 3861               	/* #NOAPP */
 3862 0f68 00C0      		rjmp .L83
 3863               	.LVL211:
 3864               	.L91:
 3865               	.LBE1324:
 3866               	.LBE1325:
 3867               	.LBB1326:
 3868               	.LBB1327:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 3869               		.loc 6 168 0
 3870 0f6a 8093 0000 		sts endpoints+20,r24
 3871 0f6e 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3872               		.loc 6 169 0
 3873 0f72 2093 0000 		sts endpoints+18,r18
 3874 0f76 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 3875               		.loc 6 176 0
 3876 0f7a F701      		movw r30,r14
 3877               	/* #APP */
 3878               	 ;  176 "usb/usb.h" 1
 3879 0f7c 04E1      		ldi r16, 20
 3880 0f7e 0693      		.dc.w 0x9306
 3881               		
 3882               	 ;  0 "" 2
 3883               	/* #NOAPP */
 3884 0f80 00C0      		rjmp .L83
 3885               	.LVL212:
 3886               	.L195:
 3887               	.LBE1327:
 3888               	.LBE1326:
 3889               	.LBE1328:
 3890               	.LBE1359:
 3891               	.LBE1361:
 3892               	.LBE1363:
 3893               	.LBE1371:
 3894               	.LBE1372:
 3895               	.LBE1373:
 3896               	.LBE1374:
 3897               	.LBE1379:
 3898               	.LBE1381:
 3899               	.LBE1383:
 3900               	.LBE1734:
 3901               	.LBB1735:
 3902               	.LBB1462:
 3903               	.LBB1401:
 3904               	.LBB1398:
 3905               	.LBB1397:
 3906               	.LBB1396:
 3907               	.LBB1391:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3908               		.loc 5 57 0
 3909 0f82 8091 0000 		lds r24,ep_in_pipe_data+4
 3910 0f86 392F      		mov r19,r25
 3911 0f88 381B      		sub r19,r24
 3912               	.LBE1391:
 3913               	.LBE1396:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 3914               		.loc 3 127 0
 3915 0f8a 81E0      		ldi r24,lo8(1)
 3916 0f8c 1316      		cp __zero_reg__,r19
 3917 0f8e 04F4      		brge .+2
 3918 0f90 00C0      		rjmp .L93
 3919 0f92 00C0      		rjmp .L167
 3920               	.LVL213:
 3921               	.L197:
 3922               	.LBE1397:
 3923               	.LBE1398:
 3924               	.LBE1401:
 3925               	.LBE1462:
 3926               	.LBE1735:
 3927               	.LBB1736:
 3928               	.LBB1558:
 3929               	.LBB1556:
 3930               	.LBB1553:
 3931               	.LBB1482:
 3932               	.LBB1480:
 3933               	.LBB1478:
 3934               	.LBB1473:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3935               		.loc 5 57 0
 3936 0f94 8091 0000 		lds r24,ep_in_pipe_data+4
 3937 0f98 432F      		mov r20,r19
 3938 0f9a 481B      		sub r20,r24
 3939               	.LBE1473:
 3940               	.LBE1478:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 3941               		.loc 3 127 0
 3942 0f9c 81E0      		ldi r24,lo8(1)
 3943 0f9e 1416      		cp __zero_reg__,r20
 3944 0fa0 04F4      		brge .+2
 3945 0fa2 00C0      		rjmp .L108
 3946 0fa4 00C0      		rjmp .L168
 3947               	.LVL214:
 3948               	.L198:
 3949               	.LBE1480:
 3950               	.LBE1482:
 3951               	.LBE1553:
 3952               	.LBB1554:
 3953               	.LBB1549:
 3954               	.LBB1548:
 3955               	.LBB1547:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 3956               		.loc 3 177 0
 3957 0fa6 9FB6      		in r9,__SREG__
 3958               	.LVL215:
 3959               	.LBB1539:
 3960               	.LBB1540:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3961               		.loc 4 50 0
 3962               	/* #APP */
 3963               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3964 0fa8 F894      		cli
 3965               	 ;  0 "" 2
 3966               	.LVL216:
 3967               	/* #NOAPP */
 3968               	.LBE1540:
 3969               	.LBE1539:
 3970               		.loc 3 178 0
 3971 0faa 1092 0000 		sts ep_in_data+2,__zero_reg__
 3972 0fae 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 3973               	.LVL217:
 3974               	.LBB1541:
 3975               	.LBB1542:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 3976               		.loc 5 81 0
 3977 0fb2 8091 0000 		lds r24,ep_in_pipe_data+4
 3978 0fb6 8F5F      		subi r24,lo8(-(1))
 3979 0fb8 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 3980               		.loc 5 82 0
 3981 0fbc 8091 0000 		lds r24,ep_in_pipe_data+2
 3982 0fc0 9091 0000 		lds r25,ep_in_pipe_data+2+1
 3983 0fc4 805C      		subi r24,lo8(-(64))
 3984 0fc6 9F4F      		sbci r25,hi8(-(64))
 3985 0fc8 8093 0000 		sts ep_in_pipe_data+2,r24
 3986 0fcc 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 3987               		.loc 5 84 0
 3988 0fd0 E0E0      		ldi r30,hi8(ep_in_pipe_buffer+512)
 3989 0fd2 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 3990 0fd4 9E07      		cpc r25,r30
 3991 0fd6 01F4      		brne .L112
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 3992               		.loc 5 85 0
 3993 0fd8 6092 0000 		sts ep_in_pipe_data+2,r6
 3994 0fdc 7092 0000 		sts ep_in_pipe_data+2+1,r7
 3995               	.L112:
 3996               	.LVL218:
 3997               	.LBE1542:
 3998               	.LBE1541:
 3999               	.LBB1543:
 4000               	.LBB1537:
 4001               	.LBB1535:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 4002               		.loc 3 80 0
 4003 0fe0 6FB7      		in r22,__SREG__
 4004               	.LVL219:
 4005               	.LBB1514:
 4006               	.LBB1515:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4007               		.loc 4 50 0
 4008               	/* #APP */
 4009               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4010 0fe2 F894      		cli
 4011               	 ;  0 "" 2
 4012               	.LVL220:
 4013               	/* #NOAPP */
 4014               	.LBE1515:
 4015               	.LBE1514:
 4016               	.LBB1516:
 4017               	.LBB1492:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 4018               		.loc 6 220 0
 4019 0fe4 8091 0000 		lds r24,endpoints+24
 4020 0fe8 8670      		andi r24,lo8(6)
 4021               	.LBE1492:
 4022               	.LBE1516:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 4023               		.loc 3 82 0
 4024 0fea 01F4      		brne .L205
 4025               	.LVL221:
 4026               	.L113:
 4027               	.LBB1517:
 4028               	.LBB1518:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4029               		.loc 4 70 0
 4030 0fec 6FBF      		out __SREG__,r22
 4031               		.loc 4 71 0
 4032               	.LVL222:
 4033               	.LBE1518:
 4034               	.LBE1517:
 4035               	.LBE1535:
 4036               	.LBE1537:
 4037               	.LBE1543:
 4038               	.LBB1544:
 4039               	.LBB1545:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4040               		.loc 4 70 0
 4041 0fee 9FBE      		out __SREG__,r9
 4042               		.loc 4 71 0
 4043 0ff0 00C0      		rjmp .L111
 4044               	.LVL223:
 4045               	.L205:
 4046               	.LBE1545:
 4047               	.LBE1544:
 4048               	.LBB1546:
 4049               	.LBB1538:
 4050               	.LBB1536:
 4051               	.LBB1519:
 4052               	.LBB1520:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 4053               		.loc 5 51 0
 4054 0ff2 2091 0000 		lds r18,ep_in_pipe_data+4
 4055               	.LBE1520:
 4056               	.LBE1519:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 4057               		.loc 3 83 0
 4058 0ff6 1216      		cp __zero_reg__,r18
 4059 0ff8 04F0      		brlt .+2
 4060 0ffa 00C0      		rjmp .L114
 4061               	.LBB1521:
 4062               	.LBB1522:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4063               		.loc 5 62 0
 4064 0ffc 4091 0000 		lds r20,ep_in_pipe_data
 4065 1000 5091 0000 		lds r21,ep_in_pipe_data+1
 4066               	.LVL224:
 4067               	.LBE1522:
 4068               	.LBE1521:
 4069               	.LBB1523:
 4070               	.LBB1512:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4071               		.loc 3 68 0
 4072 1004 7091 0000 		lds r23,ep_in_data
 4073               	.LVL225:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4074               		.loc 3 69 0
 4075 1008 872F      		mov r24,r23
 4076 100a 90E0      		ldi r25,lo8(0)
 4077 100c E1E0      		ldi r30,lo8(1)
 4078 100e 8C15      		cp r24,r12
 4079 1010 9D05      		cpc r25,r13
 4080 1012 01F4      		brne .L115
 4081 1014 E0E0      		ldi r30,lo8(0)
 4082               	.L115:
 4083 1016 E093 0000 		sts ep_in_data,r30
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4084               		.loc 3 72 0
 4085 101a 7723      		tst r23
 4086 101c 01F4      		brne .L116
 4087               	.LVL226:
 4088               	.LBB1509:
 4089               	.LBB1510:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4090               		.loc 6 168 0
 4091 101e 4093 0000 		sts endpoints+28,r20
 4092 1022 5093 0000 		sts endpoints+28+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4093               		.loc 6 169 0
 4094 1026 A092 0000 		sts endpoints+26,r10
 4095 102a B092 0000 		sts endpoints+26+1,r11
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4096               		.loc 6 174 0
 4097 102e F701      		movw r30,r14
 4098               	/* #APP */
 4099               	 ;  174 "usb/usb.h" 1
 4100 1030 02E2      		ldi r16, 34
 4101 1032 0693      		.dc.w 0x9306
 4102               		
 4103               	 ;  0 "" 2
 4104               	.LVL227:
 4105               	/* #NOAPP */
 4106               	.L117:
 4107               	.LBE1510:
 4108               	.LBE1509:
 4109               	.LBE1512:
 4110               	.LBE1523:
 4111               	.LBB1524:
 4112               	.LBB1525:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 4113               		.loc 5 72 0
 4114 1034 2150      		subi r18,lo8(-(-1))
 4115 1036 2093 0000 		sts ep_in_pipe_data+4,r18
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 4116               		.loc 5 73 0
 4117 103a CA01      		movw r24,r20
 4118 103c 805C      		subi r24,lo8(-(64))
 4119 103e 9F4F      		sbci r25,hi8(-(64))
 4120 1040 8093 0000 		sts ep_in_pipe_data,r24
 4121 1044 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4122               		.loc 5 75 0
 4123 1048 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 4124 104a 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4125 104c 9F07      		cpc r25,r31
 4126 104e 01F4      		brne .L113
 4127               	.LBE1525:
 4128               	.LBE1524:
 4129               	.LBB1526:
 4130               	.LBB1495:
 4131               		.loc 5 91 0
 4132 1050 6092 0000 		sts ep_in_pipe_data,r6
 4133 1054 7092 0000 		sts ep_in_pipe_data+1,r7
 4134               	.LVL228:
 4135 1058 00C0      		rjmp .L113
 4136               	.LVL229:
 4137               	.L116:
 4138               	.LBE1495:
 4139               	.LBE1526:
 4140               	.LBB1527:
 4141               	.LBB1513:
 4142               	.LBB1511:
 4143               	.LBB1508:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4144               		.loc 6 168 0
 4145 105a 4093 0000 		sts endpoints+20,r20
 4146 105e 5093 0000 		sts endpoints+20+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4147               		.loc 6 169 0
 4148 1062 A092 0000 		sts endpoints+18,r10
 4149 1066 B092 0000 		sts endpoints+18+1,r11
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4150               		.loc 6 176 0
 4151 106a F701      		movw r30,r14
 4152               	/* #APP */
 4153               	 ;  176 "usb/usb.h" 1
 4154 106c 04E1      		ldi r16, 20
 4155 106e 0693      		.dc.w 0x9306
 4156               		
 4157               	 ;  0 "" 2
 4158               	/* #NOAPP */
 4159 1070 00C0      		rjmp .L117
 4160               	.LVL230:
 4161               	.L114:
 4162               	.LBE1508:
 4163               	.LBE1511:
 4164               	.LBE1513:
 4165               	.LBE1527:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 4166               		.loc 3 87 0
 4167 1072 8091 0000 		lds r24,ep_in_data+1
 4168 1076 8130      		cpi r24,lo8(1)
 4169 1078 01F0      		breq .L206
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4170               		.loc 3 91 0
 4171 107a 8230      		cpi r24,lo8(2)
 4172 107c 01F0      		breq .+2
 4173 107e 00C0      		rjmp .L113
 4174               	.LVL231:
 4175               	.LBB1528:
 4176               	.LBB1529:
 4177               	.LBB1530:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 4178               		.loc 6 228 0
 4179 1080 8091 0000 		lds r24,endpoints+24
 4180 1084 8670      		andi r24,lo8(6)
 4181               	.LBE1530:
 4182               	.LBE1529:
 4183               	.LBE1528:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4184               		.loc 3 91 0
 4185 1086 8630      		cpi r24,lo8(6)
 4186 1088 01F0      		breq .+2
 4187 108a 00C0      		rjmp .L113
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 4188               		.loc 3 92 0
 4189 108c 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 4190               		.loc 3 93 0
 4191 1090 1092 0000 		sts ep_in_data+2,__zero_reg__
 4192 1094 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4193               	.LBB1531:
 4194               	.LBB1496:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 4195               		.loc 5 90 0
 4196 1098 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 4197               		.loc 5 91 0
 4198 109c 6092 0000 		sts ep_in_pipe_data+2,r6
 4199 10a0 7092 0000 		sts ep_in_pipe_data+2+1,r7
 4200 10a4 6092 0000 		sts ep_in_pipe_data,r6
 4201 10a8 7092 0000 		sts ep_in_pipe_data+1,r7
 4202               	.LVL232:
 4203 10ac 00C0      		rjmp .L113
 4204               	.LVL233:
 4205               	.L206:
 4206               	.LBE1496:
 4207               	.LBE1531:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 4208               		.loc 3 88 0
 4209 10ae 1093 0000 		sts ep_in_data+1,r17
 4210               	.LBB1532:
 4211               	.LBB1533:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4212               		.loc 5 62 0
 4213 10b2 E091 0000 		lds r30,ep_in_pipe_data
 4214 10b6 F091 0000 		lds r31,ep_in_pipe_data+1
 4215               	.LBE1533:
 4216               	.LBE1532:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 4217               		.loc 3 90 0
 4218 10ba 4091 0000 		lds r20,ep_in_data+2
 4219 10be 5091 0000 		lds r21,ep_in_data+2+1
 4220               	.LVL234:
 4221               	.LBB1534:
 4222               	.LBB1503:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4223               		.loc 3 68 0
 4224 10c2 7091 0000 		lds r23,ep_in_data
 4225               	.LVL235:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4226               		.loc 3 69 0
 4227 10c6 872F      		mov r24,r23
 4228 10c8 90E0      		ldi r25,lo8(0)
 4229 10ca 21E0      		ldi r18,lo8(1)
 4230 10cc 8C15      		cp r24,r12
 4231 10ce 9D05      		cpc r25,r13
 4232 10d0 01F4      		brne .L120
 4233 10d2 20E0      		ldi r18,lo8(0)
 4234               	.L120:
 4235 10d4 2093 0000 		sts ep_in_data,r18
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4236               		.loc 3 72 0
 4237 10d8 7723      		tst r23
 4238 10da 01F4      		brne .L121
 4239               	.LVL236:
 4240               	.LBB1499:
 4241               	.LBB1500:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4242               		.loc 6 168 0
 4243 10dc E093 0000 		sts endpoints+28,r30
 4244 10e0 F093 0000 		sts endpoints+28+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4245               		.loc 6 169 0
 4246 10e4 4093 0000 		sts endpoints+26,r20
 4247 10e8 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4248               		.loc 6 174 0
 4249 10ec F701      		movw r30,r14
 4250               	/* #APP */
 4251               	 ;  174 "usb/usb.h" 1
 4252 10ee 02E2      		ldi r16, 34
 4253 10f0 0693      		.dc.w 0x9306
 4254               		
 4255               	 ;  0 "" 2
 4256               	/* #NOAPP */
 4257 10f2 00C0      		rjmp .L113
 4258               	.LVL237:
 4259               	.L121:
 4260               	.LBE1500:
 4261               	.LBE1499:
 4262               	.LBB1501:
 4263               	.LBB1502:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4264               		.loc 6 168 0
 4265 10f4 E093 0000 		sts endpoints+20,r30
 4266 10f8 F093 0000 		sts endpoints+20+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4267               		.loc 6 169 0
 4268 10fc 4093 0000 		sts endpoints+18,r20
 4269 1100 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4270               		.loc 6 176 0
 4271 1104 F701      		movw r30,r14
 4272               	/* #APP */
 4273               	 ;  176 "usb/usb.h" 1
 4274 1106 04E1      		ldi r16, 20
 4275 1108 0693      		.dc.w 0x9306
 4276               		
 4277               	 ;  0 "" 2
 4278               	/* #NOAPP */
 4279 110a 00C0      		rjmp .L113
 4280               	.LVL238:
 4281               	.L199:
 4282               	.LBE1502:
 4283               	.LBE1501:
 4284               	.LBE1503:
 4285               	.LBE1534:
 4286               	.LBE1536:
 4287               	.LBE1538:
 4288               	.LBE1546:
 4289               	.LBE1547:
 4290               	.LBE1548:
 4291               	.LBE1549:
 4292               	.LBE1554:
 4293               	.LBE1556:
 4294               	.LBE1558:
 4295               	.LBE1736:
 4296               	.LBB1737:
 4297               	.LBB1637:
 4298               	.LBB1576:
 4299               	.LBB1573:
 4300               	.LBB1572:
 4301               	.LBB1571:
 4302               	.LBB1566:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 4303               		.loc 5 57 0
 4304 110c 8091 0000 		lds r24,ep_in_pipe_data+4
 4305 1110 392F      		mov r19,r25
 4306 1112 381B      		sub r19,r24
 4307               	.LBE1566:
 4308               	.LBE1571:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 4309               		.loc 3 127 0
 4310 1114 81E0      		ldi r24,lo8(1)
 4311 1116 1316      		cp __zero_reg__,r19
 4312 1118 04F4      		brge .+2
 4313 111a 00C0      		rjmp .L123
 4314 111c 00C0      		rjmp .L169
 4315               	.LVL239:
 4316               	.L192:
 4317               	.LBE1572:
 4318               	.LBE1573:
 4319               	.LBE1576:
 4320               	.LBE1637:
 4321               	.LBE1737:
 4322               	.LBE1287:
 4323               	.LBB1743:
 4324               	.LBB1284:
 4325               	.LBB1281:
 4326               	.LBB1253:
 4327               	.LBB1250:
 4328               	.LBB1247:
 4329               	.LBB1244:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 4330               		.loc 3 88 0
 4331 111e 82E0      		ldi r24,lo8(2)
 4332 1120 8093 0000 		sts ep_in_data+1,r24
 4333               	.LBB1233:
 4334               	.LBB1234:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4335               		.loc 5 62 0
 4336 1124 6091 0000 		lds r22,ep_in_pipe_data
 4337 1128 3091 0000 		lds r19,ep_in_pipe_data+1
 4338               	.LBE1234:
 4339               	.LBE1233:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 4340               		.loc 3 90 0
 4341 112c 4091 0000 		lds r20,ep_in_data+2
 4342 1130 5091 0000 		lds r21,ep_in_data+2+1
 4343               	.LVL240:
 4344               	.LBB1235:
 4345               	.LBB1236:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4346               		.loc 3 68 0
 4347 1134 8091 0000 		lds r24,ep_in_data
 4348               	.LVL241:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4349               		.loc 3 69 0
 4350 1138 91E0      		ldi r25,lo8(1)
 4351 113a 8130      		cpi r24,lo8(1)
 4352 113c 01F4      		brne .L159
 4353 113e 90E0      		ldi r25,lo8(0)
 4354               	.L159:
 4355 1140 9093 0000 		sts ep_in_data,r25
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4356               		.loc 3 72 0
 4357 1144 8823      		tst r24
 4358 1146 01F0      		breq .+2
 4359 1148 00C0      		rjmp .L160
 4360               	.LVL242:
 4361               	.LBB1237:
 4362               	.LBB1238:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4363               		.loc 6 168 0
 4364 114a 862F      		mov r24,r22
 4365 114c 932F      		mov r25,r19
 4366 114e 8093 0000 		sts endpoints+28,r24
 4367 1152 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4368               		.loc 6 169 0
 4369 1156 4093 0000 		sts endpoints+26,r20
 4370 115a 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4371               		.loc 6 174 0
 4372 115e E0E0      		ldi r30,lo8(endpoints+24)
 4373 1160 F0E0      		ldi r31,hi8(endpoints+24)
 4374               	.LVL243:
 4375               	/* #APP */
 4376               	 ;  174 "usb/usb.h" 1
 4377 1162 02E2      		ldi r16, 34
 4378 1164 0693      		.dc.w 0x9306
 4379               		
 4380               	 ;  0 "" 2
 4381               	/* #NOAPP */
 4382 1166 00C0      		rjmp .L152
 4383               	.LVL244:
 4384               	.L196:
 4385               	.LBE1238:
 4386               	.LBE1237:
 4387               	.LBE1236:
 4388               	.LBE1235:
 4389               	.LBE1244:
 4390               	.LBE1247:
 4391               	.LBE1250:
 4392               	.LBE1253:
 4393               	.LBE1281:
 4394               	.LBE1284:
 4395               	.LBE1743:
 4396               	.LBB1744:
 4397               	.LBB1738:
 4398               	.LBB1463:
 4399               	.LBB1402:
 4400               	.LBB1403:
 4401               	.LBB1404:
 4402               	.LBB1405:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 4403               		.loc 3 177 0
 4404 1168 7FB7      		in r23,__SREG__
 4405               	.LVL245:
 4406               	.LBB1406:
 4407               	.LBB1407:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4408               		.loc 4 50 0
 4409               	/* #APP */
 4410               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4411 116a F894      		cli
 4412               	 ;  0 "" 2
 4413               	.LVL246:
 4414               	/* #NOAPP */
 4415               	.LBE1407:
 4416               	.LBE1406:
 4417               		.loc 3 178 0
 4418 116c 1092 0000 		sts ep_in_data+2,__zero_reg__
 4419 1170 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4420               	.LVL247:
 4421               	.LBB1408:
 4422               	.LBB1409:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 4423               		.loc 5 81 0
 4424 1174 8091 0000 		lds r24,ep_in_pipe_data+4
 4425 1178 8F5F      		subi r24,lo8(-(1))
 4426 117a 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 4427               		.loc 5 82 0
 4428 117e 8091 0000 		lds r24,ep_in_pipe_data+2
 4429 1182 9091 0000 		lds r25,ep_in_pipe_data+2+1
 4430 1186 805C      		subi r24,lo8(-(64))
 4431 1188 9F4F      		sbci r25,hi8(-(64))
 4432 118a 8093 0000 		sts ep_in_pipe_data+2,r24
 4433 118e 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4434               		.loc 5 84 0
 4435 1192 30E0      		ldi r19,hi8(ep_in_pipe_buffer+512)
 4436 1194 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4437 1196 9307      		cpc r25,r19
 4438 1198 01F4      		brne .L97
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 4439               		.loc 5 85 0
 4440 119a 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 4441 119c 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 4442 119e 8093 0000 		sts ep_in_pipe_data+2,r24
 4443 11a2 9093 0000 		sts ep_in_pipe_data+2+1,r25
 4444               	.L97:
 4445               	.LVL248:
 4446               	.LBE1409:
 4447               	.LBE1408:
 4448               	.LBB1410:
 4449               	.LBB1411:
 4450               	.LBB1412:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 4451               		.loc 3 80 0
 4452 11a6 6FB7      		in r22,__SREG__
 4453               	.LVL249:
 4454               	.LBB1413:
 4455               	.LBB1414:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4456               		.loc 4 50 0
 4457               	/* #APP */
 4458               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4459 11a8 F894      		cli
 4460               	 ;  0 "" 2
 4461               	.LVL250:
 4462               	/* #NOAPP */
 4463               	.LBE1414:
 4464               	.LBE1413:
 4465               	.LBB1415:
 4466               	.LBB1416:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 4467               		.loc 6 220 0
 4468 11aa 8091 0000 		lds r24,endpoints+24
 4469 11ae 8670      		andi r24,lo8(6)
 4470               	.LBE1416:
 4471               	.LBE1415:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 4472               		.loc 3 82 0
 4473 11b0 01F0      		breq .L98
 4474               	.LBB1417:
 4475               	.LBB1418:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 4476               		.loc 5 51 0
 4477 11b2 4091 0000 		lds r20,ep_in_pipe_data+4
 4478               	.LBE1418:
 4479               	.LBE1417:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 4480               		.loc 3 83 0
 4481 11b6 1416      		cp __zero_reg__,r20
 4482 11b8 04F0      		brlt .+2
 4483 11ba 00C0      		rjmp .L99
 4484               	.LBB1419:
 4485               	.LBB1420:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4486               		.loc 5 62 0
 4487 11bc 8091 0000 		lds r24,ep_in_pipe_data
 4488 11c0 9091 0000 		lds r25,ep_in_pipe_data+1
 4489               	.LVL251:
 4490               	.LBE1420:
 4491               	.LBE1419:
 4492               	.LBB1421:
 4493               	.LBB1422:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4494               		.loc 3 68 0
 4495 11c4 2091 0000 		lds r18,ep_in_data
 4496               	.LVL252:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4497               		.loc 3 69 0
 4498 11c8 31E0      		ldi r19,lo8(1)
 4499 11ca 2130      		cpi r18,lo8(1)
 4500 11cc 01F4      		brne .L100
 4501 11ce 30E0      		ldi r19,lo8(0)
 4502               	.L100:
 4503 11d0 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4504               		.loc 3 72 0
 4505 11d4 2223      		tst r18
 4506 11d6 01F4      		brne .L101
 4507               	.LVL253:
 4508               	.LBB1423:
 4509               	.LBB1424:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4510               		.loc 6 168 0
 4511 11d8 8093 0000 		sts endpoints+28,r24
 4512 11dc 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4513               		.loc 6 169 0
 4514 11e0 20E4      		ldi r18,lo8(64)
 4515 11e2 30E0      		ldi r19,hi8(64)
 4516 11e4 2093 0000 		sts endpoints+26,r18
 4517 11e8 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4518               		.loc 6 174 0
 4519 11ec E0E0      		ldi r30,lo8(endpoints+24)
 4520 11ee F0E0      		ldi r31,hi8(endpoints+24)
 4521               	.LVL254:
 4522               	/* #APP */
 4523               	 ;  174 "usb/usb.h" 1
 4524 11f0 02E2      		ldi r16, 34
 4525 11f2 0693      		.dc.w 0x9306
 4526               		
 4527               	 ;  0 "" 2
 4528               	.LVL255:
 4529               	/* #NOAPP */
 4530               	.L102:
 4531               	.LBE1424:
 4532               	.LBE1423:
 4533               	.LBE1422:
 4534               	.LBE1421:
 4535               	.LBB1428:
 4536               	.LBB1429:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 4537               		.loc 5 72 0
 4538 11f4 4150      		subi r20,lo8(-(-1))
 4539 11f6 4093 0000 		sts ep_in_pipe_data+4,r20
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 4540               		.loc 5 73 0
 4541 11fa 805C      		subi r24,lo8(-(64))
 4542 11fc 9F4F      		sbci r25,hi8(-(64))
 4543 11fe 8093 0000 		sts ep_in_pipe_data,r24
 4544 1202 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4545               		.loc 5 75 0
 4546 1206 A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 4547 1208 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4548 120a 9A07      		cpc r25,r26
 4549 120c 01F0      		breq .L207
 4550               	.LVL256:
 4551               	.L98:
 4552               	.LBE1429:
 4553               	.LBE1428:
 4554               	.LBB1431:
 4555               	.LBB1432:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4556               		.loc 4 70 0
 4557 120e 6FBF      		out __SREG__,r22
 4558               		.loc 4 71 0
 4559               	.LVL257:
 4560               	.LBE1432:
 4561               	.LBE1431:
 4562               	.LBE1412:
 4563               	.LBE1411:
 4564               	.LBE1410:
 4565               	.LBB1454:
 4566               	.LBB1455:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4567               		.loc 4 70 0
 4568 1210 7FBF      		out __SREG__,r23
 4569               		.loc 4 71 0
 4570 1212 00C0      		rjmp .L96
 4571               	.LVL258:
 4572               	.L101:
 4573               	.LBE1455:
 4574               	.LBE1454:
 4575               	.LBB1456:
 4576               	.LBB1452:
 4577               	.LBB1450:
 4578               	.LBB1433:
 4579               	.LBB1427:
 4580               	.LBB1425:
 4581               	.LBB1426:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4582               		.loc 6 168 0
 4583 1214 8093 0000 		sts endpoints+20,r24
 4584 1218 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4585               		.loc 6 169 0
 4586 121c 20E4      		ldi r18,lo8(64)
 4587 121e 30E0      		ldi r19,hi8(64)
 4588               	.LVL259:
 4589 1220 2093 0000 		sts endpoints+18,r18
 4590 1224 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4591               		.loc 6 176 0
 4592 1228 E0E0      		ldi r30,lo8(endpoints+24)
 4593 122a F0E0      		ldi r31,hi8(endpoints+24)
 4594               	/* #APP */
 4595               	 ;  176 "usb/usb.h" 1
 4596 122c 04E1      		ldi r16, 20
 4597 122e 0693      		.dc.w 0x9306
 4598               		
 4599               	 ;  0 "" 2
 4600               	/* #NOAPP */
 4601 1230 00C0      		rjmp .L102
 4602               	.LVL260:
 4603               	.L99:
 4604               	.LBE1426:
 4605               	.LBE1425:
 4606               	.LBE1427:
 4607               	.LBE1433:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 4608               		.loc 3 87 0
 4609 1232 8091 0000 		lds r24,ep_in_data+1
 4610 1236 8130      		cpi r24,lo8(1)
 4611 1238 01F0      		breq .L208
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4612               		.loc 3 91 0
 4613 123a 8230      		cpi r24,lo8(2)
 4614 123c 01F4      		brne .L98
 4615               	.LVL261:
 4616               	.LBB1434:
 4617               	.LBB1435:
 4618               	.LBB1436:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 4619               		.loc 6 228 0
 4620 123e 8091 0000 		lds r24,endpoints+24
 4621 1242 8670      		andi r24,lo8(6)
 4622               	.LBE1436:
 4623               	.LBE1435:
 4624               	.LBE1434:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4625               		.loc 3 91 0
 4626 1244 8630      		cpi r24,lo8(6)
 4627 1246 01F4      		brne .L98
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 4628               		.loc 3 92 0
 4629 1248 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 4630               		.loc 3 93 0
 4631 124c 1092 0000 		sts ep_in_data+2,__zero_reg__
 4632 1250 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4633               	.LBB1437:
 4634               	.LBB1438:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 4635               		.loc 5 90 0
 4636 1254 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 4637               		.loc 5 91 0
 4638 1258 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 4639 125a 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 4640 125c 8093 0000 		sts ep_in_pipe_data+2,r24
 4641 1260 9093 0000 		sts ep_in_pipe_data+2+1,r25
 4642 1264 8093 0000 		sts ep_in_pipe_data,r24
 4643 1268 9093 0000 		sts ep_in_pipe_data+1,r25
 4644               	.LVL262:
 4645 126c 00C0      		rjmp .L98
 4646               	.LVL263:
 4647               	.L207:
 4648               	.LBE1438:
 4649               	.LBE1437:
 4650               	.LBB1439:
 4651               	.LBB1430:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 4652               		.loc 5 76 0
 4653 126e 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 4654 1270 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 4655 1272 8093 0000 		sts ep_in_pipe_data,r24
 4656 1276 9093 0000 		sts ep_in_pipe_data+1,r25
 4657 127a 00C0      		rjmp .L98
 4658               	.LVL264:
 4659               	.L208:
 4660               	.LBE1430:
 4661               	.LBE1439:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 4662               		.loc 3 88 0
 4663 127c 82E0      		ldi r24,lo8(2)
 4664 127e 8093 0000 		sts ep_in_data+1,r24
 4665               	.LBB1440:
 4666               	.LBB1441:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4667               		.loc 5 62 0
 4668 1282 4091 0000 		lds r20,ep_in_pipe_data
 4669 1286 5091 0000 		lds r21,ep_in_pipe_data+1
 4670               	.LBE1441:
 4671               	.LBE1440:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 4672               		.loc 3 90 0
 4673 128a 8091 0000 		lds r24,ep_in_data+2
 4674 128e 9091 0000 		lds r25,ep_in_data+2+1
 4675               	.LVL265:
 4676               	.LBB1442:
 4677               	.LBB1443:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4678               		.loc 3 68 0
 4679 1292 2091 0000 		lds r18,ep_in_data
 4680               	.LVL266:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4681               		.loc 3 69 0
 4682 1296 31E0      		ldi r19,lo8(1)
 4683 1298 2130      		cpi r18,lo8(1)
 4684 129a 01F4      		brne .L105
 4685 129c 30E0      		ldi r19,lo8(0)
 4686               	.L105:
 4687 129e 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4688               		.loc 3 72 0
 4689 12a2 2223      		tst r18
 4690 12a4 01F0      		breq .+2
 4691 12a6 00C0      		rjmp .L106
 4692               	.LVL267:
 4693               	.LBB1444:
 4694               	.LBB1445:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4695               		.loc 6 168 0
 4696 12a8 4093 0000 		sts endpoints+28,r20
 4697 12ac 5093 0000 		sts endpoints+28+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4698               		.loc 6 169 0
 4699 12b0 8093 0000 		sts endpoints+26,r24
 4700 12b4 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4701               		.loc 6 174 0
 4702 12b8 E0E0      		ldi r30,lo8(endpoints+24)
 4703 12ba F0E0      		ldi r31,hi8(endpoints+24)
 4704               	.LVL268:
 4705               	/* #APP */
 4706               	 ;  174 "usb/usb.h" 1
 4707 12bc 02E2      		ldi r16, 34
 4708 12be 0693      		.dc.w 0x9306
 4709               		
 4710               	 ;  0 "" 2
 4711               	/* #NOAPP */
 4712 12c0 00C0      		rjmp .L98
 4713               	.LVL269:
 4714               	.L201:
 4715               	.LBE1445:
 4716               	.LBE1444:
 4717               	.LBE1443:
 4718               	.LBE1442:
 4719               	.LBE1450:
 4720               	.LBE1452:
 4721               	.LBE1456:
 4722               	.LBE1405:
 4723               	.LBE1404:
 4724               	.LBE1403:
 4725               	.LBE1402:
 4726               	.LBE1463:
 4727               	.LBE1738:
 4728               	.LBB1739:
 4729               	.LBB1733:
 4730               	.LBB1731:
 4731               	.LBB1728:
 4732               	.LBB1657:
 4733               	.LBB1655:
 4734               	.LBB1653:
 4735               	.LBB1648:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 4736               		.loc 5 57 0
 4737 12c2 8091 0000 		lds r24,ep_in_pipe_data+4
 4738 12c6 342F      		mov r19,r20
 4739 12c8 381B      		sub r19,r24
 4740               	.LBE1648:
 4741               	.LBE1653:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 4742               		.loc 3 127 0
 4743 12ca 81E0      		ldi r24,lo8(1)
 4744 12cc 1316      		cp __zero_reg__,r19
 4745 12ce 04F4      		brge .+2
 4746 12d0 00C0      		rjmp .L137
 4747 12d2 00C0      		rjmp .L170
 4748               	.LVL270:
 4749               	.L202:
 4750               	.LBE1655:
 4751               	.LBE1657:
 4752               	.LBE1728:
 4753               	.LBB1729:
 4754               	.LBB1724:
 4755               	.LBB1723:
 4756               	.LBB1722:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 4757               		.loc 3 177 0
 4758 12d4 9FB6      		in r9,__SREG__
 4759               	.LVL271:
 4760               	.LBB1714:
 4761               	.LBB1715:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4762               		.loc 4 50 0
 4763               	/* #APP */
 4764               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4765 12d6 F894      		cli
 4766               	 ;  0 "" 2
 4767               	.LVL272:
 4768               	/* #NOAPP */
 4769               	.LBE1715:
 4770               	.LBE1714:
 4771               		.loc 3 178 0
 4772 12d8 1092 0000 		sts ep_in_data+2,__zero_reg__
 4773 12dc 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4774               	.LVL273:
 4775               	.LBB1716:
 4776               	.LBB1717:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 4777               		.loc 5 81 0
 4778 12e0 8091 0000 		lds r24,ep_in_pipe_data+4
 4779 12e4 8F5F      		subi r24,lo8(-(1))
 4780 12e6 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 4781               		.loc 5 82 0
 4782 12ea 8091 0000 		lds r24,ep_in_pipe_data+2
 4783 12ee 9091 0000 		lds r25,ep_in_pipe_data+2+1
 4784 12f2 805C      		subi r24,lo8(-(64))
 4785 12f4 9F4F      		sbci r25,hi8(-(64))
 4786 12f6 8093 0000 		sts ep_in_pipe_data+2,r24
 4787 12fa 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4788               		.loc 5 84 0
 4789 12fe F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 4790 1300 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4791 1302 9F07      		cpc r25,r31
 4792 1304 01F4      		brne .L141
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 4793               		.loc 5 85 0
 4794 1306 6092 0000 		sts ep_in_pipe_data+2,r6
 4795 130a 7092 0000 		sts ep_in_pipe_data+2+1,r7
 4796               	.L141:
 4797               	.LVL274:
 4798               	.LBE1717:
 4799               	.LBE1716:
 4800               	.LBB1718:
 4801               	.LBB1712:
 4802               	.LBB1710:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 4803               		.loc 3 80 0
 4804 130e 3FB7      		in r19,__SREG__
 4805               	.LVL275:
 4806               	.LBB1689:
 4807               	.LBB1690:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4808               		.loc 4 50 0
 4809               	/* #APP */
 4810               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4811 1310 F894      		cli
 4812               	 ;  0 "" 2
 4813               	.LVL276:
 4814               	/* #NOAPP */
 4815               	.LBE1690:
 4816               	.LBE1689:
 4817               	.LBB1691:
 4818               	.LBB1667:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 4819               		.loc 6 220 0
 4820 1312 8091 0000 		lds r24,endpoints+24
 4821 1316 8670      		andi r24,lo8(6)
 4822               	.LBE1667:
 4823               	.LBE1691:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 4824               		.loc 3 82 0
 4825 1318 01F4      		brne .L209
 4826               	.LVL277:
 4827               	.L142:
 4828               	.LBB1692:
 4829               	.LBB1693:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4830               		.loc 4 70 0
 4831 131a 3FBF      		out __SREG__,r19
 4832               		.loc 4 71 0
 4833               	.LVL278:
 4834               	.LBE1693:
 4835               	.LBE1692:
 4836               	.LBE1710:
 4837               	.LBE1712:
 4838               	.LBE1718:
 4839               	.LBB1719:
 4840               	.LBB1720:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4841               		.loc 4 70 0
 4842 131c 9FBE      		out __SREG__,r9
 4843               		.loc 4 71 0
 4844 131e 00C0      		rjmp .L140
 4845               	.LVL279:
 4846               	.L209:
 4847               	.LBE1720:
 4848               	.LBE1719:
 4849               	.LBB1721:
 4850               	.LBB1713:
 4851               	.LBB1711:
 4852               	.LBB1694:
 4853               	.LBB1695:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 4854               		.loc 5 51 0
 4855 1320 2091 0000 		lds r18,ep_in_pipe_data+4
 4856               	.LBE1695:
 4857               	.LBE1694:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 4858               		.loc 3 83 0
 4859 1324 1216      		cp __zero_reg__,r18
 4860 1326 04F0      		brlt .+2
 4861 1328 00C0      		rjmp .L143
 4862               	.LBB1696:
 4863               	.LBB1697:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4864               		.loc 5 62 0
 4865 132a 6091 0000 		lds r22,ep_in_pipe_data
 4866 132e 7091 0000 		lds r23,ep_in_pipe_data+1
 4867               	.LVL280:
 4868               	.LBE1697:
 4869               	.LBE1696:
 4870               	.LBB1698:
 4871               	.LBB1687:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4872               		.loc 3 68 0
 4873 1332 5091 0000 		lds r21,ep_in_data
 4874               	.LVL281:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4875               		.loc 3 69 0
 4876 1336 852F      		mov r24,r21
 4877 1338 90E0      		ldi r25,lo8(0)
 4878 133a E1E0      		ldi r30,lo8(1)
 4879 133c 8E15      		cp r24,r14
 4880 133e 9F05      		cpc r25,r15
 4881 1340 01F4      		brne .L144
 4882 1342 E0E0      		ldi r30,lo8(0)
 4883               	.L144:
 4884 1344 E093 0000 		sts ep_in_data,r30
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4885               		.loc 3 72 0
 4886 1348 5523      		tst r21
 4887 134a 01F4      		brne .L145
 4888               	.LVL282:
 4889               	.LBB1684:
 4890               	.LBB1685:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4891               		.loc 6 168 0
 4892 134c 6093 0000 		sts endpoints+28,r22
 4893 1350 7093 0000 		sts endpoints+28+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4894               		.loc 6 169 0
 4895 1354 C092 0000 		sts endpoints+26,r12
 4896 1358 D092 0000 		sts endpoints+26+1,r13
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4897               		.loc 6 174 0
 4898 135c FD01      		movw r30,r26
 4899               	/* #APP */
 4900               	 ;  174 "usb/usb.h" 1
 4901 135e 02E2      		ldi r16, 34
 4902 1360 0693      		.dc.w 0x9306
 4903               		
 4904               	 ;  0 "" 2
 4905               	.LVL283:
 4906               	/* #NOAPP */
 4907               	.L146:
 4908               	.LBE1685:
 4909               	.LBE1684:
 4910               	.LBE1687:
 4911               	.LBE1698:
 4912               	.LBB1699:
 4913               	.LBB1700:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 4914               		.loc 5 72 0
 4915 1362 2150      		subi r18,lo8(-(-1))
 4916 1364 2093 0000 		sts ep_in_pipe_data+4,r18
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 4917               		.loc 5 73 0
 4918 1368 CB01      		movw r24,r22
 4919 136a 805C      		subi r24,lo8(-(64))
 4920 136c 9F4F      		sbci r25,hi8(-(64))
 4921 136e 8093 0000 		sts ep_in_pipe_data,r24
 4922 1372 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4923               		.loc 5 75 0
 4924 1376 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 4925 1378 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4926 137a 9F07      		cpc r25,r31
 4927 137c 01F4      		brne .L142
 4928               	.LBE1700:
 4929               	.LBE1699:
 4930               	.LBB1701:
 4931               	.LBB1670:
 4932               		.loc 5 91 0
 4933 137e 6092 0000 		sts ep_in_pipe_data,r6
 4934 1382 7092 0000 		sts ep_in_pipe_data+1,r7
 4935               	.LVL284:
 4936 1386 00C0      		rjmp .L142
 4937               	.LVL285:
 4938               	.L145:
 4939               	.LBE1670:
 4940               	.LBE1701:
 4941               	.LBB1702:
 4942               	.LBB1688:
 4943               	.LBB1686:
 4944               	.LBB1683:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4945               		.loc 6 168 0
 4946 1388 6093 0000 		sts endpoints+20,r22
 4947 138c 7093 0000 		sts endpoints+20+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4948               		.loc 6 169 0
 4949 1390 C092 0000 		sts endpoints+18,r12
 4950 1394 D092 0000 		sts endpoints+18+1,r13
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4951               		.loc 6 176 0
 4952 1398 FD01      		movw r30,r26
 4953               	/* #APP */
 4954               	 ;  176 "usb/usb.h" 1
 4955 139a 04E1      		ldi r16, 20
 4956 139c 0693      		.dc.w 0x9306
 4957               		
 4958               	 ;  0 "" 2
 4959               	/* #NOAPP */
 4960 139e 00C0      		rjmp .L146
 4961               	.LVL286:
 4962               	.L143:
 4963               	.LBE1683:
 4964               	.LBE1686:
 4965               	.LBE1688:
 4966               	.LBE1702:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 4967               		.loc 3 87 0
 4968 13a0 8091 0000 		lds r24,ep_in_data+1
 4969 13a4 8130      		cpi r24,lo8(1)
 4970 13a6 01F0      		breq .L210
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4971               		.loc 3 91 0
 4972 13a8 8230      		cpi r24,lo8(2)
 4973 13aa 01F0      		breq .+2
 4974 13ac 00C0      		rjmp .L142
 4975               	.LVL287:
 4976               	.LBB1703:
 4977               	.LBB1704:
 4978               	.LBB1705:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 4979               		.loc 6 228 0
 4980 13ae 8091 0000 		lds r24,endpoints+24
 4981 13b2 8670      		andi r24,lo8(6)
 4982               	.LBE1705:
 4983               	.LBE1704:
 4984               	.LBE1703:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4985               		.loc 3 91 0
 4986 13b4 8630      		cpi r24,lo8(6)
 4987 13b6 01F0      		breq .+2
 4988 13b8 00C0      		rjmp .L142
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 4989               		.loc 3 92 0
 4990 13ba 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 4991               		.loc 3 93 0
 4992 13be 1092 0000 		sts ep_in_data+2,__zero_reg__
 4993 13c2 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4994               	.LBB1706:
 4995               	.LBB1671:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 4996               		.loc 5 90 0
 4997 13c6 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 4998               		.loc 5 91 0
 4999 13ca 6092 0000 		sts ep_in_pipe_data+2,r6
 5000 13ce 7092 0000 		sts ep_in_pipe_data+2+1,r7
 5001 13d2 6092 0000 		sts ep_in_pipe_data,r6
 5002 13d6 7092 0000 		sts ep_in_pipe_data+1,r7
 5003               	.LVL288:
 5004 13da 00C0      		rjmp .L142
 5005               	.LVL289:
 5006               	.L210:
 5007               	.LBE1671:
 5008               	.LBE1706:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 5009               		.loc 3 88 0
 5010 13dc 1093 0000 		sts ep_in_data+1,r17
 5011               	.LBB1707:
 5012               	.LBB1708:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5013               		.loc 5 62 0
 5014 13e0 E091 0000 		lds r30,ep_in_pipe_data
 5015 13e4 F091 0000 		lds r31,ep_in_pipe_data+1
 5016               	.LBE1708:
 5017               	.LBE1707:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 5018               		.loc 3 90 0
 5019 13e8 6091 0000 		lds r22,ep_in_data+2
 5020 13ec 7091 0000 		lds r23,ep_in_data+2+1
 5021               	.LVL290:
 5022               	.LBB1709:
 5023               	.LBB1678:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5024               		.loc 3 68 0
 5025 13f0 5091 0000 		lds r21,ep_in_data
 5026               	.LVL291:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5027               		.loc 3 69 0
 5028 13f4 852F      		mov r24,r21
 5029 13f6 90E0      		ldi r25,lo8(0)
 5030 13f8 21E0      		ldi r18,lo8(1)
 5031 13fa 8E15      		cp r24,r14
 5032 13fc 9F05      		cpc r25,r15
 5033 13fe 01F4      		brne .L149
 5034 1400 20E0      		ldi r18,lo8(0)
 5035               	.L149:
 5036 1402 2093 0000 		sts ep_in_data,r18
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5037               		.loc 3 72 0
 5038 1406 5523      		tst r21
 5039 1408 01F4      		brne .L150
 5040               	.LVL292:
 5041               	.LBB1674:
 5042               	.LBB1675:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5043               		.loc 6 168 0
 5044 140a E093 0000 		sts endpoints+28,r30
 5045 140e F093 0000 		sts endpoints+28+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5046               		.loc 6 169 0
 5047 1412 6093 0000 		sts endpoints+26,r22
 5048 1416 7093 0000 		sts endpoints+26+1,r23
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5049               		.loc 6 174 0
 5050 141a FD01      		movw r30,r26
 5051               	/* #APP */
 5052               	 ;  174 "usb/usb.h" 1
 5053 141c 02E2      		ldi r16, 34
 5054 141e 0693      		.dc.w 0x9306
 5055               		
 5056               	 ;  0 "" 2
 5057               	/* #NOAPP */
 5058 1420 00C0      		rjmp .L142
 5059               	.LVL293:
 5060               	.L150:
 5061               	.LBE1675:
 5062               	.LBE1674:
 5063               	.LBB1676:
 5064               	.LBB1677:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5065               		.loc 6 168 0
 5066 1422 E093 0000 		sts endpoints+20,r30
 5067 1426 F093 0000 		sts endpoints+20+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5068               		.loc 6 169 0
 5069 142a 6093 0000 		sts endpoints+18,r22
 5070 142e 7093 0000 		sts endpoints+18+1,r23
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5071               		.loc 6 176 0
 5072 1432 FD01      		movw r30,r26
 5073               	/* #APP */
 5074               	 ;  176 "usb/usb.h" 1
 5075 1434 04E1      		ldi r16, 20
 5076 1436 0693      		.dc.w 0x9306
 5077               		
 5078               	 ;  0 "" 2
 5079               	/* #NOAPP */
 5080 1438 00C0      		rjmp .L142
 5081               	.LVL294:
 5082               	.L200:
 5083               	.LBE1677:
 5084               	.LBE1676:
 5085               	.LBE1678:
 5086               	.LBE1709:
 5087               	.LBE1711:
 5088               	.LBE1713:
 5089               	.LBE1721:
 5090               	.LBE1722:
 5091               	.LBE1723:
 5092               	.LBE1724:
 5093               	.LBE1729:
 5094               	.LBE1731:
 5095               	.LBE1733:
 5096               	.LBE1739:
 5097               	.LBB1740:
 5098               	.LBB1638:
 5099               	.LBB1577:
 5100               	.LBB1578:
 5101               	.LBB1579:
 5102               	.LBB1580:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 5103               		.loc 3 177 0
 5104 143a 6FB7      		in r22,__SREG__
 5105               	.LVL295:
 5106               	.LBB1581:
 5107               	.LBB1582:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 5108               		.loc 4 50 0
 5109               	/* #APP */
 5110               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 5111 143c F894      		cli
 5112               	 ;  0 "" 2
 5113               	.LVL296:
 5114               	/* #NOAPP */
 5115               	.LBE1582:
 5116               	.LBE1581:
 5117               		.loc 3 178 0
 5118 143e 1092 0000 		sts ep_in_data+2,__zero_reg__
 5119 1442 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 5120               	.LVL297:
 5121               	.LBB1583:
 5122               	.LBB1584:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 5123               		.loc 5 81 0
 5124 1446 8091 0000 		lds r24,ep_in_pipe_data+4
 5125 144a 8F5F      		subi r24,lo8(-(1))
 5126 144c 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 5127               		.loc 5 82 0
 5128 1450 8091 0000 		lds r24,ep_in_pipe_data+2
 5129 1454 9091 0000 		lds r25,ep_in_pipe_data+2+1
 5130 1458 805C      		subi r24,lo8(-(64))
 5131 145a 9F4F      		sbci r25,hi8(-(64))
 5132 145c 8093 0000 		sts ep_in_pipe_data+2,r24
 5133 1460 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 5134               		.loc 5 84 0
 5135 1464 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 5136 1466 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 5137 1468 9F07      		cpc r25,r31
 5138 146a 01F4      		brne .L127
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 5139               		.loc 5 85 0
 5140 146c 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5141 146e 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5142 1470 8093 0000 		sts ep_in_pipe_data+2,r24
 5143 1474 9093 0000 		sts ep_in_pipe_data+2+1,r25
 5144               	.L127:
 5145               	.LVL298:
 5146               	.LBE1584:
 5147               	.LBE1583:
 5148               	.LBB1585:
 5149               	.LBB1586:
 5150               	.LBB1587:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 5151               		.loc 3 80 0
 5152 1478 5FB7      		in r21,__SREG__
 5153               	.LVL299:
 5154               	.LBB1588:
 5155               	.LBB1589:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 5156               		.loc 4 50 0
 5157               	/* #APP */
 5158               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 5159 147a F894      		cli
 5160               	 ;  0 "" 2
 5161               	.LVL300:
 5162               	/* #NOAPP */
 5163               	.LBE1589:
 5164               	.LBE1588:
 5165               	.LBB1590:
 5166               	.LBB1591:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 5167               		.loc 6 220 0
 5168 147c 8091 0000 		lds r24,endpoints+24
 5169 1480 8670      		andi r24,lo8(6)
 5170               	.LBE1591:
 5171               	.LBE1590:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 5172               		.loc 3 82 0
 5173 1482 01F0      		breq .L128
 5174               	.LBB1592:
 5175               	.LBB1593:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 5176               		.loc 5 51 0
 5177 1484 4091 0000 		lds r20,ep_in_pipe_data+4
 5178               	.LBE1593:
 5179               	.LBE1592:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 5180               		.loc 3 83 0
 5181 1488 1416      		cp __zero_reg__,r20
 5182 148a 04F0      		brlt .+2
 5183 148c 00C0      		rjmp .L129
 5184               	.LBB1594:
 5185               	.LBB1595:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5186               		.loc 5 62 0
 5187 148e 8091 0000 		lds r24,ep_in_pipe_data
 5188 1492 9091 0000 		lds r25,ep_in_pipe_data+1
 5189               	.LVL301:
 5190               	.LBE1595:
 5191               	.LBE1594:
 5192               	.LBB1596:
 5193               	.LBB1597:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5194               		.loc 3 68 0
 5195 1496 2091 0000 		lds r18,ep_in_data
 5196               	.LVL302:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5197               		.loc 3 69 0
 5198 149a 31E0      		ldi r19,lo8(1)
 5199 149c 2130      		cpi r18,lo8(1)
 5200 149e 01F4      		brne .L130
 5201 14a0 30E0      		ldi r19,lo8(0)
 5202               	.L130:
 5203 14a2 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5204               		.loc 3 72 0
 5205 14a6 2223      		tst r18
 5206 14a8 01F4      		brne .L131
 5207               	.LVL303:
 5208               	.LBB1598:
 5209               	.LBB1599:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5210               		.loc 6 168 0
 5211 14aa 8093 0000 		sts endpoints+28,r24
 5212 14ae 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5213               		.loc 6 169 0
 5214 14b2 20E4      		ldi r18,lo8(64)
 5215 14b4 30E0      		ldi r19,hi8(64)
 5216 14b6 2093 0000 		sts endpoints+26,r18
 5217 14ba 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5218               		.loc 6 174 0
 5219 14be E0E0      		ldi r30,lo8(endpoints+24)
 5220 14c0 F0E0      		ldi r31,hi8(endpoints+24)
 5221               	.LVL304:
 5222               	/* #APP */
 5223               	 ;  174 "usb/usb.h" 1
 5224 14c2 02E2      		ldi r16, 34
 5225 14c4 0693      		.dc.w 0x9306
 5226               		
 5227               	 ;  0 "" 2
 5228               	.LVL305:
 5229               	/* #NOAPP */
 5230               	.L132:
 5231               	.LBE1599:
 5232               	.LBE1598:
 5233               	.LBE1597:
 5234               	.LBE1596:
 5235               	.LBB1603:
 5236               	.LBB1604:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 5237               		.loc 5 72 0
 5238 14c6 4150      		subi r20,lo8(-(-1))
 5239 14c8 4093 0000 		sts ep_in_pipe_data+4,r20
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 5240               		.loc 5 73 0
 5241 14cc 805C      		subi r24,lo8(-(64))
 5242 14ce 9F4F      		sbci r25,hi8(-(64))
 5243 14d0 8093 0000 		sts ep_in_pipe_data,r24
 5244 14d4 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 5245               		.loc 5 75 0
 5246 14d8 20E0      		ldi r18,hi8(ep_in_pipe_buffer+512)
 5247 14da 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 5248 14dc 9207      		cpc r25,r18
 5249 14de 01F0      		breq .L211
 5250               	.LVL306:
 5251               	.L128:
 5252               	.LBE1604:
 5253               	.LBE1603:
 5254               	.LBB1606:
 5255               	.LBB1607:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5256               		.loc 4 70 0
 5257 14e0 5FBF      		out __SREG__,r21
 5258               		.loc 4 71 0
 5259               	.LVL307:
 5260               	.LBE1607:
 5261               	.LBE1606:
 5262               	.LBE1587:
 5263               	.LBE1586:
 5264               	.LBE1585:
 5265               	.LBB1629:
 5266               	.LBB1630:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5267               		.loc 4 70 0
 5268 14e2 6FBF      		out __SREG__,r22
 5269               		.loc 4 71 0
 5270 14e4 00C0      		rjmp .L126
 5271               	.LVL308:
 5272               	.L131:
 5273               	.LBE1630:
 5274               	.LBE1629:
 5275               	.LBB1631:
 5276               	.LBB1627:
 5277               	.LBB1625:
 5278               	.LBB1608:
 5279               	.LBB1602:
 5280               	.LBB1600:
 5281               	.LBB1601:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5282               		.loc 6 168 0
 5283 14e6 8093 0000 		sts endpoints+20,r24
 5284 14ea 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5285               		.loc 6 169 0
 5286 14ee 20E4      		ldi r18,lo8(64)
 5287 14f0 30E0      		ldi r19,hi8(64)
 5288               	.LVL309:
 5289 14f2 2093 0000 		sts endpoints+18,r18
 5290 14f6 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5291               		.loc 6 176 0
 5292 14fa E0E0      		ldi r30,lo8(endpoints+24)
 5293 14fc F0E0      		ldi r31,hi8(endpoints+24)
 5294               	/* #APP */
 5295               	 ;  176 "usb/usb.h" 1
 5296 14fe 04E1      		ldi r16, 20
 5297 1500 0693      		.dc.w 0x9306
 5298               		
 5299               	 ;  0 "" 2
 5300               	/* #NOAPP */
 5301 1502 00C0      		rjmp .L132
 5302               	.LVL310:
 5303               	.L129:
 5304               	.LBE1601:
 5305               	.LBE1600:
 5306               	.LBE1602:
 5307               	.LBE1608:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 5308               		.loc 3 87 0
 5309 1504 8091 0000 		lds r24,ep_in_data+1
 5310 1508 8130      		cpi r24,lo8(1)
 5311 150a 01F0      		breq .L212
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5312               		.loc 3 91 0
 5313 150c 8230      		cpi r24,lo8(2)
 5314 150e 01F4      		brne .L128
 5315               	.LVL311:
 5316               	.LBB1609:
 5317               	.LBB1610:
 5318               	.LBB1611:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 5319               		.loc 6 228 0
 5320 1510 8091 0000 		lds r24,endpoints+24
 5321 1514 8670      		andi r24,lo8(6)
 5322               	.LBE1611:
 5323               	.LBE1610:
 5324               	.LBE1609:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5325               		.loc 3 91 0
 5326 1516 8630      		cpi r24,lo8(6)
 5327 1518 01F4      		brne .L128
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 5328               		.loc 3 92 0
 5329 151a 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 5330               		.loc 3 93 0
 5331 151e 1092 0000 		sts ep_in_data+2,__zero_reg__
 5332 1522 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 5333               	.LBB1612:
 5334               	.LBB1613:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 5335               		.loc 5 90 0
 5336 1526 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 5337               		.loc 5 91 0
 5338 152a 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5339 152c 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5340 152e 8093 0000 		sts ep_in_pipe_data+2,r24
 5341 1532 9093 0000 		sts ep_in_pipe_data+2+1,r25
 5342 1536 8093 0000 		sts ep_in_pipe_data,r24
 5343 153a 9093 0000 		sts ep_in_pipe_data+1,r25
 5344               	.LVL312:
 5345 153e 00C0      		rjmp .L128
 5346               	.LVL313:
 5347               	.L211:
 5348               	.LBE1613:
 5349               	.LBE1612:
 5350               	.LBB1614:
 5351               	.LBB1605:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 5352               		.loc 5 76 0
 5353 1540 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5354 1542 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5355 1544 8093 0000 		sts ep_in_pipe_data,r24
 5356 1548 9093 0000 		sts ep_in_pipe_data+1,r25
 5357 154c 00C0      		rjmp .L128
 5358               	.LVL314:
 5359               	.L212:
 5360               	.LBE1605:
 5361               	.LBE1614:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 5362               		.loc 3 88 0
 5363 154e 82E0      		ldi r24,lo8(2)
 5364 1550 8093 0000 		sts ep_in_data+1,r24
 5365               	.LBB1615:
 5366               	.LBB1616:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5367               		.loc 5 62 0
 5368 1554 7091 0000 		lds r23,ep_in_pipe_data
 5369 1558 4091 0000 		lds r20,ep_in_pipe_data+1
 5370               	.LBE1616:
 5371               	.LBE1615:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 5372               		.loc 3 90 0
 5373 155c 8091 0000 		lds r24,ep_in_data+2
 5374 1560 9091 0000 		lds r25,ep_in_data+2+1
 5375               	.LVL315:
 5376               	.LBB1617:
 5377               	.LBB1618:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5378               		.loc 3 68 0
 5379 1564 2091 0000 		lds r18,ep_in_data
 5380               	.LVL316:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5381               		.loc 3 69 0
 5382 1568 31E0      		ldi r19,lo8(1)
 5383 156a 2130      		cpi r18,lo8(1)
 5384 156c 01F4      		brne .L135
 5385 156e 30E0      		ldi r19,lo8(0)
 5386               	.L135:
 5387 1570 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5388               		.loc 3 72 0
 5389 1574 2223      		tst r18
 5390 1576 01F4      		brne .L136
 5391               	.LVL317:
 5392               	.LBB1619:
 5393               	.LBB1620:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5394               		.loc 6 168 0
 5395 1578 272F      		mov r18,r23
 5396 157a 342F      		mov r19,r20
 5397 157c 2093 0000 		sts endpoints+28,r18
 5398 1580 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5399               		.loc 6 169 0
 5400 1584 8093 0000 		sts endpoints+26,r24
 5401 1588 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5402               		.loc 6 174 0
 5403 158c E0E0      		ldi r30,lo8(endpoints+24)
 5404 158e F0E0      		ldi r31,hi8(endpoints+24)
 5405               	.LVL318:
 5406               	/* #APP */
 5407               	 ;  174 "usb/usb.h" 1
 5408 1590 02E2      		ldi r16, 34
 5409 1592 0693      		.dc.w 0x9306
 5410               		
 5411               	 ;  0 "" 2
 5412               	/* #NOAPP */
 5413 1594 00C0      		rjmp .L128
 5414               	.LVL319:
 5415               	.L160:
 5416               	.LBE1620:
 5417               	.LBE1619:
 5418               	.LBE1618:
 5419               	.LBE1617:
 5420               	.LBE1625:
 5421               	.LBE1627:
 5422               	.LBE1631:
 5423               	.LBE1580:
 5424               	.LBE1579:
 5425               	.LBE1578:
 5426               	.LBE1577:
 5427               	.LBE1638:
 5428               	.LBE1740:
 5429               	.LBE1744:
 5430               	.LBB1745:
 5431               	.LBB1285:
 5432               	.LBB1282:
 5433               	.LBB1254:
 5434               	.LBB1251:
 5435               	.LBB1248:
 5436               	.LBB1245:
 5437               	.LBB1242:
 5438               	.LBB1241:
 5439               	.LBB1239:
 5440               	.LBB1240:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5441               		.loc 6 168 0
 5442 1596 862F      		mov r24,r22
 5443               	.LVL320:
 5444 1598 932F      		mov r25,r19
 5445 159a 8093 0000 		sts endpoints+20,r24
 5446 159e 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5447               		.loc 6 169 0
 5448 15a2 4093 0000 		sts endpoints+18,r20
 5449 15a6 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5450               		.loc 6 176 0
 5451 15aa E0E0      		ldi r30,lo8(endpoints+24)
 5452 15ac F0E0      		ldi r31,hi8(endpoints+24)
 5453               	/* #APP */
 5454               	 ;  176 "usb/usb.h" 1
 5455 15ae 04E1      		ldi r16, 20
 5456 15b0 0693      		.dc.w 0x9306
 5457               		
 5458               	 ;  0 "" 2
 5459               	/* #NOAPP */
 5460 15b2 00C0      		rjmp .L152
 5461               	.LVL321:
 5462               	.L106:
 5463               	.LBE1240:
 5464               	.LBE1239:
 5465               	.LBE1241:
 5466               	.LBE1242:
 5467               	.LBE1245:
 5468               	.LBE1248:
 5469               	.LBE1251:
 5470               	.LBE1254:
 5471               	.LBE1282:
 5472               	.LBE1285:
 5473               	.LBE1745:
 5474               	.LBB1746:
 5475               	.LBB1741:
 5476               	.LBB1464:
 5477               	.LBB1461:
 5478               	.LBB1460:
 5479               	.LBB1459:
 5480               	.LBB1458:
 5481               	.LBB1457:
 5482               	.LBB1453:
 5483               	.LBB1451:
 5484               	.LBB1449:
 5485               	.LBB1448:
 5486               	.LBB1446:
 5487               	.LBB1447:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5488               		.loc 6 168 0
 5489 15b4 4093 0000 		sts endpoints+20,r20
 5490 15b8 5093 0000 		sts endpoints+20+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5491               		.loc 6 169 0
 5492 15bc 8093 0000 		sts endpoints+18,r24
 5493 15c0 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5494               		.loc 6 176 0
 5495 15c4 E0E0      		ldi r30,lo8(endpoints+24)
 5496 15c6 F0E0      		ldi r31,hi8(endpoints+24)
 5497               	/* #APP */
 5498               	 ;  176 "usb/usb.h" 1
 5499 15c8 04E1      		ldi r16, 20
 5500 15ca 0693      		.dc.w 0x9306
 5501               		
 5502               	 ;  0 "" 2
 5503               	/* #NOAPP */
 5504 15cc 00C0      		rjmp .L98
 5505               	.LVL322:
 5506               	.L136:
 5507               	.LBE1447:
 5508               	.LBE1446:
 5509               	.LBE1448:
 5510               	.LBE1449:
 5511               	.LBE1451:
 5512               	.LBE1453:
 5513               	.LBE1457:
 5514               	.LBE1458:
 5515               	.LBE1459:
 5516               	.LBE1460:
 5517               	.LBE1461:
 5518               	.LBE1464:
 5519               	.LBE1741:
 5520               	.LBB1742:
 5521               	.LBB1639:
 5522               	.LBB1636:
 5523               	.LBB1635:
 5524               	.LBB1634:
 5525               	.LBB1633:
 5526               	.LBB1632:
 5527               	.LBB1628:
 5528               	.LBB1626:
 5529               	.LBB1624:
 5530               	.LBB1623:
 5531               	.LBB1621:
 5532               	.LBB1622:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5533               		.loc 6 168 0
 5534 15ce 272F      		mov r18,r23
 5535               	.LVL323:
 5536 15d0 342F      		mov r19,r20
 5537 15d2 2093 0000 		sts endpoints+20,r18
 5538 15d6 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5539               		.loc 6 169 0
 5540 15da 8093 0000 		sts endpoints+18,r24
 5541 15de 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5542               		.loc 6 176 0
 5543 15e2 E0E0      		ldi r30,lo8(endpoints+24)
 5544 15e4 F0E0      		ldi r31,hi8(endpoints+24)
 5545               	/* #APP */
 5546               	 ;  176 "usb/usb.h" 1
 5547 15e6 04E1      		ldi r16, 20
 5548 15e8 0693      		.dc.w 0x9306
 5549               		
 5550               	 ;  0 "" 2
 5551               	/* #NOAPP */
 5552 15ea 00C0      		rjmp .L128
 5553               	.LBE1622:
 5554               	.LBE1621:
 5555               	.LBE1623:
 5556               	.LBE1624:
 5557               	.LBE1626:
 5558               	.LBE1628:
 5559               	.LBE1632:
 5560               	.LBE1633:
 5561               	.LBE1634:
 5562               	.LBE1635:
 5563               	.LBE1636:
 5564               	.LBE1639:
 5565               	.LBE1742:
 5566               	.LBE1746:
 5567               		.cfi_endproc
 5568               	.LFE70:
 5570               	.global	gps_putchar
 5572               	gps_putchar:
 5573               	.LFB71:
 257:main.c        **** int gps_putchar (char c) { 
 5574               		.loc 1 257 0
 5575               		.cfi_startproc
 5576               	.LVL324:
 5577               	/* prologue: function */
 5578               	/* frame size = 0 */
 5579               	/* stack size = 0 */
 5580               	.L__stack_usage = 0
 258:main.c        ****     if (c == '\n') 
 5581               		.loc 1 258 0
 5582 15ec 8A30      		cpi r24,lo8(10)
 5583 15ee 01F0      		breq .L218
 5584               	.L217:
 262:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 5585               		.loc 1 262 0 discriminator 1
 5586 15f0 9091 A109 		lds r25,2465
 5587 15f4 95FF      		sbrs r25,5
 5588 15f6 00C0      		rjmp .L217
 265:main.c        ****     USARTD0.DATA = c; 
 5589               		.loc 1 265 0
 5590 15f8 8093 A009 		sts 2464,r24
 268:main.c        **** } 
 5591               		.loc 1 268 0
 5592 15fc 80E0      		ldi r24,lo8(0)
 5593 15fe 90E0      		ldi r25,hi8(0)
 5594               	.LVL325:
 5595               	/* epilogue start */
 5596 1600 0895      		ret
 5597               	.LVL326:
 5598               	.L218:
 5599               	.LBB1749:
 5600               	.LBB1750:
 262:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 5601               		.loc 1 262 0
 5602 1602 9091 A109 		lds r25,2465
 5603 1606 95FF      		sbrs r25,5
 5604 1608 00C0      		rjmp .L218
 265:main.c        ****     USARTD0.DATA = c; 
 5605               		.loc 1 265 0
 5606 160a 9DE0      		ldi r25,lo8(13)
 5607 160c 9093 A009 		sts 2464,r25
 5608 1610 00C0      		rjmp .L217
 5609               	.LBE1750:
 5610               	.LBE1749:
 5611               		.cfi_endproc
 5612               	.LFE71:
 5614               	.global	gps_getchar
 5616               	gps_getchar:
 5617               	.LFB72:
 271:main.c        **** char gps_getchar () { 
 5618               		.loc 1 271 0
 5619               		.cfi_startproc
 5620               	/* prologue: function */
 5621               	/* frame size = 0 */
 5622               	/* stack size = 0 */
 5623               	.L__stack_usage = 0
 5624               	.L222:
 274:main.c        ****     while ( !( USARTD0.STATUS & DMA_CH_TRIGSRC_USARTD0_RXC_gc) ); 
 5625               		.loc 1 274 0 discriminator 1
 5626 1612 8091 A109 		lds r24,2465
 5627 1616 8B76      		andi r24,lo8(107)
 5628 1618 01F0      		breq .L222
 277:main.c        ****     return USARTD0.DATA; 
 5629               		.loc 1 277 0
 5630 161a 8091 A009 		lds r24,2464
 5631               	/* epilogue start */
 278:main.c        **** } 
 5632               		.loc 1 278 0
 5633 161e 0895      		ret
 5634               		.cfi_endproc
 5635               	.LFE72:
 5637               	.global	gprs_putchar
 5639               	gprs_putchar:
 5640               	.LFB73:
 281:main.c        **** int gprs_putchar (char c) { 
 5641               		.loc 1 281 0
 5642               		.cfi_startproc
 5643               	.LVL327:
 5644               	/* prologue: function */
 5645               	/* frame size = 0 */
 5646               	/* stack size = 0 */
 5647               	.L__stack_usage = 0
 282:main.c        ****     if (c == '\n') 
 5648               		.loc 1 282 0
 5649 1620 8A30      		cpi r24,lo8(10)
 5650 1622 01F0      		breq .L229
 5651               	.L228:
 286:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 5652               		.loc 1 286 0 discriminator 1
 5653 1624 9091 A109 		lds r25,2465
 5654 1628 95FF      		sbrs r25,5
 5655 162a 00C0      		rjmp .L228
 289:main.c        ****     USARTD0.DATA = c; 
 5656               		.loc 1 289 0
 5657 162c 8093 A009 		sts 2464,r24
 292:main.c        **** } 
 5658               		.loc 1 292 0
 5659 1630 80E0      		ldi r24,lo8(0)
 5660 1632 90E0      		ldi r25,hi8(0)
 5661               	.LVL328:
 5662               	/* epilogue start */
 5663 1634 0895      		ret
 5664               	.LVL329:
 5665               	.L229:
 5666               	.LBB1753:
 5667               	.LBB1754:
 262:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 5668               		.loc 1 262 0
 5669 1636 9091 A109 		lds r25,2465
 5670 163a 95FF      		sbrs r25,5
 5671 163c 00C0      		rjmp .L229
 265:main.c        ****     USARTD0.DATA = c; 
 5672               		.loc 1 265 0
 5673 163e 9DE0      		ldi r25,lo8(13)
 5674 1640 9093 A009 		sts 2464,r25
 5675 1644 00C0      		rjmp .L228
 5676               	.LBE1754:
 5677               	.LBE1753:
 5678               		.cfi_endproc
 5679               	.LFE73:
 5681               	.global	gprs_getchar
 5683               	gprs_getchar:
 5684               	.LFB74:
 295:main.c        **** char gprs_getchar () { 
 5685               		.loc 1 295 0
 5686               		.cfi_startproc
 5687               	/* prologue: function */
 5688               	/* frame size = 0 */
 5689               	/* stack size = 0 */
 5690               	.L__stack_usage = 0
 5691               	.L233:
 298:main.c        ****     while ( !( USARTD0.STATUS & DMA_CH_TRIGSRC_USARTD0_RXC_gc) ); 
 5692               		.loc 1 298 0 discriminator 1
 5693 1646 8091 A109 		lds r24,2465
 5694 164a 8B76      		andi r24,lo8(107)
 5695 164c 01F0      		breq .L233
 301:main.c        ****     return USARTD0.DATA; 
 5696               		.loc 1 301 0
 5697 164e 8091 A009 		lds r24,2464
 5698               	/* epilogue start */
 302:main.c        **** } 
 5699               		.loc 1 302 0
 5700 1652 0895      		ret
 5701               		.cfi_endproc
 5702               	.LFE74:
 5704               		.data
 5705               	.LC3:
 5706 0045 4154 2B43 		.string	"AT+CMGF=1\r"
 5706      4D47 463D 
 5706      310D 00
 5707               	.LC4:
 5708 0050 4154 2B43 		.string	"AT+CMGS=\""
 5708      4D47 533D 
 5708      2200 
 5709               	.LC5:
 5710 005a 220D 00   		.string	"\"\r"
 5711               		.text
 5712               	.global	send_message
 5714               	send_message:
 5715               	.LFB75:
 304:main.c        **** void send_message(char* number, char* text_message) {
 5716               		.loc 1 304 0
 5717               		.cfi_startproc
 5718               	.LVL330:
 5719 1654 DF92      		push r13
 5720               	.LCFI94:
 5721               		.cfi_def_cfa_offset 3
 5722               		.cfi_offset 13, -2
 5723 1656 EF92      		push r14
 5724               	.LCFI95:
 5725               		.cfi_def_cfa_offset 4
 5726               		.cfi_offset 14, -3
 5727 1658 FF92      		push r15
 5728               	.LCFI96:
 5729               		.cfi_def_cfa_offset 5
 5730               		.cfi_offset 15, -4
 5731 165a 0F93      		push r16
 5732               	.LCFI97:
 5733               		.cfi_def_cfa_offset 6
 5734               		.cfi_offset 16, -5
 5735 165c 1F93      		push r17
 5736               	.LCFI98:
 5737               		.cfi_def_cfa_offset 7
 5738               		.cfi_offset 17, -6
 5739 165e CF93      		push r28
 5740               	.LCFI99:
 5741               		.cfi_def_cfa_offset 8
 5742               		.cfi_offset 28, -7
 5743 1660 DF93      		push r29
 5744               	.LCFI100:
 5745               		.cfi_def_cfa_offset 9
 5746               		.cfi_offset 29, -8
 5747               	/* prologue: function */
 5748               	/* frame size = 0 */
 5749               	/* stack size = 7 */
 5750               	.L__stack_usage = 7
 5751 1662 EC01      		movw r28,r24
 5752 1664 F62E      		mov r15,r22
 5753 1666 E72E      		mov r14,r23
 5754               	.LVL331:
 5755               	.L236:
 5756               	.LBB2130:
 5757               	.LBB2131:
 286:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 5758               		.loc 1 286 0
 5759 1668 8091 A109 		lds r24,2465
 5760 166c 85FF      		sbrs r24,5
 5761 166e 00C0      		rjmp .L236
 289:main.c        ****     USARTD0.DATA = c; 
 5762               		.loc 1 289 0
 5763 1670 8DE0      		ldi r24,lo8(13)
 5764 1672 8093 A009 		sts 2464,r24
 5765               	.LVL332:
 5766               	.LBE2131:
 5767               	.LBE2130:
 5768               	.LBB2132:
 5769               	.LBB2133:
 5770               		.loc 7 164 0
 5771 1676 8FEF      		 ldi r24,lo8(6399999)
 5772 1678 97EA      	    ldi r25,hi8(6399999)
 5773 167a A1E6      	    ldi r26,hlo8(6399999)
 5774 167c 8150      	    1:subi r24,1
 5775 167e 9040      	    sbci r25,0
 5776 1680 A040      	    sbci r26,0
 5777 1682 01F4      	    brne 1b
 5778 1684 00C0      		rjmp .
 5779 1686 0000      		nop
 5780               	.LVL333:
 5781               	.LBE2133:
 5782               	.LBE2132:
 5783               	.LBB2134:
 5784               	.LBB2135:
 5785 1688 8FEF      		 ldi r24,lo8(6399999)
 5786 168a 97EA      	    ldi r25,hi8(6399999)
 5787 168c A1E6      	    ldi r26,hlo8(6399999)
 5788 168e 8150      	    1:subi r24,1
 5789 1690 9040      	    sbci r25,0
 5790 1692 A040      	    sbci r26,0
 5791 1694 01F4      	    brne 1b
 5792 1696 00C0      		rjmp .
 5793 1698 0000      		nop
 5794               	.LVL334:
 5795 169a E0E0      		ldi r30,lo8(.LC3)
 5796 169c F0E0      		ldi r31,hi8(.LC3)
 5797               	.LBE2135:
 5798               	.LBE2134:
 5799               	.LBB2136:
 5800               	.LBB2137:
 5801               	.LBB2138:
 5802               	.LBB2139:
 5803               	.LBB2140:
 265:main.c        ****     USARTD0.DATA = c; 
 5804               		.loc 1 265 0
 5805 169e 2DE0      		ldi r18,lo8(13)
 5806               	.LVL335:
 5807               	.L240:
 5808               	.LBE2140:
 5809               	.LBE2139:
 5810               	.LBE2138:
 5811               	.LBE2137:
 316:main.c        ****     gprs_putchar(text_mode[i]);
 5812               		.loc 1 316 0 discriminator 2
 5813 16a0 9191      		ld r25,Z+
 5814               	.LVL336:
 5815               	.LBB2145:
 5816               	.LBB2143:
 282:main.c        ****     if (c == '\n') 
 5817               		.loc 1 282 0 discriminator 2
 5818 16a2 9A30      		cpi r25,lo8(10)
 5819 16a4 01F4      		brne .+2
 5820 16a6 00C0      		rjmp .L320
 5821               	.L319:
 286:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 5822               		.loc 1 286 0
 5823 16a8 8091 A109 		lds r24,2465
 5824 16ac 85FF      		sbrs r24,5
 5825 16ae 00C0      		rjmp .L319
 289:main.c        ****     USARTD0.DATA = c; 
 5826               		.loc 1 289 0
 5827 16b0 9093 A009 		sts 2464,r25
 5828               	.LBE2143:
 5829               	.LBE2145:
 315:main.c        ****   for (int i=0; i<length; i++) {
 5830               		.loc 1 315 0
 5831 16b4 90E0      		ldi r25,hi8(.LC3+12)
 5832 16b6 E030      		cpi r30,lo8(.LC3+12)
 5833 16b8 F907      		cpc r31,r25
 5834 16ba 01F4      		brne .L240
 5835               	.LVL337:
 5836               	.LBE2136:
 5837               	.LBB2147:
 5838               	.LBB2148:
 5839               		.loc 7 164 0
 5840 16bc 8FEF      		 ldi r24,lo8(639999)
 5841 16be 93EC      	    ldi r25,hi8(639999)
 5842 16c0 A9E0      	    ldi r26,hlo8(639999)
 5843 16c2 8150      	    1:subi r24,1
 5844 16c4 9040      	    sbci r25,0
 5845 16c6 A040      	    sbci r26,0
 5846 16c8 01F4      	    brne 1b
 5847 16ca 00C0      		rjmp .
 5848 16cc 0000      		nop
 5849               	.LVL338:
 5850               	.LBE2148:
 5851               	.LBE2147:
 5852               	.LBB2149:
 5853               	.LBB2150:
 5854               	.LBB2151:
 5855               	.LBB2152:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 5856               		.loc 3 110 0
 5857 16ce 81E0      		ldi r24,lo8(1)
 5858 16d0 8093 0000 		sts ep_in_data+1,r24
 5859               	.LVL339:
 5860               	.LBB2153:
 5861               	.LBB2154:
 5862               	.LBB2155:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 5863               		.loc 3 80 0
 5864 16d4 5FB7      		in r21,__SREG__
 5865               	.LVL340:
 5866               	.LBB2156:
 5867               	.LBB2157:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 5868               		.loc 4 50 0
 5869               	/* #APP */
 5870               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 5871 16d6 F894      		cli
 5872               	 ;  0 "" 2
 5873               	.LVL341:
 5874               	/* #NOAPP */
 5875               	.LBE2157:
 5876               	.LBE2156:
 5877               	.LBB2158:
 5878               	.LBB2159:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 5879               		.loc 6 220 0
 5880 16d8 8091 0000 		lds r24,endpoints+24
 5881 16dc 8670      		andi r24,lo8(6)
 5882               	.LBE2159:
 5883               	.LBE2158:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 5884               		.loc 3 82 0
 5885 16de 01F0      		breq .+2
 5886 16e0 00C0      		rjmp .L338
 5887               	.LVL342:
 5888               	.L241:
 5889               	.LBB2160:
 5890               	.LBB2161:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5891               		.loc 4 70 0
 5892 16e2 5FBF      		out __SREG__,r21
 5893               		.loc 4 71 0
 5894               	.LBE2161:
 5895               	.LBE2160:
 5896               	.LBE2155:
 5897               	.LBE2154:
 5898               	.LBE2153:
 5899               	.LBE2152:
 5900               	.LBE2151:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 5901               		.loc 2 27 0
 5902 16e4 82E0      		ldi r24,lo8(2)
 5903 16e6 E0EC      		ldi r30,lo8(1216)
 5904 16e8 F4E0      		ldi r31,hi8(1216)
 5905 16ea 8587      		std Z+13,r24
 5906               	.LBB2193:
 5907               	.LBB2194:
 5908               	.LBB2195:
 5909               	.LBB2196:
 5910               	.LBB2197:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 5911               		.loc 5 57 0
 5912 16ec 36E0      		ldi r19,lo8(6)
 5913               	.L250:
 5914               	.LVL343:
 5915               	.LBE2197:
 5916               	.LBE2196:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 5917               		.loc 3 123 0
 5918 16ee 9FB7      		in r25,__SREG__
 5919               	.LVL344:
 5920               	.LBB2199:
 5921               	.LBB2200:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 5922               		.loc 4 50 0
 5923               	/* #APP */
 5924               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 5925 16f0 F894      		cli
 5926               	 ;  0 "" 2
 5927               	.LVL345:
 5928               	/* #NOAPP */
 5929               	.LBE2200:
 5930               	.LBE2199:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 5931               		.loc 3 124 0
 5932 16f2 8091 0000 		lds r24,ep_in_data+1
 5933 16f6 8823      		tst r24
 5934 16f8 01F4      		brne .+2
 5935 16fa 00C0      		rjmp .L339
 5936               	.L310:
 125:usb/usb_pipe.h **** 			r = false;
 5937               		.loc 3 125 0
 5938 16fc 80E0      		ldi r24,lo8(0)
 5939               	.L252:
 5940               	.LBB2201:
 5941               	.LBB2202:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5942               		.loc 4 70 0
 5943 16fe 9FBF      		out __SREG__,r25
 5944               		.loc 4 71 0
 5945               	.LBE2202:
 5946               	.LBE2201:
 5947               	.LBE2195:
 5948               	.LBE2194:
 5949               	.LBE2193:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 5950               		.loc 2 28 0
 5951 1700 8823      		tst r24
 5952 1702 01F4      		brne .L251
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 5953               		.loc 2 29 0
 5954 1704 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 5955 1708 8823      		tst r24
 5956 170a 01F0      		breq .L250
 5957               	.LVL346:
 5958               	.LBB2206:
 5959               	.LBB2207:
 5960               	.LBB2208:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 5961               		.loc 3 54 0
 5962 170c 2FB7      		in r18,__SREG__
 5963               	.LVL347:
 5964               	.LBB2209:
 5965               	.LBB2210:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 5966               		.loc 4 50 0
 5967               	/* #APP */
 5968               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 5969 170e F894      		cli
 5970               	 ;  0 "" 2
 5971               	.LVL348:
 5972               	/* #NOAPP */
 5973               	.LBE2210:
 5974               	.LBE2209:
 5975               	.LBB2211:
 5976               	.LBB2212:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 5977               		.loc 5 90 0
 5978 1710 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 5979               		.loc 5 91 0
 5980 1714 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5981 1716 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5982 1718 8093 0000 		sts ep_in_pipe_data+2,r24
 5983 171c 9093 0000 		sts ep_in_pipe_data+2+1,r25
 5984 1720 8093 0000 		sts ep_in_pipe_data,r24
 5985 1724 9093 0000 		sts ep_in_pipe_data+1,r25
 5986               	.LVL349:
 5987               	.LBE2212:
 5988               	.LBE2211:
 5989               	.LBB2213:
 5990               	.LBB2214:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 5991               		.loc 6 158 0
 5992 1728 E0E0      		ldi r30,lo8(endpoints+24)
 5993 172a F0E0      		ldi r31,hi8(endpoints+24)
 5994               	/* #APP */
 5995               	 ;  158 "usb/usb.h" 1
 5996 172c 06E0      		ldi r16, 6
 5997 172e 0593      		.dc.w 0x9305
 5998               		
 5999               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 6000               		.loc 6 159 0
 6001               	 ;  159 "usb/usb.h" 1
 6002 1730 08E0      		ldi r16, 8
 6003 1732 0693      		.dc.w 0x9306
 6004               		
 6005               	 ;  0 "" 2
 6006               	/* #NOAPP */
 6007               	.LBE2214:
 6008               	.LBE2213:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 6009               		.loc 3 57 0
 6010 1734 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 6011               		.loc 3 58 0
 6012 1738 1092 0000 		sts ep_in_data+2,__zero_reg__
 6013 173c 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 6014               		.loc 3 59 0
 6015 1740 1092 0000 		sts ep_in_data,__zero_reg__
 6016               	.LVL350:
 6017               	.LBB2215:
 6018               	.LBB2216:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6019               		.loc 4 70 0
 6020 1744 2FBF      		out __SREG__,r18
 6021               		.loc 4 71 0
 6022               	.LVL351:
 6023               	.L251:
 6024               	.LBE2216:
 6025               	.LBE2215:
 6026               	.LBE2208:
 6027               	.LBE2207:
 6028               	.LBE2206:
 6029               	.LBE2150:
 6030               	.LBE2149:
 6031               	.LBB2220:
 6032               	.LBB2221:
 147:main.c        ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 6033               		.loc 1 147 0
 6034 1746 DE01      		movw r26,r28
 6035 1748 0D90      		ld __tmp_reg__,X+
 6036 174a 0020      		tst __tmp_reg__
 6037 174c 01F4      		brne .-6
 6038 174e CD01      		movw r24,r26
 6039 1750 8C1B      		sub r24,r28
 6040 1752 9D0B      		sbc r25,r29
 6041 1754 0996      		adiw r24,9
 6042 1756 0E94 0000 		call malloc
 6043               	.LVL352:
 6044 175a 8C01      		movw r16,r24
 6045               	.LVL353:
 149:main.c        ****     strcpy(result, s1);
 6046               		.loc 1 149 0
 6047 175c FC01      		movw r30,r24
 6048 175e A0E0      		ldi r26,lo8(.LC4)
 6049 1760 B0E0      		ldi r27,hi8(.LC4)
 6050 1762 8AE0      		ldi r24,lo8(10)
 6051               	.LVL354:
 6052               	.L255:
 6053 1764 0D90      		ld r0,X+
 6054 1766 0192      		st Z+,r0
 6055 1768 8150      		subi r24,lo8(-(-1))
 6056 176a 01F4      		brne .L255
 150:main.c        ****     strcat(result, s2);
 6057               		.loc 1 150 0
 6058 176c C801      		movw r24,r16
 6059 176e BE01      		movw r22,r28
 6060 1770 0E94 0000 		call strcat
 6061               	.LVL355:
 6062               	.LBE2221:
 6063               	.LBE2220:
 6064               	.LBB2222:
 6065               	.LBB2223:
 147:main.c        ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 6066               		.loc 1 147 0
 6067 1774 D801      		movw r26,r16
 6068 1776 0D90      		ld __tmp_reg__,X+
 6069 1778 0020      		tst __tmp_reg__
 6070 177a 01F4      		brne .-6
 6071 177c CD01      		movw r24,r26
 6072 177e 801B      		sub r24,r16
 6073 1780 910B      		sbc r25,r17
 6074 1782 0296      		adiw r24,2
 6075 1784 0E94 0000 		call malloc
 6076 1788 D92E      		mov r13,r25
 6077 178a C82F      		mov r28,r24
 6078               	.LVL356:
 6079 178c D92F      		mov r29,r25
 6080               	.LVL357:
 149:main.c        ****     strcpy(result, s1);
 6081               		.loc 1 149 0
 6082 178e CE01      		movw r24,r28
 6083 1790 B801      		movw r22,r16
 6084 1792 0E94 0000 		call strcpy
 150:main.c        ****     strcat(result, s2);
 6085               		.loc 1 150 0
 6086 1796 AC2F      		mov r26,r28
 6087 1798 BD2D      		mov r27,r13
 6088 179a FD01      		movw r30,r26
 6089 179c 0190      		ld __tmp_reg__,Z+
 6090 179e 0020      		tst __tmp_reg__
 6091 17a0 01F4      		brne .-6
 6092 17a2 3197      		sbiw r30,1
 6093 17a4 EA1B      		sub r30,r26
 6094 17a6 FB0B      		sbc r31,r27
 6095 17a8 EC0F      		add r30,r28
 6096 17aa FD1F      		adc r31,r29
 6097 17ac A0E0      		ldi r26,lo8(.LC5)
 6098 17ae B0E0      		ldi r27,hi8(.LC5)
 6099 17b0 83E0      		ldi r24,lo8(3)
 6100               	.L256:
 6101 17b2 0D90      		ld r0,X+
 6102 17b4 0192      		st Z+,r0
 6103 17b6 8150      		subi r24,lo8(-(-1))
 6104 17b8 01F4      		brne .L256
 6105               	.LBE2223:
 6106               	.LBE2222:
 331:main.c        ****   length = strlen(new_number_string) + 2;
 6107               		.loc 1 331 0
 6108 17ba AC2F      		mov r26,r28
 6109 17bc BD2F      		mov r27,r29
 6110 17be FD01      		movw r30,r26
 6111 17c0 0190      		ld __tmp_reg__,Z+
 6112 17c2 0020      		tst __tmp_reg__
 6113 17c4 01F4      		brne .-6
 6114               	.LVL358:
 6115 17c6 EA1B      		sub r30,r26
 6116 17c8 FB0B      		sbc r31,r27
 6117 17ca 3196      		adiw r30,1
 6118               	.LVL359:
 6119               	.LBB2224:
 333:main.c        ****   for (int j=0; j<length; j++) {
 6120               		.loc 1 333 0
 6121 17cc 1E16      		cp __zero_reg__,r30
 6122 17ce 1F06      		cpc __zero_reg__,r31
 6123 17d0 04F4      		brge .L257
 6124 17d2 80E0      		ldi r24,lo8(0)
 6125 17d4 90E0      		ldi r25,hi8(0)
 6126               	.LBB2225:
 6127               	.LBB2226:
 6128               	.LBB2227:
 6129               	.LBB2228:
 265:main.c        ****     USARTD0.DATA = c; 
 6130               		.loc 1 265 0
 6131 17d6 4DE0      		ldi r20,lo8(13)
 6132               	.LVL360:
 6133               	.L261:
 6134               	.LBE2228:
 6135               	.LBE2227:
 6136               	.LBE2226:
 6137               	.LBE2225:
 334:main.c        ****     gprs_putchar(new_number_string[j]);
 6138               		.loc 1 334 0 discriminator 2
 6139 17d8 3991      		ld r19,Y+
 6140               	.LVL361:
 6141               	.LBB2233:
 6142               	.LBB2231:
 282:main.c        ****     if (c == '\n') 
 6143               		.loc 1 282 0 discriminator 2
 6144 17da 3A30      		cpi r19,lo8(10)
 6145 17dc 01F4      		brne .+2
 6146 17de 00C0      		rjmp .L318
 6147               	.L317:
 286:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 6148               		.loc 1 286 0
 6149 17e0 2091 A109 		lds r18,2465
 6150 17e4 25FF      		sbrs r18,5
 6151 17e6 00C0      		rjmp .L317
 289:main.c        ****     USARTD0.DATA = c; 
 6152               		.loc 1 289 0
 6153 17e8 3093 A009 		sts 2464,r19
 6154               	.LBE2231:
 6155               	.LBE2233:
 333:main.c        ****   for (int j=0; j<length; j++) {
 6156               		.loc 1 333 0
 6157 17ec 0196      		adiw r24,1
 6158               	.LVL362:
 6159 17ee 8E17      		cp r24,r30
 6160 17f0 9F07      		cpc r25,r31
 6161 17f2 04F0      		brlt .L261
 6162               	.LVL363:
 6163               	.L257:
 6164               	.LBE2224:
 6165               	.LBB2235:
 6166               	.LBB2236:
 6167               		.loc 7 164 0
 6168 17f4 8FEF      		 ldi r24,lo8(639999)
 6169 17f6 93EC      	    ldi r25,hi8(639999)
 6170 17f8 A9E0      	    ldi r26,hlo8(639999)
 6171 17fa 8150      	    1:subi r24,1
 6172 17fc 9040      	    sbci r25,0
 6173 17fe A040      	    sbci r26,0
 6174 1800 01F4      	    brne 1b
 6175 1802 00C0      		rjmp .
 6176 1804 0000      		nop
 6177               	.LBE2236:
 6178               	.LBE2235:
 6179               	.LBB2237:
 6180               	.LBB2238:
 6181               	.LBB2239:
 6182               	.LBB2240:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 6183               		.loc 3 110 0
 6184 1806 81E0      		ldi r24,lo8(1)
 6185 1808 8093 0000 		sts ep_in_data+1,r24
 6186               	.LVL364:
 6187               	.LBB2241:
 6188               	.LBB2242:
 6189               	.LBB2243:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6190               		.loc 3 80 0
 6191 180c 2FB7      		in r18,__SREG__
 6192               	.LVL365:
 6193               	.LBB2244:
 6194               	.LBB2245:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6195               		.loc 4 50 0
 6196               	/* #APP */
 6197               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6198 180e F894      		cli
 6199               	 ;  0 "" 2
 6200               	.LVL366:
 6201               	/* #NOAPP */
 6202               	.LBE2245:
 6203               	.LBE2244:
 6204               	.LBB2246:
 6205               	.LBB2247:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6206               		.loc 6 220 0
 6207 1810 8091 0000 		lds r24,endpoints+24
 6208 1814 8670      		andi r24,lo8(6)
 6209               	.LBE2247:
 6210               	.LBE2246:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 6211               		.loc 3 82 0
 6212 1816 01F0      		breq .+2
 6213 1818 00C0      		rjmp .L340
 6214               	.LVL367:
 6215               	.L262:
 6216               	.LBB2248:
 6217               	.LBB2249:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6218               		.loc 4 70 0
 6219 181a 2FBF      		out __SREG__,r18
 6220               		.loc 4 71 0
 6221               	.LBE2249:
 6222               	.LBE2248:
 6223               	.LBE2243:
 6224               	.LBE2242:
 6225               	.LBE2241:
 6226               	.LBE2240:
 6227               	.LBE2239:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 6228               		.loc 2 27 0
 6229 181c 82E0      		ldi r24,lo8(2)
 6230 181e E0EC      		ldi r30,lo8(1216)
 6231 1820 F4E0      		ldi r31,hi8(1216)
 6232 1822 8587      		std Z+13,r24
 6233               	.LBB2295:
 6234               	.LBB2296:
 6235               	.LBB2297:
 6236               	.LBB2298:
 6237               	.LBB2299:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 6238               		.loc 5 57 0
 6239 1824 36E0      		ldi r19,lo8(6)
 6240               	.LVL368:
 6241               	.L271:
 6242               	.LBE2299:
 6243               	.LBE2298:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6244               		.loc 3 123 0
 6245 1826 9FB7      		in r25,__SREG__
 6246               	.LVL369:
 6247               	.LBB2301:
 6248               	.LBB2302:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6249               		.loc 4 50 0
 6250               	/* #APP */
 6251               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6252 1828 F894      		cli
 6253               	 ;  0 "" 2
 6254               	.LVL370:
 6255               	/* #NOAPP */
 6256               	.LBE2302:
 6257               	.LBE2301:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 6258               		.loc 3 124 0
 6259 182a 8091 0000 		lds r24,ep_in_data+1
 6260 182e 8823      		tst r24
 6261 1830 01F4      		brne .+2
 6262 1832 00C0      		rjmp .L341
 6263               	.L311:
 125:usb/usb_pipe.h **** 			r = false;
 6264               		.loc 3 125 0
 6265 1834 80E0      		ldi r24,lo8(0)
 6266               	.L273:
 6267               	.LBB2303:
 6268               	.LBB2304:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6269               		.loc 4 70 0
 6270 1836 9FBF      		out __SREG__,r25
 6271               		.loc 4 71 0
 6272               	.LBE2304:
 6273               	.LBE2303:
 6274               	.LBE2297:
 6275               	.LBE2296:
 6276               	.LBE2295:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 6277               		.loc 2 28 0
 6278 1838 8823      		tst r24
 6279 183a 01F4      		brne .L272
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 6280               		.loc 2 29 0
 6281 183c 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 6282 1840 8823      		tst r24
 6283 1842 01F0      		breq .L271
 6284               	.LVL371:
 6285               	.LBB2308:
 6286               	.LBB2309:
 6287               	.LBB2310:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6288               		.loc 3 54 0
 6289 1844 2FB7      		in r18,__SREG__
 6290               	.LVL372:
 6291               	.LBB2311:
 6292               	.LBB2312:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6293               		.loc 4 50 0
 6294               	/* #APP */
 6295               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6296 1846 F894      		cli
 6297               	 ;  0 "" 2
 6298               	.LVL373:
 6299               	/* #NOAPP */
 6300               	.LBE2312:
 6301               	.LBE2311:
 6302               	.LBB2313:
 6303               	.LBB2314:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 6304               		.loc 5 90 0
 6305 1848 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 6306               		.loc 5 91 0
 6307 184c 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 6308 184e 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 6309 1850 8093 0000 		sts ep_in_pipe_data+2,r24
 6310 1854 9093 0000 		sts ep_in_pipe_data+2+1,r25
 6311 1858 8093 0000 		sts ep_in_pipe_data,r24
 6312 185c 9093 0000 		sts ep_in_pipe_data+1,r25
 6313               	.LVL374:
 6314               	.LBE2314:
 6315               	.LBE2313:
 6316               	.LBB2315:
 6317               	.LBB2316:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6318               		.loc 6 158 0
 6319 1860 E0E0      		ldi r30,lo8(endpoints+24)
 6320 1862 F0E0      		ldi r31,hi8(endpoints+24)
 6321               	/* #APP */
 6322               	 ;  158 "usb/usb.h" 1
 6323 1864 06E0      		ldi r16, 6
 6324 1866 0593      		.dc.w 0x9305
 6325               		
 6326               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 6327               		.loc 6 159 0
 6328               	 ;  159 "usb/usb.h" 1
 6329 1868 08E0      		ldi r16, 8
 6330 186a 0693      		.dc.w 0x9306
 6331               		
 6332               	 ;  0 "" 2
 6333               	/* #NOAPP */
 6334               	.LBE2316:
 6335               	.LBE2315:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 6336               		.loc 3 57 0
 6337 186c 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 6338               		.loc 3 58 0
 6339 1870 1092 0000 		sts ep_in_data+2,__zero_reg__
 6340 1874 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 6341               		.loc 3 59 0
 6342 1878 1092 0000 		sts ep_in_data,__zero_reg__
 6343               	.LVL375:
 6344               	.LBB2317:
 6345               	.LBB2318:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6346               		.loc 4 70 0
 6347 187c 2FBF      		out __SREG__,r18
 6348               		.loc 4 71 0
 6349               	.LVL376:
 6350               	.L272:
 6351               	.LBE2318:
 6352               	.LBE2317:
 6353               	.LBE2310:
 6354               	.LBE2309:
 6355               	.LBE2308:
 6356               	.LBE2238:
 6357               	.LBE2237:
 345:main.c        ****   length = strlen(text_message) + 3;
 6358               		.loc 1 345 0
 6359 187e AF2D      		mov r26,r15
 6360 1880 BE2D      		mov r27,r14
 6361 1882 FD01      		movw r30,r26
 6362 1884 0190      		ld __tmp_reg__,Z+
 6363 1886 0020      		tst __tmp_reg__
 6364 1888 01F4      		brne .-6
 6365 188a EA1B      		sub r30,r26
 6366 188c FB0B      		sbc r31,r27
 6367 188e 3296      		adiw r30,2
 6368               	.LVL377:
 6369               	.LBB2329:
 346:main.c        ****   for (int k=0; k<length; k++) {
 6370               		.loc 1 346 0
 6371 1890 1E16      		cp __zero_reg__,r30
 6372 1892 1F06      		cpc __zero_reg__,r31
 6373 1894 04F4      		brge .L276
 6374 1896 80E0      		ldi r24,lo8(0)
 6375 1898 90E0      		ldi r25,hi8(0)
 6376               	.LBB2330:
 6377               	.LBB2331:
 6378               	.LBB2332:
 6379               	.LBB2333:
 265:main.c        ****     USARTD0.DATA = c; 
 6380               		.loc 1 265 0
 6381 189a 4DE0      		ldi r20,lo8(13)
 6382               	.LVL378:
 6383               	.L280:
 6384               	.LBE2333:
 6385               	.LBE2332:
 6386               	.LBE2331:
 6387               	.LBE2330:
 347:main.c        ****     gprs_putchar(text_message[k]);
 6388               		.loc 1 347 0 discriminator 2
 6389 189c 3D91      		ld r19,X+
 6390               	.LVL379:
 6391               	.LBB2338:
 6392               	.LBB2336:
 282:main.c        ****     if (c == '\n') 
 6393               		.loc 1 282 0 discriminator 2
 6394 189e 3A30      		cpi r19,lo8(10)
 6395 18a0 01F4      		brne .+2
 6396 18a2 00C0      		rjmp .L316
 6397               	.L315:
 286:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 6398               		.loc 1 286 0
 6399 18a4 2091 A109 		lds r18,2465
 6400 18a8 25FF      		sbrs r18,5
 6401 18aa 00C0      		rjmp .L315
 289:main.c        ****     USARTD0.DATA = c; 
 6402               		.loc 1 289 0
 6403 18ac 3093 A009 		sts 2464,r19
 6404               	.LBE2336:
 6405               	.LBE2338:
 346:main.c        ****   for (int k=0; k<length; k++) {
 6406               		.loc 1 346 0
 6407 18b0 0196      		adiw r24,1
 6408               	.LVL380:
 6409 18b2 8E17      		cp r24,r30
 6410 18b4 9F07      		cpc r25,r31
 6411 18b6 04F0      		brlt .L280
 6412               	.LVL381:
 6413               	.L276:
 6414               	.LBE2329:
 6415               	.LBB2340:
 6416               	.LBB2341:
 6417               		.loc 7 164 0
 6418 18b8 8FEF      		 ldi r24,lo8(639999)
 6419 18ba 93EC      	    ldi r25,hi8(639999)
 6420 18bc A9E0      	    ldi r26,hlo8(639999)
 6421 18be 8150      	    1:subi r24,1
 6422 18c0 9040      	    sbci r25,0
 6423 18c2 A040      	    sbci r26,0
 6424 18c4 01F4      	    brne 1b
 6425 18c6 00C0      		rjmp .
 6426 18c8 0000      		nop
 6427               	.LBE2341:
 6428               	.LBE2340:
 6429               	.LBB2342:
 6430               	.LBB2343:
 6431               	.LBB2344:
 6432               	.LBB2345:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 6433               		.loc 3 110 0
 6434 18ca 81E0      		ldi r24,lo8(1)
 6435 18cc 8093 0000 		sts ep_in_data+1,r24
 6436               	.LVL382:
 6437               	.LBB2346:
 6438               	.LBB2347:
 6439               	.LBB2348:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6440               		.loc 3 80 0
 6441 18d0 2FB7      		in r18,__SREG__
 6442               	.LVL383:
 6443               	.LBB2349:
 6444               	.LBB2350:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6445               		.loc 4 50 0
 6446               	/* #APP */
 6447               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6448 18d2 F894      		cli
 6449               	 ;  0 "" 2
 6450               	.LVL384:
 6451               	/* #NOAPP */
 6452               	.LBE2350:
 6453               	.LBE2349:
 6454               	.LBB2351:
 6455               	.LBB2352:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6456               		.loc 6 220 0
 6457 18d4 8091 0000 		lds r24,endpoints+24
 6458 18d8 8670      		andi r24,lo8(6)
 6459               	.LBE2352:
 6460               	.LBE2351:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 6461               		.loc 3 82 0
 6462 18da 01F0      		breq .+2
 6463 18dc 00C0      		rjmp .L342
 6464               	.LVL385:
 6465               	.L281:
 6466               	.LBB2353:
 6467               	.LBB2354:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6468               		.loc 4 70 0
 6469 18de 2FBF      		out __SREG__,r18
 6470               		.loc 4 71 0
 6471               	.LBE2354:
 6472               	.LBE2353:
 6473               	.LBE2348:
 6474               	.LBE2347:
 6475               	.LBE2346:
 6476               	.LBE2345:
 6477               	.LBE2344:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 6478               		.loc 2 27 0
 6479 18e0 82E0      		ldi r24,lo8(2)
 6480 18e2 E0EC      		ldi r30,lo8(1216)
 6481 18e4 F4E0      		ldi r31,hi8(1216)
 6482 18e6 8587      		std Z+13,r24
 6483               	.LBB2404:
 6484               	.LBB2405:
 6485               	.LBB2406:
 6486               	.LBB2407:
 6487               	.LBB2408:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 6488               		.loc 5 57 0
 6489 18e8 36E0      		ldi r19,lo8(6)
 6490               	.LVL386:
 6491               	.L290:
 6492               	.LBE2408:
 6493               	.LBE2407:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6494               		.loc 3 123 0
 6495 18ea 9FB7      		in r25,__SREG__
 6496               	.LVL387:
 6497               	.LBB2410:
 6498               	.LBB2411:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6499               		.loc 4 50 0
 6500               	/* #APP */
 6501               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6502 18ec F894      		cli
 6503               	 ;  0 "" 2
 6504               	.LVL388:
 6505               	/* #NOAPP */
 6506               	.LBE2411:
 6507               	.LBE2410:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 6508               		.loc 3 124 0
 6509 18ee 8091 0000 		lds r24,ep_in_data+1
 6510 18f2 8823      		tst r24
 6511 18f4 01F4      		brne .+2
 6512 18f6 00C0      		rjmp .L343
 6513               	.L312:
 125:usb/usb_pipe.h **** 			r = false;
 6514               		.loc 3 125 0
 6515 18f8 80E0      		ldi r24,lo8(0)
 6516               	.L292:
 6517               	.LBB2412:
 6518               	.LBB2413:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6519               		.loc 4 70 0
 6520 18fa 9FBF      		out __SREG__,r25
 6521               		.loc 4 71 0
 6522               	.LBE2413:
 6523               	.LBE2412:
 6524               	.LBE2406:
 6525               	.LBE2405:
 6526               	.LBE2404:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 6527               		.loc 2 28 0
 6528 18fc 8823      		tst r24
 6529 18fe 01F4      		brne .L314
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 6530               		.loc 2 29 0
 6531 1900 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 6532 1904 8823      		tst r24
 6533 1906 01F0      		breq .L290
 6534               	.LVL389:
 6535               	.LBB2417:
 6536               	.LBB2418:
 6537               	.LBB2419:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6538               		.loc 3 54 0
 6539 1908 2FB7      		in r18,__SREG__
 6540               	.LVL390:
 6541               	.LBB2420:
 6542               	.LBB2421:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6543               		.loc 4 50 0
 6544               	/* #APP */
 6545               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6546 190a F894      		cli
 6547               	 ;  0 "" 2
 6548               	.LVL391:
 6549               	/* #NOAPP */
 6550               	.LBE2421:
 6551               	.LBE2420:
 6552               	.LBB2422:
 6553               	.LBB2423:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 6554               		.loc 5 90 0
 6555 190c 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 6556               		.loc 5 91 0
 6557 1910 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 6558 1912 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 6559 1914 8093 0000 		sts ep_in_pipe_data+2,r24
 6560 1918 9093 0000 		sts ep_in_pipe_data+2+1,r25
 6561 191c 8093 0000 		sts ep_in_pipe_data,r24
 6562 1920 9093 0000 		sts ep_in_pipe_data+1,r25
 6563               	.LVL392:
 6564               	.LBE2423:
 6565               	.LBE2422:
 6566               	.LBB2424:
 6567               	.LBB2425:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6568               		.loc 6 158 0
 6569 1924 E0E0      		ldi r30,lo8(endpoints+24)
 6570 1926 F0E0      		ldi r31,hi8(endpoints+24)
 6571               	/* #APP */
 6572               	 ;  158 "usb/usb.h" 1
 6573 1928 06E0      		ldi r16, 6
 6574 192a 0593      		.dc.w 0x9305
 6575               		
 6576               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 6577               		.loc 6 159 0
 6578               	 ;  159 "usb/usb.h" 1
 6579 192c 08E0      		ldi r16, 8
 6580 192e 0693      		.dc.w 0x9306
 6581               		
 6582               	 ;  0 "" 2
 6583               	/* #NOAPP */
 6584               	.LBE2425:
 6585               	.LBE2424:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 6586               		.loc 3 57 0
 6587 1930 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 6588               		.loc 3 58 0
 6589 1934 1092 0000 		sts ep_in_data+2,__zero_reg__
 6590 1938 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 6591               		.loc 3 59 0
 6592 193c 1092 0000 		sts ep_in_data,__zero_reg__
 6593               	.LVL393:
 6594               	.LBB2426:
 6595               	.LBB2427:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6596               		.loc 4 70 0
 6597 1940 2FBF      		out __SREG__,r18
 6598               		.loc 4 71 0
 6599               	.LVL394:
 6600               	.L314:
 6601               	.LBE2427:
 6602               	.LBE2426:
 6603               	.LBE2419:
 6604               	.LBE2418:
 6605               	.LBE2417:
 6606               	.LBE2343:
 6607               	.LBE2342:
 6608               	.LBB2439:
 6609               	.LBB2440:
 286:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 6610               		.loc 1 286 0
 6611 1942 8091 A109 		lds r24,2465
 6612 1946 85FF      		sbrs r24,5
 6613 1948 00C0      		rjmp .L314
 289:main.c        ****     USARTD0.DATA = c; 
 6614               		.loc 1 289 0
 6615 194a 8AE1      		ldi r24,lo8(26)
 6616 194c 8093 A009 		sts 2464,r24
 6617               	.LVL395:
 6618               	.LBE2440:
 6619               	.LBE2439:
 6620               	.LBB2441:
 6621               	.LBB2442:
 6622               		.loc 7 164 0
 6623 1950 8FEF      		 ldi r24,lo8(639999)
 6624 1952 93EC      	    ldi r25,hi8(639999)
 6625 1954 A9E0      	    ldi r26,hlo8(639999)
 6626 1956 8150      	    1:subi r24,1
 6627 1958 9040      	    sbci r25,0
 6628 195a A040      	    sbci r26,0
 6629 195c 01F4      	    brne 1b
 6630 195e 00C0      		rjmp .
 6631 1960 0000      		nop
 6632               	.LBE2442:
 6633               	.LBE2441:
 6634               	.LBB2443:
 6635               	.LBB2444:
 6636               	.LBB2445:
 6637               	.LBB2446:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 6638               		.loc 3 110 0
 6639 1962 81E0      		ldi r24,lo8(1)
 6640 1964 8093 0000 		sts ep_in_data+1,r24
 6641               	.LVL396:
 6642               	.LBB2447:
 6643               	.LBB2448:
 6644               	.LBB2449:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6645               		.loc 3 80 0
 6646 1968 2FB7      		in r18,__SREG__
 6647               	.LVL397:
 6648               	.LBB2450:
 6649               	.LBB2451:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6650               		.loc 4 50 0
 6651               	/* #APP */
 6652               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6653 196a F894      		cli
 6654               	 ;  0 "" 2
 6655               	.LVL398:
 6656               	/* #NOAPP */
 6657               	.LBE2451:
 6658               	.LBE2450:
 6659               	.LBB2452:
 6660               	.LBB2453:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6661               		.loc 6 220 0
 6662 196c 8091 0000 		lds r24,endpoints+24
 6663 1970 8670      		andi r24,lo8(6)
 6664               	.LBE2453:
 6665               	.LBE2452:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 6666               		.loc 3 82 0
 6667 1972 01F0      		breq .+2
 6668 1974 00C0      		rjmp .L344
 6669               	.LVL399:
 6670               	.L296:
 6671               	.LBB2454:
 6672               	.LBB2455:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6673               		.loc 4 70 0
 6674 1976 2FBF      		out __SREG__,r18
 6675               		.loc 4 71 0
 6676               	.LBE2455:
 6677               	.LBE2454:
 6678               	.LBE2449:
 6679               	.LBE2448:
 6680               	.LBE2447:
 6681               	.LBE2446:
 6682               	.LBE2445:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 6683               		.loc 2 27 0
 6684 1978 82E0      		ldi r24,lo8(2)
 6685 197a E0EC      		ldi r30,lo8(1216)
 6686 197c F4E0      		ldi r31,hi8(1216)
 6687 197e 8587      		std Z+13,r24
 6688               	.LBB2505:
 6689               	.LBB2506:
 6690               	.LBB2507:
 6691               	.LBB2508:
 6692               	.LBB2509:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 6693               		.loc 5 57 0
 6694 1980 36E0      		ldi r19,lo8(6)
 6695               	.LVL400:
 6696               	.L305:
 6697               	.LBE2509:
 6698               	.LBE2508:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6699               		.loc 3 123 0
 6700 1982 9FB7      		in r25,__SREG__
 6701               	.LVL401:
 6702               	.LBB2511:
 6703               	.LBB2512:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6704               		.loc 4 50 0
 6705               	/* #APP */
 6706               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6707 1984 F894      		cli
 6708               	 ;  0 "" 2
 6709               	.LVL402:
 6710               	/* #NOAPP */
 6711               	.LBE2512:
 6712               	.LBE2511:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 6713               		.loc 3 124 0
 6714 1986 8091 0000 		lds r24,ep_in_data+1
 6715 198a 8823      		tst r24
 6716 198c 01F4      		brne .+2
 6717 198e 00C0      		rjmp .L345
 6718               	.L313:
 125:usb/usb_pipe.h **** 			r = false;
 6719               		.loc 3 125 0
 6720 1990 80E0      		ldi r24,lo8(0)
 6721               	.L307:
 6722               	.LBB2513:
 6723               	.LBB2514:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6724               		.loc 4 70 0
 6725 1992 9FBF      		out __SREG__,r25
 6726               		.loc 4 71 0
 6727               	.LBE2514:
 6728               	.LBE2513:
 6729               	.LBE2507:
 6730               	.LBE2506:
 6731               	.LBE2505:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 6732               		.loc 2 28 0
 6733 1994 8823      		tst r24
 6734 1996 01F4      		brne .L235
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 6735               		.loc 2 29 0
 6736 1998 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 6737 199c 8823      		tst r24
 6738 199e 01F0      		breq .L305
 6739               	.LVL403:
 6740               	.LBB2518:
 6741               	.LBB2519:
 6742               	.LBB2520:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6743               		.loc 3 54 0
 6744 19a0 2FB7      		in r18,__SREG__
 6745               	.LVL404:
 6746               	.LBB2521:
 6747               	.LBB2522:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6748               		.loc 4 50 0
 6749               	/* #APP */
 6750               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6751 19a2 F894      		cli
 6752               	 ;  0 "" 2
 6753               	.LVL405:
 6754               	/* #NOAPP */
 6755               	.LBE2522:
 6756               	.LBE2521:
 6757               	.LBB2523:
 6758               	.LBB2524:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 6759               		.loc 5 90 0
 6760 19a4 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 6761               		.loc 5 91 0
 6762 19a8 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 6763 19aa 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 6764 19ac 8093 0000 		sts ep_in_pipe_data+2,r24
 6765 19b0 9093 0000 		sts ep_in_pipe_data+2+1,r25
 6766 19b4 8093 0000 		sts ep_in_pipe_data,r24
 6767 19b8 9093 0000 		sts ep_in_pipe_data+1,r25
 6768               	.LVL406:
 6769               	.LBE2524:
 6770               	.LBE2523:
 6771               	.LBB2525:
 6772               	.LBB2526:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6773               		.loc 6 158 0
 6774 19bc E0E0      		ldi r30,lo8(endpoints+24)
 6775 19be F0E0      		ldi r31,hi8(endpoints+24)
 6776               	/* #APP */
 6777               	 ;  158 "usb/usb.h" 1
 6778 19c0 06E0      		ldi r16, 6
 6779 19c2 0593      		.dc.w 0x9305
 6780               		
 6781               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 6782               		.loc 6 159 0
 6783               	 ;  159 "usb/usb.h" 1
 6784 19c4 08E0      		ldi r16, 8
 6785 19c6 0693      		.dc.w 0x9306
 6786               		
 6787               	 ;  0 "" 2
 6788               	/* #NOAPP */
 6789               	.LBE2526:
 6790               	.LBE2525:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 6791               		.loc 3 57 0
 6792 19c8 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 6793               		.loc 3 58 0
 6794 19cc 1092 0000 		sts ep_in_data+2,__zero_reg__
 6795 19d0 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 6796               		.loc 3 59 0
 6797 19d4 1092 0000 		sts ep_in_data,__zero_reg__
 6798               	.LVL407:
 6799               	.LBB2527:
 6800               	.LBB2528:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6801               		.loc 4 70 0
 6802 19d8 2FBF      		out __SREG__,r18
 6803               		.loc 4 71 0
 6804               	.LVL408:
 6805               	.L235:
 6806               	/* epilogue start */
 6807               	.LBE2528:
 6808               	.LBE2527:
 6809               	.LBE2520:
 6810               	.LBE2519:
 6811               	.LBE2518:
 6812               	.LBE2444:
 6813               	.LBE2443:
 363:main.c        **** }
 6814               		.loc 1 363 0
 6815 19da DF91      		pop r29
 6816 19dc CF91      		pop r28
 6817 19de 1F91      		pop r17
 6818 19e0 0F91      		pop r16
 6819 19e2 FF90      		pop r15
 6820 19e4 EF90      		pop r14
 6821 19e6 DF90      		pop r13
 6822 19e8 0895      		ret
 6823               	.LVL409:
 6824               	.L320:
 6825               	.LBB2541:
 6826               	.LBB2146:
 6827               	.LBB2144:
 6828               	.LBB2142:
 6829               	.LBB2141:
 262:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 6830               		.loc 1 262 0
 6831 19ea 8091 A109 		lds r24,2465
 6832 19ee 85FF      		sbrs r24,5
 6833 19f0 00C0      		rjmp .L320
 265:main.c        ****     USARTD0.DATA = c; 
 6834               		.loc 1 265 0
 6835 19f2 2093 A009 		sts 2464,r18
 6836 19f6 00C0      		rjmp .L319
 6837               	.LVL410:
 6838               	.L339:
 6839               	.LBE2141:
 6840               	.LBE2142:
 6841               	.LBE2144:
 6842               	.LBE2146:
 6843               	.LBE2541:
 6844               	.LBB2542:
 6845               	.LBB2219:
 6846               	.LBB2217:
 6847               	.LBB2205:
 6848               	.LBB2204:
 6849               	.LBB2203:
 6850               	.LBB2198:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 6851               		.loc 5 57 0
 6852 19f8 8091 0000 		lds r24,ep_in_pipe_data+4
 6853 19fc 232F      		mov r18,r19
 6854 19fe 281B      		sub r18,r24
 6855               	.LBE2198:
 6856               	.LBE2203:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 6857               		.loc 3 127 0
 6858 1a00 81E0      		ldi r24,lo8(1)
 6859 1a02 1216      		cp __zero_reg__,r18
 6860 1a04 04F4      		brge .+2
 6861 1a06 00C0      		rjmp .L252
 6862 1a08 00C0      		rjmp .L310
 6863               	.LVL411:
 6864               	.L338:
 6865               	.LBE2204:
 6866               	.LBE2205:
 6867               	.LBE2217:
 6868               	.LBB2218:
 6869               	.LBB2192:
 6870               	.LBB2191:
 6871               	.LBB2190:
 6872               	.LBB2189:
 6873               	.LBB2162:
 6874               	.LBB2163:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 6875               		.loc 5 51 0
 6876 1a0a 4091 0000 		lds r20,ep_in_pipe_data+4
 6877               	.LBE2163:
 6878               	.LBE2162:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 6879               		.loc 3 83 0
 6880 1a0e 1416      		cp __zero_reg__,r20
 6881 1a10 04F0      		brlt .+2
 6882 1a12 00C0      		rjmp .L242
 6883               	.LBB2164:
 6884               	.LBB2165:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 6885               		.loc 5 62 0
 6886 1a14 8091 0000 		lds r24,ep_in_pipe_data
 6887 1a18 9091 0000 		lds r25,ep_in_pipe_data+1
 6888               	.LVL412:
 6889               	.LBE2165:
 6890               	.LBE2164:
 6891               	.LBB2166:
 6892               	.LBB2167:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 6893               		.loc 3 68 0
 6894 1a1c 2091 0000 		lds r18,ep_in_data
 6895               	.LVL413:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 6896               		.loc 3 69 0
 6897 1a20 31E0      		ldi r19,lo8(1)
 6898 1a22 2130      		cpi r18,lo8(1)
 6899 1a24 01F4      		brne .L243
 6900 1a26 30E0      		ldi r19,lo8(0)
 6901               	.L243:
 6902 1a28 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 6903               		.loc 3 72 0
 6904 1a2c 2223      		tst r18
 6905 1a2e 01F4      		brne .L244
 6906               	.LVL414:
 6907               	.LBB2168:
 6908               	.LBB2169:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 6909               		.loc 6 168 0
 6910 1a30 8093 0000 		sts endpoints+28,r24
 6911 1a34 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 6912               		.loc 6 169 0
 6913 1a38 20E4      		ldi r18,lo8(64)
 6914 1a3a 30E0      		ldi r19,hi8(64)
 6915 1a3c 2093 0000 		sts endpoints+26,r18
 6916 1a40 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 6917               		.loc 6 174 0
 6918 1a44 E0E0      		ldi r30,lo8(endpoints+24)
 6919 1a46 F0E0      		ldi r31,hi8(endpoints+24)
 6920               	.LVL415:
 6921               	/* #APP */
 6922               	 ;  174 "usb/usb.h" 1
 6923 1a48 02E2      		ldi r16, 34
 6924 1a4a 0693      		.dc.w 0x9306
 6925               		
 6926               	 ;  0 "" 2
 6927               	.LVL416:
 6928               	/* #NOAPP */
 6929               	.L245:
 6930               	.LBE2169:
 6931               	.LBE2168:
 6932               	.LBE2167:
 6933               	.LBE2166:
 6934               	.LBB2173:
 6935               	.LBB2174:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 6936               		.loc 5 72 0
 6937 1a4c 4150      		subi r20,lo8(-(-1))
 6938 1a4e 4093 0000 		sts ep_in_pipe_data+4,r20
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 6939               		.loc 5 73 0
 6940 1a52 805C      		subi r24,lo8(-(64))
 6941 1a54 9F4F      		sbci r25,hi8(-(64))
 6942 1a56 8093 0000 		sts ep_in_pipe_data,r24
 6943 1a5a 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 6944               		.loc 5 75 0
 6945 1a5e A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 6946 1a60 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 6947 1a62 9A07      		cpc r25,r26
 6948 1a64 01F0      		breq .+2
 6949 1a66 00C0      		rjmp .L241
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 6950               		.loc 5 76 0
 6951 1a68 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 6952 1a6a 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 6953 1a6c 8093 0000 		sts ep_in_pipe_data,r24
 6954 1a70 9093 0000 		sts ep_in_pipe_data+1,r25
 6955 1a74 00C0      		rjmp .L241
 6956               	.LVL417:
 6957               	.L244:
 6958               	.LBE2174:
 6959               	.LBE2173:
 6960               	.LBB2175:
 6961               	.LBB2172:
 6962               	.LBB2170:
 6963               	.LBB2171:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 6964               		.loc 6 168 0
 6965 1a76 8093 0000 		sts endpoints+20,r24
 6966 1a7a 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 6967               		.loc 6 169 0
 6968 1a7e 20E4      		ldi r18,lo8(64)
 6969 1a80 30E0      		ldi r19,hi8(64)
 6970 1a82 2093 0000 		sts endpoints+18,r18
 6971 1a86 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 6972               		.loc 6 176 0
 6973 1a8a E0E0      		ldi r30,lo8(endpoints+24)
 6974 1a8c F0E0      		ldi r31,hi8(endpoints+24)
 6975               	/* #APP */
 6976               	 ;  176 "usb/usb.h" 1
 6977 1a8e 04E1      		ldi r16, 20
 6978 1a90 0693      		.dc.w 0x9306
 6979               		
 6980               	 ;  0 "" 2
 6981               	/* #NOAPP */
 6982 1a92 00C0      		rjmp .L245
 6983               	.LVL418:
 6984               	.L242:
 6985               	.LBE2171:
 6986               	.LBE2170:
 6987               	.LBE2172:
 6988               	.LBE2175:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 6989               		.loc 3 87 0
 6990 1a94 8091 0000 		lds r24,ep_in_data+1
 6991 1a98 8130      		cpi r24,lo8(1)
 6992 1a9a 01F0      		breq .L346
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 6993               		.loc 3 91 0
 6994 1a9c 8230      		cpi r24,lo8(2)
 6995 1a9e 01F0      		breq .+2
 6996 1aa0 00C0      		rjmp .L241
 6997               	.LVL419:
 6998               	.LBB2176:
 6999               	.LBB2177:
 7000               	.LBB2178:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 7001               		.loc 6 228 0
 7002 1aa2 8091 0000 		lds r24,endpoints+24
 7003 1aa6 8670      		andi r24,lo8(6)
 7004               	.LBE2178:
 7005               	.LBE2177:
 7006               	.LBE2176:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 7007               		.loc 3 91 0
 7008 1aa8 8630      		cpi r24,lo8(6)
 7009 1aaa 01F0      		breq .+2
 7010 1aac 00C0      		rjmp .L241
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 7011               		.loc 3 92 0
 7012 1aae 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 7013               		.loc 3 93 0
 7014 1ab2 1092 0000 		sts ep_in_data+2,__zero_reg__
 7015 1ab6 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 7016               	.LBB2179:
 7017               	.LBB2180:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 7018               		.loc 5 90 0
 7019 1aba 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 7020               		.loc 5 91 0
 7021 1abe 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7022 1ac0 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7023 1ac2 8093 0000 		sts ep_in_pipe_data+2,r24
 7024 1ac6 9093 0000 		sts ep_in_pipe_data+2+1,r25
 7025 1aca 8093 0000 		sts ep_in_pipe_data,r24
 7026 1ace 9093 0000 		sts ep_in_pipe_data+1,r25
 7027               	.LVL420:
 7028 1ad2 00C0      		rjmp .L241
 7029               	.LVL421:
 7030               	.L346:
 7031               	.LBE2180:
 7032               	.LBE2179:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 7033               		.loc 3 88 0
 7034 1ad4 82E0      		ldi r24,lo8(2)
 7035 1ad6 8093 0000 		sts ep_in_data+1,r24
 7036               	.LBB2181:
 7037               	.LBB2182:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 7038               		.loc 5 62 0
 7039 1ada 6091 0000 		lds r22,ep_in_pipe_data
 7040               	.LVL422:
 7041 1ade 4091 0000 		lds r20,ep_in_pipe_data+1
 7042               	.LBE2182:
 7043               	.LBE2181:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 7044               		.loc 3 90 0
 7045 1ae2 8091 0000 		lds r24,ep_in_data+2
 7046 1ae6 9091 0000 		lds r25,ep_in_data+2+1
 7047               	.LVL423:
 7048               	.LBB2183:
 7049               	.LBB2184:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 7050               		.loc 3 68 0
 7051 1aea 2091 0000 		lds r18,ep_in_data
 7052               	.LVL424:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7053               		.loc 3 69 0
 7054 1aee 31E0      		ldi r19,lo8(1)
 7055 1af0 2130      		cpi r18,lo8(1)
 7056 1af2 01F0      		breq .L347
 7057               	.L248:
 7058 1af4 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 7059               		.loc 3 72 0
 7060 1af8 2223      		tst r18
 7061 1afa 01F4      		brne .L249
 7062               	.LVL425:
 7063               	.LBB2185:
 7064               	.LBB2186:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7065               		.loc 6 168 0
 7066 1afc 262F      		mov r18,r22
 7067 1afe 342F      		mov r19,r20
 7068 1b00 2093 0000 		sts endpoints+28,r18
 7069 1b04 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7070               		.loc 6 169 0
 7071 1b08 8093 0000 		sts endpoints+26,r24
 7072 1b0c 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 7073               		.loc 6 174 0
 7074 1b10 E0E0      		ldi r30,lo8(endpoints+24)
 7075 1b12 F0E0      		ldi r31,hi8(endpoints+24)
 7076               	.LVL426:
 7077               	/* #APP */
 7078               	 ;  174 "usb/usb.h" 1
 7079 1b14 02E2      		ldi r16, 34
 7080 1b16 0693      		.dc.w 0x9306
 7081               		
 7082               	 ;  0 "" 2
 7083               	/* #NOAPP */
 7084 1b18 00C0      		rjmp .L241
 7085               	.LVL427:
 7086               	.L249:
 7087               	.LBE2186:
 7088               	.LBE2185:
 7089               	.LBB2187:
 7090               	.LBB2188:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7091               		.loc 6 168 0
 7092 1b1a 262F      		mov r18,r22
 7093 1b1c 342F      		mov r19,r20
 7094 1b1e 2093 0000 		sts endpoints+20,r18
 7095 1b22 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7096               		.loc 6 169 0
 7097 1b26 8093 0000 		sts endpoints+18,r24
 7098 1b2a 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 7099               		.loc 6 176 0
 7100 1b2e E0E0      		ldi r30,lo8(endpoints+24)
 7101 1b30 F0E0      		ldi r31,hi8(endpoints+24)
 7102               	/* #APP */
 7103               	 ;  176 "usb/usb.h" 1
 7104 1b32 04E1      		ldi r16, 20
 7105 1b34 0693      		.dc.w 0x9306
 7106               		
 7107               	 ;  0 "" 2
 7108               	/* #NOAPP */
 7109 1b36 00C0      		rjmp .L241
 7110               	.LVL428:
 7111               	.L347:
 7112               	.LBE2188:
 7113               	.LBE2187:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7114               		.loc 3 69 0
 7115 1b38 30E0      		ldi r19,lo8(0)
 7116 1b3a 00C0      		rjmp .L248
 7117               	.LVL429:
 7118               	.L318:
 7119               	.LBE2184:
 7120               	.LBE2183:
 7121               	.LBE2189:
 7122               	.LBE2190:
 7123               	.LBE2191:
 7124               	.LBE2192:
 7125               	.LBE2218:
 7126               	.LBE2219:
 7127               	.LBE2542:
 7128               	.LBB2543:
 7129               	.LBB2234:
 7130               	.LBB2232:
 7131               	.LBB2230:
 7132               	.LBB2229:
 262:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 7133               		.loc 1 262 0
 7134 1b3c 2091 A109 		lds r18,2465
 7135 1b40 25FF      		sbrs r18,5
 7136 1b42 00C0      		rjmp .L318
 265:main.c        ****     USARTD0.DATA = c; 
 7137               		.loc 1 265 0
 7138 1b44 4093 A009 		sts 2464,r20
 7139 1b48 00C0      		rjmp .L317
 7140               	.LVL430:
 7141               	.L316:
 7142               	.LBE2229:
 7143               	.LBE2230:
 7144               	.LBE2232:
 7145               	.LBE2234:
 7146               	.LBE2543:
 7147               	.LBB2544:
 7148               	.LBB2339:
 7149               	.LBB2337:
 7150               	.LBB2335:
 7151               	.LBB2334:
 262:main.c        ****     while ( !( USARTD0.STATUS & USART_DREIF_bm) ); 
 7152               		.loc 1 262 0
 7153 1b4a 2091 A109 		lds r18,2465
 7154 1b4e 25FF      		sbrs r18,5
 7155 1b50 00C0      		rjmp .L316
 265:main.c        ****     USARTD0.DATA = c; 
 7156               		.loc 1 265 0
 7157 1b52 4093 A009 		sts 2464,r20
 7158 1b56 00C0      		rjmp .L315
 7159               	.LVL431:
 7160               	.L345:
 7161               	.LBE2334:
 7162               	.LBE2335:
 7163               	.LBE2337:
 7164               	.LBE2339:
 7165               	.LBE2544:
 7166               	.LBB2545:
 7167               	.LBB2535:
 7168               	.LBB2529:
 7169               	.LBB2517:
 7170               	.LBB2516:
 7171               	.LBB2515:
 7172               	.LBB2510:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 7173               		.loc 5 57 0
 7174 1b58 8091 0000 		lds r24,ep_in_pipe_data+4
 7175 1b5c 232F      		mov r18,r19
 7176 1b5e 281B      		sub r18,r24
 7177               	.LBE2510:
 7178               	.LBE2515:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 7179               		.loc 3 127 0
 7180 1b60 81E0      		ldi r24,lo8(1)
 7181 1b62 1216      		cp __zero_reg__,r18
 7182 1b64 04F4      		brge .+2
 7183 1b66 00C0      		rjmp .L307
 7184 1b68 00C0      		rjmp .L313
 7185               	.LVL432:
 7186               	.L341:
 7187               	.LBE2516:
 7188               	.LBE2517:
 7189               	.LBE2529:
 7190               	.LBE2535:
 7191               	.LBE2545:
 7192               	.LBB2546:
 7193               	.LBB2324:
 7194               	.LBB2319:
 7195               	.LBB2307:
 7196               	.LBB2306:
 7197               	.LBB2305:
 7198               	.LBB2300:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 7199               		.loc 5 57 0
 7200 1b6a 8091 0000 		lds r24,ep_in_pipe_data+4
 7201 1b6e 232F      		mov r18,r19
 7202 1b70 281B      		sub r18,r24
 7203               	.LBE2300:
 7204               	.LBE2305:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 7205               		.loc 3 127 0
 7206 1b72 81E0      		ldi r24,lo8(1)
 7207 1b74 1216      		cp __zero_reg__,r18
 7208 1b76 04F4      		brge .+2
 7209 1b78 00C0      		rjmp .L273
 7210 1b7a 00C0      		rjmp .L311
 7211               	.LVL433:
 7212               	.L343:
 7213               	.LBE2306:
 7214               	.LBE2307:
 7215               	.LBE2319:
 7216               	.LBE2324:
 7217               	.LBE2546:
 7218               	.LBB2547:
 7219               	.LBB2434:
 7220               	.LBB2428:
 7221               	.LBB2416:
 7222               	.LBB2415:
 7223               	.LBB2414:
 7224               	.LBB2409:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 7225               		.loc 5 57 0
 7226 1b7c 8091 0000 		lds r24,ep_in_pipe_data+4
 7227 1b80 232F      		mov r18,r19
 7228 1b82 281B      		sub r18,r24
 7229               	.LBE2409:
 7230               	.LBE2414:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 7231               		.loc 3 127 0
 7232 1b84 81E0      		ldi r24,lo8(1)
 7233 1b86 1216      		cp __zero_reg__,r18
 7234 1b88 04F4      		brge .+2
 7235 1b8a 00C0      		rjmp .L292
 7236 1b8c 00C0      		rjmp .L312
 7237               	.LVL434:
 7238               	.L342:
 7239               	.LBE2415:
 7240               	.LBE2416:
 7241               	.LBE2428:
 7242               	.LBB2429:
 7243               	.LBB2399:
 7244               	.LBB2394:
 7245               	.LBB2389:
 7246               	.LBB2384:
 7247               	.LBB2355:
 7248               	.LBB2356:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 7249               		.loc 5 51 0
 7250 1b8e 3091 0000 		lds r19,ep_in_pipe_data+4
 7251               	.LBE2356:
 7252               	.LBE2355:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 7253               		.loc 3 83 0
 7254 1b92 1316      		cp __zero_reg__,r19
 7255 1b94 04F0      		brlt .+2
 7256 1b96 00C0      		rjmp .L282
 7257               	.LBB2357:
 7258               	.LBB2358:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 7259               		.loc 5 62 0
 7260 1b98 8091 0000 		lds r24,ep_in_pipe_data
 7261 1b9c 9091 0000 		lds r25,ep_in_pipe_data+1
 7262               	.LVL435:
 7263               	.LBE2358:
 7264               	.LBE2357:
 7265               	.LBB2359:
 7266               	.LBB2360:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 7267               		.loc 3 68 0
 7268 1ba0 4091 0000 		lds r20,ep_in_data
 7269               	.LVL436:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7270               		.loc 3 69 0
 7271 1ba4 51E0      		ldi r21,lo8(1)
 7272 1ba6 4130      		cpi r20,lo8(1)
 7273 1ba8 01F4      		brne .L283
 7274 1baa 50E0      		ldi r21,lo8(0)
 7275               	.L283:
 7276 1bac 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 7277               		.loc 3 72 0
 7278 1bb0 4423      		tst r20
 7279 1bb2 01F0      		breq .+2
 7280 1bb4 00C0      		rjmp .L284
 7281               	.LVL437:
 7282               	.LBB2361:
 7283               	.LBB2362:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7284               		.loc 6 168 0
 7285 1bb6 8093 0000 		sts endpoints+28,r24
 7286 1bba 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7287               		.loc 6 169 0
 7288 1bbe 40E4      		ldi r20,lo8(64)
 7289 1bc0 50E0      		ldi r21,hi8(64)
 7290 1bc2 4093 0000 		sts endpoints+26,r20
 7291 1bc6 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 7292               		.loc 6 174 0
 7293 1bca E0E0      		ldi r30,lo8(endpoints+24)
 7294 1bcc F0E0      		ldi r31,hi8(endpoints+24)
 7295               	.LVL438:
 7296               	/* #APP */
 7297               	 ;  174 "usb/usb.h" 1
 7298 1bce 02E2      		ldi r16, 34
 7299 1bd0 0693      		.dc.w 0x9306
 7300               		
 7301               	 ;  0 "" 2
 7302               	.LVL439:
 7303               	/* #NOAPP */
 7304               	.L285:
 7305               	.LBE2362:
 7306               	.LBE2361:
 7307               	.LBE2360:
 7308               	.LBE2359:
 7309               	.LBB2366:
 7310               	.LBB2367:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 7311               		.loc 5 72 0
 7312 1bd2 3150      		subi r19,lo8(-(-1))
 7313 1bd4 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 7314               		.loc 5 73 0
 7315 1bd8 805C      		subi r24,lo8(-(64))
 7316 1bda 9F4F      		sbci r25,hi8(-(64))
 7317 1bdc 8093 0000 		sts ep_in_pipe_data,r24
 7318 1be0 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 7319               		.loc 5 75 0
 7320 1be4 A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 7321 1be6 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 7322 1be8 9A07      		cpc r25,r26
 7323 1bea 01F0      		breq .+2
 7324 1bec 00C0      		rjmp .L281
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 7325               		.loc 5 76 0
 7326 1bee 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7327 1bf0 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7328 1bf2 8093 0000 		sts ep_in_pipe_data,r24
 7329 1bf6 9093 0000 		sts ep_in_pipe_data+1,r25
 7330 1bfa 00C0      		rjmp .L281
 7331               	.LVL440:
 7332               	.L344:
 7333               	.LBE2367:
 7334               	.LBE2366:
 7335               	.LBE2384:
 7336               	.LBE2389:
 7337               	.LBE2394:
 7338               	.LBE2399:
 7339               	.LBE2429:
 7340               	.LBE2434:
 7341               	.LBE2547:
 7342               	.LBB2548:
 7343               	.LBB2536:
 7344               	.LBB2530:
 7345               	.LBB2500:
 7346               	.LBB2495:
 7347               	.LBB2490:
 7348               	.LBB2485:
 7349               	.LBB2456:
 7350               	.LBB2457:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 7351               		.loc 5 51 0
 7352 1bfc 3091 0000 		lds r19,ep_in_pipe_data+4
 7353               	.LBE2457:
 7354               	.LBE2456:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 7355               		.loc 3 83 0
 7356 1c00 1316      		cp __zero_reg__,r19
 7357 1c02 04F0      		brlt .+2
 7358 1c04 00C0      		rjmp .L297
 7359               	.LBB2458:
 7360               	.LBB2459:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 7361               		.loc 5 62 0
 7362 1c06 8091 0000 		lds r24,ep_in_pipe_data
 7363 1c0a 9091 0000 		lds r25,ep_in_pipe_data+1
 7364               	.LVL441:
 7365               	.LBE2459:
 7366               	.LBE2458:
 7367               	.LBB2460:
 7368               	.LBB2461:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 7369               		.loc 3 68 0
 7370 1c0e 4091 0000 		lds r20,ep_in_data
 7371               	.LVL442:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7372               		.loc 3 69 0
 7373 1c12 51E0      		ldi r21,lo8(1)
 7374 1c14 4130      		cpi r20,lo8(1)
 7375 1c16 01F4      		brne .L298
 7376 1c18 50E0      		ldi r21,lo8(0)
 7377               	.L298:
 7378 1c1a 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 7379               		.loc 3 72 0
 7380 1c1e 4423      		tst r20
 7381 1c20 01F0      		breq .+2
 7382 1c22 00C0      		rjmp .L299
 7383               	.LVL443:
 7384               	.LBB2462:
 7385               	.LBB2463:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7386               		.loc 6 168 0
 7387 1c24 8093 0000 		sts endpoints+28,r24
 7388 1c28 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7389               		.loc 6 169 0
 7390 1c2c 40E4      		ldi r20,lo8(64)
 7391 1c2e 50E0      		ldi r21,hi8(64)
 7392 1c30 4093 0000 		sts endpoints+26,r20
 7393 1c34 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 7394               		.loc 6 174 0
 7395 1c38 E0E0      		ldi r30,lo8(endpoints+24)
 7396 1c3a F0E0      		ldi r31,hi8(endpoints+24)
 7397               	.LVL444:
 7398               	/* #APP */
 7399               	 ;  174 "usb/usb.h" 1
 7400 1c3c 02E2      		ldi r16, 34
 7401 1c3e 0693      		.dc.w 0x9306
 7402               		
 7403               	 ;  0 "" 2
 7404               	.LVL445:
 7405               	/* #NOAPP */
 7406               	.L300:
 7407               	.LBE2463:
 7408               	.LBE2462:
 7409               	.LBE2461:
 7410               	.LBE2460:
 7411               	.LBB2467:
 7412               	.LBB2468:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 7413               		.loc 5 72 0
 7414 1c40 3150      		subi r19,lo8(-(-1))
 7415 1c42 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 7416               		.loc 5 73 0
 7417 1c46 805C      		subi r24,lo8(-(64))
 7418 1c48 9F4F      		sbci r25,hi8(-(64))
 7419 1c4a 8093 0000 		sts ep_in_pipe_data,r24
 7420 1c4e 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 7421               		.loc 5 75 0
 7422 1c52 A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 7423 1c54 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 7424 1c56 9A07      		cpc r25,r26
 7425 1c58 01F0      		breq .+2
 7426 1c5a 00C0      		rjmp .L296
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 7427               		.loc 5 76 0
 7428 1c5c 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7429 1c5e 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7430 1c60 8093 0000 		sts ep_in_pipe_data,r24
 7431 1c64 9093 0000 		sts ep_in_pipe_data+1,r25
 7432 1c68 00C0      		rjmp .L296
 7433               	.LVL446:
 7434               	.L340:
 7435               	.LBE2468:
 7436               	.LBE2467:
 7437               	.LBE2485:
 7438               	.LBE2490:
 7439               	.LBE2495:
 7440               	.LBE2500:
 7441               	.LBE2530:
 7442               	.LBE2536:
 7443               	.LBE2548:
 7444               	.LBB2549:
 7445               	.LBB2325:
 7446               	.LBB2320:
 7447               	.LBB2291:
 7448               	.LBB2287:
 7449               	.LBB2283:
 7450               	.LBB2279:
 7451               	.LBB2250:
 7452               	.LBB2251:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 7453               		.loc 5 51 0
 7454 1c6a 3091 0000 		lds r19,ep_in_pipe_data+4
 7455               	.LBE2251:
 7456               	.LBE2250:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 7457               		.loc 3 83 0
 7458 1c6e 1316      		cp __zero_reg__,r19
 7459 1c70 04F0      		brlt .+2
 7460 1c72 00C0      		rjmp .L263
 7461               	.LBB2252:
 7462               	.LBB2253:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 7463               		.loc 5 62 0
 7464 1c74 8091 0000 		lds r24,ep_in_pipe_data
 7465 1c78 9091 0000 		lds r25,ep_in_pipe_data+1
 7466               	.LVL447:
 7467               	.LBE2253:
 7468               	.LBE2252:
 7469               	.LBB2254:
 7470               	.LBB2255:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 7471               		.loc 3 68 0
 7472 1c7c 4091 0000 		lds r20,ep_in_data
 7473               	.LVL448:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7474               		.loc 3 69 0
 7475 1c80 51E0      		ldi r21,lo8(1)
 7476 1c82 4130      		cpi r20,lo8(1)
 7477 1c84 01F4      		brne .L264
 7478 1c86 50E0      		ldi r21,lo8(0)
 7479               	.L264:
 7480 1c88 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 7481               		.loc 3 72 0
 7482 1c8c 4423      		tst r20
 7483 1c8e 01F0      		breq .+2
 7484 1c90 00C0      		rjmp .L265
 7485               	.LVL449:
 7486               	.LBB2256:
 7487               	.LBB2257:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7488               		.loc 6 168 0
 7489 1c92 8093 0000 		sts endpoints+28,r24
 7490 1c96 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7491               		.loc 6 169 0
 7492 1c9a 40E4      		ldi r20,lo8(64)
 7493 1c9c 50E0      		ldi r21,hi8(64)
 7494 1c9e 4093 0000 		sts endpoints+26,r20
 7495 1ca2 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 7496               		.loc 6 174 0
 7497 1ca6 E0E0      		ldi r30,lo8(endpoints+24)
 7498 1ca8 F0E0      		ldi r31,hi8(endpoints+24)
 7499               	.LVL450:
 7500               	/* #APP */
 7501               	 ;  174 "usb/usb.h" 1
 7502 1caa 02E2      		ldi r16, 34
 7503 1cac 0693      		.dc.w 0x9306
 7504               		
 7505               	 ;  0 "" 2
 7506               	.LVL451:
 7507               	/* #NOAPP */
 7508               	.L266:
 7509               	.LBE2257:
 7510               	.LBE2256:
 7511               	.LBE2255:
 7512               	.LBE2254:
 7513               	.LBB2261:
 7514               	.LBB2262:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 7515               		.loc 5 72 0
 7516 1cae 3150      		subi r19,lo8(-(-1))
 7517 1cb0 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 7518               		.loc 5 73 0
 7519 1cb4 805C      		subi r24,lo8(-(64))
 7520 1cb6 9F4F      		sbci r25,hi8(-(64))
 7521 1cb8 8093 0000 		sts ep_in_pipe_data,r24
 7522 1cbc 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 7523               		.loc 5 75 0
 7524 1cc0 A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 7525 1cc2 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 7526 1cc4 9A07      		cpc r25,r26
 7527 1cc6 01F0      		breq .+2
 7528 1cc8 00C0      		rjmp .L262
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 7529               		.loc 5 76 0
 7530 1cca 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7531 1ccc 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7532 1cce 8093 0000 		sts ep_in_pipe_data,r24
 7533 1cd2 9093 0000 		sts ep_in_pipe_data+1,r25
 7534 1cd6 00C0      		rjmp .L262
 7535               	.LVL452:
 7536               	.L284:
 7537               	.LBE2262:
 7538               	.LBE2261:
 7539               	.LBE2279:
 7540               	.LBE2283:
 7541               	.LBE2287:
 7542               	.LBE2291:
 7543               	.LBE2320:
 7544               	.LBE2325:
 7545               	.LBE2549:
 7546               	.LBB2550:
 7547               	.LBB2435:
 7548               	.LBB2430:
 7549               	.LBB2400:
 7550               	.LBB2395:
 7551               	.LBB2390:
 7552               	.LBB2385:
 7553               	.LBB2368:
 7554               	.LBB2365:
 7555               	.LBB2363:
 7556               	.LBB2364:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7557               		.loc 6 168 0
 7558 1cd8 8093 0000 		sts endpoints+20,r24
 7559 1cdc 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7560               		.loc 6 169 0
 7561 1ce0 40E4      		ldi r20,lo8(64)
 7562 1ce2 50E0      		ldi r21,hi8(64)
 7563               	.LVL453:
 7564 1ce4 4093 0000 		sts endpoints+18,r20
 7565 1ce8 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 7566               		.loc 6 176 0
 7567 1cec E0E0      		ldi r30,lo8(endpoints+24)
 7568 1cee F0E0      		ldi r31,hi8(endpoints+24)
 7569               	.LVL454:
 7570               	/* #APP */
 7571               	 ;  176 "usb/usb.h" 1
 7572 1cf0 04E1      		ldi r16, 20
 7573 1cf2 0693      		.dc.w 0x9306
 7574               		
 7575               	 ;  0 "" 2
 7576               	/* #NOAPP */
 7577 1cf4 00C0      		rjmp .L285
 7578               	.LVL455:
 7579               	.L299:
 7580               	.LBE2364:
 7581               	.LBE2363:
 7582               	.LBE2365:
 7583               	.LBE2368:
 7584               	.LBE2385:
 7585               	.LBE2390:
 7586               	.LBE2395:
 7587               	.LBE2400:
 7588               	.LBE2430:
 7589               	.LBE2435:
 7590               	.LBE2550:
 7591               	.LBB2551:
 7592               	.LBB2537:
 7593               	.LBB2531:
 7594               	.LBB2501:
 7595               	.LBB2496:
 7596               	.LBB2491:
 7597               	.LBB2486:
 7598               	.LBB2469:
 7599               	.LBB2466:
 7600               	.LBB2464:
 7601               	.LBB2465:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7602               		.loc 6 168 0
 7603 1cf6 8093 0000 		sts endpoints+20,r24
 7604 1cfa 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7605               		.loc 6 169 0
 7606 1cfe 40E4      		ldi r20,lo8(64)
 7607 1d00 50E0      		ldi r21,hi8(64)
 7608               	.LVL456:
 7609 1d02 4093 0000 		sts endpoints+18,r20
 7610 1d06 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 7611               		.loc 6 176 0
 7612 1d0a E0E0      		ldi r30,lo8(endpoints+24)
 7613 1d0c F0E0      		ldi r31,hi8(endpoints+24)
 7614               	/* #APP */
 7615               	 ;  176 "usb/usb.h" 1
 7616 1d0e 04E1      		ldi r16, 20
 7617 1d10 0693      		.dc.w 0x9306
 7618               		
 7619               	 ;  0 "" 2
 7620               	/* #NOAPP */
 7621 1d12 00C0      		rjmp .L300
 7622               	.LVL457:
 7623               	.L265:
 7624               	.LBE2465:
 7625               	.LBE2464:
 7626               	.LBE2466:
 7627               	.LBE2469:
 7628               	.LBE2486:
 7629               	.LBE2491:
 7630               	.LBE2496:
 7631               	.LBE2501:
 7632               	.LBE2531:
 7633               	.LBE2537:
 7634               	.LBE2551:
 7635               	.LBB2552:
 7636               	.LBB2326:
 7637               	.LBB2321:
 7638               	.LBB2292:
 7639               	.LBB2288:
 7640               	.LBB2284:
 7641               	.LBB2280:
 7642               	.LBB2263:
 7643               	.LBB2260:
 7644               	.LBB2258:
 7645               	.LBB2259:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7646               		.loc 6 168 0
 7647 1d14 8093 0000 		sts endpoints+20,r24
 7648 1d18 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7649               		.loc 6 169 0
 7650 1d1c 40E4      		ldi r20,lo8(64)
 7651 1d1e 50E0      		ldi r21,hi8(64)
 7652               	.LVL458:
 7653 1d20 4093 0000 		sts endpoints+18,r20
 7654 1d24 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 7655               		.loc 6 176 0
 7656 1d28 E0E0      		ldi r30,lo8(endpoints+24)
 7657 1d2a F0E0      		ldi r31,hi8(endpoints+24)
 7658               	.LVL459:
 7659               	/* #APP */
 7660               	 ;  176 "usb/usb.h" 1
 7661 1d2c 04E1      		ldi r16, 20
 7662 1d2e 0693      		.dc.w 0x9306
 7663               		
 7664               	 ;  0 "" 2
 7665               	/* #NOAPP */
 7666 1d30 00C0      		rjmp .L266
 7667               	.LVL460:
 7668               	.L263:
 7669               	.LBE2259:
 7670               	.LBE2258:
 7671               	.LBE2260:
 7672               	.LBE2263:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 7673               		.loc 3 87 0
 7674 1d32 8091 0000 		lds r24,ep_in_data+1
 7675 1d36 8130      		cpi r24,lo8(1)
 7676 1d38 01F4      		brne .+2
 7677 1d3a 00C0      		rjmp .L348
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 7678               		.loc 3 91 0
 7679 1d3c 8230      		cpi r24,lo8(2)
 7680 1d3e 01F0      		breq .+2
 7681 1d40 00C0      		rjmp .L262
 7682               	.LVL461:
 7683               	.LBB2264:
 7684               	.LBB2265:
 7685               	.LBB2266:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 7686               		.loc 6 228 0
 7687 1d42 8091 0000 		lds r24,endpoints+24
 7688 1d46 8670      		andi r24,lo8(6)
 7689               	.LBE2266:
 7690               	.LBE2265:
 7691               	.LBE2264:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 7692               		.loc 3 91 0
 7693 1d48 8630      		cpi r24,lo8(6)
 7694 1d4a 01F0      		breq .+2
 7695 1d4c 00C0      		rjmp .L262
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 7696               		.loc 3 92 0
 7697 1d4e 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 7698               		.loc 3 93 0
 7699 1d52 1092 0000 		sts ep_in_data+2,__zero_reg__
 7700 1d56 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 7701               	.LBB2267:
 7702               	.LBB2268:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 7703               		.loc 5 90 0
 7704 1d5a 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 7705               		.loc 5 91 0
 7706 1d5e 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7707 1d60 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7708 1d62 8093 0000 		sts ep_in_pipe_data+2,r24
 7709 1d66 9093 0000 		sts ep_in_pipe_data+2+1,r25
 7710 1d6a 8093 0000 		sts ep_in_pipe_data,r24
 7711 1d6e 9093 0000 		sts ep_in_pipe_data+1,r25
 7712               	.LVL462:
 7713 1d72 00C0      		rjmp .L262
 7714               	.LVL463:
 7715               	.L297:
 7716               	.LBE2268:
 7717               	.LBE2267:
 7718               	.LBE2280:
 7719               	.LBE2284:
 7720               	.LBE2288:
 7721               	.LBE2292:
 7722               	.LBE2321:
 7723               	.LBE2326:
 7724               	.LBE2552:
 7725               	.LBB2553:
 7726               	.LBB2538:
 7727               	.LBB2532:
 7728               	.LBB2502:
 7729               	.LBB2497:
 7730               	.LBB2492:
 7731               	.LBB2487:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 7732               		.loc 3 87 0
 7733 1d74 8091 0000 		lds r24,ep_in_data+1
 7734 1d78 8130      		cpi r24,lo8(1)
 7735 1d7a 01F4      		brne .+2
 7736 1d7c 00C0      		rjmp .L349
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 7737               		.loc 3 91 0
 7738 1d7e 8230      		cpi r24,lo8(2)
 7739 1d80 01F0      		breq .+2
 7740 1d82 00C0      		rjmp .L296
 7741               	.LVL464:
 7742               	.LBB2470:
 7743               	.LBB2471:
 7744               	.LBB2472:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 7745               		.loc 6 228 0
 7746 1d84 8091 0000 		lds r24,endpoints+24
 7747 1d88 8670      		andi r24,lo8(6)
 7748               	.LBE2472:
 7749               	.LBE2471:
 7750               	.LBE2470:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 7751               		.loc 3 91 0
 7752 1d8a 8630      		cpi r24,lo8(6)
 7753 1d8c 01F0      		breq .+2
 7754 1d8e 00C0      		rjmp .L296
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 7755               		.loc 3 92 0
 7756 1d90 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 7757               		.loc 3 93 0
 7758 1d94 1092 0000 		sts ep_in_data+2,__zero_reg__
 7759 1d98 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 7760               	.LBB2473:
 7761               	.LBB2474:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 7762               		.loc 5 90 0
 7763 1d9c 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 7764               		.loc 5 91 0
 7765 1da0 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7766 1da2 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7767 1da4 8093 0000 		sts ep_in_pipe_data+2,r24
 7768 1da8 9093 0000 		sts ep_in_pipe_data+2+1,r25
 7769 1dac 8093 0000 		sts ep_in_pipe_data,r24
 7770 1db0 9093 0000 		sts ep_in_pipe_data+1,r25
 7771               	.LVL465:
 7772 1db4 00C0      		rjmp .L296
 7773               	.LVL466:
 7774               	.L282:
 7775               	.LBE2474:
 7776               	.LBE2473:
 7777               	.LBE2487:
 7778               	.LBE2492:
 7779               	.LBE2497:
 7780               	.LBE2502:
 7781               	.LBE2532:
 7782               	.LBE2538:
 7783               	.LBE2553:
 7784               	.LBB2554:
 7785               	.LBB2436:
 7786               	.LBB2431:
 7787               	.LBB2401:
 7788               	.LBB2396:
 7789               	.LBB2391:
 7790               	.LBB2386:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 7791               		.loc 3 87 0
 7792 1db6 8091 0000 		lds r24,ep_in_data+1
 7793 1dba 8130      		cpi r24,lo8(1)
 7794 1dbc 01F4      		brne .+2
 7795 1dbe 00C0      		rjmp .L350
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 7796               		.loc 3 91 0
 7797 1dc0 8230      		cpi r24,lo8(2)
 7798 1dc2 01F0      		breq .+2
 7799 1dc4 00C0      		rjmp .L281
 7800               	.LVL467:
 7801               	.LBB2369:
 7802               	.LBB2370:
 7803               	.LBB2371:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 7804               		.loc 6 228 0
 7805 1dc6 8091 0000 		lds r24,endpoints+24
 7806 1dca 8670      		andi r24,lo8(6)
 7807               	.LBE2371:
 7808               	.LBE2370:
 7809               	.LBE2369:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 7810               		.loc 3 91 0
 7811 1dcc 8630      		cpi r24,lo8(6)
 7812 1dce 01F0      		breq .+2
 7813 1dd0 00C0      		rjmp .L281
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 7814               		.loc 3 92 0
 7815 1dd2 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 7816               		.loc 3 93 0
 7817 1dd6 1092 0000 		sts ep_in_data+2,__zero_reg__
 7818 1dda 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 7819               	.LBB2372:
 7820               	.LBB2373:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 7821               		.loc 5 90 0
 7822 1dde 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 7823               		.loc 5 91 0
 7824 1de2 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7825 1de4 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7826 1de6 8093 0000 		sts ep_in_pipe_data+2,r24
 7827 1dea 9093 0000 		sts ep_in_pipe_data+2+1,r25
 7828 1dee 8093 0000 		sts ep_in_pipe_data,r24
 7829 1df2 9093 0000 		sts ep_in_pipe_data+1,r25
 7830               	.LVL468:
 7831 1df6 00C0      		rjmp .L281
 7832               	.LVL469:
 7833               	.L348:
 7834               	.LBE2373:
 7835               	.LBE2372:
 7836               	.LBE2386:
 7837               	.LBE2391:
 7838               	.LBE2396:
 7839               	.LBE2401:
 7840               	.LBE2431:
 7841               	.LBE2436:
 7842               	.LBE2554:
 7843               	.LBB2555:
 7844               	.LBB2327:
 7845               	.LBB2322:
 7846               	.LBB2293:
 7847               	.LBB2289:
 7848               	.LBB2285:
 7849               	.LBB2281:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 7850               		.loc 3 88 0
 7851 1df8 82E0      		ldi r24,lo8(2)
 7852 1dfa 8093 0000 		sts ep_in_data+1,r24
 7853               	.LBB2269:
 7854               	.LBB2270:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 7855               		.loc 5 62 0
 7856 1dfe 6091 0000 		lds r22,ep_in_pipe_data
 7857 1e02 3091 0000 		lds r19,ep_in_pipe_data+1
 7858               	.LBE2270:
 7859               	.LBE2269:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 7860               		.loc 3 90 0
 7861 1e06 8091 0000 		lds r24,ep_in_data+2
 7862 1e0a 9091 0000 		lds r25,ep_in_data+2+1
 7863               	.LVL470:
 7864               	.LBB2271:
 7865               	.LBB2272:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 7866               		.loc 3 68 0
 7867 1e0e 4091 0000 		lds r20,ep_in_data
 7868               	.LVL471:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7869               		.loc 3 69 0
 7870 1e12 51E0      		ldi r21,lo8(1)
 7871 1e14 4130      		cpi r20,lo8(1)
 7872 1e16 01F4      		brne .L269
 7873 1e18 50E0      		ldi r21,lo8(0)
 7874               	.L269:
 7875 1e1a 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 7876               		.loc 3 72 0
 7877 1e1e 4423      		tst r20
 7878 1e20 01F0      		breq .+2
 7879 1e22 00C0      		rjmp .L270
 7880               	.LVL472:
 7881               	.LBB2273:
 7882               	.LBB2274:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7883               		.loc 6 168 0
 7884 1e24 462F      		mov r20,r22
 7885 1e26 532F      		mov r21,r19
 7886 1e28 4093 0000 		sts endpoints+28,r20
 7887 1e2c 5093 0000 		sts endpoints+28+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7888               		.loc 6 169 0
 7889 1e30 8093 0000 		sts endpoints+26,r24
 7890 1e34 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 7891               		.loc 6 174 0
 7892 1e38 E0E0      		ldi r30,lo8(endpoints+24)
 7893 1e3a F0E0      		ldi r31,hi8(endpoints+24)
 7894               	.LVL473:
 7895               	/* #APP */
 7896               	 ;  174 "usb/usb.h" 1
 7897 1e3c 02E2      		ldi r16, 34
 7898 1e3e 0693      		.dc.w 0x9306
 7899               		
 7900               	 ;  0 "" 2
 7901               	/* #NOAPP */
 7902 1e40 00C0      		rjmp .L262
 7903               	.LVL474:
 7904               	.L349:
 7905               	.LBE2274:
 7906               	.LBE2273:
 7907               	.LBE2272:
 7908               	.LBE2271:
 7909               	.LBE2281:
 7910               	.LBE2285:
 7911               	.LBE2289:
 7912               	.LBE2293:
 7913               	.LBE2322:
 7914               	.LBE2327:
 7915               	.LBE2555:
 7916               	.LBB2556:
 7917               	.LBB2539:
 7918               	.LBB2533:
 7919               	.LBB2503:
 7920               	.LBB2498:
 7921               	.LBB2493:
 7922               	.LBB2488:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 7923               		.loc 3 88 0
 7924 1e42 82E0      		ldi r24,lo8(2)
 7925 1e44 8093 0000 		sts ep_in_data+1,r24
 7926               	.LBB2475:
 7927               	.LBB2476:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 7928               		.loc 5 62 0
 7929 1e48 6091 0000 		lds r22,ep_in_pipe_data
 7930 1e4c 3091 0000 		lds r19,ep_in_pipe_data+1
 7931               	.LBE2476:
 7932               	.LBE2475:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 7933               		.loc 3 90 0
 7934 1e50 4091 0000 		lds r20,ep_in_data+2
 7935 1e54 5091 0000 		lds r21,ep_in_data+2+1
 7936               	.LVL475:
 7937               	.LBB2477:
 7938               	.LBB2478:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 7939               		.loc 3 68 0
 7940 1e58 8091 0000 		lds r24,ep_in_data
 7941               	.LVL476:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7942               		.loc 3 69 0
 7943 1e5c 91E0      		ldi r25,lo8(1)
 7944               	.LVL477:
 7945 1e5e 8130      		cpi r24,lo8(1)
 7946 1e60 01F4      		brne .L303
 7947 1e62 90E0      		ldi r25,lo8(0)
 7948               	.L303:
 7949 1e64 9093 0000 		sts ep_in_data,r25
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 7950               		.loc 3 72 0
 7951 1e68 8823      		tst r24
 7952 1e6a 01F0      		breq .+2
 7953 1e6c 00C0      		rjmp .L304
 7954               	.LVL478:
 7955               	.LBB2479:
 7956               	.LBB2480:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7957               		.loc 6 168 0
 7958 1e6e 862F      		mov r24,r22
 7959 1e70 932F      		mov r25,r19
 7960 1e72 8093 0000 		sts endpoints+28,r24
 7961 1e76 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7962               		.loc 6 169 0
 7963 1e7a 4093 0000 		sts endpoints+26,r20
 7964 1e7e 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 7965               		.loc 6 174 0
 7966 1e82 E0E0      		ldi r30,lo8(endpoints+24)
 7967 1e84 F0E0      		ldi r31,hi8(endpoints+24)
 7968               	.LVL479:
 7969               	/* #APP */
 7970               	 ;  174 "usb/usb.h" 1
 7971 1e86 02E2      		ldi r16, 34
 7972 1e88 0693      		.dc.w 0x9306
 7973               		
 7974               	 ;  0 "" 2
 7975               	/* #NOAPP */
 7976 1e8a 00C0      		rjmp .L296
 7977               	.LVL480:
 7978               	.L350:
 7979               	.LBE2480:
 7980               	.LBE2479:
 7981               	.LBE2478:
 7982               	.LBE2477:
 7983               	.LBE2488:
 7984               	.LBE2493:
 7985               	.LBE2498:
 7986               	.LBE2503:
 7987               	.LBE2533:
 7988               	.LBE2539:
 7989               	.LBE2556:
 7990               	.LBB2557:
 7991               	.LBB2437:
 7992               	.LBB2432:
 7993               	.LBB2402:
 7994               	.LBB2397:
 7995               	.LBB2392:
 7996               	.LBB2387:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 7997               		.loc 3 88 0
 7998 1e8c 82E0      		ldi r24,lo8(2)
 7999 1e8e 8093 0000 		sts ep_in_data+1,r24
 8000               	.LBB2374:
 8001               	.LBB2375:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 8002               		.loc 5 62 0
 8003 1e92 6091 0000 		lds r22,ep_in_pipe_data
 8004 1e96 3091 0000 		lds r19,ep_in_pipe_data+1
 8005               	.LBE2375:
 8006               	.LBE2374:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 8007               		.loc 3 90 0
 8008 1e9a 4091 0000 		lds r20,ep_in_data+2
 8009 1e9e 5091 0000 		lds r21,ep_in_data+2+1
 8010               	.LVL481:
 8011               	.LBB2376:
 8012               	.LBB2377:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 8013               		.loc 3 68 0
 8014 1ea2 8091 0000 		lds r24,ep_in_data
 8015               	.LVL482:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 8016               		.loc 3 69 0
 8017 1ea6 91E0      		ldi r25,lo8(1)
 8018 1ea8 8130      		cpi r24,lo8(1)
 8019 1eaa 01F4      		brne .L288
 8020 1eac 90E0      		ldi r25,lo8(0)
 8021               	.L288:
 8022 1eae 9093 0000 		sts ep_in_data,r25
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 8023               		.loc 3 72 0
 8024 1eb2 8823      		tst r24
 8025 1eb4 01F4      		brne .L289
 8026               	.LVL483:
 8027               	.LBB2378:
 8028               	.LBB2379:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8029               		.loc 6 168 0
 8030 1eb6 862F      		mov r24,r22
 8031 1eb8 932F      		mov r25,r19
 8032 1eba 8093 0000 		sts endpoints+28,r24
 8033 1ebe 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8034               		.loc 6 169 0
 8035 1ec2 4093 0000 		sts endpoints+26,r20
 8036 1ec6 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8037               		.loc 6 174 0
 8038 1eca E0E0      		ldi r30,lo8(endpoints+24)
 8039 1ecc F0E0      		ldi r31,hi8(endpoints+24)
 8040               	.LVL484:
 8041               	/* #APP */
 8042               	 ;  174 "usb/usb.h" 1
 8043 1ece 02E2      		ldi r16, 34
 8044 1ed0 0693      		.dc.w 0x9306
 8045               		
 8046               	 ;  0 "" 2
 8047               	/* #NOAPP */
 8048 1ed2 00C0      		rjmp .L281
 8049               	.LVL485:
 8050               	.L270:
 8051               	.LBE2379:
 8052               	.LBE2378:
 8053               	.LBE2377:
 8054               	.LBE2376:
 8055               	.LBE2387:
 8056               	.LBE2392:
 8057               	.LBE2397:
 8058               	.LBE2402:
 8059               	.LBE2432:
 8060               	.LBE2437:
 8061               	.LBE2557:
 8062               	.LBB2558:
 8063               	.LBB2328:
 8064               	.LBB2323:
 8065               	.LBB2294:
 8066               	.LBB2290:
 8067               	.LBB2286:
 8068               	.LBB2282:
 8069               	.LBB2278:
 8070               	.LBB2277:
 8071               	.LBB2275:
 8072               	.LBB2276:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8073               		.loc 6 168 0
 8074 1ed4 462F      		mov r20,r22
 8075               	.LVL486:
 8076 1ed6 532F      		mov r21,r19
 8077 1ed8 4093 0000 		sts endpoints+20,r20
 8078 1edc 5093 0000 		sts endpoints+20+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8079               		.loc 6 169 0
 8080 1ee0 8093 0000 		sts endpoints+18,r24
 8081 1ee4 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 8082               		.loc 6 176 0
 8083 1ee8 E0E0      		ldi r30,lo8(endpoints+24)
 8084 1eea F0E0      		ldi r31,hi8(endpoints+24)
 8085               	.LVL487:
 8086               	/* #APP */
 8087               	 ;  176 "usb/usb.h" 1
 8088 1eec 04E1      		ldi r16, 20
 8089 1eee 0693      		.dc.w 0x9306
 8090               		
 8091               	 ;  0 "" 2
 8092               	/* #NOAPP */
 8093 1ef0 00C0      		rjmp .L262
 8094               	.LVL488:
 8095               	.L304:
 8096               	.LBE2276:
 8097               	.LBE2275:
 8098               	.LBE2277:
 8099               	.LBE2278:
 8100               	.LBE2282:
 8101               	.LBE2286:
 8102               	.LBE2290:
 8103               	.LBE2294:
 8104               	.LBE2323:
 8105               	.LBE2328:
 8106               	.LBE2558:
 8107               	.LBB2559:
 8108               	.LBB2540:
 8109               	.LBB2534:
 8110               	.LBB2504:
 8111               	.LBB2499:
 8112               	.LBB2494:
 8113               	.LBB2489:
 8114               	.LBB2484:
 8115               	.LBB2483:
 8116               	.LBB2481:
 8117               	.LBB2482:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8118               		.loc 6 168 0
 8119 1ef2 862F      		mov r24,r22
 8120               	.LVL489:
 8121 1ef4 932F      		mov r25,r19
 8122 1ef6 8093 0000 		sts endpoints+20,r24
 8123 1efa 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8124               		.loc 6 169 0
 8125 1efe 4093 0000 		sts endpoints+18,r20
 8126 1f02 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 8127               		.loc 6 176 0
 8128 1f06 E0E0      		ldi r30,lo8(endpoints+24)
 8129 1f08 F0E0      		ldi r31,hi8(endpoints+24)
 8130               	/* #APP */
 8131               	 ;  176 "usb/usb.h" 1
 8132 1f0a 04E1      		ldi r16, 20
 8133 1f0c 0693      		.dc.w 0x9306
 8134               		
 8135               	 ;  0 "" 2
 8136               	/* #NOAPP */
 8137 1f0e 00C0      		rjmp .L296
 8138               	.LVL490:
 8139               	.L289:
 8140               	.LBE2482:
 8141               	.LBE2481:
 8142               	.LBE2483:
 8143               	.LBE2484:
 8144               	.LBE2489:
 8145               	.LBE2494:
 8146               	.LBE2499:
 8147               	.LBE2504:
 8148               	.LBE2534:
 8149               	.LBE2540:
 8150               	.LBE2559:
 8151               	.LBB2560:
 8152               	.LBB2438:
 8153               	.LBB2433:
 8154               	.LBB2403:
 8155               	.LBB2398:
 8156               	.LBB2393:
 8157               	.LBB2388:
 8158               	.LBB2383:
 8159               	.LBB2382:
 8160               	.LBB2380:
 8161               	.LBB2381:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8162               		.loc 6 168 0
 8163 1f10 862F      		mov r24,r22
 8164               	.LVL491:
 8165 1f12 932F      		mov r25,r19
 8166 1f14 8093 0000 		sts endpoints+20,r24
 8167 1f18 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8168               		.loc 6 169 0
 8169 1f1c 4093 0000 		sts endpoints+18,r20
 8170 1f20 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 8171               		.loc 6 176 0
 8172 1f24 E0E0      		ldi r30,lo8(endpoints+24)
 8173 1f26 F0E0      		ldi r31,hi8(endpoints+24)
 8174               	.LVL492:
 8175               	/* #APP */
 8176               	 ;  176 "usb/usb.h" 1
 8177 1f28 04E1      		ldi r16, 20
 8178 1f2a 0693      		.dc.w 0x9306
 8179               		
 8180               	 ;  0 "" 2
 8181               	/* #NOAPP */
 8182 1f2c 00C0      		rjmp .L281
 8183               	.LBE2381:
 8184               	.LBE2380:
 8185               	.LBE2382:
 8186               	.LBE2383:
 8187               	.LBE2388:
 8188               	.LBE2393:
 8189               	.LBE2398:
 8190               	.LBE2403:
 8191               	.LBE2433:
 8192               	.LBE2438:
 8193               	.LBE2560:
 8194               		.cfi_endproc
 8195               	.LFE75:
 8197               		.data
 8198               	.LC6:
 8199 005d 2B31 3231 		.string	"+12153166262"
 8199      3533 3136 
 8199      3632 3632 
 8199      00
 8200               	.LC7:
 8201 006a 6865 6C6C 		.string	"hello world"
 8201      6F20 776F 
 8201      726C 6400 
 8202               		.section	.text.startup,"ax",@progbits
 8203               	.global	main
 8205               	main:
 8206               	.LFB76:
 365:main.c        **** int main(void){
 8207               		.loc 1 365 0
 8208               		.cfi_startproc
 8209               	/* prologue: function */
 8210               	/* frame size = 0 */
 8211               	/* stack size = 0 */
 8212               	.L__stack_usage = 0
 368:main.c        **** 	USB_ConfigureClock();
 8213               		.loc 1 368 0
 8214 0000 0E94 0000 		call USB_ConfigureClock
 369:main.c        **** 	USB_Init();
 8215               		.loc 1 369 0
 8216 0004 0E94 0000 		call USB_Init
 370:main.c        **** 	USB.INTCTRLA = USB_BUSEVIE_bm | USB_INTLVL_MED_gc;
 8217               		.loc 1 370 0
 8218 0008 E0EC      		ldi r30,lo8(1216)
 8219 000a F4E0      		ldi r31,hi8(1216)
 8220 000c 82E4      		ldi r24,lo8(66)
 8221 000e 8087      		std Z+8,r24
 371:main.c        **** 	USB.INTCTRLB = USB_TRNIE_bm | USB_SETUPIE_bm;
 8222               		.loc 1 371 0
 8223 0010 83E0      		ldi r24,lo8(3)
 8224 0012 8187      		std Z+9,r24
 372:main.c        **** 	PMIC.CTRL = PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm;
 8225               		.loc 1 372 0
 8226 0014 E0EA      		ldi r30,lo8(160)
 8227 0016 F0E0      		ldi r31,hi8(160)
 8228 0018 8283      		std Z+2,r24
 373:main.c        **** 	sei();
 8229               		.loc 1 373 0
 8230               	/* #APP */
 8231               	 ;  373 "main.c" 1
 8232 001a 7894      		sei
 8233               	 ;  0 "" 2
 8234               	/* #NOAPP */
 8235               	.LBB2647:
 8236               	.LBB2648:
 122:main.c        ****   PORTD.DIRSET = PIN3_bm; 
 8237               		.loc 1 122 0
 8238 001c E0E6      		ldi r30,lo8(1632)
 8239 001e F6E0      		ldi r31,hi8(1632)
 8240 0020 98E0      		ldi r25,lo8(8)
 8241 0022 9183      		std Z+1,r25
 125:main.c        ****   PORTD.OUTSET = PIN3_bm; 
 8242               		.loc 1 125 0
 8243 0024 9583      		std Z+5,r25
 8244               	.LVL493:
 129:main.c        ****   USARTD0_BAUDCTRLA = BSEL & 0XFF;
 8245               		.loc 1 129 0
 8246 0026 96E0      		ldi r25,lo8(6)
 8247 0028 9093 A609 		sts 2470,r25
 130:main.c        ****   USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
 8248               		.loc 1 130 0
 8249 002c 1092 A709 		sts 2471,__zero_reg__
 134:main.c        ****   USARTD0.CTRLA = 0x00;
 8250               		.loc 1 134 0
 8251 0030 E0EA      		ldi r30,lo8(2464)
 8252 0032 F9E0      		ldi r31,hi8(2464)
 8253 0034 1382      		std Z+3,__zero_reg__
 137:main.c        ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 8254               		.loc 1 137 0
 8255 0036 98E1      		ldi r25,lo8(24)
 8256 0038 9483      		std Z+4,r25
 141:main.c        ****   USARTD0.CTRLC = 0x03;  
 8257               		.loc 1 141 0
 8258 003a 8583      		std Z+5,r24
 8259               	.LVL494:
 8260               	.LBE2648:
 8261               	.LBE2647:
 8262               	.LBB2649:
 8263               	.LBB2650:
 8264               	.LBB2651:
 8265               	.LBB2652:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 8266               		.loc 3 110 0
 8267 003c 81E0      		ldi r24,lo8(1)
 8268 003e 8093 0000 		sts ep_in_data+1,r24
 8269               	.LVL495:
 8270               	.LBB2653:
 8271               	.LBB2654:
 8272               	.LBB2655:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 8273               		.loc 3 80 0
 8274 0042 2FB7      		in r18,__SREG__
 8275               	.LVL496:
 8276               	.LBB2656:
 8277               	.LBB2657:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 8278               		.loc 4 50 0
 8279               	/* #APP */
 8280               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 8281 0044 F894      		cli
 8282               	 ;  0 "" 2
 8283               	.LVL497:
 8284               	/* #NOAPP */
 8285               	.LBE2657:
 8286               	.LBE2656:
 8287               	.LBB2658:
 8288               	.LBB2659:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 8289               		.loc 6 220 0
 8290 0046 8091 0000 		lds r24,endpoints+24
 8291 004a 8670      		andi r24,lo8(6)
 8292               	.LBE2659:
 8293               	.LBE2658:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 8294               		.loc 3 82 0
 8295 004c 01F4      		brne .+2
 8296 004e 00C0      		rjmp .L377
 8297               	.LBB2660:
 8298               	.LBB2661:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 8299               		.loc 5 51 0
 8300 0050 3091 0000 		lds r19,ep_in_pipe_data+4
 8301               	.LBE2661:
 8302               	.LBE2660:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 8303               		.loc 3 83 0
 8304 0054 1316      		cp __zero_reg__,r19
 8305 0056 04F0      		brlt .+2
 8306 0058 00C0      		rjmp .L353
 8307               	.LBB2662:
 8308               	.LBB2663:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 8309               		.loc 5 62 0
 8310 005a 8091 0000 		lds r24,ep_in_pipe_data
 8311 005e 9091 0000 		lds r25,ep_in_pipe_data+1
 8312               	.LVL498:
 8313               	.LBE2663:
 8314               	.LBE2662:
 8315               	.LBB2664:
 8316               	.LBB2665:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 8317               		.loc 3 68 0
 8318 0062 4091 0000 		lds r20,ep_in_data
 8319               	.LVL499:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 8320               		.loc 3 69 0
 8321 0066 51E0      		ldi r21,lo8(1)
 8322 0068 4130      		cpi r20,lo8(1)
 8323 006a 01F4      		brne .L354
 8324 006c 50E0      		ldi r21,lo8(0)
 8325               	.L354:
 8326 006e 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 8327               		.loc 3 72 0
 8328 0072 4423      		tst r20
 8329 0074 01F0      		breq .+2
 8330 0076 00C0      		rjmp .L355
 8331               	.LVL500:
 8332               	.LBB2666:
 8333               	.LBB2667:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8334               		.loc 6 168 0
 8335 0078 8093 0000 		sts endpoints+28,r24
 8336 007c 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8337               		.loc 6 169 0
 8338 0080 40E4      		ldi r20,lo8(64)
 8339 0082 50E0      		ldi r21,hi8(64)
 8340 0084 4093 0000 		sts endpoints+26,r20
 8341 0088 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8342               		.loc 6 174 0
 8343 008c E0E0      		ldi r30,lo8(endpoints+24)
 8344 008e F0E0      		ldi r31,hi8(endpoints+24)
 8345               	/* #APP */
 8346               	 ;  174 "usb/usb.h" 1
 8347 0090 02E2      		ldi r16, 34
 8348 0092 0693      		.dc.w 0x9306
 8349               		
 8350               	 ;  0 "" 2
 8351               	.LVL501:
 8352               	/* #NOAPP */
 8353               	.L356:
 8354               	.LBE2667:
 8355               	.LBE2666:
 8356               	.LBE2665:
 8357               	.LBE2664:
 8358               	.LBB2671:
 8359               	.LBB2672:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 8360               		.loc 5 72 0
 8361 0094 3150      		subi r19,lo8(-(-1))
 8362 0096 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 8363               		.loc 5 73 0
 8364 009a 805C      		subi r24,lo8(-(64))
 8365 009c 9F4F      		sbci r25,hi8(-(64))
 8366 009e 8093 0000 		sts ep_in_pipe_data,r24
 8367 00a2 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 8368               		.loc 5 75 0
 8369 00a6 30E0      		ldi r19,hi8(ep_in_pipe_buffer+512)
 8370 00a8 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 8371 00aa 9307      		cpc r25,r19
 8372 00ac 01F4      		brne .+2
 8373 00ae 00C0      		rjmp .L374
 8374               	.LVL502:
 8375               	.L378:
 8376 00b0 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 8377 00b2 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 8378               	.LVL503:
 8379               	.L352:
 8380               	.LBE2672:
 8381               	.LBE2671:
 8382               	.LBB2674:
 8383               	.LBB2675:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 8384               		.loc 4 70 0
 8385 00b4 2FBF      		out __SREG__,r18
 8386               		.loc 4 71 0
 8387               	.LBE2675:
 8388               	.LBE2674:
 8389               	.LBE2655:
 8390               	.LBE2654:
 8391               	.LBE2653:
 8392               	.LBE2652:
 8393               	.LBE2651:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 8394               		.loc 2 27 0
 8395 00b6 22E0      		ldi r18,lo8(2)
 8396               	.LVL504:
 8397 00b8 A0EC      		ldi r26,lo8(1216)
 8398 00ba B4E0      		ldi r27,hi8(1216)
 8399 00bc 1D96      		adiw r26,13
 8400 00be 2C93      		st X,r18
 8401 00c0 1D97      		sbiw r26,13
 8402               	.LBB2697:
 8403               	.LBB2698:
 8404               	.LBB2699:
 8405               	.LBB2700:
 8406               	.LBB2701:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 8407               		.loc 5 57 0
 8408 00c2 36E0      		ldi r19,lo8(6)
 8409               	.L361:
 8410               	.LVL505:
 8411               	.LBE2701:
 8412               	.LBE2700:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 8413               		.loc 3 123 0
 8414 00c4 4FB7      		in r20,__SREG__
 8415               	.LVL506:
 8416               	.LBB2703:
 8417               	.LBB2704:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 8418               		.loc 4 50 0
 8419               	/* #APP */
 8420               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 8421 00c6 F894      		cli
 8422               	 ;  0 "" 2
 8423               	.LVL507:
 8424               	/* #NOAPP */
 8425               	.LBE2704:
 8426               	.LBE2703:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 8427               		.loc 3 124 0
 8428 00c8 2091 0000 		lds r18,ep_in_data+1
 8429 00cc 2223      		tst r18
 8430 00ce 01F0      		breq .L379
 8431               	.L367:
 125:usb/usb_pipe.h **** 			r = false;
 8432               		.loc 3 125 0
 8433 00d0 20E0      		ldi r18,lo8(0)
 8434               	.L363:
 8435               	.LBB2705:
 8436               	.LBB2706:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 8437               		.loc 4 70 0
 8438 00d2 4FBF      		out __SREG__,r20
 8439               		.loc 4 71 0
 8440               	.LBE2706:
 8441               	.LBE2705:
 8442               	.LBE2699:
 8443               	.LBE2698:
 8444               	.LBE2697:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 8445               		.loc 2 28 0
 8446 00d4 2223      		tst r18
 8447 00d6 01F4      		brne .L362
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 8448               		.loc 2 29 0
 8449 00d8 2091 0000 		lds r18,timeout_or_sampling_no_longer_enabled
 8450 00dc 2223      		tst r18
 8451 00de 01F0      		breq .L361
 8452               	.LVL508:
 8453               	.LBB2710:
 8454               	.LBB2711:
 8455               	.LBB2712:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 8456               		.loc 3 54 0
 8457 00e0 2FB7      		in r18,__SREG__
 8458               	.LVL509:
 8459               	.LBB2713:
 8460               	.LBB2714:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 8461               		.loc 4 50 0
 8462               	/* #APP */
 8463               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 8464 00e2 F894      		cli
 8465               	 ;  0 "" 2
 8466               	.LVL510:
 8467               	/* #NOAPP */
 8468               	.LBE2714:
 8469               	.LBE2713:
 8470               	.LBB2715:
 8471               	.LBB2716:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 8472               		.loc 5 90 0
 8473 00e4 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 8474               		.loc 5 91 0
 8475 00e8 8093 0000 		sts ep_in_pipe_data+2,r24
 8476 00ec 9093 0000 		sts ep_in_pipe_data+2+1,r25
 8477 00f0 8093 0000 		sts ep_in_pipe_data,r24
 8478 00f4 9093 0000 		sts ep_in_pipe_data+1,r25
 8479               	.LVL511:
 8480               	.LBE2716:
 8481               	.LBE2715:
 8482               	.LBB2717:
 8483               	.LBB2718:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 8484               		.loc 6 158 0
 8485               	/* #APP */
 8486               	 ;  158 "usb/usb.h" 1
 8487 00f8 06E0      		ldi r16, 6
 8488 00fa 0593      		.dc.w 0x9305
 8489               		
 8490               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 8491               		.loc 6 159 0
 8492               	 ;  159 "usb/usb.h" 1
 8493 00fc 08E0      		ldi r16, 8
 8494 00fe 0693      		.dc.w 0x9306
 8495               		
 8496               	 ;  0 "" 2
 8497               	/* #NOAPP */
 8498               	.LBE2718:
 8499               	.LBE2717:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 8500               		.loc 3 57 0
 8501 0100 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 8502               		.loc 3 58 0
 8503 0104 1092 0000 		sts ep_in_data+2,__zero_reg__
 8504 0108 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 8505               		.loc 3 59 0
 8506 010c 1092 0000 		sts ep_in_data,__zero_reg__
 8507               	.LVL512:
 8508               	.LBB2719:
 8509               	.LBB2720:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 8510               		.loc 4 70 0
 8511 0110 2FBF      		out __SREG__,r18
 8512               		.loc 4 71 0
 8513               	.LVL513:
 8514               	.L362:
 8515               	.LBE2720:
 8516               	.LBE2719:
 8517               	.LBE2712:
 8518               	.LBE2711:
 8519               	.LBE2710:
 8520               	.LBE2650:
 8521               	.LBE2649:
 390:main.c        ****   parse_nmea();
 8522               		.loc 1 390 0
 8523 0112 0E94 0000 		call parse_nmea
 8524               	.LVL514:
 394:main.c        ****   send_message(phonenumber, text_message);
 8525               		.loc 1 394 0
 8526 0116 80E0      		ldi r24,lo8(.LC6)
 8527 0118 90E0      		ldi r25,hi8(.LC6)
 8528 011a 60E0      		ldi r22,lo8(.LC7)
 8529 011c 70E0      		ldi r23,hi8(.LC7)
 8530 011e 0E94 0000 		call send_message
 8531               	.L366:
 8532 0122 00C0      		rjmp .L366
 8533               	.LVL515:
 8534               	.L379:
 8535               	.LBB2724:
 8536               	.LBB2723:
 8537               	.LBB2721:
 8538               	.LBB2709:
 8539               	.LBB2708:
 8540               	.LBB2707:
 8541               	.LBB2702:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 8542               		.loc 5 57 0
 8543 0124 2091 0000 		lds r18,ep_in_pipe_data+4
 8544 0128 532F      		mov r21,r19
 8545 012a 521B      		sub r21,r18
 8546               	.LBE2702:
 8547               	.LBE2707:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 8548               		.loc 3 127 0
 8549 012c 21E0      		ldi r18,lo8(1)
 8550 012e 1516      		cp __zero_reg__,r21
 8551 0130 04F0      		brlt .L363
 8552 0132 00C0      		rjmp .L367
 8553               	.LVL516:
 8554               	.L353:
 8555               	.LBE2708:
 8556               	.LBE2709:
 8557               	.LBE2721:
 8558               	.LBB2722:
 8559               	.LBB2696:
 8560               	.LBB2695:
 8561               	.LBB2694:
 8562               	.LBB2693:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 8563               		.loc 3 87 0
 8564 0134 8091 0000 		lds r24,ep_in_data+1
 8565 0138 8130      		cpi r24,lo8(1)
 8566 013a 01F0      		breq .L380
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 8567               		.loc 3 91 0
 8568 013c 8230      		cpi r24,lo8(2)
 8569 013e 01F0      		breq .L375
 8570               	.L377:
 8571 0140 E0E0      		ldi r30,lo8(endpoints+24)
 8572 0142 F0E0      		ldi r31,hi8(endpoints+24)
 8573 0144 00C0      		rjmp .L378
 8574               	.L375:
 8575               	.LVL517:
 8576               	.LBB2676:
 8577               	.LBB2677:
 8578               	.LBB2678:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 8579               		.loc 6 228 0
 8580 0146 8091 0000 		lds r24,endpoints+24
 8581 014a 8670      		andi r24,lo8(6)
 8582               	.LBE2678:
 8583               	.LBE2677:
 8584               	.LBE2676:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 8585               		.loc 3 91 0
 8586 014c 8630      		cpi r24,lo8(6)
 8587 014e 01F4      		brne .L377
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 8588               		.loc 3 92 0
 8589 0150 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 8590               		.loc 3 93 0
 8591 0154 1092 0000 		sts ep_in_data+2,__zero_reg__
 8592 0158 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 8593               	.LBB2679:
 8594               	.LBB2680:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 8595               		.loc 5 90 0
 8596 015c 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 8597               		.loc 5 91 0
 8598 0160 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 8599 0162 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 8600 0164 8093 0000 		sts ep_in_pipe_data+2,r24
 8601 0168 9093 0000 		sts ep_in_pipe_data+2+1,r25
 8602 016c 8093 0000 		sts ep_in_pipe_data,r24
 8603 0170 9093 0000 		sts ep_in_pipe_data+1,r25
 8604               	.LVL518:
 8605 0174 E0E0      		ldi r30,lo8(endpoints+24)
 8606 0176 F0E0      		ldi r31,hi8(endpoints+24)
 8607 0178 00C0      		rjmp .L352
 8608               	.LVL519:
 8609               	.L380:
 8610               	.LBE2680:
 8611               	.LBE2679:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 8612               		.loc 3 88 0
 8613 017a 82E0      		ldi r24,lo8(2)
 8614 017c 8093 0000 		sts ep_in_data+1,r24
 8615               	.LBB2681:
 8616               	.LBB2682:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 8617               		.loc 5 62 0
 8618 0180 6091 0000 		lds r22,ep_in_pipe_data
 8619 0184 3091 0000 		lds r19,ep_in_pipe_data+1
 8620               	.LBE2682:
 8621               	.LBE2681:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 8622               		.loc 3 90 0
 8623 0188 4091 0000 		lds r20,ep_in_data+2
 8624 018c 5091 0000 		lds r21,ep_in_data+2+1
 8625               	.LVL520:
 8626               	.LBB2683:
 8627               	.LBB2684:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 8628               		.loc 3 68 0
 8629 0190 8091 0000 		lds r24,ep_in_data
 8630               	.LVL521:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 8631               		.loc 3 69 0
 8632 0194 91E0      		ldi r25,lo8(1)
 8633 0196 8130      		cpi r24,lo8(1)
 8634 0198 01F4      		brne .L359
 8635 019a 90E0      		ldi r25,lo8(0)
 8636               	.L359:
 8637 019c 9093 0000 		sts ep_in_data,r25
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 8638               		.loc 3 72 0
 8639 01a0 8823      		tst r24
 8640 01a2 01F4      		brne .L360
 8641               	.LVL522:
 8642               	.LBB2685:
 8643               	.LBB2686:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8644               		.loc 6 168 0
 8645 01a4 862F      		mov r24,r22
 8646 01a6 932F      		mov r25,r19
 8647 01a8 8093 0000 		sts endpoints+28,r24
 8648 01ac 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8649               		.loc 6 169 0
 8650 01b0 4093 0000 		sts endpoints+26,r20
 8651 01b4 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8652               		.loc 6 174 0
 8653 01b8 E0E0      		ldi r30,lo8(endpoints+24)
 8654 01ba F0E0      		ldi r31,hi8(endpoints+24)
 8655               	.LVL523:
 8656               	/* #APP */
 8657               	 ;  174 "usb/usb.h" 1
 8658 01bc 02E2      		ldi r16, 34
 8659 01be 0693      		.dc.w 0x9306
 8660               		
 8661               	 ;  0 "" 2
 8662               	/* #NOAPP */
 8663 01c0 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 8664 01c2 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 8665 01c4 00C0      		rjmp .L352
 8666               	.LVL524:
 8667               	.L374:
 8668               	.LBE2686:
 8669               	.LBE2685:
 8670               	.LBE2684:
 8671               	.LBE2683:
 8672               	.LBB2690:
 8673               	.LBB2673:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 8674               		.loc 5 76 0
 8675 01c6 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 8676 01c8 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 8677 01ca 8093 0000 		sts ep_in_pipe_data,r24
 8678 01ce 9093 0000 		sts ep_in_pipe_data+1,r25
 8679 01d2 00C0      		rjmp .L352
 8680               	.LVL525:
 8681               	.L355:
 8682               	.LBE2673:
 8683               	.LBE2690:
 8684               	.LBB2691:
 8685               	.LBB2670:
 8686               	.LBB2668:
 8687               	.LBB2669:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8688               		.loc 6 168 0
 8689 01d4 8093 0000 		sts endpoints+20,r24
 8690 01d8 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8691               		.loc 6 169 0
 8692 01dc 40E4      		ldi r20,lo8(64)
 8693 01de 50E0      		ldi r21,hi8(64)
 8694 01e0 4093 0000 		sts endpoints+18,r20
 8695 01e4 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 8696               		.loc 6 176 0
 8697 01e8 E0E0      		ldi r30,lo8(endpoints+24)
 8698 01ea F0E0      		ldi r31,hi8(endpoints+24)
 8699               	/* #APP */
 8700               	 ;  176 "usb/usb.h" 1
 8701 01ec 04E1      		ldi r16, 20
 8702 01ee 0693      		.dc.w 0x9306
 8703               		
 8704               	 ;  0 "" 2
 8705               	/* #NOAPP */
 8706 01f0 00C0      		rjmp .L356
 8707               	.LVL526:
 8708               	.L360:
 8709               	.LBE2669:
 8710               	.LBE2668:
 8711               	.LBE2670:
 8712               	.LBE2691:
 8713               	.LBB2692:
 8714               	.LBB2689:
 8715               	.LBB2687:
 8716               	.LBB2688:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8717               		.loc 6 168 0
 8718 01f2 862F      		mov r24,r22
 8719               	.LVL527:
 8720 01f4 932F      		mov r25,r19
 8721 01f6 8093 0000 		sts endpoints+20,r24
 8722 01fa 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8723               		.loc 6 169 0
 8724 01fe 4093 0000 		sts endpoints+18,r20
 8725 0202 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 8726               		.loc 6 176 0
 8727 0206 E0E0      		ldi r30,lo8(endpoints+24)
 8728 0208 F0E0      		ldi r31,hi8(endpoints+24)
 8729               	/* #APP */
 8730               	 ;  176 "usb/usb.h" 1
 8731 020a 04E1      		ldi r16, 20
 8732 020c 0693      		.dc.w 0x9306
 8733               		
 8734               	 ;  0 "" 2
 8735               	/* #NOAPP */
 8736 020e 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 8737 0210 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 8738 0212 00C0      		rjmp .L352
 8739               	.LBE2688:
 8740               	.LBE2687:
 8741               	.LBE2689:
 8742               	.LBE2692:
 8743               	.LBE2693:
 8744               	.LBE2694:
 8745               	.LBE2695:
 8746               	.LBE2696:
 8747               	.LBE2722:
 8748               	.LBE2723:
 8749               	.LBE2724:
 8750               		.cfi_endproc
 8751               	.LFE76:
 8753               		.text
 8754               	.global	EVENT_USB_Device_ControlRequest
 8756               	EVENT_USB_Device_ControlRequest:
 8757               	.LFB77:
 418:main.c        **** bool EVENT_USB_Device_ControlRequest(USB_Request_Header_t* req){
 8758               		.loc 1 418 0
 8759               		.cfi_startproc
 8760               	.LVL528:
 8761 1f2e 0F93      		push r16
 8762               	.LCFI101:
 8763               		.cfi_def_cfa_offset 3
 8764               		.cfi_offset 16, -2
 8765 1f30 1F93      		push r17
 8766               	.LCFI102:
 8767               		.cfi_def_cfa_offset 4
 8768               		.cfi_offset 17, -3
 8769 1f32 CF93      		push r28
 8770               	.LCFI103:
 8771               		.cfi_def_cfa_offset 5
 8772               		.cfi_offset 28, -4
 8773 1f34 DF93      		push r29
 8774               	.LCFI104:
 8775               		.cfi_def_cfa_offset 6
 8776               		.cfi_offset 29, -5
 8777               	/* prologue: function */
 8778               	/* frame size = 0 */
 8779               	/* stack size = 4 */
 8780               	.L__stack_usage = 4
 8781 1f36 9C01      		movw r18,r24
 8782               	.LVL529:
 478:main.c        **** 	return false;
 8783               		.loc 1 478 0
 8784 1f38 A0E0      		ldi r26,lo8(ep0_buf_in)
 8785 1f3a B0E0      		ldi r27,hi8(ep0_buf_in)
 418:main.c        **** bool EVENT_USB_Device_ControlRequest(USB_Request_Header_t* req){
 8786               		.loc 1 418 0
 8787 1f3c 8D01      		movw r16,r26
 8788 1f3e 80E0      		ldi r24,lo8(ep0_buf_in+64)
 8789 1f40 90E0      		ldi r25,hi8(ep0_buf_in+64)
 8790               	.LVL530:
 8791 1f42 FD01      		movw r30,r26
 8792               	.LVL531:
 8793               	.L382:
 8794               	.LBB2725:
 420:main.c        **** 	for (uint8_t i = 0; i < 64; i++) ep0_buf_in[i] = 0;
 8795               		.loc 1 420 0 discriminator 2
 8796 1f44 1192      		st Z+,__zero_reg__
 8797 1f46 40E0      		ldi r20,hi8(ep0_buf_in+64)
 8798 1f48 E030      		cpi r30,lo8(ep0_buf_in+64)
 8799 1f4a F407      		cpc r31,r20
 8800 1f4c 01F4      		brne .L382
 8801               	.LBE2725:
 421:main.c        **** 	usb_cmd = 0;
 8802               		.loc 1 421 0
 8803 1f4e 1092 0000 		sts usb_cmd,__zero_reg__
 422:main.c        **** 	if ((req->bmRequestType & CONTROL_REQTYPE_TYPE) == REQTYPE_VENDOR){
 8804               		.loc 1 422 0
 8805 1f52 F901      		movw r30,r18
 8806 1f54 C081      		ld r28,Z
 8807 1f56 D0E0      		ldi r29,lo8(0)
 8808 1f58 C076      		andi r28,lo8(96)
 8809 1f5a D070      		andi r29,hi8(96)
 8810 1f5c C034      		cpi r28,64
 8811 1f5e D105      		cpc r29,__zero_reg__
 8812 1f60 01F0      		breq .L406
 8813               	.L400:
 478:main.c        **** 	return false;
 8814               		.loc 1 478 0
 8815 1f62 80E0      		ldi r24,lo8(0)
 8816               	.LVL532:
 8817               	.L383:
 8818               	/* epilogue start */
 479:main.c        **** }
 8819               		.loc 1 479 0
 8820 1f64 DF91      		pop r29
 8821 1f66 CF91      		pop r28
 8822 1f68 1F91      		pop r17
 8823 1f6a 0F91      		pop r16
 8824 1f6c 0895      		ret
 8825               	.LVL533:
 8826               	.L406:
 423:main.c        **** 		switch(req->bRequest){
 8827               		.loc 1 423 0
 8828 1f6e 4181      		ldd r20,Z+1
 8829 1f70 4631      		cpi r20,lo8(22)
 8830 1f72 01F4      		brne .+2
 8831 1f74 00C0      		rjmp .L388
 8832 1f76 4731      		cpi r20,lo8(23)
 8833 1f78 00F0      		brlo .L407
 8834 1f7a 4B3B      		cpi r20,lo8(-69)
 8835 1f7c 01F4      		brne .+2
 8836 1f7e 00C0      		rjmp .L390
 8837 1f80 4C3B      		cpi r20,lo8(-68)
 8838 1f82 00F0      		brlo .+2
 8839 1f84 00C0      		rjmp .L395
 8840 1f86 4731      		cpi r20,lo8(23)
 8841 1f88 01F4      		brne .L400
 8842               	.LBB2726:
 454:main.c        **** 				addr = (uint16_t *) req->wIndex;
 8843               		.loc 1 454 0
 8844 1f8a 0480      		ldd __tmp_reg__,Z+4
 8845 1f8c F581      		ldd r31,Z+5
 8846 1f8e E02D      		mov r30,__tmp_reg__
 8847               	.LVL534:
 455:main.c        **** 				ep0_buf_in[0] = *addr & 0xFF;
 8848               		.loc 1 455 0
 8849 1f90 8081      		ld r24,Z
 8850 1f92 8093 0000 		sts ep0_buf_in,r24
 456:main.c        **** 				ep0_buf_in[1] = *addr >> 8;
 8851               		.loc 1 456 0
 8852 1f96 8181      		ldd r24,Z+1
 8853 1f98 8093 0000 		sts ep0_buf_in+1,r24
 8854               	.LVL535:
 8855               	.LBB2727:
 8856               	.LBB2728:
 8857               	.LBB2729:
 8858               	.LBB2730:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8859               		.loc 6 168 0
 8860 1f9c 0093 0000 		sts endpoints+12,r16
 8861 1fa0 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8862               		.loc 6 169 0
 8863 1fa4 82E0      		ldi r24,lo8(2)
 8864 1fa6 90E0      		ldi r25,hi8(2)
 8865 1fa8 8093 0000 		sts endpoints+10,r24
 8866 1fac 9093 0000 		sts endpoints+10+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8867               		.loc 6 174 0
 8868 1fb0 E0E0      		ldi r30,lo8(endpoints+8)
 8869 1fb2 F0E0      		ldi r31,hi8(endpoints+8)
 8870               	/* #APP */
 8871               	 ;  174 "usb/usb.h" 1
 8872 1fb4 02E2      		ldi r16, 34
 8873 1fb6 0693      		.dc.w 0x9306
 8874               		
 8875               	 ;  0 "" 2
 8876               	/* #NOAPP */
 8877               	.LBE2730:
 8878               	.LBE2729:
 8879               	.LBE2728:
 8880               	.LBE2727:
 8881               	.LBE2726:
 458:main.c        **** 				return true;
 8882               		.loc 1 458 0
 8883 1fb8 81E0      		ldi r24,lo8(1)
 8884 1fba 00C0      		rjmp .L383
 8885               	.LVL536:
 8886               	.L407:
 423:main.c        **** 		switch(req->bRequest){
 8887               		.loc 1 423 0
 8888 1fbc 4230      		cpi r20,lo8(2)
 8889 1fbe 01F4      		brne .+2
 8890 1fc0 00C0      		rjmp .L385
 8891 1fc2 4330      		cpi r20,lo8(3)
 8892 1fc4 00F4      		brsh .L394
 8893 1fc6 4423      		tst r20
 8894 1fc8 01F4      		brne .L400
 425:main.c        **** 				if (req->wIndex == 0){
 8895               		.loc 1 425 0
 8896 1fca 8481      		ldd r24,Z+4
 8897 1fcc 9581      		ldd r25,Z+5
 8898 1fce 0097      		sbiw r24,0
 8899 1fd0 01F4      		brne .+2
 8900 1fd2 00C0      		rjmp .L408
 427:main.c        **** 				}else if (req->wIndex == 1){
 8901               		.loc 1 427 0
 8902 1fd4 8130      		cpi r24,1
 8903 1fd6 9105      		cpc r25,__zero_reg__
 8904 1fd8 01F4      		brne .+2
 8905 1fda 00C0      		rjmp .L409
 430:main.c        **** 				return true;
 8906               		.loc 1 430 0
 8907 1fdc 81E0      		ldi r24,lo8(1)
 8908 1fde 00C0      		rjmp .L383
 8909               	.L394:
 423:main.c        **** 		switch(req->bRequest){
 8910               		.loc 1 423 0
 8911 1fe0 4830      		cpi r20,lo8(8)
 8912 1fe2 01F0      		breq .L386
 8913 1fe4 4930      		cpi r20,lo8(9)
 8914 1fe6 01F0      		breq .+2
 8915 1fe8 00C0      		rjmp .L400
 445:main.c        **** 				ep0_buf_in[0] = * ((uint8_t *) req->wIndex);
 8916               		.loc 1 445 0
 8917 1fea 0480      		ldd __tmp_reg__,Z+4
 8918 1fec F581      		ldd r31,Z+5
 8919 1fee E02D      		mov r30,__tmp_reg__
 8920 1ff0 8081      		ld r24,Z
 8921 1ff2 8093 0000 		sts ep0_buf_in,r24
 8922               	.LVL537:
 8923               	.LBB2731:
 8924               	.LBB2732:
 8925               	.LBB2733:
 8926               	.LBB2734:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8927               		.loc 6 168 0
 8928 1ff6 0093 0000 		sts endpoints+12,r16
 8929 1ffa 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8930               		.loc 6 169 0
 8931 1ffe 81E0      		ldi r24,lo8(1)
 8932 2000 90E0      		ldi r25,hi8(1)
 8933 2002 8093 0000 		sts endpoints+10,r24
 8934 2006 9093 0000 		sts endpoints+10+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8935               		.loc 6 174 0
 8936 200a E0E0      		ldi r30,lo8(endpoints+8)
 8937 200c F0E0      		ldi r31,hi8(endpoints+8)
 8938               	.LVL538:
 8939               	/* #APP */
 8940               	 ;  174 "usb/usb.h" 1
 8941 200e 02E2      		ldi r16, 34
 8942 2010 0693      		.dc.w 0x9306
 8943               		
 8944               	 ;  0 "" 2
 8945               	/* #NOAPP */
 8946               	.LBE2734:
 8947               	.LBE2733:
 8948               	.LBE2732:
 8949               	.LBE2731:
 447:main.c        **** 				return true;
 8950               		.loc 1 447 0
 8951 2012 81E0      		ldi r24,lo8(1)
 8952 2014 00C0      		rjmp .L383
 8953               	.LVL539:
 8954               	.L395:
 423:main.c        **** 		switch(req->bRequest){
 8955               		.loc 1 423 0
 8956 2016 403E      		cpi r20,lo8(-32)
 8957 2018 01F0      		breq .L391
 8958 201a 413E      		cpi r20,lo8(-31)
 8959 201c 01F0      		breq .+2
 8960 201e 00C0      		rjmp .L400
 467:main.c        **** 				usb_cmd = req->bRequest;
 8961               		.loc 1 467 0
 8962 2020 4093 0000 		sts usb_cmd,r20
 468:main.c        **** 				cmd_data = req->wIndex;
 8963               		.loc 1 468 0
 8964 2024 8481      		ldd r24,Z+4
 8965 2026 8093 0000 		sts cmd_data,r24
 8966               	.LVL540:
 8967               	.L405:
 8968               	.LBB2735:
 8969               	.LBB2736:
 8970               	.LBB2737:
 8971               	.LBB2738:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8972               		.loc 6 168 0
 8973 202a 0093 0000 		sts endpoints+12,r16
 8974 202e 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8975               		.loc 6 169 0
 8976 2032 1092 0000 		sts endpoints+10,__zero_reg__
 8977 2036 1092 0000 		sts endpoints+10+1,__zero_reg__
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8978               		.loc 6 174 0
 8979 203a E0E0      		ldi r30,lo8(endpoints+8)
 8980 203c F0E0      		ldi r31,hi8(endpoints+8)
 8981               	.LVL541:
 8982               	/* #APP */
 8983               	 ;  174 "usb/usb.h" 1
 8984 203e 02E2      		ldi r16, 34
 8985 2040 0693      		.dc.w 0x9306
 8986               		
 8987               	 ;  0 "" 2
 8988               	/* #NOAPP */
 8989               	.LBE2738:
 8990               	.LBE2737:
 8991               	.LBE2736:
 8992               	.LBE2735:
 451:main.c        **** 				return true;
 8993               		.loc 1 451 0
 8994 2042 81E0      		ldi r24,lo8(1)
 8995               	/* epilogue start */
 479:main.c        **** }
 8996               		.loc 1 479 0
 8997 2044 DF91      		pop r29
 8998 2046 CF91      		pop r28
 8999 2048 1F91      		pop r17
 9000 204a 0F91      		pop r16
 9001 204c 0895      		ret
 9002               	.LVL542:
 9003               	.L386:
 441:main.c        **** 				* ((uint8_t *) req->wIndex) = req->wValue;
 9004               		.loc 1 441 0
 9005 204e D901      		movw r26,r18
 9006 2050 0480      		ldd __tmp_reg__,Z+4
 9007 2052 F581      		ldd r31,Z+5
 9008 2054 E02D      		mov r30,__tmp_reg__
 9009 2056 1296      		adiw r26,2
 9010 2058 8C91      		ld r24,X
 9011 205a 1297      		sbiw r26,2
 9012 205c 8083      		st Z,r24
 9013               	.LVL543:
 9014 205e 00C0      		rjmp .L405
 9015               	.LVL544:
 9016               	.L391:
 461:main.c        **** 				eeprom_read_block(ep0_buf_in, (void*)(req->wIndex*64), 64);
 9017               		.loc 1 461 0
 9018 2060 F901      		movw r30,r18
 9019 2062 6481      		ldd r22,Z+4
 9020 2064 7581      		ldd r23,Z+5
 9021 2066 0024      		clr __tmp_reg__
 9022 2068 7695      		lsr r23
 9023 206a 6795      		ror r22
 9024 206c 0794      		ror __tmp_reg__
 9025 206e 7695      		lsr r23
 9026 2070 6795      		ror r22
 9027 2072 0794      		ror __tmp_reg__
 9028 2074 762F      		mov r23,r22
 9029 2076 602D      		mov r22,__tmp_reg__
 9030 2078 80E0      		ldi r24,lo8(ep0_buf_in)
 9031 207a 90E0      		ldi r25,hi8(ep0_buf_in)
 9032 207c 40E4      		ldi r20,lo8(64)
 9033 207e 50E0      		ldi r21,hi8(64)
 9034 2080 0E94 0000 		call __eerd_block_x32a4u
 9035               	.LVL545:
 9036               	.LBB2739:
 9037               	.LBB2740:
 9038               	.LBB2741:
 9039               	.LBB2742:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9040               		.loc 6 168 0
 9041 2084 0093 0000 		sts endpoints+12,r16
 9042 2088 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9043               		.loc 6 169 0
 9044 208c C093 0000 		sts endpoints+10,r28
 9045 2090 D093 0000 		sts endpoints+10+1,r29
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 9046               		.loc 6 174 0
 9047 2094 E0E0      		ldi r30,lo8(endpoints+8)
 9048 2096 F0E0      		ldi r31,hi8(endpoints+8)
 9049               	.LVL546:
 9050               	/* #APP */
 9051               	 ;  174 "usb/usb.h" 1
 9052 2098 02E2      		ldi r16, 34
 9053 209a 0693      		.dc.w 0x9306
 9054               		
 9055               	 ;  0 "" 2
 9056               	/* #NOAPP */
 9057               	.LBE2742:
 9058               	.LBE2741:
 9059               	.LBE2740:
 9060               	.LBE2739:
 463:main.c        **** 				return true;
 9061               		.loc 1 463 0
 9062 209c 81E0      		ldi r24,lo8(1)
 9063 209e 00C0      		rjmp .L383
 9064               	.LVL547:
 9065               	.L390:
 9066               	.LBB2743:
 9067               	.LBB2744:
 330:usb/usb.h     **** 		USB_ep0_enableOut();
 331:usb/usb.h     **** 	}
 332:usb/usb.h     **** }
 333:usb/usb.h     **** 
 334:usb/usb.h     **** static inline void USB_enter_bootloader(void){
 335:usb/usb.h     **** 	cli();
 9068               		.loc 6 335 0
 9069               	/* #APP */
 9070               	 ;  335 "usb/usb.h" 1
 9071 20a0 F894      		cli
 9072               	 ;  0 "" 2
 9073               	.LVL548:
 9074               	/* #NOAPP */
 9075               	.LBB2745:
 9076               	.LBB2746:
 9077               	.LBB2747:
 9078               	.LBB2748:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9079               		.loc 6 168 0
 9080 20a2 0093 0000 		sts endpoints+12,r16
 9081 20a6 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9082               		.loc 6 169 0
 9083 20aa 1092 0000 		sts endpoints+10,__zero_reg__
 9084 20ae 1092 0000 		sts endpoints+10+1,__zero_reg__
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 9085               		.loc 6 174 0
 9086 20b2 E0E0      		ldi r30,lo8(endpoints+8)
 9087 20b4 F0E0      		ldi r31,hi8(endpoints+8)
 9088               	.LVL549:
 9089               	/* #APP */
 9090               	 ;  174 "usb/usb.h" 1
 9091 20b6 02E2      		ldi r16, 34
 9092 20b8 0693      		.dc.w 0x9306
 9093               		
 9094               	 ;  0 "" 2
 9095               	/* #NOAPP */
 9096               	.LBE2748:
 9097               	.LBE2747:
 9098               	.LBE2746:
 9099               	.LBE2745:
 9100               	.LBB2749:
 9101               	.LBB2750:
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 9102               		.loc 6 280 0
 9103 20ba 3897      		sbiw r30,8
 9104               	.LVL550:
 9105               	/* #APP */
 9106               	 ;  280 "usb/usb.h" 1
 9107 20bc 02E7      		ldi r16, 114
 9108 20be 0693      		.dc.w 0x9306
 9109               		
 9110               	 ;  0 "" 2
 9111               	.LVL551:
 9112               	/* #NOAPP */
 9113               	.L398:
 9114               	.LBE2750:
 9115               	.LBE2749:
 9116               	.LBB2751:
 9117               	.LBB2752:
 9118               	.LBB2753:
 9119               	.LBB2754:
 202:usb/usb.h     **** 		return e->STATUS & USB_EP_TRNCOMPL0_bm;
 9120               		.loc 6 202 0
 9121 20c0 8091 0000 		lds r24,endpoints
 9122               	.LBE2754:
 9123               	.LBE2753:
 253:usb/usb.h     **** 	while (!USB_ep_done(ep)){};
 9124               		.loc 6 253 0
 9125 20c4 85FF      		sbrs r24,5
 9126 20c6 00C0      		rjmp .L398
 9127               	.LVL552:
 9128               	.LBE2752:
 9129               	.LBE2751:
 9130               	.LBB2755:
 9131               	.LBB2756:
 9132               		.loc 7 164 0
 9133 20c8 8FEF      		 ldi r24,lo8(63999)
 9134 20ca 99EF      	    ldi r25,hi8(63999)
 9135 20cc A0E0      	    ldi r26,hlo8(63999)
 9136 20ce 8150      	    1:subi r24,1
 9137 20d0 9040      	    sbci r25,0
 9138 20d2 A040      	    sbci r26,0
 9139 20d4 01F4      	    brne 1b
 9140 20d6 00C0      		rjmp .
 9141 20d8 0000      		nop
 9142               	.LBE2756:
 9143               	.LBE2755:
 9144               	.LBB2757:
 9145               	.LBB2758:
 296:usb/usb.h     **** 	USB.CTRLB &= ~USB_ATTACH_bm;
 9146               		.loc 6 296 0
 9147 20da 8091 C104 		lds r24,1217
 9148 20de 8E7F      		andi r24,lo8(-2)
 9149 20e0 E0EC      		ldi r30,lo8(1216)
 9150 20e2 F4E0      		ldi r31,hi8(1216)
 9151               	.LVL553:
 9152 20e4 8183      		std Z+1,r24
 9153               	.LVL554:
 9154               	.LBE2758:
 9155               	.LBE2757:
 9156               	.LBB2759:
 9157               	.LBB2760:
 9158               		.loc 7 164 0
 9159 20e6 8FEF      		 ldi r24,lo8(639999)
 9160 20e8 93EC      	    ldi r25,hi8(639999)
 9161 20ea A9E0      	    ldi r26,hlo8(639999)
 9162 20ec 8150      	    1:subi r24,1
 9163 20ee 9040      	    sbci r25,0
 9164 20f0 A040      	    sbci r26,0
 9165 20f2 01F4      	    brne 1b
 9166 20f4 00C0      		rjmp .
 9167 20f6 0000      		nop
 9168               	.LVL555:
 9169               	.LBE2760:
 9170               	.LBE2759:
 336:usb/usb.h     **** 	USB_ep0_send(0);
 337:usb/usb.h     **** 	USB_ep0_enableOut();
 338:usb/usb.h     **** 	USB_ep_wait(0x00); // Wait for the status stage to complete
 339:usb/usb.h     **** 	_delay_ms(10);
 340:usb/usb.h     **** 	USB_Detach();
 341:usb/usb.h     **** 	_delay_ms(100);
 342:usb/usb.h     **** 	void (*enter_bootloader)(void) = (void*) 0x47fc /*0x8ff8/2*/;
 343:usb/usb.h     **** 	enter_bootloader();
 9171               		.loc 6 343 0
 9172 20f8 ECEF      		ldi r30,lo8(18428)
 9173 20fa F7E4      		ldi r31,hi8(18428)
 9174 20fc 0995      		icall
 9175               	.LVL556:
 9176               	.LBE2744:
 9177               	.LBE2743:
 475:main.c        **** 				return true;
 9178               		.loc 1 475 0
 9179 20fe 81E0      		ldi r24,lo8(1)
 9180 2100 00C0      		rjmp .L383
 9181               	.LVL557:
 9182               	.L385:
 9183               	.LBB2761:
 433:main.c        **** 					int l = strlen(message);
 9184               		.loc 1 433 0
 9185 2102 3091 0000 		lds r19,message
 9186 2106 2091 0000 		lds r18,message+1
 9187               	.LVL558:
 9188 210a C32F      		mov r28,r19
 9189 210c D22F      		mov r29,r18
 9190 210e FE01      		movw r30,r28
 9191               	.LVL559:
 9192 2110 0190      		ld __tmp_reg__,Z+
 9193 2112 0020      		tst __tmp_reg__
 9194 2114 01F4      		brne .-6
 9195 2116 3197      		sbiw r30,1
 9196 2118 E31B      		sub r30,r19
 9197               	.LVL560:
 9198               	.L397:
 9199               	.LBB2762:
 435:main.c        **** 						ep0_buf_in[i] = message[i];
 9200               		.loc 1 435 0 discriminator 2
 9201 211a 2991      		ld r18,Y+
 9202 211c 2D93      		st X+,r18
 434:main.c        **** 					for (uint8_t i=0; i<64; i++) {
 9203               		.loc 1 434 0 discriminator 2
 9204 211e 8A17      		cp r24,r26
 9205 2120 9B07      		cpc r25,r27
 9206 2122 01F4      		brne .L397
 9207               	.LVL561:
 9208               	.LBE2762:
 9209               	.LBB2763:
 9210               	.LBB2764:
 247:usb/usb.h     **** 	USB_ep_in_start(0x80, ep0_buf_in, size);
 9211               		.loc 6 247 0
 9212 2124 8E2F      		mov r24,r30
 9213 2126 90E0      		ldi r25,lo8(0)
 9214               	.LVL562:
 9215               	.LBB2765:
 9216               	.LBB2766:
 9217               	.LBB2767:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9218               		.loc 6 168 0
 9219 2128 0093 0000 		sts endpoints+12,r16
 9220 212c 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9221               		.loc 6 169 0
 9222 2130 8093 0000 		sts endpoints+10,r24
 9223 2134 9093 0000 		sts endpoints+10+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 9224               		.loc 6 174 0
 9225 2138 E0E0      		ldi r30,lo8(endpoints+8)
 9226 213a F0E0      		ldi r31,hi8(endpoints+8)
 9227               	.LVL563:
 9228               	/* #APP */
 9229               	 ;  174 "usb/usb.h" 1
 9230 213c 02E2      		ldi r16, 34
 9231 213e 0693      		.dc.w 0x9306
 9232               		
 9233               	 ;  0 "" 2
 9234               	/* #NOAPP */
 9235               	.LBE2767:
 9236               	.LBE2766:
 9237               	.LBE2765:
 9238               	.LBE2764:
 9239               	.LBE2763:
 438:main.c        **** 					return true;
 9240               		.loc 1 438 0
 9241 2140 81E0      		ldi r24,lo8(1)
 9242               	.LVL564:
 9243 2142 00C0      		rjmp .L383
 9244               	.LVL565:
 9245               	.L388:
 9246               	.LBE2761:
 449:main.c        **** 				* ((uint16_t *) req->wIndex) = req->wValue;
 9247               		.loc 1 449 0
 9248 2144 F901      		movw r30,r18
 9249 2146 8281      		ldd r24,Z+2
 9250 2148 9381      		ldd r25,Z+3
 9251 214a 0480      		ldd __tmp_reg__,Z+4
 9252 214c F581      		ldd r31,Z+5
 9253 214e E02D      		mov r30,__tmp_reg__
 9254 2150 8083      		st Z,r24
 9255 2152 9183      		std Z+1,r25
 9256 2154 00C0      		rjmp .L405
 9257               	.L409:
 428:main.c        **** 					USB_ep0_send_progmem((uint8_t*)fwversion, sizeof(fwversion));
 9258               		.loc 1 428 0
 9259 2156 80E0      		ldi r24,lo8(fwversion)
 9260 2158 90E0      		ldi r25,hi8(fwversion)
 9261 215a 6BE0      		ldi r22,lo8(11)
 9262 215c 70E0      		ldi r23,hi8(11)
 9263 215e 0E94 0000 		call USB_ep0_send_progmem
 9264               	.LVL566:
 430:main.c        **** 				return true;
 9265               		.loc 1 430 0
 9266 2162 81E0      		ldi r24,lo8(1)
 9267 2164 00C0      		rjmp .L383
 9268               	.LVL567:
 9269               	.L408:
 426:main.c        **** 					USB_ep0_send_progmem((uint8_t*)hwversion, sizeof(hwversion));
 9270               		.loc 1 426 0
 9271 2166 80E0      		ldi r24,lo8(hwversion)
 9272 2168 90E0      		ldi r25,hi8(hwversion)
 9273 216a 6BE0      		ldi r22,lo8(11)
 9274 216c 70E0      		ldi r23,hi8(11)
 9275 216e 0E94 0000 		call USB_ep0_send_progmem
 9276               	.LVL568:
 430:main.c        **** 				return true;
 9277               		.loc 1 430 0
 9278 2172 81E0      		ldi r24,lo8(1)
 9279 2174 00C0      		rjmp .L383
 9280               		.cfi_endproc
 9281               	.LFE77:
 9283               	.global	EVENT_USB_Device_ControlOUT
 9285               	EVENT_USB_Device_ControlOUT:
 9286               	.LFB78:
 481:main.c        **** void EVENT_USB_Device_ControlOUT(uint8_t* buf, uint8_t count){
 9287               		.loc 1 481 0
 9288               		.cfi_startproc
 9289               	.LVL569:
 9290               	/* prologue: function */
 9291               	/* frame size = 0 */
 9292               	/* stack size = 0 */
 9293               	.L__stack_usage = 0
 9294 2176 462F      		mov r20,r22
 482:main.c        **** 	switch (usb_cmd){
 9295               		.loc 1 482 0
 9296 2178 2091 0000 		lds r18,usb_cmd
 9297 217c 213E      		cpi r18,lo8(-31)
 9298 217e 01F0      		breq .L413
 9299               	.LVL570:
 9300 2180 0895      		ret
 9301               	.L413:
 9302               		.loc 1 484 0
 9303 2182 2091 0000 		lds r18,cmd_data
 9304 2186 30E0      		ldi r19,lo8(0)
 9305 2188 0024      		clr __tmp_reg__
 9306 218a 3695      		lsr r19
 9307 218c 2795      		ror r18
 9308 218e 0794      		ror __tmp_reg__
 9309 2190 3695      		lsr r19
 9310 2192 2795      		ror r18
 9311 2194 0794      		ror __tmp_reg__
 9312 2196 322F      		mov r19,r18
 9313 2198 202D      		mov r18,__tmp_reg__
 9314 219a B901      		movw r22,r18
 9315 219c 50E0      		ldi r21,lo8(0)
 9316 219e 0E94 0000 		call __eeupd_block_x32a4u
 9317               	.LVL571:
 9318 21a2 0895      		ret
 9319               		.cfi_endproc
 9320               	.LFE78:
 9322               	.global	cmd_data
 9323               	.global	cmd_data
 9324               		.section .bss
 9327               	cmd_data:
 9328 0000 00        		.skip 1,0
 9329               	.global	usb_cmd
 9330               	.global	usb_cmd
 9333               	usb_cmd:
 9334 0001 00        		.skip 1,0
 9335               	.global	fwversion
 9336               		.section	.progmem.data,"a",@progbits
 9339               	fwversion:
 9340 0000 4657 5F56 		.string	"FW_VERSION"
 9340      4552 5349 
 9340      4F4E 00
 9341               	.global	hwversion
 9344               	hwversion:
 9345 000b 4857 5F56 		.string	"HW_VERSION"
 9345      4552 5349 
 9345      4F4E 00
 9346               		.comm message,2,1
 9347               	.global	updating
 9348               	.global	updating
 9349               		.section .bss
 9352               	updating:
 9353 0002 00        		.skip 1,0
 9354               	.global	max_dist
 9355               		.data
 9358               	max_dist:
 9359 0076 CD        		.byte	-51
 9360 0077 CC        		.byte	-52
 9361 0078 4C        		.byte	76
 9362 0079 3E        		.byte	62
 9363               	.global	lng
 9366               	lng:
 9367 007a 7D        		.byte	125
 9368 007b 87        		.byte	-121
 9369 007c 8E        		.byte	-114
 9370 007d C2        		.byte	-62
 9371               	.global	lat
 9374               	lat:
 9375 007e C6        		.byte	-58
 9376 007f 2B        		.byte	43
 9377 0080 29        		.byte	41
 9378 0081 42        		.byte	66
 9379               	.global	timeout_or_sampling_no_longer_enabled
 9380               	.global	timeout_or_sampling_no_longer_enabled
 9381               		.section .bss
 9384               	timeout_or_sampling_no_longer_enabled:
 9385 0003 00        		.skip 1,0
 9386               	.global	ep_in_data
 9387               	.global	ep_in_data
 9390               	ep_in_data:
 9391 0004 0000 0000 		.skip 4,0
 9392               	.global	ep_in_pipe_data
 9393               		.data
 9396               	ep_in_pipe_data:
 9397 0082 0000      		.word	ep_in_pipe_buffer
 9398 0084 0000      		.word	ep_in_pipe_buffer
 9399 0086 00        		.byte	0
 9400               		.comm ep_in_pipe_buffer,512,1
 9401               		.text
 9402               	.Letext0:
 9403               		.file 8 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/stdint.h"
 9404               		.file 9 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/avr/iox32a4u.h"
 9405               		.file 10 "usb/StdRequestType.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc9so8Jj.s:2      *ABS*:000000000000003f __SREG__
     /tmp/cc9so8Jj.s:3      *ABS*:000000000000003e __SP_H__
     /tmp/cc9so8Jj.s:4      *ABS*:000000000000003d __SP_L__
     /tmp/cc9so8Jj.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/cc9so8Jj.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc9so8Jj.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc9so8Jj.s:14     .text:0000000000000000 gps_putchar.constprop.11
     /tmp/cc9so8Jj.s:41     .text:0000000000000014 EVENT_USB_Device_ConfigurationChanged
     /tmp/cc9so8Jj.s:9396   .data:0000000000000082 ep_in_pipe_data
                            *COM*:0000000000000200 ep_in_pipe_buffer
     /tmp/cc9so8Jj.s:9390   .bss:0000000000000004 ep_in_data
     /tmp/cc9so8Jj.s:134    .text:0000000000000062 __vector_125
     /tmp/cc9so8Jj.s:272    .text:00000000000000ec __vector_126
     /tmp/cc9so8Jj.s:9333   .bss:0000000000000001 usb_cmd
     /tmp/cc9so8Jj.s:9327   .bss:0000000000000000 cmd_data
     /tmp/cc9so8Jj.s:807    .text:00000000000002fe send_string
     /tmp/cc9so8Jj.s:1433   .text:0000000000000534 turn_on_gps
     /tmp/cc9so8Jj.s:1472   .text:0000000000000552 wake_up_gps
     /tmp/cc9so8Jj.s:1488   .text:0000000000000554 gps_init
     /tmp/cc9so8Jj.s:1552   .text:0000000000000592 wake_up_gprs
     /tmp/cc9so8Jj.s:1568   .text:0000000000000594 gprs_init
     /tmp/cc9so8Jj.s:1607   .text:00000000000005b8 concat
     /tmp/cc9so8Jj.s:1705   .text:0000000000000624 parse_nmea_string
     /tmp/cc9so8Jj.s:1831   .text:00000000000006c0 distance
     /tmp/cc9so8Jj.s:9374   .data:000000000000007e lat
     /tmp/cc9so8Jj.s:9366   .data:000000000000007a lng
     /tmp/cc9so8Jj.s:2125   .text:0000000000000880 parse_nmea
     /tmp/cc9so8Jj.s:9358   .data:0000000000000076 max_dist
     /tmp/cc9so8Jj.s:9384   .bss:0000000000000003 timeout_or_sampling_no_longer_enabled
     /tmp/cc9so8Jj.s:5572   .text:00000000000015ec gps_putchar
     /tmp/cc9so8Jj.s:5616   .text:0000000000001612 gps_getchar
     /tmp/cc9so8Jj.s:5639   .text:0000000000001620 gprs_putchar
     /tmp/cc9so8Jj.s:5683   .text:0000000000001646 gprs_getchar
     /tmp/cc9so8Jj.s:5714   .text:0000000000001654 send_message
     /tmp/cc9so8Jj.s:8205   .text.startup:0000000000000000 main
     /tmp/cc9so8Jj.s:8756   .text:0000000000001f2e EVENT_USB_Device_ControlRequest
                            *COM*:0000000000000002 message
     /tmp/cc9so8Jj.s:9339   .progmem.data:0000000000000000 fwversion
     /tmp/cc9so8Jj.s:9344   .progmem.data:000000000000000b hwversion
     /tmp/cc9so8Jj.s:9285   .text:0000000000002176 EVENT_USB_Device_ControlOUT
     /tmp/cc9so8Jj.s:9352   .bss:0000000000000002 updating

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
endpoints
USB_Init
USB_HandleSetup
ep0_buf_out
__eeupd_block_x32a4u
malloc
strcpy
strcat
strtok
atof
__divsf3
__subsf3
__mulsf3
sin
cos
__addsf3
sqrt
atan2
__gtsf2
sprintf
USB_ConfigureClock
ep0_buf_in
__eerd_block_x32a4u
USB_ep0_send_progmem
