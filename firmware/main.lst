   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.text
  11               	.Ltext0:
  12               		.cfi_sections	.debug_frame
  14               	uart_putchar.constprop.10:
  15               	.LFB88:
  16               		.file 1 "main.c"
   1:main.c        **** #include "Framework.h"
   2:main.c        **** #include <avr/io.h>
   3:main.c        **** #include <inttypes.h>
   4:main.c        **** #include <stdio.h> 
   5:main.c        **** #include <stdlib.h>
   6:main.c        **** #include <util/delay.h>
   7:main.c        **** #include <string.h> 
   8:main.c        **** #include <math.h>
   9:main.c        **** #include "nmea/nmea.h"
  10:main.c        **** 
  11:main.c        **** //sample nmea strings for testing parser
  12:main.c        **** double lat = 42.292747;
  13:main.c        **** double lng = -71.264622;
  14:main.c        **** double max_dist = .200;
  15:main.c        **** char* twilio_number = "+13042493059";
  16:main.c        **** 
  17:main.c        **** typedef struct _latlng {
  18:main.c        ****   double lat;
  19:main.c        ****   double lng;
  20:main.c        **** } latlng;
  21:main.c        **** 
  22:main.c        **** int uart_putchar(char c, USART_t* USART); 
  23:main.c        **** char uart_getchar(USART_t* USART);
  24:main.c        **** 
  25:main.c        **** void send_string(char* s);
  26:main.c        **** 
  27:main.c        **** void gps_init (void);
  28:main.c        **** void grps_init(void);
  29:main.c        **** 
  30:main.c        **** double distance(double, double);
  31:main.c        **** 
  32:main.c        **** void turn_on_gps(void);
  33:main.c        **** 
  34:main.c        **** void wake_up_gps(void);
  35:main.c        **** void wake_up_gprs(void);
  36:main.c        **** 
  37:main.c        **** void send_usb_data(char *s);
  38:main.c        **** bool updating = false;
  39:main.c        **** char* parse_nmea(void);
  40:main.c        **** 
  41:main.c        **** void send_message(char* number, char* message);
  42:main.c        **** 
  43:main.c        **** extern void parse_nmea_string(char *s, latlng *gps);
  44:main.c        **** 
  45:main.c        **** char *message;
  46:main.c        **** 
  47:main.c        **** void send_string(char* s) {
  48:main.c        ****   int length = strlen(s);
  49:main.c        ****   for (int i=0; i<length; i++) {
  50:main.c        ****     send_byte(s[i]);
  51:main.c        ****   }
  52:main.c        **** }
  53:main.c        **** 
  54:main.c        **** void turn_on_gps(void) {
  55:main.c        ****   // wait one second after powering on, as recommended by a2235-h data sheet
  56:main.c        ****   _delay_ms(1000);
  57:main.c        **** 
  58:main.c        ****   // // May or may not be necessary -- docs on wakeup are a bit sketchy
  59:main.c        ****   // // Does the gps module transmit anything before locking on to a gps position?
  60:main.c        ****   // // Or do we need to wait before querying for location data?
  61:main.c        ****   // Set PD5 direction to output
  62:main.c        ****   PORTD.DIRSET = PIN5_bm;
  63:main.c        **** 
  64:main.c        ****   // LOW/HIGH transmission of PD5 to wakeup gps module 
  65:main.c        ****   PORTD.OUTTGL = PIN5_bm;
  66:main.c        **** }
  67:main.c        **** 
  68:main.c        **** void wake_up_gps(void) {
  69:main.c        **** 
  70:main.c        **** }
  71:main.c        **** 
  72:main.c        **** void gps_init(void) {
  73:main.c        ****   /*
  74:main.c        ****   
  75:main.c        ****   Port numbers, baud rate, etc will need to be changed when switching 
  76:main.c        ****   to a different port.  This is a bit complex to abstract out to a new 
  77:main.c        ****   code layer at the moment (too many inputs required for things to work right)
  78:main.c        ****   so we'll have to keep it as is.  
  79:main.c        **** 
  80:main.c        ****   Specifically, we'll have to change PORTD, USARTDO, BSEL, BSCALE, and the Tx bitmask
  81:main.c        **** 
  82:main.c        ****   */
  83:main.c        **** 
  84:main.c        ****   turn_on_gps();
  85:main.c        **** 
  86:main.c        ****   // Set the TxD pin as an output - set PORTD OUT register bit 3 to 1 
  87:main.c        ****   PORTD.DIRSET = PIN3_bm; 
  88:main.c        **** 
  89:main.c        ****   // Set the TxD pin high - set PORTD DIR register bit 3 to 1 
  90:main.c        ****   PORTD.OUTSET = PIN3_bm; 
  91:main.c        **** 
  92:main.c        **** 	//Baud rate of 4800
  93:main.c        **** 	uint16_t BSEL = 12;
  94:main.c        **** 	uint8_t BSCALE = 1;
  95:main.c        **** 	USARTD0_BAUDCTRLA = BSEL & 0XFF;
  96:main.c        **** 	USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
  97:main.c        **** 
  98:main.c        **** 	// no interrupts
  99:main.c        **** 	// can't overwrite bits 7:6
 100:main.c        **** 	USARTD0.CTRLA = 0x00;
 101:main.c        **** 
 102:main.c        ****   // Enable transmitter and receiver
 103:main.c        ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 104:main.c        **** 
 105:main.c        **** 	// async, no parity, 1 stop bit, 8 bit data,
 106:main.c        **** 	// 00     00         00          11    
 107:main.c        ****   USARTD0.CTRLC = 0x03;  
 108:main.c        **** }
 109:main.c        **** 
 110:main.c        **** void wake_up_gprs(void) {
 111:main.c        ****   // 
 112:main.c        **** }
 113:main.c        **** 
 114:main.c        **** void gprs_init(void) {
 115:main.c        ****   //change port numbers when we get our proto board
 116:main.c        **** 
 117:main.c        ****   wake_up_gprs();
 118:main.c        ****   //Baud rate of 19200
 119:main.c        **** 
 120:main.c        ****   // Set the TxD pin as an output - set PORTD OUT register bit 3 to 1 
 121:main.c        ****   PORTD.DIRSET = PIN3_bm; 
 122:main.c        **** 
 123:main.c        ****   // Set the TxD pin high - set PORTD DIR register bit 3 to 1 
 124:main.c        ****   PORTD.OUTSET = PIN3_bm; 
 125:main.c        **** 
 126:main.c        ****   uint16_t BSEL = 6;
 127:main.c        ****   uint8_t BSCALE = 0;
 128:main.c        ****   USARTD0_BAUDCTRLA = BSEL & 0XFF;
 129:main.c        ****   USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
 130:main.c        **** 
 131:main.c        ****   // no interrupts
 132:main.c        ****   // can't overwrite bits 7:6
 133:main.c        ****   USARTD0.CTRLA = 0x00;
 134:main.c        **** 
 135:main.c        ****   // Enable transmitter and receiver
 136:main.c        ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 137:main.c        **** 
 138:main.c        ****   // async, no parity, 1 stop bit, 8 bit data,
 139:main.c        ****   // 00     00         00          11    
 140:main.c        ****   USARTD0.CTRLC = 0x03;  
 141:main.c        **** }
 142:main.c        **** 
 143:main.c        **** char* concat(char *s1, char *s2)
 144:main.c        **** {
 145:main.c        ****     //string concatenation -- not needed now, but might prove useful later
 146:main.c        ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 147:main.c        ****     //should also check for memory allocation errors here
 148:main.c        ****     strcpy(result, s1);
 149:main.c        ****     strcat(result, s2);
 150:main.c        ****     return result;
 151:main.c        **** }
 152:main.c        **** 
 153:main.c        **** void parse_nmea_string(char *s, latlng *gps)
 154:main.c        **** {
 155:main.c        ****   int i=0; // used to iterate through array
 156:main.c        ****   char *token[20]; //stores the chunks of string after splitting the string on commas
 157:main.c        **** 
 158:main.c        ****   token[0] = strtok(s, ","); //get pointer to first token found and store in
 159:main.c        ****                              //first element of array
 160:main.c        ****   while(token[i] != NULL) {  //while commas continue to be found
 161:main.c        ****       i++;  
 162:main.c        ****       token[i] = strtok(NULL, ","); //continue to split the string
 163:main.c        ****   }
 164:main.c        **** 
 165:main.c        ****   //Example: token = [], s = "a,b,c"
 166:main.c        ****   //Iteration 1
 167:main.c        ****   //token --> ["a"], s-->"b,c"
 168:main.c        ****   //token --> ["a", "b"], s-->"c"
 169:main.c        ****   //token --> ["a", "b", "c"], s-->""
 170:main.c        ****   //end
 171:main.c        **** 
 172:main.c        ****   //when parsing GPRMC data
 173:main.c        ****   //longitude should be stored at index 3
 174:main.c        ****   //latitude should be stord at index 5
 175:main.c        **** 
 176:main.c        ****   //indices will have to be changed if our gps module
 177:main.c        ****   //speaks a different dialog of NMEA
 178:main.c        **** 
 179:main.c        ****   char* lat_str = token[3]; //longitude
 180:main.c        ****   char* lng_str = token[5]; //latitude
 181:main.c        **** 
 182:main.c        ****   //converts string stored in gps->lat_str to double and stores in lat
 183:main.c        ****   gps->lat = atof(lat_str)/100.;
 184:main.c        **** 
 185:main.c        ****   //converts string stored in gps->lng_str to double and stores in lng
 186:main.c        ****   gps->lng = atof(lng_str)/100.;
 187:main.c        **** }
 188:main.c        **** 
 189:main.c        **** #define d2r (M_PI / 180.0)
 190:main.c        **** 
 191:main.c        **** //calculate distance, assuming earth is spherical
 192:main.c        **** double distance(double gpslat, double gpslng) {
 193:main.c        ****     double dlong = (gpslng - lng) * d2r;
 194:main.c        ****     double dlat = (gpslat - lat) * d2r;
 195:main.c        ****     double a = pow(sin(dlat/2.0), 2) + cos(lat*d2r) * cos(gpslat*d2r) * pow(sin(dlong/2.0), 2);
 196:main.c        ****     double c = 2 * atan2(sqrt(a), sqrt(1-a));
 197:main.c        ****     double d = 6367 * c;
 198:main.c        **** 
 199:main.c        ****     return d;
 200:main.c        **** }
 201:main.c        **** 
 202:main.c        **** 
 203:main.c        **** 
 204:main.c        **** char* parse_nmea(void) {
 205:main.c        **** 
 206:main.c        ****     char *buff = "$GPRMC,71.132,A,4230.00,N,-7130.00,E,11.2,0.0,261206,0.0,E*50\r\n";
 207:main.c        **** 
 208:main.c        ****     //latlng struct to store gps data in
 209:main.c        ****     //reused in every iterationif (d
 210:main.c        ****     latlng gps;
 211:main.c        **** 
 212:main.c        ****     //parse lat and lng out of raw nmea string
 213:main.c        ****     parse_nmea_string(buff, &gps);
 214:main.c        **** 
 215:main.c        ****     double dist = distance(gps.lat, gps.lng);
 216:main.c        **** 
 217:main.c        ****     char** result = malloc(30 * sizeof(char*));
 218:main.c        **** 
 219:main.c        ****     if (dist > max_dist) {
 220:main.c        **** 
 221:main.c        ****       char lat_buff[100];
 222:main.c        ****       char lng_buff[100];
 223:main.c        ****       char dist_buff[100];
 224:main.c        **** 
 225:main.c        ****       sprintf(lat_buff, "%f", gps.lat);
 226:main.c        ****       sprintf(lng_buff, "%f", gps.lng);
 227:main.c        ****       sprintf(dist_buff, "%f", dist);
 228:main.c        **** 
 229:main.c        ****       //determine how many characters are in the gps latitude and longitude strings
 230:main.c        ****       int len_lat = strlen(lat_buff);
 231:main.c        ****       int len_lng = strlen(lng_buff);
 232:main.c        ****       int len_dist = strlen(dist_buff);
 233:main.c        **** 
 234:main.c        ****       //iterate over lat and lng strings, sending them char by char over usb
 235:main.c        ****       for (int i=0; i<len_lat; i++) {
 236:main.c        ****         send_byte(lat_buff[i]);  
 237:main.c        ****       }
 238:main.c        **** 
 239:main.c        ****       //lat/lng seperator 
 240:main.c        ****       send_byte(' ');  
 241:main.c        ****       for (int j=0; j<len_lng; j++) {
 242:main.c        ****         send_byte(lng_buff[j]);  
 243:main.c        ****       }
 244:main.c        **** 
 245:main.c        ****             //lat/lng seperator 
 246:main.c        ****       send_byte(' ');  
 247:main.c        ****       for (int k=0; k<len_dist; k++) {
 248:main.c        ****         send_byte(dist_buff[k]);  
 249:main.c        ****       }
 250:main.c        **** 
 251:main.c        ****       char* lat_str = &lat_buff[0];
 252:main.c        ****       char* lng_str = &lng_buff[0];
 253:main.c        ****       *result = concat(concat(lat_str, ","), lng_str);
 254:main.c        ****     }
 255:main.c        **** 
 256:main.c        ****     //presumably has to do with memory management
 257:main.c        ****     //for now, just make sure to call if after you're done sending bytes over usb
 258:main.c        ****     break_and_flush();
 259:main.c        ****     return *result;
 260:main.c        **** }
 261:main.c        **** 
 262:main.c        **** // code for communicating with the gprs module via uart
 263:main.c        **** int uart_putchar (char c, USART_t* USART) { 
  17               		.loc 1 263 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
 264:main.c        ****     if (c == '\n') 
  24               		.loc 1 264 0
  25 0000 8A30      		cpi r24,lo8(10)
  26 0002 01F0      		breq .L6
  27               	.L5:
 265:main.c        ****         uart_putchar('\r', USART); 
 266:main.c        **** 
 267:main.c        ****     // Wait for the transmit buffer to be empty 
 268:main.c        ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
  28               		.loc 1 268 0
  29 0004 9091 A109 		lds r25,2465
  30 0008 95FF      		sbrs r25,5
  31 000a 00C0      		rjmp .L5
 269:main.c        **** 
 270:main.c        ****     // Put our character into the transmit buffer 
 271:main.c        ****     USART->DATA = c; 
  32               		.loc 1 271 0
  33 000c 8093 A009 		sts 2464,r24
 272:main.c        **** 
 273:main.c        ****     return 0; 
 274:main.c        **** } 
  34               		.loc 1 274 0
  35 0010 80E0      		ldi r24,lo8(0)
  36 0012 90E0      		ldi r25,hi8(0)
  37               	.LVL1:
  38               	/* epilogue start */
  39 0014 0895      		ret
  40               	.LVL2:
  41               	.L6:
  42               	.LBB392:
  43               	.LBB393:
 268:main.c        ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
  44               		.loc 1 268 0
  45 0016 9091 A109 		lds r25,2465
  46 001a 95FF      		sbrs r25,5
  47 001c 00C0      		rjmp .L6
 271:main.c        ****     USART->DATA = c; 
  48               		.loc 1 271 0
  49 001e 9DE0      		ldi r25,lo8(13)
  50 0020 9093 A009 		sts 2464,r25
  51 0024 00C0      		rjmp .L5
  52               	.LBE393:
  53               	.LBE392:
  54               		.cfi_endproc
  55               	.LFE88:
  57               	.global	EVENT_USB_Device_ConfigurationChanged
  59               	EVENT_USB_Device_ConfigurationChanged:
  60               	.LFB57:
  61               		.file 2 "Framework.h"
   1:Framework.h   **** #pragma once
   2:Framework.h   **** #define F_CPU 32000000UL
   3:Framework.h   **** 
   4:Framework.h   **** // includes
   5:Framework.h   **** #include <avr/interrupt.h>
   6:Framework.h   **** #include <util/delay.h>
   7:Framework.h   **** #include "Descriptors.h"
   8:Framework.h   **** #include "usb/usb.h"
   9:Framework.h   **** #include "usb/usb_pipe.h"
  10:Framework.h   **** #include <avr/eeprom.h>
  11:Framework.h   **** #include <avr/io.h>
  12:Framework.h   **** 
  13:Framework.h   **** USB_PIPE(ep_in, 0x81 | USB_EP_PP, USB_EP_TYPE_BULK_gc, 64, 8, PIPE_ENABLE_FLUSH);
  14:Framework.h   **** 
  15:Framework.h   **** bool timeout_or_sampling_no_longer_enabled = 0;
  16:Framework.h   **** 
  17:Framework.h   **** // Queue a byte to be sent over the bulk EP. Blocks if the buffer is full
  18:Framework.h   **** static inline void send_byte(uint8_t byte){
  19:Framework.h   ****     // this should never actually block if your buffer is big enough
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
  21:Framework.h   **** 	usb_pipe_write_byte(&ep_in, byte);
  22:Framework.h   **** }
  23:Framework.h   **** 
  24:Framework.h   **** // Sends a break to end the USB read and flushes the USB pipe
  25:Framework.h   **** static inline void break_and_flush(){
  26:Framework.h   ****     usb_pipe_flush(&ep_in);
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
  30:Framework.h   ****             usb_pipe_reset(&ep_in);
  31:Framework.h   ****             return;
  32:Framework.h   ****         }
  33:Framework.h   ****     }
  34:Framework.h   **** } 
  35:Framework.h   **** 
  36:Framework.h   **** void EVENT_USB_Device_ConfigurationChanged(uint8_t config){
  62               		.loc 2 36 0
  63               		.cfi_startproc
  64               	.LVL3:
  65               	/* prologue: function */
  66               	/* frame size = 0 */
  67               	/* stack size = 0 */
  68               	.L__stack_usage = 0
  69               	.LBB394:
  70               	.LBB395:
  71               		.file 3 "usb/usb_pipe.h"
   1:usb/usb_pipe.h **** #include "pipe.h"
   2:usb/usb_pipe.h **** #include "usb.h"
   3:usb/usb_pipe.h **** 
   4:usb/usb_pipe.h **** #include <util/atomic.h>
   5:usb/usb_pipe.h **** #ifndef PIPE_ATOMIC
   6:usb/usb_pipe.h **** #define PIPE_ATOMIC ATOMIC_RESTORESTATE
   7:usb/usb_pipe.h **** #endif 
   8:usb/usb_pipe.h **** 
   9:usb/usb_pipe.h **** typedef struct USB_Pipe_data{
  10:usb/usb_pipe.h **** 	bool bank;
  11:usb/usb_pipe.h **** 	uint8_t flush;
  12:usb/usb_pipe.h **** 	uint16_t packet_offset; // Index into current packet for byte mode
  13:usb/usb_pipe.h **** } USB_Pipe_data;
  14:usb/usb_pipe.h **** 
  15:usb/usb_pipe.h **** // Immutable part, constant-folded at compile time
  16:usb/usb_pipe.h **** typedef struct USB_Pipe{
  17:usb/usb_pipe.h **** 	uint8_t ep;
  18:usb/usb_pipe.h **** 	uint8_t type;
  19:usb/usb_pipe.h **** 	USB_Pipe_data* data;
  20:usb/usb_pipe.h **** 	const Pipe* pipe;
  21:usb/usb_pipe.h **** 	uint8_t features;
  22:usb/usb_pipe.h **** } USB_Pipe;
  23:usb/usb_pipe.h **** 
  24:usb/usb_pipe.h **** #define PIPE_ENABLE_FLUSH (1<<0)
  25:usb/usb_pipe.h **** 
  26:usb/usb_pipe.h **** #define USB_PIPE(NAME, EPNO, TYPE, PACKET_SIZE, BUFFER_PACKETS, FEATURES) \
  27:usb/usb_pipe.h **** 	PIPE(NAME##_pipe, (BUFFER_PACKETS), (PACKET_SIZE),               \
  28:usb/usb_pipe.h **** 		((EPNO)&USB_EP_IN)?0:2,                      \
  29:usb/usb_pipe.h **** 		((EPNO)&USB_EP_IN)?2:0                       \
  30:usb/usb_pipe.h **** 	);                                               \
  31:usb/usb_pipe.h **** 	USB_Pipe_data NAME##_data = {      \
  32:usb/usb_pipe.h **** 		.bank = 0,                   \
  33:usb/usb_pipe.h **** 		.flush = 0,                    \
  34:usb/usb_pipe.h **** 	};                                 \
  35:usb/usb_pipe.h **** 	const static USB_Pipe NAME = {     \
  36:usb/usb_pipe.h **** 		.ep = (EPNO),                  \
  37:usb/usb_pipe.h **** 		.type = (TYPE),                \
  38:usb/usb_pipe.h **** 		.data = &(NAME##_data),        \
  39:usb/usb_pipe.h **** 		.pipe = &(NAME##_pipe),        \
  40:usb/usb_pipe.h **** 		.features = (FEATURES),        \
  41:usb/usb_pipe.h **** 	};                                 \
  42:usb/usb_pipe.h **** 
  43:usb/usb_pipe.h **** static inline void usb_pipe_init(const USB_Pipe* p){
  44:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
  72               		.loc 3 44 0
  73 0026 2FB7      		in r18,__SREG__
  74               	.LVL4:
  75               	.LBB396:
  76               	.LBB397:
  77               		.file 4 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h"
   1:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    All rights reserved.
   3:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
   4:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
   7:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  10:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      the documentation and/or other materials provided with the
  13:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      distribution.
  14:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  15:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****      from this software without specific prior written permission.
  18:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  19:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** */
  31:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  32:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** /* $Id: atomic.h 2158 2010-06-10 15:48:28Z joerg_wunsch $ */
  33:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  34:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  37:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #include <avr/io.h>
  38:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #include <avr/interrupt.h>
  39:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  40:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** #if !defined(__DOXYGEN__)
  41:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** /* Internal helper functions. */
  42:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  44:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     sei();
  45:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     return 1;
  46:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  47:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  48:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  49:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
  78               		.loc 4 50 0
  79               	/* #APP */
  80               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
  81 0028 F894      		cli
  82               	 ;  0 "" 2
  83               	.LVL5:
  84               	/* #NOAPP */
  85               	.LBE397:
  86               	.LBE396:
  87               	.LBB398:
  88               	.LBB399:
  89               		.file 5 "usb/pipe.h"
   1:usb/pipe.h    **** // Ring buffer that takes heavy advantage of constant folding
   2:usb/pipe.h    **** #pragma once
   3:usb/pipe.h    **** 
   4:usb/pipe.h    **** #include "Common.h"
   5:usb/pipe.h    **** 
   6:usb/pipe.h    **** // Mutable part, becomes an actual struct
   7:usb/pipe.h    **** typedef struct Pipe_data{
   8:usb/pipe.h    **** 	uint8_t* read_ptr;
   9:usb/pipe.h    **** 	uint8_t* write_ptr;
  10:usb/pipe.h    **** 	int8_t count; // available slots
  11:usb/pipe.h    **** } Pipe_data;
  12:usb/pipe.h    **** 
  13:usb/pipe.h    **** // Immutable part, constant-folded at compile time
  14:usb/pipe.h    **** typedef struct Pipe{
  15:usb/pipe.h    **** 	Pipe_data* data;
  16:usb/pipe.h    **** 	uint8_t* buffer;
  17:usb/pipe.h    **** 	uint8_t  slots;         // Number of slots in the buffer
  18:usb/pipe.h    **** 	uint8_t reserve_read;  // Slots to prevent reading so they are available to writer
  19:usb/pipe.h    **** 	uint8_t reserve_write; // Slots to prevent writing so they are available to reader
  20:usb/pipe.h    **** 	uint16_t size;          // Size of a buffer slot in bytes
  21:usb/pipe.h    **** } Pipe;
  22:usb/pipe.h    **** 
  23:usb/pipe.h    **** #define PIPE_H(NAME, SLOTS, SIZE, RESERVE_READ, RESERVE_WRITE)       \
  24:usb/pipe.h    **** 	extern Pipe_data NAME##_data;         \
  25:usb/pipe.h    **** 	extern uint8_t NAME##_buffer[(SLOTS)*(SIZE)]; \
  26:usb/pipe.h    **** 	const static Pipe NAME = {            \
  27:usb/pipe.h    **** 		.data = &(NAME##_data),           \
  28:usb/pipe.h    **** 		.buffer = &((NAME##_buffer)[0]),  \
  29:usb/pipe.h    **** 		.slots = (SLOTS),                 \
  30:usb/pipe.h    **** 		.size = (SIZE),                   \
  31:usb/pipe.h    **** 		.reserve_read = (RESERVE_READ),   \
  32:usb/pipe.h    **** 		.reserve_write = (RESERVE_WRITE), \
  33:usb/pipe.h    **** 	};
  34:usb/pipe.h    **** 
  35:usb/pipe.h    **** 
  36:usb/pipe.h    **** #define PIPE_C(NAME, SLOTS, SIZE)                   \
  37:usb/pipe.h    **** 	uint8_t NAME##_buffer[(SLOTS)*(SIZE)];           \
  38:usb/pipe.h    **** 	Pipe_data NAME##_data = {                \
  39:usb/pipe.h    **** 		.count = 0,                          \
  40:usb/pipe.h    **** 		.read_ptr = &((NAME##_buffer)[0]),                       \
  41:usb/pipe.h    **** 		.write_ptr = &((NAME##_buffer)[0]),                      \
  42:usb/pipe.h    **** 	};
  43:usb/pipe.h    **** 
  44:usb/pipe.h    **** #define PIPE(NAME, SLOTS, SIZE, RESERVE_READ, RESERVE_WRITE) \
  45:usb/pipe.h    **** 	PIPE_H(NAME, SLOTS, SIZE, RESERVE_READ, RESERVE_WRITE)   \
  46:usb/pipe.h    **** 	PIPE_C(NAME, SLOTS, SIZE)
  47:usb/pipe.h    **** 
  48:usb/pipe.h    **** // Number of slots available to read
  49:usb/pipe.h    **** static inline int8_t pipe_can_read(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  50:usb/pipe.h    **** static inline int8_t pipe_can_read(const Pipe* pipe){
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
  52:usb/pipe.h    **** }
  53:usb/pipe.h    **** 
  54:usb/pipe.h    **** // Number of slots available to write
  55:usb/pipe.h    **** static inline int8_t pipe_can_write(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  56:usb/pipe.h    **** static inline int8_t pipe_can_write(const Pipe* pipe){
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
  58:usb/pipe.h    **** }
  59:usb/pipe.h    **** 
  60:usb/pipe.h    **** static inline uint8_t* pipe_read_ptr(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  61:usb/pipe.h    **** static inline uint8_t* pipe_read_ptr(const Pipe* pipe){
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
  63:usb/pipe.h    **** }
  64:usb/pipe.h    **** 
  65:usb/pipe.h    **** static inline uint8_t* pipe_write_ptr(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  66:usb/pipe.h    **** static inline uint8_t* pipe_write_ptr(const Pipe* pipe){
  67:usb/pipe.h    **** 	return pipe->data->write_ptr;
  68:usb/pipe.h    **** }
  69:usb/pipe.h    **** 
  70:usb/pipe.h    **** static inline void pipe_done_read(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  71:usb/pipe.h    **** static inline void pipe_done_read(const Pipe* pipe){
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
  74:usb/pipe.h    **** 	// Assumes buffer_size % slot_size == 0 and all accesses aligned
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
  77:usb/pipe.h    **** }
  78:usb/pipe.h    **** 
  79:usb/pipe.h    **** static inline void pipe_done_write(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  80:usb/pipe.h    **** static inline void pipe_done_write(const Pipe* pipe){
  81:usb/pipe.h    **** 	pipe->data->count += 1;
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
  83:usb/pipe.h    **** 	// Assumes buffer_size % slot_size == 0 and all accesses aligned
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
  86:usb/pipe.h    **** }
  87:usb/pipe.h    **** 
  88:usb/pipe.h    **** static inline void pipe_reset(const Pipe* pipe) ATTR_ALWAYS_INLINE;
  89:usb/pipe.h    **** static inline void pipe_reset(const Pipe* pipe){
  90:usb/pipe.h    **** 	pipe->data->count = 0;
  90               		.loc 5 90 0
  91 002a 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
  91:usb/pipe.h    **** 	pipe->data->read_ptr = pipe->data->write_ptr = pipe->buffer;
  92               		.loc 5 91 0
  93 002e 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
  94 0030 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
  95               	.LVL6:
  96 0032 8093 0000 		sts ep_in_pipe_data+2,r24
  97 0036 9093 0000 		sts ep_in_pipe_data+2+1,r25
  98 003a 8093 0000 		sts ep_in_pipe_data,r24
  99 003e 9093 0000 		sts ep_in_pipe_data+1,r25
 100               	.LVL7:
 101               	.LBE399:
 102               	.LBE398:
 103               	.LBB400:
 104               	.LBB401:
 105               	.LBB402:
 106               		.file 6 "usb/usb.h"
   1:usb/usb.h     **** // Minimal USB Stack for ATxmega32a4u and related
   2:usb/usb.h     **** // http://nonolithlabs.com
   3:usb/usb.h     **** // (C) 2011 Kevin Mehall (Nonolith Labs) <km@kevinmehall.net>
   4:usb/usb.h     **** //
   5:usb/usb.h     **** // Heavily borrows from LUFA
   6:usb/usb.h     **** // Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
   7:usb/usb.h     **** //
   8:usb/usb.h     **** // Licensed under the terms of the GNU GPLv3+
   9:usb/usb.h     **** 
  10:usb/usb.h     **** #pragma once
  11:usb/usb.h     **** 
  12:usb/usb.h     **** #include <avr/io.h>
  13:usb/usb.h     **** 
  14:usb/usb.h     **** #define CPU_TO_LE16(x) x
  15:usb/usb.h     **** 
  16:usb/usb.h     **** struct USB_Request_Header;
  17:usb/usb.h     **** typedef struct USB_Request_Header USB_Requst_Header_t;
  18:usb/usb.h     **** 
  19:usb/usb.h     **** #include "StdDescriptors.h"
  20:usb/usb.h     **** #include "StdRequestType.h"
  21:usb/usb.h     **** #include "Events.h"
  22:usb/usb.h     **** 
  23:usb/usb.h     **** #ifndef USB_MAXEP
  24:usb/usb.h     **** 	#define USB_MAXEP 1
  25:usb/usb.h     **** #endif
  26:usb/usb.h     **** 
  27:usb/usb.h     **** #ifndef USB_EP0SIZE
  28:usb/usb.h     **** 	#define EP0SIZE 64
  29:usb/usb.h     **** #endif
  30:usb/usb.h     **** 
  31:usb/usb.h     **** typedef union USB_EP_pair{
  32:usb/usb.h     **** 	union{
  33:usb/usb.h     **** 		struct{
  34:usb/usb.h     **** 			USB_EP_t out;
  35:usb/usb.h     **** 			USB_EP_t in;
  36:usb/usb.h     **** 		};
  37:usb/usb.h     **** 		USB_EP_t ep[2];
  38:usb/usb.h     **** 	};
  39:usb/usb.h     **** } ATTR_PACKED USB_EP_pair_t;
  40:usb/usb.h     **** 
  41:usb/usb.h     **** extern uint8_t ep0_buf_in[USB_EP0SIZE];
  42:usb/usb.h     **** extern uint8_t ep0_buf_out[USB_EP0SIZE];
  43:usb/usb.h     **** extern USB_EP_pair_t endpoints[USB_MAXEP+1];
  44:usb/usb.h     **** 
  45:usb/usb.h     **** /** String descriptor index for the device's unique serial number string descriptor within the devi
  46:usb/usb.h     ****  *  This unique serial number is used by the host to associate resources to the device (such as dri
  47:usb/usb.h     ****  *  number allocations) to a device regardless of the port it is plugged in to on the host. Some mi
  48:usb/usb.h     ****  *  a unique serial number internally, and setting the device descriptors serial number string inde
  49:usb/usb.h     ****  *  will cause it to use the internal serial number.
  50:usb/usb.h     ****  *
  51:usb/usb.h     ****  *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host to 
  52:usb/usb.h     ****  *  number for the device.
  53:usb/usb.h     ****  */
  54:usb/usb.h     **** #define USE_INTERNAL_SERIAL            0xDC
  55:usb/usb.h     **** 
  56:usb/usb.h     **** /** Length of the device's unique internal serial number, in bits, if present on the selected micro
  57:usb/usb.h     ****  *  model.
  58:usb/usb.h     ****  */
  59:usb/usb.h     **** #define INTERNAL_SERIAL_LENGTH_BITS    (8 * (1 + (offsetof(NVM_PROD_SIGNATURES_t, COORDY1) - offset
  60:usb/usb.h     **** 
  61:usb/usb.h     **** /** Start address of the internal serial number, in the appropriate address space, if present on th
  62:usb/usb.h     ****  *  model.
  63:usb/usb.h     ****  */
  64:usb/usb.h     **** #define INTERNAL_SERIAL_START_ADDRESS  offsetof(NVM_PROD_SIGNATURES_t, LOTNUM0)
  65:usb/usb.h     **** 
  66:usb/usb.h     **** /* Enums: */
  67:usb/usb.h     **** 	/** Enum for the various states of the USB Device state machine. Only some states are
  68:usb/usb.h     **** 	 *  implemented in the LUFA library - other states are left to the user to implement.
  69:usb/usb.h     **** 	 *
  70:usb/usb.h     **** 	 *  For information on each possible USB device state, refer to the USB 2.0 specification.
  71:usb/usb.h     **** 	 *
  72:usb/usb.h     **** 	 *  \see \ref USB_DeviceState, which stores the current device state machine state.
  73:usb/usb.h     **** 	 */
  74:usb/usb.h     **** 	enum USB_Device_States_t
  75:usb/usb.h     **** 	{
  76:usb/usb.h     **** 		DEVICE_STATE_Unattached                   = 0, /**< Internally implemented by the library. This s
  77:usb/usb.h     **** 		                                                *   that the device is not currently connected to
  78:usb/usb.h     **** 		                                                */
  79:usb/usb.h     **** 		DEVICE_STATE_Powered                      = 1, /**< Internally implemented by the library. This s
  80:usb/usb.h     **** 		                                                *   that the device is connected to a host, but e
  81:usb/usb.h     **** 		                                                *   yet begun.
  82:usb/usb.h     **** 		                                                */
  83:usb/usb.h     **** 		DEVICE_STATE_Default                      = 2, /**< Internally implemented by the library. This s
  84:usb/usb.h     **** 		                                                *   that the device's USB bus has been reset by t
  85:usb/usb.h     **** 		                                                *   now waiting for the host to begin the enumera
  86:usb/usb.h     **** 		                                                */
  87:usb/usb.h     **** 		DEVICE_STATE_Addressed                    = 3, /**< Internally implemented by the library. This s
  88:usb/usb.h     **** 		                                                *   that the device has been addressed by the USB
  89:usb/usb.h     **** 		                                                *   yet configured.
  90:usb/usb.h     **** 		                                                */
  91:usb/usb.h     **** 		DEVICE_STATE_Configured                   = 4, /**< May be implemented by the user project. This 
  92:usb/usb.h     **** 		                                                *   that the device has been enumerated by the ho
  93:usb/usb.h     **** 		                                                *   for USB communications to begin.
  94:usb/usb.h     **** 		                                                */
  95:usb/usb.h     **** 		DEVICE_STATE_Suspended                    = 5, /**< May be implemented by the user project. This 
  96:usb/usb.h     **** 		                                                *   that the USB bus has been suspended by the ho
  97:usb/usb.h     **** 		                                                *   should power down to a minimal power level un
  98:usb/usb.h     **** 		                                                *   resumed.
  99:usb/usb.h     **** 		                                                */
 100:usb/usb.h     **** 	};
 101:usb/usb.h     **** 
 102:usb/usb.h     **** #define USB_EP_size_to_gc(x)  ((x <= 8   )?USB_EP_BUFSIZE_8_gc:\
 103:usb/usb.h     ****                                (x <= 16  )?USB_EP_BUFSIZE_16_gc:\
 104:usb/usb.h     ****                                (x <= 32  )?USB_EP_BUFSIZE_32_gc:\
 105:usb/usb.h     ****                                (x <= 64  )?USB_EP_BUFSIZE_64_gc:\
 106:usb/usb.h     ****                                (x <= 128 )?USB_EP_BUFSIZE_128_gc:\
 107:usb/usb.h     ****                                (x <= 256 )?USB_EP_BUFSIZE_256_gc:\
 108:usb/usb.h     ****                                (x <= 512 )?USB_EP_BUFSIZE_512_gc:\
 109:usb/usb.h     ****                                            USB_EP_BUFSIZE_1023_gc)
 110:usb/usb.h     **** 
 111:usb/usb.h     **** #define USB_EP_IN 0x80
 112:usb/usb.h     **** 
 113:usb/usb.h     **** // Flag in the endpoint address to indicate that the endpoint should use
 114:usb/usb.h     **** // PingPong (double buffer) mode. This is not actually part of the endpoint
 115:usb/usb.h     **** // address as seen by the host. If PP is enabled, this flag needs to be part
 116:usb/usb.h     **** // of the address passed to all USB_EP_* functions.
 117:usb/usb.h     **** #define USB_EP_PP 0x40
 118:usb/usb.h     **** 	
 119:usb/usb.h     **** extern volatile uint8_t USB_DeviceState;
 120:usb/usb.h     **** extern volatile uint8_t USB_Device_ConfigurationNumber;
 121:usb/usb.h     **** 
 122:usb/usb.h     **** /** Configure the XMEGA's clock for use with USB.  */
 123:usb/usb.h     **** void USB_ConfigureClock(void);
 124:usb/usb.h     **** 
 125:usb/usb.h     **** /** Initialize USB functionality */
 126:usb/usb.h     **** void USB_Init(void);
 127:usb/usb.h     **** void USB_ResetInterface(void);
 128:usb/usb.h     **** 
 129:usb/usb.h     **** #define _USB_EP(epaddr) \
 130:usb/usb.h     **** 	USB_EP_pair_t* pair = &endpoints[(epaddr & 0x3F)]; \
 131:usb/usb.h     **** 	USB_EP_t* e __attribute__ ((unused)) = &pair->ep[!!(epaddr&0x80)]; \
 132:usb/usb.h     **** 	
 133:usb/usb.h     **** #define _USB_EP_OTHER(epaddr) \
 134:usb/usb.h     **** 	USB_EP_t* other = &pair->ep[!(epaddr&0x80)]
 135:usb/usb.h     **** 	
 136:usb/usb.h     **** #define _USB_EP_BANK(epaddr, bank) \
 137:usb/usb.h     **** 	USB_EP_t* b = &pair->ep[!!(epaddr&0x80) != bank]
 138:usb/usb.h     **** 
 139:usb/usb.h     **** inline void USB_ep_init(uint8_t ep, uint8_t type, uint16_t bufsize) ATTR_ALWAYS_INLINE;
 140:usb/usb.h     **** inline void USB_ep_init(uint8_t ep, uint8_t type, uint16_t bufsize){
 141:usb/usb.h     **** 	_USB_EP(ep);
 142:usb/usb.h     **** 	if (ep & USB_EP_PP){
 143:usb/usb.h     **** 		_USB_EP_OTHER(ep);
 144:usb/usb.h     **** 		e->STATUS = USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm;
 107               		.loc 6 144 0
 108 0042 80E0      		ldi r24,lo8(endpoints+24)
 109 0044 90E0      		ldi r25,hi8(endpoints+24)
 110 0046 36E0      		ldi r19,lo8(6)
 111 0048 3093 0000 		sts endpoints+24,r19
 145:usb/usb.h     **** 		e->CTRL = type | USB_EP_size_to_gc(bufsize) | USB_EP_PINGPONG_bm;
 112               		.loc 6 145 0
 113 004c 33E9      		ldi r19,lo8(-109)
 114 004e 3093 0000 		sts endpoints+25,r19
 146:usb/usb.h     **** 		other->CTRL = 0;
 115               		.loc 6 146 0
 116 0052 FC01      		movw r30,r24
 117 0054 3797      		sbiw r30,7
 118 0056 1082      		st Z,__zero_reg__
 147:usb/usb.h     **** 		other->STATUS = USB_EP_BUSNACK0_bm;
 119               		.loc 6 147 0
 120 0058 0897      		sbiw r24,8
 121 005a 32E0      		ldi r19,lo8(2)
 122 005c FC01      		movw r30,r24
 123 005e 3083      		st Z,r19
 124               	.LBE402:
 125               	.LBE401:
 126               	.LBE400:
  45:usb/usb_pipe.h **** 		pipe_reset(p->pipe);
  46:usb/usb_pipe.h **** 		USB_ep_init(p->ep, p->type, p->pipe->size);
  47:usb/usb_pipe.h **** 		p->data->bank = 0;
 127               		.loc 3 47 0
 128 0060 1092 0000 		sts ep_in_data,__zero_reg__
  48:usb/usb_pipe.h **** 		p->data->flush = 0;
 129               		.loc 3 48 0
 130 0064 1092 0000 		sts ep_in_data+1,__zero_reg__
  49:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 131               		.loc 3 49 0
 132 0068 1092 0000 		sts ep_in_data+2,__zero_reg__
 133 006c 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 134               	.LVL8:
 135               	.LBB403:
 136               	.LBB404:
  51:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     return 1;
  52:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  53:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  54:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  56:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     sei();
  57:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  58:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     (void)__s;
  59:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  60:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  61:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ void __iCliParam(const uint8_t *__s)
  62:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  63:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
  64:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  65:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     (void)__s;
  66:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** }
  67:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** 
  68:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** static __inline__ void __iRestore(const  uint8_t *__s)
  69:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h **** {
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 137               		.loc 4 70 0
 138 0070 2FBF      		out __SREG__,r18
  71:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 139               		.loc 4 71 0
 140               	/* epilogue start */
 141               	.LBE404:
 142               	.LBE403:
 143               	.LBE395:
 144               	.LBE394:
  37:Framework.h   **** 	usb_pipe_init(&ep_in);
  38:Framework.h   **** }
 145               		.loc 2 38 0
 146 0072 0895      		ret
 147               		.cfi_endproc
 148               	.LFE57:
 150               	.global	__vector_125
 152               	__vector_125:
 153               	.LFB58:
  39:Framework.h   **** 
  40:Framework.h   **** ISR(USB_BUSEVENT_vect){
 154               		.loc 2 40 0
 155               		.cfi_startproc
 156 0074 1F92      		push r1
 157               	.LCFI0:
 158               		.cfi_def_cfa_offset 3
 159               		.cfi_offset 1, -2
 160 0076 0F92      		push r0
 161               	.LCFI1:
 162               		.cfi_def_cfa_offset 4
 163               		.cfi_offset 0, -3
 164 0078 0FB6      		in r0,__SREG__
 165 007a 0F92      		push r0
 166 007c 1124      		clr __zero_reg__
 167 007e 2F93      		push r18
 168               	.LCFI2:
 169               		.cfi_def_cfa_offset 5
 170               		.cfi_offset 18, -4
 171 0080 3F93      		push r19
 172               	.LCFI3:
 173               		.cfi_def_cfa_offset 6
 174               		.cfi_offset 19, -5
 175 0082 4F93      		push r20
 176               	.LCFI4:
 177               		.cfi_def_cfa_offset 7
 178               		.cfi_offset 20, -6
 179 0084 5F93      		push r21
 180               	.LCFI5:
 181               		.cfi_def_cfa_offset 8
 182               		.cfi_offset 21, -7
 183 0086 6F93      		push r22
 184               	.LCFI6:
 185               		.cfi_def_cfa_offset 9
 186               		.cfi_offset 22, -8
 187 0088 7F93      		push r23
 188               	.LCFI7:
 189               		.cfi_def_cfa_offset 10
 190               		.cfi_offset 23, -9
 191 008a 8F93      		push r24
 192               	.LCFI8:
 193               		.cfi_def_cfa_offset 11
 194               		.cfi_offset 24, -10
 195 008c 9F93      		push r25
 196               	.LCFI9:
 197               		.cfi_def_cfa_offset 12
 198               		.cfi_offset 25, -11
 199 008e AF93      		push r26
 200               	.LCFI10:
 201               		.cfi_def_cfa_offset 13
 202               		.cfi_offset 26, -12
 203 0090 BF93      		push r27
 204               	.LCFI11:
 205               		.cfi_def_cfa_offset 14
 206               		.cfi_offset 27, -13
 207 0092 EF93      		push r30
 208               	.LCFI12:
 209               		.cfi_def_cfa_offset 15
 210               		.cfi_offset 30, -14
 211 0094 FF93      		push r31
 212               	.LCFI13:
 213               		.cfi_def_cfa_offset 16
 214               		.cfi_offset 31, -15
 215               	/* prologue: Signal */
 216               	/* frame size = 0 */
 217               	/* stack size = 15 */
 218               	.L__stack_usage = 15
  41:Framework.h   **** 	if (USB.INTFLAGSACLR & USB_SOFIF_bm){
 219               		.loc 2 41 0
 220 0096 E0EC      		ldi r30,lo8(1216)
 221 0098 F4E0      		ldi r31,hi8(1216)
 222 009a 8091 CA04 		lds r24,1226
 223 009e 87FD      		sbrc r24,7
 224 00a0 00C0      		rjmp .L16
  42:Framework.h   **** 		USB.INTFLAGSACLR = USB_SOFIF_bm;
  43:Framework.h   **** 	}else if (USB.INTFLAGSACLR & (USB_CRCIF_bm | USB_UNFIF_bm | USB_OVFIF_bm)){
 225               		.loc 2 43 0
 226 00a2 8091 CA04 		lds r24,1226
 227 00a6 8E70      		andi r24,lo8(14)
 228 00a8 01F4      		brne .L17
  44:Framework.h   **** 		USB.INTFLAGSACLR = (USB_CRCIF_bm | USB_UNFIF_bm | USB_OVFIF_bm);
  45:Framework.h   **** 	}else if (USB.INTFLAGSACLR & USB_STALLIF_bm){
 229               		.loc 2 45 0
 230 00aa 8091 CA04 		lds r24,1226
 231 00ae 80FD      		sbrc r24,0
 232 00b0 00C0      		rjmp .L18
  46:Framework.h   **** 		USB.INTFLAGSACLR = USB_STALLIF_bm;
  47:Framework.h   **** 	}else{
  48:Framework.h   **** 		USB.INTFLAGSACLR = USB_SUSPENDIF_bm | USB_RESUMEIF_bm | USB_RSTIF_bm;
 233               		.loc 2 48 0
 234 00b2 80E7      		ldi r24,lo8(112)
 235 00b4 8287      		std Z+10,r24
 236               	.LBB405:
 237               	.LBB406:
 148:usb/usb.h     **** 	}else{
 149:usb/usb.h     **** 		e->STATUS = USB_EP_BUSNACK0_bm;
 150:usb/usb.h     **** 		e->CTRL = type | USB_EP_size_to_gc(bufsize);
 151:usb/usb.h     **** 	}
 152:usb/usb.h     **** }
 153:usb/usb.h     **** 
 154:usb/usb.h     **** inline void USB_ep_cancel(uint8_t ep) ATTR_ALWAYS_INLINE;
 155:usb/usb.h     **** inline void USB_ep_cancel(uint8_t ep){
 156:usb/usb.h     **** 	_USB_EP(ep);
 157:usb/usb.h     **** 	if (ep & USB_EP_PP){
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 160:usb/usb.h     **** 	}else{
 161:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm);
 162:usb/usb.h     **** 	}
 163:usb/usb.h     **** }
 164:usb/usb.h     **** 
 165:usb/usb.h     **** inline void USB_ep_start_bank(uint8_t ep, uint8_t bank, uint8_t* addr, uint16_t size){
 166:usb/usb.h     **** 	_USB_EP(ep);
 167:usb/usb.h     **** 	_USB_EP_BANK(ep, bank);
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 170:usb/usb.h     **** 	
 171:usb/usb.h     **** 	//TODO: the OVF, STALL, and TRNCOMPL flags are in b->STATUS. Clear them if anyone cares.
 172:usb/usb.h     **** 
 173:usb/usb.h     **** 	if (bank==0){
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 175:usb/usb.h     **** 	}else{
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 177:usb/usb.h     **** 	}
 178:usb/usb.h     **** }
 179:usb/usb.h     **** 
 180:usb/usb.h     **** inline void USB_ep_out_start(uint8_t ep, uint8_t* addr) ATTR_ALWAYS_INLINE;
 181:usb/usb.h     **** inline void USB_ep_out_start(uint8_t ep, uint8_t* addr){
 182:usb/usb.h     **** 	USB_ep_start_bank(ep, 0, addr, 0);
 183:usb/usb.h     **** }
 184:usb/usb.h     **** 
 185:usb/usb.h     **** inline void USB_ep_in_start(uint8_t ep, uint8_t* addr, uint16_t size) ATTR_ALWAYS_INLINE;
 186:usb/usb.h     **** inline void USB_ep_in_start(uint8_t ep, uint8_t* addr, uint16_t size){
 187:usb/usb.h     **** 	USB_ep_start_bank(ep, 0, addr, size);
 188:usb/usb.h     **** }
 189:usb/usb.h     **** 
 190:usb/usb.h     **** inline bool USB_ep_done_bank(uint8_t ep, uint8_t bank){
 191:usb/usb.h     **** 	_USB_EP(ep);
 192:usb/usb.h     **** 	return e->STATUS & (bank?USB_EP_TRNCOMPL1_bm:USB_EP_TRNCOMPL0_bm);
 193:usb/usb.h     **** }
 194:usb/usb.h     **** 
 195:usb/usb.h     **** inline bool USB_ep_done(uint8_t ep) ATTR_ALWAYS_INLINE;
 196:usb/usb.h     **** inline bool USB_ep_done(uint8_t ep){
 197:usb/usb.h     **** 	_USB_EP(ep);
 198:usb/usb.h     **** 	if (ep & USB_EP_PP){
 199:usb/usb.h     **** 		return e->STATUS & (USB_EP_TRNCOMPL0_bm|USB_EP_TRNCOMPL1_bm);
 200:usb/usb.h     **** 	}else{
 201:usb/usb.h     **** 		// Because for ep0, TRNCOMPL1 is SETUP
 202:usb/usb.h     **** 		return e->STATUS & USB_EP_TRNCOMPL0_bm;
 203:usb/usb.h     **** 	}
 204:usb/usb.h     **** }
 205:usb/usb.h     **** 
 206:usb/usb.h     **** inline void USB_ep_clear_done(uint8_t ep) ATTR_ALWAYS_INLINE;
 207:usb/usb.h     **** inline void USB_ep_clear_done(uint8_t ep){
 208:usb/usb.h     **** 	_USB_EP(ep);
 209:usb/usb.h     **** 	if (ep & USB_EP_PP){
 210:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_TRNCOMPL0_bm|USB_EP_TRNCOMPL1_bm);
 211:usb/usb.h     **** 	}else{
 212:usb/usb.h     **** 		// Because for ep0, TRNCOMPL1 is SETUP
 213:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_TRNCOMPL0_bm);
 214:usb/usb.h     **** 	}
 215:usb/usb.h     **** }
 216:usb/usb.h     **** 
 217:usb/usb.h     **** inline bool USB_ep_ready(uint8_t ep) ATTR_ALWAYS_INLINE;
 218:usb/usb.h     **** inline bool USB_ep_ready(uint8_t ep){
 219:usb/usb.h     **** 	_USB_EP(ep);
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 221:usb/usb.h     **** }
 222:usb/usb.h     **** 
 223:usb/usb.h     **** inline bool USB_ep_empty(uint8_t ep) ATTR_ALWAYS_INLINE;
 224:usb/usb.h     **** inline bool USB_ep_empty(uint8_t ep){
 225:usb/usb.h     **** 	_USB_EP(ep);
 226:usb/usb.h     **** 	if (ep & USB_EP_PP){
 227:usb/usb.h     **** 		const uint8_t mask = (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 229:usb/usb.h     **** 	}else{
 230:usb/usb.h     **** 		return e->STATUS & USB_EP_BUSNACK0_bm;
 231:usb/usb.h     **** 	}
 232:usb/usb.h     **** }
 233:usb/usb.h     **** 
 234:usb/usb.h     **** inline uint16_t USB_ep_count_bank(uint8_t ep, uint8_t bank) ATTR_ALWAYS_INLINE;
 235:usb/usb.h     **** inline uint16_t USB_ep_count_bank(uint8_t ep, uint8_t bank){
 236:usb/usb.h     **** 	_USB_EP(ep);
 237:usb/usb.h     **** 	_USB_EP_BANK(ep, bank);
 238:usb/usb.h     **** 	return b->CNT;
 239:usb/usb.h     **** }
 240:usb/usb.h     **** 
 241:usb/usb.h     **** inline uint16_t USB_ep_count(uint8_t ep) ATTR_ALWAYS_INLINE;
 242:usb/usb.h     **** inline uint16_t USB_ep_count(uint8_t ep){
 243:usb/usb.h     **** 	return USB_ep_count_bank(ep, 0);
 244:usb/usb.h     **** }
 245:usb/usb.h     **** 
 246:usb/usb.h     **** inline void USB_ep0_send(uint8_t size){
 247:usb/usb.h     **** 	USB_ep_in_start(0x80, ep0_buf_in, size);
 248:usb/usb.h     **** }
 249:usb/usb.h     **** void USB_ep0_send_progmem(const uint8_t* addr, uint16_t size);
 250:usb/usb.h     **** 
 251:usb/usb.h     **** inline void USB_ep_wait(uint8_t ep) ATTR_ALWAYS_INLINE;
 252:usb/usb.h     **** inline void USB_ep_wait(uint8_t ep){
 253:usb/usb.h     **** 	while (!USB_ep_done(ep)){};
 254:usb/usb.h     **** }
 255:usb/usb.h     **** 
 256:usb/usb.h     **** /// Select a certain bank of an endpoint for the next transfer
 257:usb/usb.h     **** inline void USB_ep_set_bank(uint8_t ep, uint8_t bank) ATTR_ALWAYS_INLINE;
 258:usb/usb.h     **** inline void USB_ep_set_bank(uint8_t ep, uint8_t bank){
 259:usb/usb.h     **** 	_USB_EP(ep);
 260:usb/usb.h     **** 	if (bank){
 261:usb/usb.h     **** 		LASR16(&(e->STATUS), USB_EP_BANK_bm);
 262:usb/usb.h     **** 	}else{
 263:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BANK_bm);
 264:usb/usb.h     **** 	}
 265:usb/usb.h     **** }
 266:usb/usb.h     **** 
 267:usb/usb.h     **** /// Get the bank 0/1 which will handle the next request on this endpoint
 268:usb/usb.h     **** inline uint8_t USB_ep_get_bank(uint8_t ep) ATTR_ALWAYS_INLINE;
 269:usb/usb.h     **** inline uint8_t USB_ep_get_bank(uint8_t ep){
 270:usb/usb.h     **** 	_USB_EP(ep);
 271:usb/usb.h     **** 	return !!(e->STATUS & USB_EP_BANK_bm);
 272:usb/usb.h     **** }
 273:usb/usb.h     **** 
 274:usb/usb.h     **** 
 275:usb/usb.h     **** // Enable the OUT stage on the default control pipe. This happens automatically
 276:usb/usb.h     **** // upon the return of HandleSetup, but use this function if it needs to happen
 277:usb/usb.h     **** // before returning (e.g. with USB_ep_wait()).
 278:usb/usb.h     **** inline void USB_ep0_enableOut(void) ATTR_ALWAYS_INLINE;
 279:usb/usb.h     **** inline void USB_ep0_enableOut(void){
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 281:usb/usb.h     **** }
 282:usb/usb.h     **** 
 283:usb/usb.h     **** bool USB_HandleSetup(void);
 284:usb/usb.h     **** 
 285:usb/usb.h     **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 286:usb/usb.h     ****                                     const uint8_t wIndex,
 287:usb/usb.h     ****                                     const void** const DescriptorAddress);
 288:usb/usb.h     **** 
 289:usb/usb.h     **** /** Detaches the device from the USB bus. This has the effect of removing the device from any
 290:usb/usb.h     ****  *  attached host, ceasing USB communications. If no host is present, this prevents any host from
 291:usb/usb.h     ****  *  enumerating the device once attached until \ref USB_Attach() is called.
 292:usb/usb.h     ****  */
 293:usb/usb.h     **** static inline void USB_Detach(void) ATTR_ALWAYS_INLINE;
 294:usb/usb.h     **** static inline void USB_Detach(void)
 295:usb/usb.h     **** {
 296:usb/usb.h     **** 	USB.CTRLB &= ~USB_ATTACH_bm;
 297:usb/usb.h     **** }
 298:usb/usb.h     **** 
 299:usb/usb.h     **** /** Attaches the device to the USB bus. This announces the device's presence to any attached
 300:usb/usb.h     ****  *  USB host, starting the enumeration process. If no host is present, attaching the device
 301:usb/usb.h     ****  *  will allow for enumeration once a host is connected to the device.
 302:usb/usb.h     ****  */
 303:usb/usb.h     **** static inline void USB_Attach(void) ATTR_ALWAYS_INLINE;
 304:usb/usb.h     **** static inline void USB_Attach(void)
 305:usb/usb.h     **** {
 306:usb/usb.h     **** 	USB.CTRLB |= USB_ATTACH_bm;
 307:usb/usb.h     **** }
 308:usb/usb.h     **** 
 309:usb/usb.h     **** inline void USB_Evt_Task(void) ATTR_ALWAYS_INLINE;
 310:usb/usb.h     **** inline void USB_Evt_Task(void){
 311:usb/usb.h     **** 	if (USB.STATUS & USB_BUSRST_bm){
 238               		.loc 6 311 0
 239 00b6 8091 C204 		lds r24,1218
 240 00ba 80FF      		sbrs r24,0
 241 00bc 00C0      		rjmp .L11
 312:usb/usb.h     **** 		USB.STATUS &= ~USB_BUSRST_bm;
 242               		.loc 6 312 0
 243 00be 8091 C204 		lds r24,1218
 244 00c2 8E7F      		andi r24,lo8(-2)
 245 00c4 8283      		std Z+2,r24
 313:usb/usb.h     **** 		USB_Init();
 246               		.loc 6 313 0
 247 00c6 0E94 0000 		call USB_Init
 248 00ca 00C0      		rjmp .L11
 249               	.L17:
 250               	.LBE406:
 251               	.LBE405:
  44:Framework.h   **** 		USB.INTFLAGSACLR = (USB_CRCIF_bm | USB_UNFIF_bm | USB_OVFIF_bm);
 252               		.loc 2 44 0
 253 00cc 8EE0      		ldi r24,lo8(14)
 254 00ce 8287      		std Z+10,r24
 255               	.L11:
 256               	/* epilogue start */
  49:Framework.h   **** 		USB_Evt_Task();
  50:Framework.h   **** 	}
  51:Framework.h   **** }
 257               		.loc 2 51 0
 258 00d0 FF91      		pop r31
 259 00d2 EF91      		pop r30
 260 00d4 BF91      		pop r27
 261 00d6 AF91      		pop r26
 262 00d8 9F91      		pop r25
 263 00da 8F91      		pop r24
 264 00dc 7F91      		pop r23
 265 00de 6F91      		pop r22
 266 00e0 5F91      		pop r21
 267 00e2 4F91      		pop r20
 268 00e4 3F91      		pop r19
 269 00e6 2F91      		pop r18
 270 00e8 0F90      		pop r0
 271 00ea 0FBE      		out __SREG__,r0
 272 00ec 0F90      		pop r0
 273 00ee 1F90      		pop r1
 274 00f0 1895      		reti
 275               	.L18:
  46:Framework.h   **** 		USB.INTFLAGSACLR = USB_STALLIF_bm;
 276               		.loc 2 46 0
 277 00f2 81E0      		ldi r24,lo8(1)
 278 00f4 8287      		std Z+10,r24
 279 00f6 00C0      		rjmp .L11
 280               	.L16:
  42:Framework.h   **** 		USB.INTFLAGSACLR = USB_SOFIF_bm;
 281               		.loc 2 42 0
 282 00f8 80E8      		ldi r24,lo8(-128)
 283 00fa 8287      		std Z+10,r24
 284 00fc 00C0      		rjmp .L11
 285               		.cfi_endproc
 286               	.LFE58:
 288               	.global	__vector_126
 290               	__vector_126:
 291               	.LFB59:
  52:Framework.h   **** 
  53:Framework.h   **** ISR(USB_TRNCOMPL_vect){
 292               		.loc 2 53 0
 293               		.cfi_startproc
 294 00fe 1F92      		push r1
 295               	.LCFI14:
 296               		.cfi_def_cfa_offset 3
 297               		.cfi_offset 1, -2
 298 0100 0F92      		push r0
 299               	.LCFI15:
 300               		.cfi_def_cfa_offset 4
 301               		.cfi_offset 0, -3
 302 0102 0FB6      		in r0,__SREG__
 303 0104 0F92      		push r0
 304 0106 1124      		clr __zero_reg__
 305 0108 0F93      		push r16
 306               	.LCFI16:
 307               		.cfi_def_cfa_offset 5
 308               		.cfi_offset 16, -4
 309 010a 2F93      		push r18
 310               	.LCFI17:
 311               		.cfi_def_cfa_offset 6
 312               		.cfi_offset 18, -5
 313 010c 3F93      		push r19
 314               	.LCFI18:
 315               		.cfi_def_cfa_offset 7
 316               		.cfi_offset 19, -6
 317 010e 4F93      		push r20
 318               	.LCFI19:
 319               		.cfi_def_cfa_offset 8
 320               		.cfi_offset 20, -7
 321 0110 5F93      		push r21
 322               	.LCFI20:
 323               		.cfi_def_cfa_offset 9
 324               		.cfi_offset 21, -8
 325 0112 6F93      		push r22
 326               	.LCFI21:
 327               		.cfi_def_cfa_offset 10
 328               		.cfi_offset 22, -9
 329 0114 7F93      		push r23
 330               	.LCFI22:
 331               		.cfi_def_cfa_offset 11
 332               		.cfi_offset 23, -10
 333 0116 8F93      		push r24
 334               	.LCFI23:
 335               		.cfi_def_cfa_offset 12
 336               		.cfi_offset 24, -11
 337 0118 9F93      		push r25
 338               	.LCFI24:
 339               		.cfi_def_cfa_offset 13
 340               		.cfi_offset 25, -12
 341 011a AF93      		push r26
 342               	.LCFI25:
 343               		.cfi_def_cfa_offset 14
 344               		.cfi_offset 26, -13
 345 011c BF93      		push r27
 346               	.LCFI26:
 347               		.cfi_def_cfa_offset 15
 348               		.cfi_offset 27, -14
 349 011e EF93      		push r30
 350               	.LCFI27:
 351               		.cfi_def_cfa_offset 16
 352               		.cfi_offset 30, -15
 353 0120 FF93      		push r31
 354               	.LCFI28:
 355               		.cfi_def_cfa_offset 17
 356               		.cfi_offset 31, -16
 357               	/* prologue: Signal */
 358               	/* frame size = 0 */
 359               	/* stack size = 16 */
 360               	.L__stack_usage = 16
  54:Framework.h   **** 	USB.FIFOWP = 0;
 361               		.loc 2 54 0
 362 0122 E0EC      		ldi r30,lo8(1216)
 363 0124 F4E0      		ldi r31,hi8(1216)
 364 0126 1482      		std Z+4,__zero_reg__
  55:Framework.h   **** 	USB.INTFLAGSBCLR = USB_SETUPIF_bm | USB_TRNIF_bm;
 365               		.loc 2 55 0
 366 0128 83E0      		ldi r24,lo8(3)
 367 012a 8487      		std Z+12,r24
 368               	.LVL9:
 369               	.LBB463:
 370               	.LBB464:
 371               	.LBB465:
  50:usb/usb_pipe.h **** 	}
  51:usb/usb_pipe.h **** }
  52:usb/usb_pipe.h **** 
  53:usb/usb_pipe.h **** static inline void usb_pipe_reset(const USB_Pipe* p){
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
  55:usb/usb_pipe.h **** 		pipe_reset(p->pipe);
  56:usb/usb_pipe.h **** 		USB_ep_cancel(p->ep);
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
  60:usb/usb_pipe.h **** 	}
  61:usb/usb_pipe.h **** }
  62:usb/usb_pipe.h **** 
  63:usb/usb_pipe.h **** static inline void _usb_pipe_ep_start(const USB_Pipe* p, uint8_t* data, uint16_t size) ATTR_ALWAYS_
  64:usb/usb_pipe.h **** static inline void _usb_pipe_ep_start(const USB_Pipe* p, uint8_t* data, uint16_t size){
  65:usb/usb_pipe.h **** 	bool bank = 0;
  66:usb/usb_pipe.h **** 
  67:usb/usb_pipe.h **** 	if (p->ep & USB_EP_PP){
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
  70:usb/usb_pipe.h **** 	}
  71:usb/usb_pipe.h **** 
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
  73:usb/usb_pipe.h **** 		USB_ep_start_bank(p->ep, 0, data, size);
  74:usb/usb_pipe.h **** 	}else{
  75:usb/usb_pipe.h **** 		USB_ep_start_bank(p->ep, 1, data, size);
  76:usb/usb_pipe.h **** 	}
  77:usb/usb_pipe.h **** }
  78:usb/usb_pipe.h **** 
  79:usb/usb_pipe.h **** static inline void usb_pipe_handle(const USB_Pipe* p){
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 372               		.loc 3 80 0
 373 012c 2FB7      		in r18,__SREG__
 374               	.LVL10:
 375               	.LBB466:
 376               	.LBB467:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 377               		.loc 4 50 0
 378               	/* #APP */
 379               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 380 012e F894      		cli
 381               	 ;  0 "" 2
 382               	.LVL11:
 383               	/* #NOAPP */
 384               	.LBE467:
 385               	.LBE466:
 386               	.LBB468:
 387               	.LBB469:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 388               		.loc 6 220 0
 389 0130 8091 0000 		lds r24,endpoints+24
 390 0134 8670      		andi r24,lo8(6)
 391               	.LBE469:
 392               	.LBE468:
  81:usb/usb_pipe.h **** 		if (p->ep & USB_EP_IN){
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 393               		.loc 3 82 0
 394 0136 01F4      		brne .L34
 395               	.LVL12:
 396               	.L20:
 397               	.LBB470:
 398               	.LBB471:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 399               		.loc 4 70 0
 400 0138 2FBF      		out __SREG__,r18
 401               		.loc 4 71 0
 402               	.LBE471:
 403               	.LBE470:
 404               	.LBE465:
 405               	.LBE464:
 406               	.LBE463:
 407               	.LBB509:
 408               	.LBB510:
 314:usb/usb.h     **** 	}
 315:usb/usb.h     **** }
 316:usb/usb.h     **** 
 317:usb/usb.h     **** inline void USB_Task(void) ATTR_ALWAYS_INLINE;
 318:usb/usb.h     **** inline void USB_Task(void){
 319:usb/usb.h     **** 	// Read once to prevent race condition where SETUP packet is interpreted as OUT
 320:usb/usb.h     **** 	uint8_t status = endpoints[0].out.STATUS;
 409               		.loc 6 320 0
 410 013a 8091 0000 		lds r24,endpoints
 411               	.LVL13:
 321:usb/usb.h     **** 
 322:usb/usb.h     **** 	if (status & USB_EP_SETUP_bm){
 412               		.loc 6 322 0
 413 013e 84FD      		sbrc r24,4
 414 0140 00C0      		rjmp .L35
 415               	.L29:
 323:usb/usb.h     **** 		if (!USB_HandleSetup()){
 324:usb/usb.h     **** 			endpoints[0].out.CTRL |= USB_EP_STALL_bm;
 325:usb/usb.h     **** 			endpoints[0].in.CTRL |= USB_EP_STALL_bm; 
 326:usb/usb.h     **** 		}
 327:usb/usb.h     **** 		USB_ep0_enableOut();
 328:usb/usb.h     **** 	}else if(status & USB_EP_TRNCOMPL0_bm){
 416               		.loc 6 328 0
 417 0142 85FD      		sbrc r24,5
 418 0144 00C0      		rjmp .L36
 419               	.LVL14:
 420               	.L19:
 421               	/* epilogue start */
 422               	.LBE510:
 423               	.LBE509:
  56:Framework.h   **** 	usb_pipe_handle(&ep_in);
  57:Framework.h   **** 	USB_Task();
  58:Framework.h   **** }
 424               		.loc 2 58 0
 425 0146 FF91      		pop r31
 426 0148 EF91      		pop r30
 427 014a BF91      		pop r27
 428 014c AF91      		pop r26
 429 014e 9F91      		pop r25
 430 0150 8F91      		pop r24
 431 0152 7F91      		pop r23
 432 0154 6F91      		pop r22
 433 0156 5F91      		pop r21
 434 0158 4F91      		pop r20
 435 015a 3F91      		pop r19
 436 015c 2F91      		pop r18
 437 015e 0F91      		pop r16
 438 0160 0F90      		pop r0
 439 0162 0FBE      		out __SREG__,r0
 440 0164 0F90      		pop r0
 441 0166 1F90      		pop r1
 442 0168 1895      		reti
 443               	.LVL15:
 444               	.L34:
 445               	.LBB519:
 446               	.LBB506:
 447               	.LBB503:
 448               	.LBB473:
 449               	.LBB474:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 450               		.loc 5 51 0
 451 016a 3091 0000 		lds r19,ep_in_pipe_data+4
 452               	.LBE474:
 453               	.LBE473:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 454               		.loc 3 83 0
 455 016e 1316      		cp __zero_reg__,r19
 456 0170 04F0      		brlt .+2
 457 0172 00C0      		rjmp .L21
 458               	.LBB475:
 459               	.LBB476:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 460               		.loc 5 62 0
 461 0174 8091 0000 		lds r24,ep_in_pipe_data
 462 0178 9091 0000 		lds r25,ep_in_pipe_data+1
 463               	.LVL16:
 464               	.LBE476:
 465               	.LBE475:
 466               	.LBB477:
 467               	.LBB478:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 468               		.loc 3 68 0
 469 017c 4091 0000 		lds r20,ep_in_data
 470               	.LVL17:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 471               		.loc 3 69 0
 472 0180 51E0      		ldi r21,lo8(1)
 473 0182 4130      		cpi r20,lo8(1)
 474 0184 01F4      		brne .+2
 475 0186 00C0      		rjmp .L37
 476 0188 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 477               		.loc 3 72 0
 478 018c 4423      		tst r20
 479 018e 01F4      		brne .+2
 480 0190 00C0      		rjmp .L38
 481               	.L23:
 482               	.LVL18:
 483               	.LBB479:
 484               	.LBB480:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 485               		.loc 6 168 0
 486 0192 8093 0000 		sts endpoints+20,r24
 487 0196 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 488               		.loc 6 169 0
 489 019a 40E4      		ldi r20,lo8(64)
 490 019c 50E0      		ldi r21,hi8(64)
 491 019e 4093 0000 		sts endpoints+18,r20
 492 01a2 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 493               		.loc 6 176 0
 494 01a6 E0E0      		ldi r30,lo8(endpoints+24)
 495 01a8 F0E0      		ldi r31,hi8(endpoints+24)
 496               	/* #APP */
 497               	 ;  176 "usb/usb.h" 1
 498 01aa 04E1      		ldi r16, 20
 499 01ac 0693      		.dc.w 0x9306
 500               		
 501               	 ;  0 "" 2
 502               	.LVL19:
 503               	/* #NOAPP */
 504               	.L24:
 505               	.LBE480:
 506               	.LBE479:
 507               	.LBE478:
 508               	.LBE477:
 509               	.LBB484:
 510               	.LBB485:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 511               		.loc 5 72 0
 512 01ae 3150      		subi r19,lo8(-(-1))
 513 01b0 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 514               		.loc 5 73 0
 515 01b4 805C      		subi r24,lo8(-(64))
 516 01b6 9F4F      		sbci r25,hi8(-(64))
 517 01b8 8093 0000 		sts ep_in_pipe_data,r24
 518 01bc 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 519               		.loc 5 75 0
 520 01c0 30E0      		ldi r19,hi8(ep_in_pipe_buffer+512)
 521 01c2 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 522 01c4 9307      		cpc r25,r19
 523 01c6 01F0      		breq .+2
 524 01c8 00C0      		rjmp .L20
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 525               		.loc 5 76 0
 526 01ca 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 527 01cc 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 528 01ce 8093 0000 		sts ep_in_pipe_data,r24
 529 01d2 9093 0000 		sts ep_in_pipe_data+1,r25
 530               	.LBE485:
 531               	.LBE484:
 532               	.LBB486:
 533               	.LBB472:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 534               		.loc 4 70 0
 535 01d6 2FBF      		out __SREG__,r18
 536               		.loc 4 71 0
 537               	.LBE472:
 538               	.LBE486:
 539               	.LBE503:
 540               	.LBE506:
 541               	.LBE519:
 542               	.LBB520:
 543               	.LBB517:
 320:usb/usb.h     **** 	uint8_t status = endpoints[0].out.STATUS;
 544               		.loc 6 320 0
 545 01d8 8091 0000 		lds r24,endpoints
 546               	.LVL20:
 322:usb/usb.h     **** 	if (status & USB_EP_SETUP_bm){
 547               		.loc 6 322 0
 548 01dc 84FF      		sbrs r24,4
 549 01de 00C0      		rjmp .L29
 550               	.LVL21:
 551               	.L35:
 323:usb/usb.h     **** 		if (!USB_HandleSetup()){
 552               		.loc 6 323 0
 553 01e0 0E94 0000 		call USB_HandleSetup
 554               	.LVL22:
 555 01e4 8823      		tst r24
 556 01e6 01F4      		brne .L32
 324:usb/usb.h     **** 			endpoints[0].out.CTRL |= USB_EP_STALL_bm;
 557               		.loc 6 324 0
 558 01e8 8091 0000 		lds r24,endpoints+1
 559 01ec 8460      		ori r24,lo8(4)
 560 01ee 8093 0000 		sts endpoints+1,r24
 325:usb/usb.h     **** 			endpoints[0].in.CTRL |= USB_EP_STALL_bm; 
 561               		.loc 6 325 0
 562 01f2 8091 0000 		lds r24,endpoints+9
 563 01f6 8460      		ori r24,lo8(4)
 564 01f8 8093 0000 		sts endpoints+9,r24
 565               	.L32:
 566               	.LBB511:
 567               	.LBB512:
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 568               		.loc 6 280 0
 569 01fc E0E0      		ldi r30,lo8(endpoints)
 570 01fe F0E0      		ldi r31,hi8(endpoints)
 571               	/* #APP */
 572               	 ;  280 "usb/usb.h" 1
 573 0200 02E7      		ldi r16, 114
 574 0202 0693      		.dc.w 0x9306
 575               		
 576               	 ;  0 "" 2
 577               	/* #NOAPP */
 578 0204 00C0      		rjmp .L19
 579               	.LVL23:
 580               	.L37:
 581               	.LBE512:
 582               	.LBE511:
 583               	.LBE517:
 584               	.LBE520:
 585               	.LBB521:
 586               	.LBB507:
 587               	.LBB504:
 588               	.LBB487:
 589               	.LBB483:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 590               		.loc 3 69 0
 591 0206 50E0      		ldi r21,lo8(0)
 592 0208 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 593               		.loc 3 72 0
 594 020c 4423      		tst r20
 595 020e 01F0      		breq .+2
 596 0210 00C0      		rjmp .L23
 597               	.L38:
 598               	.LVL24:
 599               	.LBB481:
 600               	.LBB482:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 601               		.loc 6 168 0
 602 0212 8093 0000 		sts endpoints+28,r24
 603 0216 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 604               		.loc 6 169 0
 605 021a 40E4      		ldi r20,lo8(64)
 606 021c 50E0      		ldi r21,hi8(64)
 607               	.LVL25:
 608 021e 4093 0000 		sts endpoints+26,r20
 609 0222 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 610               		.loc 6 174 0
 611 0226 E0E0      		ldi r30,lo8(endpoints+24)
 612 0228 F0E0      		ldi r31,hi8(endpoints+24)
 613               	.LVL26:
 614               	/* #APP */
 615               	 ;  174 "usb/usb.h" 1
 616 022a 02E2      		ldi r16, 34
 617 022c 0693      		.dc.w 0x9306
 618               		
 619               	 ;  0 "" 2
 620               	/* #NOAPP */
 621 022e 00C0      		rjmp .L24
 622               	.LVL27:
 623               	.L36:
 624               	.LBE482:
 625               	.LBE481:
 626               	.LBE483:
 627               	.LBE487:
 628               	.LBE504:
 629               	.LBE507:
 630               	.LBE521:
 631               	.LBB522:
 632               	.LBB518:
 329:usb/usb.h     **** 		EVENT_USB_Device_ControlOUT((uint8_t *) ep0_buf_out, endpoints[0].out.CNT);
 633               		.loc 6 329 0
 634 0230 4091 0000 		lds r20,endpoints+2
 635 0234 5091 0000 		lds r21,endpoints+2+1
 636               	.LVL28:
 637               	.LBB514:
 638               	.LBB515:
 275:main.c        **** 
 276:main.c        **** // code for communicating with the gprs module via uart
 277:main.c        **** char uart_getchar (USART_t* USART) { 
 278:main.c        **** 
 279:main.c        ****     // Wait for the receive buffer to be empty 
 280:main.c        ****     while ( !( USART->STATUS & USART_RXCIF_bm) ); 
 281:main.c        **** 
 282:main.c        ****     // Receive char from receive buffer 
 283:main.c        ****     return USART->DATA; 
 284:main.c        **** } 
 285:main.c        **** 
 286:main.c        **** void send_message(char* number, char* text_message) {
 287:main.c        **** 
 288:main.c        ****   uart_putchar('\r', &USARTD0);
 289:main.c        ****   _delay_ms(100);
 290:main.c        **** 
 291:main.c        ****   char* text_mode = "AT+CMGF=1\r";
 292:main.c        ****   _delay_ms(100);
 293:main.c        **** 
 294:main.c        ****   char c;
 295:main.c        **** 
 296:main.c        ****   while (*text_mode != '\0') {  
 297:main.c        ****     uart_putchar(*text_mode, &USARTD0);
 298:main.c        **** 
 299:main.c        ****     // debugging
 300:main.c        ****     c = uart_getchar(&USARTD0);
 301:main.c        ****     send_byte(c);
 302:main.c        ****     text_mode++;
 303:main.c        ****   }
 304:main.c        **** 
 305:main.c        ****   _delay_ms(100);
 306:main.c        ****   break_and_flush();
 307:main.c        **** 
 308:main.c        **** 
 309:main.c        ****   //build number string
 310:main.c        ****   char* number_string = concat("AT+CMGS=\"", number);
 311:main.c        ****   char* new_number_string = concat(number_string, "\"\r");
 312:main.c        **** 
 313:main.c        ****   //more sketchiness
 314:main.c        **** 
 315:main.c        ****   while (*new_number_string != '\0') {
 316:main.c        ****     uart_putchar(*new_number_string, &USARTD0);
 317:main.c        **** 
 318:main.c        ****     //debugging
 319:main.c        ****     c = uart_getchar(&USARTD0);
 320:main.c        ****     send_byte(c);
 321:main.c        ****     new_number_string++;
 322:main.c        ****   }
 323:main.c        ****   _delay_ms(100);
 324:main.c        ****   break_and_flush();
 325:main.c        **** 
 326:main.c        ****   char* new_text_message = concat(text_message, "\r");
 327:main.c        ****   while (*new_text_message != '\0') {
 328:main.c        ****     uart_putchar(*new_text_message, &USARTD0);
 329:main.c        **** 
 330:main.c        ****     //debugging
 331:main.c        ****     c = uart_getchar(&USARTD0);
 332:main.c        ****     send_byte(c);
 333:main.c        ****     new_text_message++;
 334:main.c        ****   }
 335:main.c        **** 
 336:main.c        ****   _delay_ms(100);
 337:main.c        ****   break_and_flush();
 338:main.c        **** 
 339:main.c        ****   //check this later to ensure ^Z is being sent
 340:main.c        ****   uart_putchar(26, &USARTD0);
 341:main.c        ****   // c = uart_getchar(&USARTD0);
 342:main.c        ****   // send_byte(c);
 343:main.c        **** 
 344:main.c        ****   _delay_ms(100);
 345:main.c        ****   break_and_flush();
 346:main.c        **** }
 347:main.c        **** 
 348:main.c        **** int main(void){
 349:main.c        **** 
 350:main.c        ****   //usb configuration
 351:main.c        **** 	USB_ConfigureClock();
 352:main.c        **** 	USB_Init();
 353:main.c        **** 	USB.INTCTRLA = USB_BUSEVIE_bm | USB_INTLVL_MED_gc;
 354:main.c        **** 	USB.INTCTRLB = USB_TRNIE_bm | USB_SETUPIE_bm;
 355:main.c        **** 	PMIC.CTRL = PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm;
 356:main.c        **** 	sei();
 357:main.c        **** 
 358:main.c        ****   //uart init code -- change condition to true when we're ready to communicate with the gps
 359:main.c        **** 	if (false) {
 360:main.c        **** 		gps_init();
 361:main.c        **** 	}
 362:main.c        **** 
 363:main.c        ****   if (true) {
 364:main.c        ****     gprs_init();
 365:main.c        ****   }
 366:main.c        **** 
 367:main.c        ****   //call break and flush to make sure the buffer is cleared
 368:main.c        **** 	break_and_flush();
 369:main.c        **** 
 370:main.c        ****   // parse nmea string and send result over usb
 371:main.c        ****   char* text_message = parse_nmea();
 372:main.c        **** 
 373:main.c        ****   char* phonenumber = "+12153166262";
 374:main.c        ****   send_message(phonenumber, text_message);
 375:main.c        ****   send_message(twilio_number, text_message);
 376:main.c        **** 
 377:main.c        **** 	for (;;){
 378:main.c        ****     //heart of the firmware logic goes here
 379:main.c        **** 	}
 380:main.c        **** }
 381:main.c        **** 
 382:main.c        **** #define stringify(s) #s
 383:main.c        **** 
 384:main.c        **** const char PROGMEM hwversion[] = stringify(HW_VERSION);
 385:main.c        **** const char PROGMEM fwversion[] = stringify(FW_VERSION);
 386:main.c        **** 
 387:main.c        **** uint8_t usb_cmd = 0;
 388:main.c        **** uint8_t cmd_data = 0;
 389:main.c        **** 
 390:main.c        **** // void send_usb_data(char *message) {
 391:main.c        **** // 	for (uint8_t = 0; i < 64; i++) ep0_buf_in[i] = 0;
 392:main.c        **** // 	int l = strlen(message);
 393:main.c        **** // 	for (int i=0; i<l; i++) {
 394:main.c        **** // 		ep0_buf_in[i] = message[i];
 395:main.c        **** // 	}
 396:main.c        **** // }
 397:main.c        **** 
 398:main.c        **** /** Event handler for the library USB Control Request reception event. */
 399:main.c        **** bool EVENT_USB_Device_ControlRequest(USB_Request_Header_t* req){
 400:main.c        **** 	// zero out ep0_buf_in
 401:main.c        **** 	for (uint8_t i = 0; i < 64; i++) ep0_buf_in[i] = 0;
 402:main.c        **** 	usb_cmd = 0;
 403:main.c        **** 	if ((req->bmRequestType & CONTROL_REQTYPE_TYPE) == REQTYPE_VENDOR){
 404:main.c        **** 		switch(req->bRequest){
 405:main.c        **** 			case 0x00: // Info
 406:main.c        **** 				if (req->wIndex == 0){
 407:main.c        **** 					USB_ep0_send_progmem((uint8_t*)hwversion, sizeof(hwversion));
 408:main.c        **** 				}else if (req->wIndex == 1){
 409:main.c        **** 					USB_ep0_send_progmem((uint8_t*)fwversion, sizeof(fwversion));
 410:main.c        **** 				}
 411:main.c        **** 				return true;
 412:main.c        **** 			case 0x02:
 413:main.c        **** 				{
 414:main.c        **** 					int l = strlen(message);
 415:main.c        **** 					for (uint8_t i=0; i<64; i++) {
 416:main.c        **** 						ep0_buf_in[i] = message[i];
 417:main.c        **** 					}
 418:main.c        **** 					USB_ep0_send(l);
 419:main.c        **** 					return true;
 420:main.c        **** 				}
 421:main.c        **** 			case 0x08:
 422:main.c        **** 				* ((uint8_t *) req->wIndex) = req->wValue;
 423:main.c        **** 				USB_ep0_send(0);
 424:main.c        **** 				return true;
 425:main.c        **** 			case 0x09:
 426:main.c        **** 				ep0_buf_in[0] = * ((uint8_t *) req->wIndex);
 427:main.c        **** 				USB_ep0_send(1);
 428:main.c        **** 				return true;
 429:main.c        **** 			case 0x16:
 430:main.c        **** 				* ((uint16_t *) req->wIndex) = req->wValue;
 431:main.c        **** 				USB_ep0_send(0);
 432:main.c        **** 				return true;
 433:main.c        **** 			case 0x17:{
 434:main.c        **** 				uint16_t *addr;
 435:main.c        **** 				addr = (uint16_t *) req->wIndex;
 436:main.c        **** 				ep0_buf_in[0] = *addr & 0xFF;
 437:main.c        **** 				ep0_buf_in[1] = *addr >> 8;
 438:main.c        **** 				USB_ep0_send(2);}
 439:main.c        **** 				return true;
 440:main.c        **** 			// read EEPROM	
 441:main.c        **** 			case 0xE0: 
 442:main.c        **** 				eeprom_read_block(ep0_buf_in, (void*)(req->wIndex*64), 64);
 443:main.c        **** 				USB_ep0_send(64);
 444:main.c        **** 				return true;
 445:main.c        **** 
 446:main.c        **** 			// write EEPROM	
 447:main.c        **** 			case 0xE1: 
 448:main.c        **** 				usb_cmd = req->bRequest;
 449:main.c        **** 				cmd_data = req->wIndex;
 450:main.c        **** 				USB_ep0_send(0);
 451:main.c        **** 				return true; // Wait for OUT data (expecting an OUT transfer)
 452:main.c        **** 
 453:main.c        **** 			// disconnect from USB, jump to bootloader	
 454:main.c        **** 			case 0xBB: 
 455:main.c        **** 				USB_enter_bootloader();
 456:main.c        **** 				return true;
 457:main.c        **** 		}
 458:main.c        **** 	}
 459:main.c        **** 	return false;
 460:main.c        **** }
 461:main.c        **** 
 462:main.c        **** void EVENT_USB_Device_ControlOUT(uint8_t* buf, uint8_t count){
 463:main.c        **** 	switch (usb_cmd){
 639               		.loc 1 463 0
 640 0238 8091 0000 		lds r24,usb_cmd
 641               	.LVL29:
 642 023c 813E      		cpi r24,lo8(-31)
 643 023e 01F4      		brne .L32
 464:main.c        **** 		case 0xE1: // Write EEPROM
 465:main.c        **** 			eeprom_update_block(buf, (void*)(cmd_data*64), count);
 644               		.loc 1 465 0
 645 0240 6091 0000 		lds r22,cmd_data
 646 0244 70E0      		ldi r23,lo8(0)
 647 0246 0024      		clr __tmp_reg__
 648 0248 7695      		lsr r23
 649 024a 6795      		ror r22
 650 024c 0794      		ror __tmp_reg__
 651 024e 7695      		lsr r23
 652 0250 6795      		ror r22
 653 0252 0794      		ror __tmp_reg__
 654 0254 762F      		mov r23,r22
 655 0256 602D      		mov r22,__tmp_reg__
 656 0258 80E0      		ldi r24,lo8(ep0_buf_out)
 657 025a 90E0      		ldi r25,hi8(ep0_buf_out)
 658 025c 50E0      		ldi r21,lo8(0)
 659 025e 0E94 0000 		call __eeupd_block_x32a4u
 660               	.LVL30:
 661               	.LBE515:
 662               	.LBE514:
 663               	.LBB516:
 664               	.LBB513:
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 665               		.loc 6 280 0
 666 0262 E0E0      		ldi r30,lo8(endpoints)
 667 0264 F0E0      		ldi r31,hi8(endpoints)
 668               	/* #APP */
 669               	 ;  280 "usb/usb.h" 1
 670 0266 02E7      		ldi r16, 114
 671 0268 0693      		.dc.w 0x9306
 672               		
 673               	 ;  0 "" 2
 674               	/* #NOAPP */
 675 026a 00C0      		rjmp .L19
 676               	.LVL31:
 677               	.L21:
 678               	.LBE513:
 679               	.LBE516:
 680               	.LBE518:
 681               	.LBE522:
 682               	.LBB523:
 683               	.LBB508:
 684               	.LBB505:
  84:usb/usb_pipe.h **** 					_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->pipe->size);
  85:usb/usb_pipe.h **** 					pipe_done_read(p->pipe);
  86:usb/usb_pipe.h **** 				}else if (p->features & PIPE_ENABLE_FLUSH){
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 685               		.loc 3 87 0
 686 026c 8091 0000 		lds r24,ep_in_data+1
 687 0270 8130      		cpi r24,lo8(1)
 688 0272 01F0      		breq .L39
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
  89:usb/usb_pipe.h **** 						// Send short packet
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 689               		.loc 3 91 0
 690 0274 8230      		cpi r24,lo8(2)
 691 0276 01F0      		breq .+2
 692 0278 00C0      		rjmp .L20
 693               	.LVL32:
 694               	.LBB488:
 695               	.LBB489:
 696               	.LBB490:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 697               		.loc 6 228 0
 698 027a 8091 0000 		lds r24,endpoints+24
 699 027e 8670      		andi r24,lo8(6)
 700               	.LBE490:
 701               	.LBE489:
 702               	.LBE488:
 703               		.loc 3 91 0
 704 0280 8630      		cpi r24,lo8(6)
 705 0282 01F0      		breq .+2
 706 0284 00C0      		rjmp .L20
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 707               		.loc 3 92 0
 708 0286 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 709               		.loc 3 93 0
 710 028a 1092 0000 		sts ep_in_data+2,__zero_reg__
 711 028e 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 712               	.LBB491:
 713               	.LBB492:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 714               		.loc 5 90 0
 715 0292 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 716               		.loc 5 91 0
 717 0296 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 718 0298 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 719 029a 8093 0000 		sts ep_in_pipe_data+2,r24
 720 029e 9093 0000 		sts ep_in_pipe_data+2+1,r25
 721 02a2 8093 0000 		sts ep_in_pipe_data,r24
 722 02a6 9093 0000 		sts ep_in_pipe_data+1,r25
 723               	.LVL33:
 724 02aa 00C0      		rjmp .L20
 725               	.LVL34:
 726               	.L39:
 727               	.LBE492:
 728               	.LBE491:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 729               		.loc 3 88 0
 730 02ac 82E0      		ldi r24,lo8(2)
 731 02ae 8093 0000 		sts ep_in_data+1,r24
 732               	.LBB493:
 733               	.LBB494:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 734               		.loc 5 62 0
 735 02b2 7091 0000 		lds r23,ep_in_pipe_data
 736 02b6 6091 0000 		lds r22,ep_in_pipe_data+1
 737               	.LBE494:
 738               	.LBE493:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 739               		.loc 3 90 0
 740 02ba 8091 0000 		lds r24,ep_in_data+2
 741 02be 9091 0000 		lds r25,ep_in_data+2+1
 742               	.LVL35:
 743               	.LBB495:
 744               	.LBB496:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 745               		.loc 3 68 0
 746 02c2 3091 0000 		lds r19,ep_in_data
 747               	.LVL36:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 748               		.loc 3 69 0
 749 02c6 41E0      		ldi r20,lo8(1)
 750 02c8 3130      		cpi r19,lo8(1)
 751 02ca 01F0      		breq .L40
 752               	.L27:
 753 02cc 4093 0000 		sts ep_in_data,r20
 754               	.LBB497:
 755               	.LBB498:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 756               		.loc 6 168 0
 757 02d0 472F      		mov r20,r23
 758 02d2 562F      		mov r21,r22
 759               	.LBE498:
 760               	.LBE497:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 761               		.loc 3 72 0
 762 02d4 3323      		tst r19
 763 02d6 01F4      		brne .L28
 764               	.LVL37:
 765               	.LBB500:
 766               	.LBB499:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 767               		.loc 6 168 0
 768 02d8 4093 0000 		sts endpoints+28,r20
 769 02dc 5093 0000 		sts endpoints+28+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 770               		.loc 6 169 0
 771 02e0 8093 0000 		sts endpoints+26,r24
 772 02e4 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 773               		.loc 6 174 0
 774 02e8 E0E0      		ldi r30,lo8(endpoints+24)
 775 02ea F0E0      		ldi r31,hi8(endpoints+24)
 776               	.LVL38:
 777               	/* #APP */
 778               	 ;  174 "usb/usb.h" 1
 779 02ec 02E2      		ldi r16, 34
 780 02ee 0693      		.dc.w 0x9306
 781               		
 782               	 ;  0 "" 2
 783               	/* #NOAPP */
 784 02f0 00C0      		rjmp .L20
 785               	.LVL39:
 786               	.L28:
 787               	.LBE499:
 788               	.LBE500:
 789               	.LBB501:
 790               	.LBB502:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 791               		.loc 6 168 0
 792 02f2 4093 0000 		sts endpoints+20,r20
 793 02f6 5093 0000 		sts endpoints+20+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 794               		.loc 6 169 0
 795 02fa 8093 0000 		sts endpoints+18,r24
 796 02fe 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 797               		.loc 6 176 0
 798 0302 E0E0      		ldi r30,lo8(endpoints+24)
 799 0304 F0E0      		ldi r31,hi8(endpoints+24)
 800               	/* #APP */
 801               	 ;  176 "usb/usb.h" 1
 802 0306 04E1      		ldi r16, 20
 803 0308 0693      		.dc.w 0x9306
 804               		
 805               	 ;  0 "" 2
 806               	/* #NOAPP */
 807 030a 00C0      		rjmp .L20
 808               	.LVL40:
 809               	.L40:
 810               	.LBE502:
 811               	.LBE501:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 812               		.loc 3 69 0
 813 030c 40E0      		ldi r20,lo8(0)
 814 030e 00C0      		rjmp .L27
 815               	.LBE496:
 816               	.LBE495:
 817               	.LBE505:
 818               	.LBE508:
 819               	.LBE523:
 820               		.cfi_endproc
 821               	.LFE59:
 823               	.global	send_string
 825               	send_string:
 826               	.LFB61:
  47:main.c        **** void send_string(char* s) {
 827               		.loc 1 47 0
 828               		.cfi_startproc
 829               	.LVL41:
 830 0310 6F92      		push r6
 831               	.LCFI29:
 832               		.cfi_def_cfa_offset 3
 833               		.cfi_offset 6, -2
 834 0312 7F92      		push r7
 835               	.LCFI30:
 836               		.cfi_def_cfa_offset 4
 837               		.cfi_offset 7, -3
 838 0314 8F92      		push r8
 839               	.LCFI31:
 840               		.cfi_def_cfa_offset 5
 841               		.cfi_offset 8, -4
 842 0316 9F92      		push r9
 843               	.LCFI32:
 844               		.cfi_def_cfa_offset 6
 845               		.cfi_offset 9, -5
 846 0318 AF92      		push r10
 847               	.LCFI33:
 848               		.cfi_def_cfa_offset 7
 849               		.cfi_offset 10, -6
 850 031a BF92      		push r11
 851               	.LCFI34:
 852               		.cfi_def_cfa_offset 8
 853               		.cfi_offset 11, -7
 854 031c CF92      		push r12
 855               	.LCFI35:
 856               		.cfi_def_cfa_offset 9
 857               		.cfi_offset 12, -8
 858 031e DF92      		push r13
 859               	.LCFI36:
 860               		.cfi_def_cfa_offset 10
 861               		.cfi_offset 13, -9
 862 0320 EF92      		push r14
 863               	.LCFI37:
 864               		.cfi_def_cfa_offset 11
 865               		.cfi_offset 14, -10
 866 0322 FF92      		push r15
 867               	.LCFI38:
 868               		.cfi_def_cfa_offset 12
 869               		.cfi_offset 15, -11
 870 0324 0F93      		push r16
 871               	.LCFI39:
 872               		.cfi_def_cfa_offset 13
 873               		.cfi_offset 16, -12
 874 0326 1F93      		push r17
 875               	.LCFI40:
 876               		.cfi_def_cfa_offset 14
 877               		.cfi_offset 17, -13
 878 0328 CF93      		push r28
 879               	.LCFI41:
 880               		.cfi_def_cfa_offset 15
 881               		.cfi_offset 28, -14
 882 032a DF93      		push r29
 883               	.LCFI42:
 884               		.cfi_def_cfa_offset 16
 885               		.cfi_offset 29, -15
 886               	/* prologue: function */
 887               	/* frame size = 0 */
 888               	/* stack size = 14 */
 889               	.L__stack_usage = 14
  48:main.c        ****   int length = strlen(s);
 890               		.loc 1 48 0
 891 032c DC01      		movw r26,r24
 892 032e 0D90      		ld __tmp_reg__,X+
 893 0330 0020      		tst __tmp_reg__
 894 0332 01F4      		brne .-6
 895 0334 5D01      		movw r10,r26
 896 0336 0894      		sec
 897 0338 A108      		sbc r10,__zero_reg__
 898 033a B108      		sbc r11,__zero_reg__
 899 033c A81A      		sub r10,r24
 900 033e B90A      		sbc r11,r25
 901               	.LVL42:
 902               	.LBB606:
  49:main.c        ****   for (int i=0; i<length; i++) {
 903               		.loc 1 49 0
 904 0340 1A14      		cp __zero_reg__,r10
 905 0342 1B04      		cpc __zero_reg__,r11
 906 0344 04F4      		brge .L41
 907 0346 4C01      		movw r8,r24
 908 0348 CC24      		clr r12
 909 034a DD24      		clr r13
 910               	.LBB607:
 911               	.LBB608:
 912               	.LBB609:
 913               	.LBB610:
 914               	.LBB611:
 915               	.LBB612:
 916               	.LBB613:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 917               		.loc 5 57 0
 918 034c 46E0      		ldi r20,lo8(6)
 919               	.LBE613:
 920               	.LBE612:
 921               	.LBE611:
 922               	.LBE610:
 923               	.LBE609:
 924               	.LBB624:
 925               	.LBB625:
 926               	.LBB626:
 927               	.LBB627:
 928               	.LBB628:
 929               	.LBB629:
 930               	.LBB630:
 931               	.LBB631:
 932               	.LBB632:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 933               		.loc 6 220 0
 934 034e A0E0      		ldi r26,lo8(endpoints+24)
 935 0350 B0E0      		ldi r27,hi8(endpoints+24)
 936               	.LBE632:
 937               	.LBE631:
 938               	.LBB634:
 939               	.LBB635:
 940               		.loc 5 91 0
 941 0352 90E0      		ldi r25,lo8(ep_in_pipe_buffer)
 942 0354 692E      		mov r6,r25
 943 0356 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 944 0358 792E      		mov r7,r25
 945               	.LBE635:
 946               	.LBE634:
 947               	.LBB638:
 948               	.LBB639:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 949               		.loc 3 69 0
 950 035a C1E0      		ldi r28,lo8(1)
 951 035c D0E0      		ldi r29,hi8(1)
 952               	.LBE639:
 953               	.LBE638:
 954               	.LBB645:
 955               	.LBB646:
 956               	.LBB647:
 957               	.LBB648:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 958               		.loc 6 169 0
 959 035e 20E4      		ldi r18,lo8(64)
 960 0360 E22E      		mov r14,r18
 961 0362 F12C      		mov r15,__zero_reg__
 962               	.LVL43:
 963               	.L57:
 964               	.LBE648:
 965               	.LBE647:
 966               	.LBE646:
 967               	.LBE645:
 968               	.LBE630:
 969               	.LBE629:
 970               	.LBE628:
 971               	.LBE627:
 972               	.LBE626:
 973               	.LBE625:
 974               	.LBE624:
 975               	.LBE608:
 976               	.LBE607:
  50:main.c        ****     send_byte(s[i]);
 977               		.loc 1 50 0 discriminator 2
 978 0364 F401      		movw r30,r8
 979 0366 3191      		ld r19,Z+
 980 0368 4F01      		movw r8,r30
 981               	.LVL44:
 982               	.L45:
 983               	.LBB698:
 984               	.LBB696:
 985               	.LBB691:
 986               	.LBB622:
 987               	.LBB620:
  94:usb/usb_pipe.h **** 						pipe_reset(p->pipe);
  95:usb/usb_pipe.h **** 					}
  96:usb/usb_pipe.h **** 				}
  97:usb/usb_pipe.h **** 			}
  98:usb/usb_pipe.h **** 		}else{
  99:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep) && pipe_can_write(p->pipe) >= 1){
 100:usb/usb_pipe.h **** 				_usb_pipe_ep_start(p, pipe_write_ptr(p->pipe), p->pipe->size);
 101:usb/usb_pipe.h **** 				pipe_done_write(p->pipe);
 102:usb/usb_pipe.h **** 			}
 103:usb/usb_pipe.h **** 		}
 104:usb/usb_pipe.h **** 	}
 105:usb/usb_pipe.h **** }
 106:usb/usb_pipe.h **** 
 107:usb/usb_pipe.h **** static inline void usb_pipe_flush(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 108:usb/usb_pipe.h **** static inline void usb_pipe_flush(const USB_Pipe* p){
 109:usb/usb_pipe.h **** 	GCC_ASSERT(p->features&PIPE_ENABLE_FLUSH && p->ep&USB_EP_IN);
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 111:usb/usb_pipe.h **** 	usb_pipe_handle(p);
 112:usb/usb_pipe.h **** }
 113:usb/usb_pipe.h **** 
 114:usb/usb_pipe.h **** static inline bool usb_pipe_flush_done(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 115:usb/usb_pipe.h **** static inline bool usb_pipe_flush_done(const USB_Pipe* p){
 116:usb/usb_pipe.h **** 	GCC_ASSERT(p->features&PIPE_ENABLE_FLUSH);
 117:usb/usb_pipe.h **** 	return p->data->flush;
 118:usb/usb_pipe.h **** }
 119:usb/usb_pipe.h **** 
 120:usb/usb_pipe.h **** static inline bool usb_pipe_can_write(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 121:usb/usb_pipe.h **** static inline bool usb_pipe_can_write(const USB_Pipe* p){
 122:usb/usb_pipe.h **** 	bool r;
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 988               		.loc 3 123 0
 989 036a 9FB7      		in r25,__SREG__
 990               	.LVL45:
 991               	.LBB615:
 992               	.LBB616:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 993               		.loc 4 50 0
 994               	/* #APP */
 995               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 996 036c F894      		cli
 997               	 ;  0 "" 2
 998               	.LVL46:
 999               	/* #NOAPP */
 1000               	.LBE616:
 1001               	.LBE615:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 1002               		.loc 3 124 0
 1003 036e 8091 0000 		lds r24,ep_in_data+1
 1004 0372 8823      		tst r24
 1005 0374 01F0      		breq .L62
 1006               	.L58:
 125:usb/usb_pipe.h **** 			r = false;
 1007               		.loc 3 125 0
 1008 0376 80E0      		ldi r24,lo8(0)
 1009               	.L43:
 1010               	.LBB617:
 1011               	.LBB618:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 1012               		.loc 4 70 0
 1013 0378 9FBF      		out __SREG__,r25
 1014               		.loc 4 71 0
 1015               	.LBE618:
 1016               	.LBE617:
 1017               	.LBE620:
 1018               	.LBE622:
 1019               	.LBE691:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 1020               		.loc 2 20 0
 1021 037a 8823      		tst r24
 1022 037c 01F0      		breq .L45
 1023               	.LVL47:
 1024               	.LBB692:
 1025               	.LBB693:
 126:usb/usb_pipe.h **** 		}else{
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 128:usb/usb_pipe.h **** 		}
 129:usb/usb_pipe.h **** 	}
 130:usb/usb_pipe.h **** 	return r;
 131:usb/usb_pipe.h **** }
 132:usb/usb_pipe.h **** 
 133:usb/usb_pipe.h **** static inline uint8_t* usb_pipe_write_ptr(const USB_Pipe* p){
 134:usb/usb_pipe.h **** 	return pipe_write_ptr(p->pipe);
 135:usb/usb_pipe.h **** }
 136:usb/usb_pipe.h **** 
 137:usb/usb_pipe.h **** static inline void usb_pipe_done_write(const USB_Pipe* p){
 138:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 139:usb/usb_pipe.h **** 		pipe_done_write(p->pipe);
 140:usb/usb_pipe.h **** 	}
 141:usb/usb_pipe.h **** }
 142:usb/usb_pipe.h **** 
 143:usb/usb_pipe.h **** static inline bool usb_pipe_can_read(const USB_Pipe* p) ATTR_ALWAYS_INLINE;
 144:usb/usb_pipe.h **** static inline bool usb_pipe_can_read(const USB_Pipe* p){
 145:usb/usb_pipe.h **** 	bool r;
 146:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 147:usb/usb_pipe.h **** 		r = pipe_can_read(p->pipe) > 0;
 148:usb/usb_pipe.h **** 	}
 149:usb/usb_pipe.h **** 	return r;
 150:usb/usb_pipe.h **** }
 151:usb/usb_pipe.h **** 
 152:usb/usb_pipe.h **** static inline uint8_t* usb_pipe_read_ptr(const USB_Pipe* p){
 153:usb/usb_pipe.h **** 	return pipe_read_ptr(p->pipe);
 154:usb/usb_pipe.h **** }
 155:usb/usb_pipe.h **** 
 156:usb/usb_pipe.h **** static inline void usb_pipe_done_read(const USB_Pipe* p){
 157:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 158:usb/usb_pipe.h **** 		pipe_done_read(p->pipe);
 159:usb/usb_pipe.h **** 	}
 160:usb/usb_pipe.h **** }
 161:usb/usb_pipe.h **** 
 162:usb/usb_pipe.h **** static inline uint8_t usb_pipe_read_byte(const USB_Pipe* p){
 163:usb/usb_pipe.h **** 	uint8_t r = p->pipe->data->read_ptr[p->data->packet_offset++];
 164:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 165:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 166:usb/usb_pipe.h **** 			p->data->packet_offset = 0;
 167:usb/usb_pipe.h **** 			pipe_done_read(p->pipe);
 168:usb/usb_pipe.h **** 			usb_pipe_handle(p);
 169:usb/usb_pipe.h **** 		}
 170:usb/usb_pipe.h **** 	}
 171:usb/usb_pipe.h **** 	return r;
 172:usb/usb_pipe.h **** }
 173:usb/usb_pipe.h **** 
 174:usb/usb_pipe.h **** static inline void usb_pipe_write_byte(const USB_Pipe* p, uint8_t v){
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 1026               		.loc 3 175 0
 1027 037e 8091 0000 		lds r24,ep_in_data+2
 1028 0382 9091 0000 		lds r25,ep_in_data+2+1
 1029 0386 E091 0000 		lds r30,ep_in_pipe_data+2
 1030 038a F091 0000 		lds r31,ep_in_pipe_data+2+1
 1031               	.LVL48:
 1032 038e E80F      		add r30,r24
 1033 0390 F91F      		adc r31,r25
 1034 0392 3083      		st Z,r19
 1035 0394 0196      		adiw r24,1
 1036 0396 8093 0000 		sts ep_in_data+2,r24
 1037 039a 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 1038               		.loc 3 176 0
 1039 039e 8034      		cpi r24,64
 1040 03a0 9105      		cpc r25,__zero_reg__
 1041 03a2 01F0      		breq .L63
 1042               	.LVL49:
 1043               	.L46:
 1044               	.LBE693:
 1045               	.LBE692:
 1046               	.LBE696:
 1047               	.LBE698:
  49:main.c        ****   for (int i=0; i<length; i++) {
 1048               		.loc 1 49 0 discriminator 2
 1049 03a4 0894      		sec
 1050 03a6 C11C      		adc r12,__zero_reg__
 1051 03a8 D11C      		adc r13,__zero_reg__
 1052               	.LVL50:
 1053 03aa AC14      		cp r10,r12
 1054 03ac BD04      		cpc r11,r13
 1055 03ae 01F4      		brne .L57
 1056               	.LVL51:
 1057               	.L41:
 1058               	/* epilogue start */
 1059               	.LBE606:
  52:main.c        **** }
 1060               		.loc 1 52 0
 1061 03b0 DF91      		pop r29
 1062 03b2 CF91      		pop r28
 1063 03b4 1F91      		pop r17
 1064 03b6 0F91      		pop r16
 1065 03b8 FF90      		pop r15
 1066 03ba EF90      		pop r14
 1067 03bc DF90      		pop r13
 1068 03be CF90      		pop r12
 1069 03c0 BF90      		pop r11
 1070 03c2 AF90      		pop r10
 1071               	.LVL52:
 1072 03c4 9F90      		pop r9
 1073 03c6 8F90      		pop r8
 1074 03c8 7F90      		pop r7
 1075 03ca 6F90      		pop r6
 1076 03cc 0895      		ret
 1077               	.LVL53:
 1078               	.L62:
 1079               	.LBB700:
 1080               	.LBB699:
 1081               	.LBB697:
 1082               	.LBB694:
 1083               	.LBB623:
 1084               	.LBB621:
 1085               	.LBB619:
 1086               	.LBB614:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 1087               		.loc 5 57 0
 1088 03ce 8091 0000 		lds r24,ep_in_pipe_data+4
 1089 03d2 242F      		mov r18,r20
 1090 03d4 281B      		sub r18,r24
 1091               	.LBE614:
 1092               	.LBE619:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 1093               		.loc 3 127 0
 1094 03d6 81E0      		ldi r24,lo8(1)
 1095 03d8 1216      		cp __zero_reg__,r18
 1096 03da 04F0      		brlt .L43
 1097 03dc 00C0      		rjmp .L58
 1098               	.LVL54:
 1099               	.L63:
 1100               	.LBE621:
 1101               	.LBE623:
 1102               	.LBE694:
 1103               	.LBB695:
 1104               	.LBB690:
 1105               	.LBB689:
 1106               	.LBB688:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 1107               		.loc 3 177 0
 1108 03de 1FB7      		in r17,__SREG__
 1109               	.LVL55:
 1110               	.LBB680:
 1111               	.LBB681:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 1112               		.loc 4 50 0
 1113               	/* #APP */
 1114               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 1115 03e0 F894      		cli
 1116               	 ;  0 "" 2
 1117               	.LVL56:
 1118               	/* #NOAPP */
 1119               	.LBE681:
 1120               	.LBE680:
 178:usb/usb_pipe.h **** 			p->data->packet_offset = 0;
 1121               		.loc 3 178 0
 1122 03e2 1092 0000 		sts ep_in_data+2,__zero_reg__
 1123 03e6 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 1124               	.LVL57:
 1125               	.LBB682:
 1126               	.LBB683:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 1127               		.loc 5 81 0
 1128 03ea 8091 0000 		lds r24,ep_in_pipe_data+4
 1129 03ee 8F5F      		subi r24,lo8(-(1))
 1130 03f0 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 1131               		.loc 5 82 0
 1132 03f4 8091 0000 		lds r24,ep_in_pipe_data+2
 1133 03f8 9091 0000 		lds r25,ep_in_pipe_data+2+1
 1134 03fc 805C      		subi r24,lo8(-(64))
 1135 03fe 9F4F      		sbci r25,hi8(-(64))
 1136 0400 8093 0000 		sts ep_in_pipe_data+2,r24
 1137 0404 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 1138               		.loc 5 84 0
 1139 0408 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 1140 040a 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 1141 040c 9F07      		cpc r25,r31
 1142 040e 01F4      		brne .L47
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 1143               		.loc 5 85 0
 1144 0410 6092 0000 		sts ep_in_pipe_data+2,r6
 1145 0414 7092 0000 		sts ep_in_pipe_data+2+1,r7
 1146               	.L47:
 1147               	.LVL58:
 1148               	.LBE683:
 1149               	.LBE682:
 1150               	.LBB684:
 1151               	.LBB678:
 1152               	.LBB676:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 1153               		.loc 3 80 0
 1154 0418 6FB7      		in r22,__SREG__
 1155               	.LVL59:
 1156               	.LBB655:
 1157               	.LBB656:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 1158               		.loc 4 50 0
 1159               	/* #APP */
 1160               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 1161 041a F894      		cli
 1162               	 ;  0 "" 2
 1163               	.LVL60:
 1164               	/* #NOAPP */
 1165               	.LBE656:
 1166               	.LBE655:
 1167               	.LBB657:
 1168               	.LBB633:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 1169               		.loc 6 220 0
 1170 041c 8091 0000 		lds r24,endpoints+24
 1171 0420 8670      		andi r24,lo8(6)
 1172               	.LBE633:
 1173               	.LBE657:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 1174               		.loc 3 82 0
 1175 0422 01F4      		brne .L64
 1176               	.LVL61:
 1177               	.L48:
 1178               	.LBB658:
 1179               	.LBB659:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 1180               		.loc 4 70 0
 1181 0424 6FBF      		out __SREG__,r22
 1182               		.loc 4 71 0
 1183               	.LVL62:
 1184               	.LBE659:
 1185               	.LBE658:
 1186               	.LBE676:
 1187               	.LBE678:
 1188               	.LBE684:
 1189               	.LBB685:
 1190               	.LBB686:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 1191               		.loc 4 70 0
 1192 0426 1FBF      		out __SREG__,r17
 1193               		.loc 4 71 0
 1194 0428 00C0      		rjmp .L46
 1195               	.LVL63:
 1196               	.L64:
 1197               	.LBE686:
 1198               	.LBE685:
 1199               	.LBB687:
 1200               	.LBB679:
 1201               	.LBB677:
 1202               	.LBB660:
 1203               	.LBB661:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 1204               		.loc 5 51 0
 1205 042a 5091 0000 		lds r21,ep_in_pipe_data+4
 1206               	.LBE661:
 1207               	.LBE660:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 1208               		.loc 3 83 0
 1209 042e 1516      		cp __zero_reg__,r21
 1210 0430 04F0      		brlt .+2
 1211 0432 00C0      		rjmp .L49
 1212               	.LBB662:
 1213               	.LBB663:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 1214               		.loc 5 62 0
 1215 0434 2091 0000 		lds r18,ep_in_pipe_data
 1216 0438 3091 0000 		lds r19,ep_in_pipe_data+1
 1217               	.LVL64:
 1218               	.LBE663:
 1219               	.LBE662:
 1220               	.LBB664:
 1221               	.LBB653:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 1222               		.loc 3 68 0
 1223 043c 7091 0000 		lds r23,ep_in_data
 1224               	.LVL65:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 1225               		.loc 3 69 0
 1226 0440 872F      		mov r24,r23
 1227 0442 90E0      		ldi r25,lo8(0)
 1228 0444 E1E0      		ldi r30,lo8(1)
 1229 0446 8C17      		cp r24,r28
 1230 0448 9D07      		cpc r25,r29
 1231 044a 01F4      		brne .L50
 1232 044c E0E0      		ldi r30,lo8(0)
 1233               	.L50:
 1234 044e E093 0000 		sts ep_in_data,r30
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 1235               		.loc 3 72 0
 1236 0452 7723      		tst r23
 1237 0454 01F4      		brne .L51
 1238               	.LVL66:
 1239               	.LBB650:
 1240               	.LBB651:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1241               		.loc 6 168 0
 1242 0456 2093 0000 		sts endpoints+28,r18
 1243 045a 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1244               		.loc 6 169 0
 1245 045e E092 0000 		sts endpoints+26,r14
 1246 0462 F092 0000 		sts endpoints+26+1,r15
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 1247               		.loc 6 174 0
 1248 0466 FD01      		movw r30,r26
 1249               	/* #APP */
 1250               	 ;  174 "usb/usb.h" 1
 1251 0468 02E2      		ldi r16, 34
 1252 046a 0693      		.dc.w 0x9306
 1253               		
 1254               	 ;  0 "" 2
 1255               	.LVL67:
 1256               	/* #NOAPP */
 1257               	.L52:
 1258               	.LBE651:
 1259               	.LBE650:
 1260               	.LBE653:
 1261               	.LBE664:
 1262               	.LBB665:
 1263               	.LBB666:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 1264               		.loc 5 72 0
 1265 046c 5150      		subi r21,lo8(-(-1))
 1266 046e 5093 0000 		sts ep_in_pipe_data+4,r21
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 1267               		.loc 5 73 0
 1268 0472 C901      		movw r24,r18
 1269 0474 805C      		subi r24,lo8(-(64))
 1270 0476 9F4F      		sbci r25,hi8(-(64))
 1271 0478 8093 0000 		sts ep_in_pipe_data,r24
 1272 047c 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 1273               		.loc 5 75 0
 1274 0480 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 1275 0482 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 1276 0484 9F07      		cpc r25,r31
 1277 0486 01F4      		brne .L48
 1278               	.LBE666:
 1279               	.LBE665:
 1280               	.LBB667:
 1281               	.LBB636:
 1282               		.loc 5 91 0
 1283 0488 6092 0000 		sts ep_in_pipe_data,r6
 1284 048c 7092 0000 		sts ep_in_pipe_data+1,r7
 1285               	.LVL68:
 1286 0490 00C0      		rjmp .L48
 1287               	.LVL69:
 1288               	.L51:
 1289               	.LBE636:
 1290               	.LBE667:
 1291               	.LBB668:
 1292               	.LBB654:
 1293               	.LBB652:
 1294               	.LBB649:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1295               		.loc 6 168 0
 1296 0492 2093 0000 		sts endpoints+20,r18
 1297 0496 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1298               		.loc 6 169 0
 1299 049a E092 0000 		sts endpoints+18,r14
 1300 049e F092 0000 		sts endpoints+18+1,r15
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 1301               		.loc 6 176 0
 1302 04a2 FD01      		movw r30,r26
 1303               	/* #APP */
 1304               	 ;  176 "usb/usb.h" 1
 1305 04a4 04E1      		ldi r16, 20
 1306 04a6 0693      		.dc.w 0x9306
 1307               		
 1308               	 ;  0 "" 2
 1309               	/* #NOAPP */
 1310 04a8 00C0      		rjmp .L52
 1311               	.LVL70:
 1312               	.L49:
 1313               	.LBE649:
 1314               	.LBE652:
 1315               	.LBE654:
 1316               	.LBE668:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 1317               		.loc 3 87 0
 1318 04aa 8091 0000 		lds r24,ep_in_data+1
 1319 04ae 8130      		cpi r24,lo8(1)
 1320 04b0 01F0      		breq .L65
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 1321               		.loc 3 91 0
 1322 04b2 8230      		cpi r24,lo8(2)
 1323 04b4 01F0      		breq .+2
 1324 04b6 00C0      		rjmp .L48
 1325               	.LVL71:
 1326               	.LBB669:
 1327               	.LBB670:
 1328               	.LBB671:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 1329               		.loc 6 228 0
 1330 04b8 8091 0000 		lds r24,endpoints+24
 1331 04bc 8670      		andi r24,lo8(6)
 1332               	.LBE671:
 1333               	.LBE670:
 1334               	.LBE669:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 1335               		.loc 3 91 0
 1336 04be 8630      		cpi r24,lo8(6)
 1337 04c0 01F0      		breq .+2
 1338 04c2 00C0      		rjmp .L48
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 1339               		.loc 3 92 0
 1340 04c4 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 1341               		.loc 3 93 0
 1342 04c8 1092 0000 		sts ep_in_data+2,__zero_reg__
 1343 04cc 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 1344               	.LBB672:
 1345               	.LBB637:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 1346               		.loc 5 90 0
 1347 04d0 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 1348               		.loc 5 91 0
 1349 04d4 6092 0000 		sts ep_in_pipe_data+2,r6
 1350 04d8 7092 0000 		sts ep_in_pipe_data+2+1,r7
 1351 04dc 6092 0000 		sts ep_in_pipe_data,r6
 1352 04e0 7092 0000 		sts ep_in_pipe_data+1,r7
 1353               	.LVL72:
 1354 04e4 00C0      		rjmp .L48
 1355               	.LVL73:
 1356               	.L65:
 1357               	.LBE637:
 1358               	.LBE672:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 1359               		.loc 3 88 0
 1360 04e6 22E0      		ldi r18,lo8(2)
 1361 04e8 2093 0000 		sts ep_in_data+1,r18
 1362               	.LBB673:
 1363               	.LBB674:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 1364               		.loc 5 62 0
 1365 04ec E091 0000 		lds r30,ep_in_pipe_data
 1366 04f0 F091 0000 		lds r31,ep_in_pipe_data+1
 1367               	.LBE674:
 1368               	.LBE673:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 1369               		.loc 3 90 0
 1370 04f4 2091 0000 		lds r18,ep_in_data+2
 1371 04f8 3091 0000 		lds r19,ep_in_data+2+1
 1372               	.LVL74:
 1373               	.LBB675:
 1374               	.LBB644:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 1375               		.loc 3 68 0
 1376 04fc 7091 0000 		lds r23,ep_in_data
 1377               	.LVL75:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 1378               		.loc 3 69 0
 1379 0500 872F      		mov r24,r23
 1380 0502 90E0      		ldi r25,lo8(0)
 1381 0504 51E0      		ldi r21,lo8(1)
 1382 0506 8C17      		cp r24,r28
 1383 0508 9D07      		cpc r25,r29
 1384 050a 01F4      		brne .L55
 1385 050c 50E0      		ldi r21,lo8(0)
 1386               	.L55:
 1387 050e 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 1388               		.loc 3 72 0
 1389 0512 7723      		tst r23
 1390 0514 01F4      		brne .L56
 1391               	.LVL76:
 1392               	.LBB640:
 1393               	.LBB641:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1394               		.loc 6 168 0
 1395 0516 E093 0000 		sts endpoints+28,r30
 1396 051a F093 0000 		sts endpoints+28+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1397               		.loc 6 169 0
 1398 051e 2093 0000 		sts endpoints+26,r18
 1399 0522 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 1400               		.loc 6 174 0
 1401 0526 FD01      		movw r30,r26
 1402               	/* #APP */
 1403               	 ;  174 "usb/usb.h" 1
 1404 0528 02E2      		ldi r16, 34
 1405 052a 0693      		.dc.w 0x9306
 1406               		
 1407               	 ;  0 "" 2
 1408               	/* #NOAPP */
 1409 052c 00C0      		rjmp .L48
 1410               	.LVL77:
 1411               	.L56:
 1412               	.LBE641:
 1413               	.LBE640:
 1414               	.LBB642:
 1415               	.LBB643:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 1416               		.loc 6 168 0
 1417 052e E093 0000 		sts endpoints+20,r30
 1418 0532 F093 0000 		sts endpoints+20+1,r31
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 1419               		.loc 6 169 0
 1420 0536 2093 0000 		sts endpoints+18,r18
 1421 053a 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 1422               		.loc 6 176 0
 1423 053e FD01      		movw r30,r26
 1424               	/* #APP */
 1425               	 ;  176 "usb/usb.h" 1
 1426 0540 04E1      		ldi r16, 20
 1427 0542 0693      		.dc.w 0x9306
 1428               		
 1429               	 ;  0 "" 2
 1430               	/* #NOAPP */
 1431 0544 00C0      		rjmp .L48
 1432               	.LBE643:
 1433               	.LBE642:
 1434               	.LBE644:
 1435               	.LBE675:
 1436               	.LBE677:
 1437               	.LBE679:
 1438               	.LBE687:
 1439               	.LBE688:
 1440               	.LBE689:
 1441               	.LBE690:
 1442               	.LBE695:
 1443               	.LBE697:
 1444               	.LBE699:
 1445               	.LBE700:
 1446               		.cfi_endproc
 1447               	.LFE61:
 1449               	.global	turn_on_gps
 1451               	turn_on_gps:
 1452               	.LFB62:
  54:main.c        **** void turn_on_gps(void) {
 1453               		.loc 1 54 0
 1454               		.cfi_startproc
 1455               	/* prologue: function */
 1456               	/* frame size = 0 */
 1457               	/* stack size = 0 */
 1458               	.L__stack_usage = 0
 1459               	.LVL78:
 1460               	.LBB701:
 1461               	.LBB702:
 1462               		.file 7 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h"
   1:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  41:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  42:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  46:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \code
  49:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     used.
  58:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  59:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  68:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  77:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  81:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** */
  82:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  93:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  94:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
  97:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #  include <math.h>
 102:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #endif
 103:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 104:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** /**
 105:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 107:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 109:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 112:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 114:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 120:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 125:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 129:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 132:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 140:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****  */
 141:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** void
 142:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** {
 144:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 153:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 156:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 159:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#else
 160:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		//round up by default
 161:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	#endif
 163:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 
 164:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1463               		.loc 7 164 0
 1464 0546 8FEF      		 ldi r24,lo8(6399999)
 1465 0548 97EA      	    ldi r25,hi8(6399999)
 1466 054a A1E6      	    ldi r26,hlo8(6399999)
 1467 054c 8150      	    1:subi r24,1
 1468 054e 9040      	    sbci r25,0
 1469 0550 A040      	    sbci r26,0
 1470 0552 01F4      	    brne 1b
 1471 0554 00C0      		rjmp .
 1472 0556 0000      		nop
 1473               	.LBE702:
 1474               	.LBE701:
  62:main.c        ****   PORTD.DIRSET = PIN5_bm;
 1475               		.loc 1 62 0
 1476 0558 E0E6      		ldi r30,lo8(1632)
 1477 055a F6E0      		ldi r31,hi8(1632)
 1478 055c 80E2      		ldi r24,lo8(32)
 1479 055e 8183      		std Z+1,r24
  65:main.c        ****   PORTD.OUTTGL = PIN5_bm;
 1480               		.loc 1 65 0
 1481 0560 8783      		std Z+7,r24
 1482               	/* epilogue start */
  66:main.c        **** }
 1483               		.loc 1 66 0
 1484 0562 0895      		ret
 1485               		.cfi_endproc
 1486               	.LFE62:
 1488               	.global	wake_up_gps
 1490               	wake_up_gps:
 1491               	.LFB63:
  68:main.c        **** void wake_up_gps(void) {
 1492               		.loc 1 68 0
 1493               		.cfi_startproc
 1494               	/* prologue: function */
 1495               	/* frame size = 0 */
 1496               	/* stack size = 0 */
 1497               	.L__stack_usage = 0
 1498               	/* epilogue start */
  70:main.c        **** }
 1499               		.loc 1 70 0
 1500 0564 0895      		ret
 1501               		.cfi_endproc
 1502               	.LFE63:
 1504               	.global	gps_init
 1506               	gps_init:
 1507               	.LFB64:
  72:main.c        **** void gps_init(void) {
 1508               		.loc 1 72 0
 1509               		.cfi_startproc
 1510               	/* prologue: function */
 1511               	/* frame size = 0 */
 1512               	/* stack size = 0 */
 1513               	.L__stack_usage = 0
 1514               	.LVL79:
 1515               	.LBB703:
 1516               	.LBB704:
 1517               	.LBB705:
 1518               	.LBB706:
 1519               		.loc 7 164 0
 1520 0566 8FEF      		 ldi r24,lo8(6399999)
 1521 0568 97EA      	    ldi r25,hi8(6399999)
 1522 056a A1E6      	    ldi r26,hlo8(6399999)
 1523 056c 8150      	    1:subi r24,1
 1524 056e 9040      	    sbci r25,0
 1525 0570 A040      	    sbci r26,0
 1526 0572 01F4      	    brne 1b
 1527 0574 00C0      		rjmp .
 1528 0576 0000      		nop
 1529               	.LBE706:
 1530               	.LBE705:
  62:main.c        ****   PORTD.DIRSET = PIN5_bm;
 1531               		.loc 1 62 0
 1532 0578 E0E6      		ldi r30,lo8(1632)
 1533 057a F6E0      		ldi r31,hi8(1632)
 1534 057c 80E2      		ldi r24,lo8(32)
 1535 057e 8183      		std Z+1,r24
  65:main.c        ****   PORTD.OUTTGL = PIN5_bm;
 1536               		.loc 1 65 0
 1537 0580 8783      		std Z+7,r24
 1538               	.LBE704:
 1539               	.LBE703:
  87:main.c        ****   PORTD.DIRSET = PIN3_bm; 
 1540               		.loc 1 87 0
 1541 0582 88E0      		ldi r24,lo8(8)
 1542 0584 8183      		std Z+1,r24
  90:main.c        ****   PORTD.OUTSET = PIN3_bm; 
 1543               		.loc 1 90 0
 1544 0586 8583      		std Z+5,r24
 1545               	.LVL80:
  95:main.c        **** 	USARTD0_BAUDCTRLA = BSEL & 0XFF;
 1546               		.loc 1 95 0
 1547 0588 8CE0      		ldi r24,lo8(12)
 1548 058a 8093 A609 		sts 2470,r24
  96:main.c        **** 	USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
 1549               		.loc 1 96 0
 1550 058e 80E1      		ldi r24,lo8(16)
 1551 0590 8093 A709 		sts 2471,r24
 100:main.c        **** 	USARTD0.CTRLA = 0x00;
 1552               		.loc 1 100 0
 1553 0594 E0EA      		ldi r30,lo8(2464)
 1554 0596 F9E0      		ldi r31,hi8(2464)
 1555 0598 1382      		std Z+3,__zero_reg__
 103:main.c        ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 1556               		.loc 1 103 0
 1557 059a 88E1      		ldi r24,lo8(24)
 1558 059c 8483      		std Z+4,r24
 107:main.c        ****   USARTD0.CTRLC = 0x03;  
 1559               		.loc 1 107 0
 1560 059e 83E0      		ldi r24,lo8(3)
 1561 05a0 8583      		std Z+5,r24
 1562               	/* epilogue start */
 108:main.c        **** }
 1563               		.loc 1 108 0
 1564 05a2 0895      		ret
 1565               		.cfi_endproc
 1566               	.LFE64:
 1568               	.global	wake_up_gprs
 1570               	wake_up_gprs:
 1571               	.LFB65:
 110:main.c        **** void wake_up_gprs(void) {
 1572               		.loc 1 110 0
 1573               		.cfi_startproc
 1574               	/* prologue: function */
 1575               	/* frame size = 0 */
 1576               	/* stack size = 0 */
 1577               	.L__stack_usage = 0
 1578               	/* epilogue start */
 112:main.c        **** }
 1579               		.loc 1 112 0
 1580 05a4 0895      		ret
 1581               		.cfi_endproc
 1582               	.LFE65:
 1584               	.global	gprs_init
 1586               	gprs_init:
 1587               	.LFB66:
 114:main.c        **** void gprs_init(void) {
 1588               		.loc 1 114 0
 1589               		.cfi_startproc
 1590               	/* prologue: function */
 1591               	/* frame size = 0 */
 1592               	/* stack size = 0 */
 1593               	.L__stack_usage = 0
 121:main.c        ****   PORTD.DIRSET = PIN3_bm; 
 1594               		.loc 1 121 0
 1595 05a6 E0E6      		ldi r30,lo8(1632)
 1596 05a8 F6E0      		ldi r31,hi8(1632)
 1597 05aa 88E0      		ldi r24,lo8(8)
 1598 05ac 8183      		std Z+1,r24
 124:main.c        ****   PORTD.OUTSET = PIN3_bm; 
 1599               		.loc 1 124 0
 1600 05ae 8583      		std Z+5,r24
 1601               	.LVL81:
 128:main.c        ****   USARTD0_BAUDCTRLA = BSEL & 0XFF;
 1602               		.loc 1 128 0
 1603 05b0 86E0      		ldi r24,lo8(6)
 1604 05b2 8093 A609 		sts 2470,r24
 129:main.c        ****   USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
 1605               		.loc 1 129 0
 1606 05b6 1092 A709 		sts 2471,__zero_reg__
 133:main.c        ****   USARTD0.CTRLA = 0x00;
 1607               		.loc 1 133 0
 1608 05ba E0EA      		ldi r30,lo8(2464)
 1609 05bc F9E0      		ldi r31,hi8(2464)
 1610 05be 1382      		std Z+3,__zero_reg__
 136:main.c        ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 1611               		.loc 1 136 0
 1612 05c0 88E1      		ldi r24,lo8(24)
 1613 05c2 8483      		std Z+4,r24
 140:main.c        ****   USARTD0.CTRLC = 0x03;  
 1614               		.loc 1 140 0
 1615 05c4 83E0      		ldi r24,lo8(3)
 1616 05c6 8583      		std Z+5,r24
 1617               	/* epilogue start */
 141:main.c        **** }
 1618               		.loc 1 141 0
 1619 05c8 0895      		ret
 1620               		.cfi_endproc
 1621               	.LFE66:
 1623               	.global	concat
 1625               	concat:
 1626               	.LFB67:
 144:main.c        **** {
 1627               		.loc 1 144 0
 1628               		.cfi_startproc
 1629               	.LVL82:
 1630 05ca EF92      		push r14
 1631               	.LCFI43:
 1632               		.cfi_def_cfa_offset 3
 1633               		.cfi_offset 14, -2
 1634 05cc FF92      		push r15
 1635               	.LCFI44:
 1636               		.cfi_def_cfa_offset 4
 1637               		.cfi_offset 15, -3
 1638 05ce 0F93      		push r16
 1639               	.LCFI45:
 1640               		.cfi_def_cfa_offset 5
 1641               		.cfi_offset 16, -4
 1642 05d0 1F93      		push r17
 1643               	.LCFI46:
 1644               		.cfi_def_cfa_offset 6
 1645               		.cfi_offset 17, -5
 1646 05d2 CF93      		push r28
 1647               	.LCFI47:
 1648               		.cfi_def_cfa_offset 7
 1649               		.cfi_offset 28, -6
 1650 05d4 DF93      		push r29
 1651               	.LCFI48:
 1652               		.cfi_def_cfa_offset 8
 1653               		.cfi_offset 29, -7
 1654               	/* prologue: function */
 1655               	/* frame size = 0 */
 1656               	/* stack size = 6 */
 1657               	.L__stack_usage = 6
 1658 05d6 F82E      		mov r15,r24
 1659 05d8 E92E      		mov r14,r25
 1660 05da 162F      		mov r17,r22
 1661 05dc 072F      		mov r16,r23
 146:main.c        ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 1662               		.loc 1 146 0
 1663 05de A82F      		mov r26,r24
 1664 05e0 B92F      		mov r27,r25
 1665 05e2 ED01      		movw r28,r26
 1666 05e4 0990      		ld __tmp_reg__,Y+
 1667 05e6 0020      		tst __tmp_reg__
 1668 05e8 01F4      		brne .-6
 1669 05ea 9E01      		movw r18,r28
 1670 05ec E62F      		mov r30,r22
 1671 05ee F72F      		mov r31,r23
 1672 05f0 EF01      		movw r28,r30
 1673 05f2 0990      		ld __tmp_reg__,Y+
 1674 05f4 0020      		tst __tmp_reg__
 1675 05f6 01F4      		brne .-6
 1676 05f8 CE01      		movw r24,r28
 1677               	.LVL83:
 1678 05fa 0197      		sbiw r24,1
 1679 05fc 8E1B      		sub r24,r30
 1680 05fe 9F0B      		sbc r25,r31
 1681 0600 8A1B      		sub r24,r26
 1682 0602 9B0B      		sbc r25,r27
 1683 0604 820F      		add r24,r18
 1684 0606 931F      		adc r25,r19
 1685 0608 0E94 0000 		call malloc
 1686               	.LVL84:
 1687 060c D82F      		mov r29,r24
 1688 060e C92F      		mov r28,r25
 1689               	.LVL85:
 148:main.c        ****     strcpy(result, s1);
 1690               		.loc 1 148 0
 1691 0610 6F2D      		mov r22,r15
 1692 0612 7E2D      		mov r23,r14
 1693 0614 0E94 0000 		call strcpy
 1694               	.LVL86:
 149:main.c        ****     strcat(result, s2);
 1695               		.loc 1 149 0
 1696 0618 8D2F      		mov r24,r29
 1697 061a 9C2F      		mov r25,r28
 1698 061c 612F      		mov r22,r17
 1699 061e 702F      		mov r23,r16
 1700 0620 0E94 0000 		call strcat
 151:main.c        **** }
 1701               		.loc 1 151 0
 1702 0624 8D2F      		mov r24,r29
 1703 0626 9C2F      		mov r25,r28
 1704               	/* epilogue start */
 1705 0628 DF91      		pop r29
 1706               	.LVL87:
 1707 062a CF91      		pop r28
 1708               	.LVL88:
 1709 062c 1F91      		pop r17
 1710 062e 0F91      		pop r16
 1711 0630 FF90      		pop r15
 1712 0632 EF90      		pop r14
 1713 0634 0895      		ret
 1714               		.cfi_endproc
 1715               	.LFE67:
 1717               		.data
 1718               	.LC0:
 1719 0000 2C00      		.string	","
 1720               		.text
 1721               	.global	parse_nmea_string
 1723               	parse_nmea_string:
 1724               	.LFB68:
 154:main.c        **** {
 1725               		.loc 1 154 0
 1726               		.cfi_startproc
 1727               	.LVL89:
 1728 0636 EF92      		push r14
 1729               	.LCFI49:
 1730               		.cfi_def_cfa_offset 3
 1731               		.cfi_offset 14, -2
 1732 0638 FF92      		push r15
 1733               	.LCFI50:
 1734               		.cfi_def_cfa_offset 4
 1735               		.cfi_offset 15, -3
 1736 063a 0F93      		push r16
 1737               	.LCFI51:
 1738               		.cfi_def_cfa_offset 5
 1739               		.cfi_offset 16, -4
 1740 063c 1F93      		push r17
 1741               	.LCFI52:
 1742               		.cfi_def_cfa_offset 6
 1743               		.cfi_offset 17, -5
 1744 063e CF93      		push r28
 1745               	.LCFI53:
 1746               		.cfi_def_cfa_offset 7
 1747               		.cfi_offset 28, -6
 1748 0640 DF93      		push r29
 1749               	.LCFI54:
 1750               		.cfi_def_cfa_offset 8
 1751               		.cfi_offset 29, -7
 1752 0642 CDB7      		in r28,__SP_L__
 1753 0644 DEB7      		in r29,__SP_H__
 1754 0646 A897      		sbiw r28,40
 1755               	.LCFI55:
 1756               		.cfi_def_cfa 28, 48
 1757 0648 CDBF      		out __SP_L__,r28
 1758 064a DEBF      		out __SP_H__,r29
 1759               	/* prologue: function */
 1760               	/* frame size = 40 */
 1761               	/* stack size = 46 */
 1762               	.L__stack_usage = 46
 1763 064c 7B01      		movw r14,r22
 1764               	.LVL90:
 158:main.c        ****   token[0] = strtok(s, ","); //get pointer to first token found and store in
 1765               		.loc 1 158 0
 1766 064e 60E0      		ldi r22,lo8(.LC0)
 1767 0650 70E0      		ldi r23,hi8(.LC0)
 1768               	.LVL91:
 1769 0652 0E94 0000 		call strtok
 1770               	.LVL92:
 160:main.c        ****   while(token[i] != NULL) {  //while commas continue to be found
 1771               		.loc 1 160 0
 1772 0656 0097      		sbiw r24,0
 1773 0658 01F0      		breq .L73
 1774 065a 8E01      		movw r16,r28
 1775 065c 0D5F      		subi r16,lo8(-(3))
 1776 065e 1F4F      		sbci r17,hi8(-(3))
 1777               	.LVL93:
 1778               	.L74:
 162:main.c        ****       token[i] = strtok(NULL, ","); //continue to split the string
 1779               		.loc 1 162 0
 1780 0660 80E0      		ldi r24,lo8(0)
 1781 0662 90E0      		ldi r25,hi8(0)
 1782 0664 60E0      		ldi r22,lo8(.LC0)
 1783 0666 70E0      		ldi r23,hi8(.LC0)
 1784 0668 0E94 0000 		call strtok
 1785 066c F801      		movw r30,r16
 1786 066e 8193      		st Z+,r24
 1787 0670 9193      		st Z+,r25
 1788 0672 8F01      		movw r16,r30
 160:main.c        ****   while(token[i] != NULL) {  //while commas continue to be found
 1789               		.loc 1 160 0
 1790 0674 0097      		sbiw r24,0
 1791 0676 01F4      		brne .L74
 1792               	.L73:
 1793               	.LVL94:
 180:main.c        ****   char* lng_str = token[5]; //latitude
 1794               		.loc 1 180 0
 1795 0678 0B85      		ldd r16,Y+11
 1796 067a 1C85      		ldd r17,Y+12
 1797               	.LVL95:
 183:main.c        ****   gps->lat = atof(lat_str)/100.;
 1798               		.loc 1 183 0
 1799 067c 8F81      		ldd r24,Y+7
 1800 067e 9885      		ldd r25,Y+8
 1801 0680 0E94 0000 		call atof
 1802               	.LVL96:
 1803 0684 20E0      		ldi r18,lo8(0x42c80000)
 1804 0686 30E0      		ldi r19,hi8(0x42c80000)
 1805 0688 48EC      		ldi r20,hlo8(0x42c80000)
 1806 068a 52E4      		ldi r21,hhi8(0x42c80000)
 1807 068c 0E94 0000 		call __divsf3
 1808 0690 DC01      		movw r26,r24
 1809 0692 CB01      		movw r24,r22
 1810 0694 F701      		movw r30,r14
 1811 0696 8083      		st Z,r24
 1812 0698 9183      		std Z+1,r25
 1813 069a A283      		std Z+2,r26
 1814 069c B383      		std Z+3,r27
 186:main.c        ****   gps->lng = atof(lng_str)/100.;
 1815               		.loc 1 186 0
 1816 069e C801      		movw r24,r16
 1817 06a0 0E94 0000 		call atof
 1818 06a4 20E0      		ldi r18,lo8(0x42c80000)
 1819 06a6 30E0      		ldi r19,hi8(0x42c80000)
 1820 06a8 48EC      		ldi r20,hlo8(0x42c80000)
 1821 06aa 52E4      		ldi r21,hhi8(0x42c80000)
 1822 06ac 0E94 0000 		call __divsf3
 1823 06b0 DC01      		movw r26,r24
 1824 06b2 CB01      		movw r24,r22
 1825 06b4 F701      		movw r30,r14
 1826 06b6 8483      		std Z+4,r24
 1827 06b8 9583      		std Z+5,r25
 1828 06ba A683      		std Z+6,r26
 1829 06bc B783      		std Z+7,r27
 1830               	/* epilogue start */
 187:main.c        **** }
 1831               		.loc 1 187 0
 1832 06be A896      		adiw r28,40
 1833 06c0 CDBF      		out __SP_L__,r28
 1834 06c2 DEBF      		out __SP_H__,r29
 1835 06c4 DF91      		pop r29
 1836 06c6 CF91      		pop r28
 1837 06c8 1F91      		pop r17
 1838 06ca 0F91      		pop r16
 1839               	.LVL97:
 1840 06cc FF90      		pop r15
 1841 06ce EF90      		pop r14
 1842               	.LVL98:
 1843 06d0 0895      		ret
 1844               		.cfi_endproc
 1845               	.LFE68:
 1847               	.global	distance
 1849               	distance:
 1850               	.LFB69:
 192:main.c        **** double distance(double gpslat, double gpslng) {
 1851               		.loc 1 192 0
 1852               		.cfi_startproc
 1853               	.LVL99:
 1854 06d2 2F92      		push r2
 1855               	.LCFI56:
 1856               		.cfi_def_cfa_offset 3
 1857               		.cfi_offset 2, -2
 1858 06d4 3F92      		push r3
 1859               	.LCFI57:
 1860               		.cfi_def_cfa_offset 4
 1861               		.cfi_offset 3, -3
 1862 06d6 4F92      		push r4
 1863               	.LCFI58:
 1864               		.cfi_def_cfa_offset 5
 1865               		.cfi_offset 4, -4
 1866 06d8 5F92      		push r5
 1867               	.LCFI59:
 1868               		.cfi_def_cfa_offset 6
 1869               		.cfi_offset 5, -5
 1870 06da 6F92      		push r6
 1871               	.LCFI60:
 1872               		.cfi_def_cfa_offset 7
 1873               		.cfi_offset 6, -6
 1874 06dc 7F92      		push r7
 1875               	.LCFI61:
 1876               		.cfi_def_cfa_offset 8
 1877               		.cfi_offset 7, -7
 1878 06de 8F92      		push r8
 1879               	.LCFI62:
 1880               		.cfi_def_cfa_offset 9
 1881               		.cfi_offset 8, -8
 1882 06e0 9F92      		push r9
 1883               	.LCFI63:
 1884               		.cfi_def_cfa_offset 10
 1885               		.cfi_offset 9, -9
 1886 06e2 AF92      		push r10
 1887               	.LCFI64:
 1888               		.cfi_def_cfa_offset 11
 1889               		.cfi_offset 10, -10
 1890 06e4 BF92      		push r11
 1891               	.LCFI65:
 1892               		.cfi_def_cfa_offset 12
 1893               		.cfi_offset 11, -11
 1894 06e6 CF92      		push r12
 1895               	.LCFI66:
 1896               		.cfi_def_cfa_offset 13
 1897               		.cfi_offset 12, -12
 1898 06e8 DF92      		push r13
 1899               	.LCFI67:
 1900               		.cfi_def_cfa_offset 14
 1901               		.cfi_offset 13, -13
 1902 06ea EF92      		push r14
 1903               	.LCFI68:
 1904               		.cfi_def_cfa_offset 15
 1905               		.cfi_offset 14, -14
 1906 06ec FF92      		push r15
 1907               	.LCFI69:
 1908               		.cfi_def_cfa_offset 16
 1909               		.cfi_offset 15, -15
 1910 06ee 0F93      		push r16
 1911               	.LCFI70:
 1912               		.cfi_def_cfa_offset 17
 1913               		.cfi_offset 16, -16
 1914 06f0 1F93      		push r17
 1915               	.LCFI71:
 1916               		.cfi_def_cfa_offset 18
 1917               		.cfi_offset 17, -17
 1918 06f2 CF93      		push r28
 1919               	.LCFI72:
 1920               		.cfi_def_cfa_offset 19
 1921               		.cfi_offset 28, -18
 1922 06f4 DF93      		push r29
 1923               	.LCFI73:
 1924               		.cfi_def_cfa_offset 20
 1925               		.cfi_offset 29, -19
 1926 06f6 CDB7      		in r28,__SP_L__
 1927 06f8 DEB7      		in r29,__SP_H__
 1928 06fa 2697      		sbiw r28,6
 1929               	.LCFI74:
 1930               		.cfi_def_cfa 28, 26
 1931 06fc CDBF      		out __SP_L__,r28
 1932 06fe DEBF      		out __SP_H__,r29
 1933               	/* prologue: function */
 1934               	/* frame size = 6 */
 1935               	/* stack size = 24 */
 1936               	.L__stack_usage = 24
 1937 0700 4B01      		movw r8,r22
 1938 0702 5C01      		movw r10,r24
 1939 0704 2983      		std Y+1,r18
 1940 0706 3A83      		std Y+2,r19
 1941 0708 4B83      		std Y+3,r20
 1942 070a 5C83      		std Y+4,r21
 1943               	.LVL100:
 194:main.c        ****     double dlat = (gpslat - lat) * d2r;
 1944               		.loc 1 194 0
 1945 070c C090 0000 		lds r12,lat
 1946 0710 D090 0000 		lds r13,lat+1
 1947 0714 E090 0000 		lds r14,lat+2
 1948 0718 F090 0000 		lds r15,lat+3
 1949               	.LVL101:
 1950 071c A701      		movw r20,r14
 1951 071e 9601      		movw r18,r12
 1952               	.LVL102:
 1953 0720 0E94 0000 		call __subsf3
 1954               	.LVL103:
 1955 0724 25E3      		ldi r18,lo8(0x3c8efa35)
 1956 0726 3AEF      		ldi r19,hi8(0x3c8efa35)
 1957 0728 4EE8      		ldi r20,hlo8(0x3c8efa35)
 1958 072a 5CE3      		ldi r21,hhi8(0x3c8efa35)
 1959 072c 0E94 0000 		call __mulsf3
 195:main.c        ****     double a = pow(sin(dlat/2.0), 2) + cos(lat*d2r) * cos(gpslat*d2r) * pow(sin(dlong/2.0), 2);
 1960               		.loc 1 195 0
 1961 0730 20E0      		ldi r18,lo8(0x3f000000)
 1962 0732 30E0      		ldi r19,hi8(0x3f000000)
 1963 0734 40E0      		ldi r20,hlo8(0x3f000000)
 1964 0736 5FE3      		ldi r21,hhi8(0x3f000000)
 1965 0738 0E94 0000 		call __mulsf3
 1966 073c 0E94 0000 		call sin
 1967 0740 9B01      		movw r18,r22
 1968 0742 AC01      		movw r20,r24
 1969 0744 0E94 0000 		call __mulsf3
 1970 0748 362E      		mov r3,r22
 1971 074a 272E      		mov r2,r23
 1972 074c 8D83      		std Y+5,r24
 1973 074e 9E83      		std Y+6,r25
 1974 0750 C701      		movw r24,r14
 1975 0752 B601      		movw r22,r12
 1976 0754 25E3      		ldi r18,lo8(0x3c8efa35)
 1977 0756 3AEF      		ldi r19,hi8(0x3c8efa35)
 1978 0758 4EE8      		ldi r20,hlo8(0x3c8efa35)
 1979 075a 5CE3      		ldi r21,hhi8(0x3c8efa35)
 1980 075c 0E94 0000 		call __mulsf3
 1981 0760 0E94 0000 		call cos
 1982 0764 7B01      		movw r14,r22
 1983 0766 8C01      		movw r16,r24
 1984 0768 C501      		movw r24,r10
 1985 076a B401      		movw r22,r8
 1986 076c 25E3      		ldi r18,lo8(0x3c8efa35)
 1987 076e 3AEF      		ldi r19,hi8(0x3c8efa35)
 1988 0770 4EE8      		ldi r20,hlo8(0x3c8efa35)
 1989 0772 5CE3      		ldi r21,hhi8(0x3c8efa35)
 1990 0774 0E94 0000 		call __mulsf3
 1991 0778 0E94 0000 		call cos
 1992 077c 2B01      		movw r4,r22
 1993 077e 3C01      		movw r6,r24
 193:main.c        ****     double dlong = (gpslng - lng) * d2r;
 1994               		.loc 1 193 0
 1995 0780 6981      		ldd r22,Y+1
 1996 0782 7A81      		ldd r23,Y+2
 1997 0784 8B81      		ldd r24,Y+3
 1998 0786 9C81      		ldd r25,Y+4
 1999 0788 2091 0000 		lds r18,lng
 2000 078c 3091 0000 		lds r19,lng+1
 2001 0790 4091 0000 		lds r20,lng+2
 2002 0794 5091 0000 		lds r21,lng+3
 2003               	.LVL104:
 2004 0798 0E94 0000 		call __subsf3
 2005               	.LVL105:
 2006 079c 25E3      		ldi r18,lo8(0x3c8efa35)
 2007 079e 3AEF      		ldi r19,hi8(0x3c8efa35)
 2008 07a0 4EE8      		ldi r20,hlo8(0x3c8efa35)
 2009 07a2 5CE3      		ldi r21,hhi8(0x3c8efa35)
 2010 07a4 0E94 0000 		call __mulsf3
 195:main.c        ****     double a = pow(sin(dlat/2.0), 2) + cos(lat*d2r) * cos(gpslat*d2r) * pow(sin(dlong/2.0), 2);
 2011               		.loc 1 195 0
 2012 07a8 20E0      		ldi r18,lo8(0x3f000000)
 2013 07aa 30E0      		ldi r19,hi8(0x3f000000)
 2014 07ac 40E0      		ldi r20,hlo8(0x3f000000)
 2015 07ae 5FE3      		ldi r21,hhi8(0x3f000000)
 2016 07b0 0E94 0000 		call __mulsf3
 2017 07b4 0E94 0000 		call sin
 2018 07b8 9B01      		movw r18,r22
 2019 07ba AC01      		movw r20,r24
 2020 07bc 0E94 0000 		call __mulsf3
 2021 07c0 B62E      		mov r11,r22
 2022 07c2 D72E      		mov r13,r23
 2023 07c4 882E      		mov r8,r24
 2024               	.LVL106:
 2025 07c6 C92E      		mov r12,r25
 2026 07c8 C801      		movw r24,r16
 2027 07ca B701      		movw r22,r14
 2028 07cc A301      		movw r20,r6
 2029 07ce 9201      		movw r18,r4
 2030 07d0 0E94 0000 		call __mulsf3
 2031 07d4 0B2D      		mov r16,r11
 2032 07d6 1D2D      		mov r17,r13
 2033 07d8 282D      		mov r18,r8
 2034 07da 3C2D      		mov r19,r12
 2035 07dc A901      		movw r20,r18
 2036 07de 9801      		movw r18,r16
 2037 07e0 0E94 0000 		call __mulsf3
 2038 07e4 9B01      		movw r18,r22
 2039 07e6 AC01      		movw r20,r24
 2040 07e8 F101      		movw r30,r2
 2041 07ea 7D81      		ldd r23,Y+5
 2042 07ec 6E81      		ldd r22,Y+6
 2043 07ee 8F2F      		mov r24,r31
 2044 07f0 9E2F      		mov r25,r30
 2045 07f2 A72F      		mov r26,r23
 2046 07f4 B62F      		mov r27,r22
 2047 07f6 BC01      		movw r22,r24
 2048 07f8 CD01      		movw r24,r26
 2049 07fa 0E94 0000 		call __addsf3
 2050 07fe 862E      		mov r8,r22
 2051 0800 072F      		mov r16,r23
 2052 0802 382E      		mov r3,r24
 2053 0804 492E      		mov r4,r25
 2054               	.LVL107:
 196:main.c        ****     double c = 2 * atan2(sqrt(a), sqrt(1-a));
 2055               		.loc 1 196 0
 2056 0806 982F      		mov r25,r24
 2057               	.LVL108:
 2058 0808 482D      		mov r20,r8
 2059 080a 502F      		mov r21,r16
 2060 080c 692F      		mov r22,r25
 2061               	.LVL109:
 2062 080e 742D      		mov r23,r4
 2063               	.LVL110:
 2064 0810 CB01      		movw r24,r22
 2065 0812 BA01      		movw r22,r20
 2066 0814 0E94 0000 		call sqrt
 2067               	.LVL111:
 2068 0818 6B01      		movw r12,r22
 2069 081a 7C01      		movw r14,r24
 2070 081c 60E0      		ldi r22,lo8(0x3f800000)
 2071 081e 70E0      		ldi r23,hi8(0x3f800000)
 2072 0820 80E8      		ldi r24,hlo8(0x3f800000)
 2073 0822 9FE3      		ldi r25,hhi8(0x3f800000)
 2074 0824 E02F      		mov r30,r16
 2075 0826 082D      		mov r16,r8
 2076               	.LVL112:
 2077 0828 1E2F      		mov r17,r30
 2078 082a 232D      		mov r18,r3
 2079 082c 342D      		mov r19,r4
 2080 082e A901      		movw r20,r18
 2081 0830 9801      		movw r18,r16
 2082 0832 0E94 0000 		call __subsf3
 2083               	.LVL113:
 2084 0836 0E94 0000 		call sqrt
 2085 083a 9B01      		movw r18,r22
 2086 083c AC01      		movw r20,r24
 2087 083e C701      		movw r24,r14
 2088 0840 B601      		movw r22,r12
 2089 0842 0E94 0000 		call atan2
 2090 0846 9B01      		movw r18,r22
 2091 0848 AC01      		movw r20,r24
 2092               	.LVL114:
 2093 084a 0E94 0000 		call __addsf3
 2094               	.LVL115:
 197:main.c        ****     double d = 6367 * c;
 2095               		.loc 1 197 0
 2096 084e 20E0      		ldi r18,lo8(0x45c6f800)
 2097 0850 38EF      		ldi r19,hi8(0x45c6f800)
 2098 0852 46EC      		ldi r20,hlo8(0x45c6f800)
 2099 0854 55E4      		ldi r21,hhi8(0x45c6f800)
 2100 0856 0E94 0000 		call __mulsf3
 200:main.c        **** }
 2101               		.loc 1 200 0
 2102 085a 462F      		mov r20,r22
 2103 085c 572F      		mov r21,r23
 2104 085e 682F      		mov r22,r24
 2105 0860 792F      		mov r23,r25
 2106 0862 CB01      		movw r24,r22
 2107 0864 BA01      		movw r22,r20
 2108               	/* epilogue start */
 2109 0866 2696      		adiw r28,6
 2110 0868 CDBF      		out __SP_L__,r28
 2111 086a DEBF      		out __SP_H__,r29
 2112 086c DF91      		pop r29
 2113 086e CF91      		pop r28
 2114 0870 1F91      		pop r17
 2115               	.LVL116:
 2116 0872 0F91      		pop r16
 2117 0874 FF90      		pop r15
 2118 0876 EF90      		pop r14
 2119 0878 DF90      		pop r13
 2120 087a CF90      		pop r12
 2121 087c BF90      		pop r11
 2122 087e AF90      		pop r10
 2123 0880 9F90      		pop r9
 2124 0882 8F90      		pop r8
 2125 0884 7F90      		pop r7
 2126 0886 6F90      		pop r6
 2127 0888 5F90      		pop r5
 2128 088a 4F90      		pop r4
 2129 088c 3F90      		pop r3
 2130 088e 2F90      		pop r2
 2131 0890 0895      		ret
 2132               		.cfi_endproc
 2133               	.LFE69:
 2135               		.data
 2136               	.LC1:
 2137 0002 2447 5052 		.string	"$GPRMC,71.132,A,4230.00,N,-7130.00,E,11.2,0.0,261206,0.0,E*50\r\n"
 2137      4D43 2C37 
 2137      312E 3133 
 2137      322C 412C 
 2137      3432 3330 
 2138               	.LC2:
 2139 0042 2566 00   		.string	"%f"
 2140               		.text
 2141               	.global	parse_nmea
 2143               	parse_nmea:
 2144               	.LFB70:
 204:main.c        **** char* parse_nmea(void) {
 2145               		.loc 1 204 0
 2146               		.cfi_startproc
 2147 0892 2F92      		push r2
 2148               	.LCFI75:
 2149               		.cfi_def_cfa_offset 3
 2150               		.cfi_offset 2, -2
 2151 0894 3F92      		push r3
 2152               	.LCFI76:
 2153               		.cfi_def_cfa_offset 4
 2154               		.cfi_offset 3, -3
 2155 0896 4F92      		push r4
 2156               	.LCFI77:
 2157               		.cfi_def_cfa_offset 5
 2158               		.cfi_offset 4, -4
 2159 0898 5F92      		push r5
 2160               	.LCFI78:
 2161               		.cfi_def_cfa_offset 6
 2162               		.cfi_offset 5, -5
 2163 089a 6F92      		push r6
 2164               	.LCFI79:
 2165               		.cfi_def_cfa_offset 7
 2166               		.cfi_offset 6, -6
 2167 089c 7F92      		push r7
 2168               	.LCFI80:
 2169               		.cfi_def_cfa_offset 8
 2170               		.cfi_offset 7, -7
 2171 089e 8F92      		push r8
 2172               	.LCFI81:
 2173               		.cfi_def_cfa_offset 9
 2174               		.cfi_offset 8, -8
 2175 08a0 9F92      		push r9
 2176               	.LCFI82:
 2177               		.cfi_def_cfa_offset 10
 2178               		.cfi_offset 9, -9
 2179 08a2 AF92      		push r10
 2180               	.LCFI83:
 2181               		.cfi_def_cfa_offset 11
 2182               		.cfi_offset 10, -10
 2183 08a4 BF92      		push r11
 2184               	.LCFI84:
 2185               		.cfi_def_cfa_offset 12
 2186               		.cfi_offset 11, -11
 2187 08a6 CF92      		push r12
 2188               	.LCFI85:
 2189               		.cfi_def_cfa_offset 13
 2190               		.cfi_offset 12, -12
 2191 08a8 DF92      		push r13
 2192               	.LCFI86:
 2193               		.cfi_def_cfa_offset 14
 2194               		.cfi_offset 13, -13
 2195 08aa EF92      		push r14
 2196               	.LCFI87:
 2197               		.cfi_def_cfa_offset 15
 2198               		.cfi_offset 14, -14
 2199 08ac FF92      		push r15
 2200               	.LCFI88:
 2201               		.cfi_def_cfa_offset 16
 2202               		.cfi_offset 15, -15
 2203 08ae 0F93      		push r16
 2204               	.LCFI89:
 2205               		.cfi_def_cfa_offset 17
 2206               		.cfi_offset 16, -16
 2207 08b0 1F93      		push r17
 2208               	.LCFI90:
 2209               		.cfi_def_cfa_offset 18
 2210               		.cfi_offset 17, -17
 2211 08b2 CF93      		push r28
 2212               	.LCFI91:
 2213               		.cfi_def_cfa_offset 19
 2214               		.cfi_offset 28, -18
 2215 08b4 DF93      		push r29
 2216               	.LCFI92:
 2217               		.cfi_def_cfa_offset 20
 2218               		.cfi_offset 29, -19
 2219 08b6 CDB7      		in r28,__SP_L__
 2220 08b8 DEB7      		in r29,__SP_H__
 2221 08ba C653      		subi r28,lo8(-(-310))
 2222 08bc D140      		sbci r29,hi8(-(-310))
 2223               	.LCFI93:
 2224               		.cfi_def_cfa 28, 330
 2225 08be CDBF      		out __SP_L__,r28
 2226 08c0 DEBF      		out __SP_H__,r29
 2227               	/* prologue: function */
 2228               	/* frame size = 310 */
 2229               	/* stack size = 328 */
 2230               	.L__stack_usage = 328
 2231               	.LVL117:
 2232               	.LBB1206:
 2233               	.LBB1207:
 158:main.c        ****   token[0] = strtok(s, ","); //get pointer to first token found and store in
 2234               		.loc 1 158 0
 2235 08c2 80E0      		ldi r24,lo8(.LC1)
 2236 08c4 90E0      		ldi r25,hi8(.LC1)
 2237 08c6 60E0      		ldi r22,lo8(.LC0)
 2238 08c8 70E0      		ldi r23,hi8(.LC0)
 2239 08ca 0E94 0000 		call strtok
 160:main.c        ****   while(token[i] != NULL) {  //while commas continue to be found
 2240               		.loc 1 160 0
 2241 08ce 0097      		sbiw r24,0
 2242 08d0 01F0      		breq .L78
 2243 08d2 8E01      		movw r16,r28
 2244 08d4 0D5F      		subi r16,lo8(-(3))
 2245 08d6 1F4F      		sbci r17,hi8(-(3))
 2246               	.LVL118:
 2247               	.L79:
 162:main.c        ****       token[i] = strtok(NULL, ","); //continue to split the string
 2248               		.loc 1 162 0
 2249 08d8 80E0      		ldi r24,lo8(0)
 2250 08da 90E0      		ldi r25,hi8(0)
 2251 08dc 60E0      		ldi r22,lo8(.LC0)
 2252 08de 70E0      		ldi r23,hi8(.LC0)
 2253 08e0 0E94 0000 		call strtok
 2254 08e4 D801      		movw r26,r16
 2255 08e6 8D93      		st X+,r24
 2256 08e8 9D93      		st X+,r25
 2257 08ea 8D01      		movw r16,r26
 160:main.c        ****   while(token[i] != NULL) {  //while commas continue to be found
 2258               		.loc 1 160 0
 2259 08ec 0097      		sbiw r24,0
 2260 08ee 01F4      		brne .L79
 2261               	.L78:
 2262               	.LVL119:
 180:main.c        ****   char* lng_str = token[5]; //latitude
 2263               		.loc 1 180 0
 2264 08f0 0B85      		ldd r16,Y+11
 2265 08f2 1C85      		ldd r17,Y+12
 2266               	.LVL120:
 183:main.c        ****   gps->lat = atof(lat_str)/100.;
 2267               		.loc 1 183 0
 2268 08f4 8F81      		ldd r24,Y+7
 2269 08f6 9885      		ldd r25,Y+8
 2270 08f8 0E94 0000 		call atof
 2271               	.LVL121:
 2272 08fc 20E0      		ldi r18,lo8(0x42c80000)
 2273 08fe 30E0      		ldi r19,hi8(0x42c80000)
 2274 0900 48EC      		ldi r20,hlo8(0x42c80000)
 2275 0902 52E4      		ldi r21,hhi8(0x42c80000)
 2276 0904 0E94 0000 		call __divsf3
 2277 0908 A62E      		mov r10,r22
 2278 090a 872E      		mov r8,r23
 2279 090c 482E      		mov r4,r24
 2280 090e 292E      		mov r2,r25
 186:main.c        ****   gps->lng = atof(lng_str)/100.;
 2281               		.loc 1 186 0
 2282 0910 C801      		movw r24,r16
 2283 0912 0E94 0000 		call atof
 2284 0916 20E0      		ldi r18,lo8(0x42c80000)
 2285 0918 30E0      		ldi r19,hi8(0x42c80000)
 2286 091a 48EC      		ldi r20,hlo8(0x42c80000)
 2287 091c 52E4      		ldi r21,hhi8(0x42c80000)
 2288 091e 0E94 0000 		call __divsf3
 2289 0922 B62E      		mov r11,r22
 2290 0924 972E      		mov r9,r23
 2291 0926 382E      		mov r3,r24
 2292 0928 C15D      		subi r28,lo8(-303)
 2293 092a DE4F      		sbci r29,hi8(-303)
 2294 092c 9883      		st Y,r25
 2295 092e CF52      		subi r28,lo8(303)
 2296 0930 D140      		sbci r29,hi8(303)
 2297               	.LBE1207:
 2298               	.LBE1206:
 215:main.c        ****     double dist = distance(gps.lat, gps.lng);
 2299               		.loc 1 215 0
 2300 0932 8A2D      		mov r24,r10
 2301 0934 982D      		mov r25,r8
 2302 0936 A42D      		mov r26,r4
 2303 0938 B22D      		mov r27,r2
 2304 093a BC01      		movw r22,r24
 2305 093c CD01      		movw r24,r26
 2306 093e C15D      		subi r28,lo8(-303)
 2307 0940 DE4F      		sbci r29,hi8(-303)
 2308 0942 4881      		ld r20,Y
 2309 0944 CF52      		subi r28,lo8(303)
 2310 0946 D140      		sbci r29,hi8(303)
 2311 0948 0B2D      		mov r16,r11
 2312               	.LVL122:
 2313 094a 192D      		mov r17,r9
 2314 094c 232D      		mov r18,r3
 2315 094e 342F      		mov r19,r20
 2316 0950 A901      		movw r20,r18
 2317 0952 9801      		movw r18,r16
 2318 0954 0E94 0000 		call distance
 2319 0958 6B01      		movw r12,r22
 2320 095a 7C01      		movw r14,r24
 2321               	.LVL123:
 217:main.c        ****     char** result = malloc(30 * sizeof(char*));
 2322               		.loc 1 217 0
 2323 095c 8CE3      		ldi r24,lo8(60)
 2324 095e 90E0      		ldi r25,hi8(60)
 2325 0960 0E94 0000 		call malloc
 2326               	.LVL124:
 2327 0964 CD5C      		subi r28,lo8(-307)
 2328 0966 DE4F      		sbci r29,hi8(-307)
 2329 0968 8883      		st Y,r24
 2330 096a C353      		subi r28,lo8(307)
 2331 096c D140      		sbci r29,hi8(307)
 2332 096e CC5C      		subi r28,lo8(-308)
 2333 0970 DE4F      		sbci r29,hi8(-308)
 2334 0972 9883      		st Y,r25
 2335 0974 C453      		subi r28,lo8(308)
 2336 0976 D140      		sbci r29,hi8(308)
 2337               	.LVL125:
 219:main.c        ****     if (dist > max_dist) {
 2338               		.loc 1 219 0
 2339 0978 C701      		movw r24,r14
 2340 097a B601      		movw r22,r12
 2341 097c 2091 0000 		lds r18,max_dist
 2342 0980 3091 0000 		lds r19,max_dist+1
 2343 0984 4091 0000 		lds r20,max_dist+2
 2344 0988 5091 0000 		lds r21,max_dist+3
 2345 098c 0E94 0000 		call __gtsf2
 2346 0990 1816      		cp __zero_reg__,r24
 2347 0992 04F4      		brge .+2
 2348 0994 00C0      		rjmp .L195
 2349               	.LVL126:
 2350               	.L80:
 2351               	.LBB1208:
 2352               	.LBB1209:
 2353               	.LBB1210:
 2354               	.LBB1211:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 2355               		.loc 3 110 0
 2356 0996 81E0      		ldi r24,lo8(1)
 2357 0998 8093 0000 		sts ep_in_data+1,r24
 2358               	.LVL127:
 2359               	.LBB1212:
 2360               	.LBB1213:
 2361               	.LBB1214:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 2362               		.loc 3 80 0
 2363 099c 5FB7      		in r21,__SREG__
 2364               	.LVL128:
 2365               	.LBB1215:
 2366               	.LBB1216:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 2367               		.loc 4 50 0
 2368               	/* #APP */
 2369               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 2370 099e F894      		cli
 2371               	 ;  0 "" 2
 2372               	.LVL129:
 2373               	/* #NOAPP */
 2374               	.LBE1216:
 2375               	.LBE1215:
 2376               	.LBB1217:
 2377               	.LBB1218:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 2378               		.loc 6 220 0
 2379 09a0 8091 0000 		lds r24,endpoints+24
 2380 09a4 8670      		andi r24,lo8(6)
 2381               	.LBE1218:
 2382               	.LBE1217:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 2383               		.loc 3 82 0
 2384 09a6 01F0      		breq .L158
 2385               	.LBB1219:
 2386               	.LBB1220:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 2387               		.loc 5 51 0
 2388 09a8 4091 0000 		lds r20,ep_in_pipe_data+4
 2389               	.LBE1220:
 2390               	.LBE1219:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 2391               		.loc 3 83 0
 2392 09ac 1416      		cp __zero_reg__,r20
 2393 09ae 04F0      		brlt .+2
 2394 09b0 00C0      		rjmp .L159
 2395               	.LBB1221:
 2396               	.LBB1222:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 2397               		.loc 5 62 0
 2398 09b2 8091 0000 		lds r24,ep_in_pipe_data
 2399 09b6 9091 0000 		lds r25,ep_in_pipe_data+1
 2400               	.LVL130:
 2401               	.LBE1222:
 2402               	.LBE1221:
 2403               	.LBB1223:
 2404               	.LBB1224:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 2405               		.loc 3 68 0
 2406 09ba 2091 0000 		lds r18,ep_in_data
 2407               	.LVL131:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 2408               		.loc 3 69 0
 2409 09be 31E0      		ldi r19,lo8(1)
 2410 09c0 2130      		cpi r18,lo8(1)
 2411 09c2 01F4      		brne .L160
 2412 09c4 30E0      		ldi r19,lo8(0)
 2413               	.L160:
 2414 09c6 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 2415               		.loc 3 72 0
 2416 09ca 2223      		tst r18
 2417 09cc 01F0      		breq .+2
 2418 09ce 00C0      		rjmp .L161
 2419               	.LVL132:
 2420               	.LBB1225:
 2421               	.LBB1226:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 2422               		.loc 6 168 0
 2423 09d0 8093 0000 		sts endpoints+28,r24
 2424 09d4 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 2425               		.loc 6 169 0
 2426 09d8 20E4      		ldi r18,lo8(64)
 2427 09da 30E0      		ldi r19,hi8(64)
 2428 09dc 2093 0000 		sts endpoints+26,r18
 2429 09e0 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 2430               		.loc 6 174 0
 2431 09e4 E0E0      		ldi r30,lo8(endpoints+24)
 2432 09e6 F0E0      		ldi r31,hi8(endpoints+24)
 2433               	/* #APP */
 2434               	 ;  174 "usb/usb.h" 1
 2435 09e8 02E2      		ldi r16, 34
 2436 09ea 0693      		.dc.w 0x9306
 2437               		
 2438               	 ;  0 "" 2
 2439               	.LVL133:
 2440               	/* #NOAPP */
 2441               	.L162:
 2442               	.LBE1226:
 2443               	.LBE1225:
 2444               	.LBE1224:
 2445               	.LBE1223:
 2446               	.LBB1230:
 2447               	.LBB1231:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 2448               		.loc 5 72 0
 2449 09ec 4150      		subi r20,lo8(-(-1))
 2450 09ee 4093 0000 		sts ep_in_pipe_data+4,r20
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 2451               		.loc 5 73 0
 2452 09f2 805C      		subi r24,lo8(-(64))
 2453 09f4 9F4F      		sbci r25,hi8(-(64))
 2454 09f6 8093 0000 		sts ep_in_pipe_data,r24
 2455 09fa 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 2456               		.loc 5 75 0
 2457 09fe B0E0      		ldi r27,hi8(ep_in_pipe_buffer+512)
 2458 0a00 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 2459 0a02 9B07      		cpc r25,r27
 2460 0a04 01F4      		brne .+2
 2461 0a06 00C0      		rjmp .L196
 2462               	.LVL134:
 2463               	.L158:
 2464               	.LBE1231:
 2465               	.LBE1230:
 2466               	.LBB1233:
 2467               	.LBB1234:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 2468               		.loc 4 70 0
 2469 0a08 5FBF      		out __SREG__,r21
 2470               		.loc 4 71 0
 2471               	.LBE1234:
 2472               	.LBE1233:
 2473               	.LBE1214:
 2474               	.LBE1213:
 2475               	.LBE1212:
 2476               	.LBE1211:
 2477               	.LBE1210:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 2478               		.loc 2 27 0
 2479 0a0a 82E0      		ldi r24,lo8(2)
 2480 0a0c E0EC      		ldi r30,lo8(1216)
 2481 0a0e F4E0      		ldi r31,hi8(1216)
 2482 0a10 8587      		std Z+13,r24
 2483               	.LBB1264:
 2484               	.LBB1265:
 2485               	.LBB1266:
 2486               	.LBB1267:
 2487               	.LBB1268:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 2488               		.loc 5 57 0
 2489 0a12 96E0      		ldi r25,lo8(6)
 2490               	.L167:
 2491               	.LVL135:
 2492               	.LBE1268:
 2493               	.LBE1267:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 2494               		.loc 3 123 0
 2495 0a14 2FB7      		in r18,__SREG__
 2496               	.LVL136:
 2497               	.LBB1270:
 2498               	.LBB1271:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 2499               		.loc 4 50 0
 2500               	/* #APP */
 2501               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 2502 0a16 F894      		cli
 2503               	 ;  0 "" 2
 2504               	.LVL137:
 2505               	/* #NOAPP */
 2506               	.LBE1271:
 2507               	.LBE1270:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 2508               		.loc 3 124 0
 2509 0a18 8091 0000 		lds r24,ep_in_data+1
 2510 0a1c 8823      		tst r24
 2511 0a1e 01F4      		brne .+2
 2512 0a20 00C0      		rjmp .L197
 2513               	.L177:
 125:usb/usb_pipe.h **** 			r = false;
 2514               		.loc 3 125 0
 2515 0a22 80E0      		ldi r24,lo8(0)
 2516               	.L169:
 2517               	.LBB1272:
 2518               	.LBB1273:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 2519               		.loc 4 70 0
 2520 0a24 2FBF      		out __SREG__,r18
 2521               		.loc 4 71 0
 2522               	.LBE1273:
 2523               	.LBE1272:
 2524               	.LBE1266:
 2525               	.LBE1265:
 2526               	.LBE1264:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 2527               		.loc 2 28 0
 2528 0a26 8823      		tst r24
 2529 0a28 01F4      		brne .L168
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 2530               		.loc 2 29 0
 2531 0a2a 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 2532 0a2e 8823      		tst r24
 2533 0a30 01F0      		breq .L167
 2534               	.LVL138:
 2535               	.LBB1277:
 2536               	.LBB1278:
 2537               	.LBB1279:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 2538               		.loc 3 54 0
 2539 0a32 2FB7      		in r18,__SREG__
 2540               	.LVL139:
 2541               	.LBB1280:
 2542               	.LBB1281:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 2543               		.loc 4 50 0
 2544               	/* #APP */
 2545               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 2546 0a34 F894      		cli
 2547               	 ;  0 "" 2
 2548               	.LVL140:
 2549               	/* #NOAPP */
 2550               	.LBE1281:
 2551               	.LBE1280:
 2552               	.LBB1282:
 2553               	.LBB1283:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 2554               		.loc 5 90 0
 2555 0a36 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 2556               		.loc 5 91 0
 2557 0a3a 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 2558 0a3c 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 2559 0a3e 8093 0000 		sts ep_in_pipe_data+2,r24
 2560 0a42 9093 0000 		sts ep_in_pipe_data+2+1,r25
 2561 0a46 8093 0000 		sts ep_in_pipe_data,r24
 2562 0a4a 9093 0000 		sts ep_in_pipe_data+1,r25
 2563               	.LVL141:
 2564               	.LBE1283:
 2565               	.LBE1282:
 2566               	.LBB1284:
 2567               	.LBB1285:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 2568               		.loc 6 158 0
 2569 0a4e E0E0      		ldi r30,lo8(endpoints+24)
 2570 0a50 F0E0      		ldi r31,hi8(endpoints+24)
 2571               	/* #APP */
 2572               	 ;  158 "usb/usb.h" 1
 2573 0a52 06E0      		ldi r16, 6
 2574 0a54 0593      		.dc.w 0x9305
 2575               		
 2576               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 2577               		.loc 6 159 0
 2578               	 ;  159 "usb/usb.h" 1
 2579 0a56 08E0      		ldi r16, 8
 2580 0a58 0693      		.dc.w 0x9306
 2581               		
 2582               	 ;  0 "" 2
 2583               	/* #NOAPP */
 2584               	.LBE1285:
 2585               	.LBE1284:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 2586               		.loc 3 57 0
 2587 0a5a 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 2588               		.loc 3 58 0
 2589 0a5e 1092 0000 		sts ep_in_data+2,__zero_reg__
 2590 0a62 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 2591               		.loc 3 59 0
 2592 0a66 1092 0000 		sts ep_in_data,__zero_reg__
 2593               	.LVL142:
 2594               	.LBB1286:
 2595               	.LBB1287:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 2596               		.loc 4 70 0
 2597 0a6a 2FBF      		out __SREG__,r18
 2598               		.loc 4 71 0
 2599               	.LVL143:
 2600               	.L168:
 2601               	.LBE1287:
 2602               	.LBE1286:
 2603               	.LBE1279:
 2604               	.LBE1278:
 2605               	.LBE1277:
 2606               	.LBE1209:
 2607               	.LBE1208:
 260:main.c        **** }
 2608               		.loc 1 260 0
 2609 0a6c CD5C      		subi r28,lo8(-307)
 2610 0a6e DE4F      		sbci r29,hi8(-307)
 2611 0a70 E881      		ld r30,Y
 2612 0a72 F981      		ldd r31,Y+1
 2613 0a74 C353      		subi r28,lo8(307)
 2614 0a76 D140      		sbci r29,hi8(307)
 2615 0a78 8081      		ld r24,Z
 2616 0a7a 9181      		ldd r25,Z+1
 2617               	/* epilogue start */
 2618 0a7c CA5C      		subi r28,lo8(-(310))
 2619 0a7e DE4F      		sbci r29,hi8(-(310))
 2620 0a80 CDBF      		out __SP_L__,r28
 2621 0a82 DEBF      		out __SP_H__,r29
 2622 0a84 DF91      		pop r29
 2623 0a86 CF91      		pop r28
 2624 0a88 1F91      		pop r17
 2625 0a8a 0F91      		pop r16
 2626 0a8c FF90      		pop r15
 2627 0a8e EF90      		pop r14
 2628 0a90 DF90      		pop r13
 2629 0a92 CF90      		pop r12
 2630 0a94 BF90      		pop r11
 2631 0a96 AF90      		pop r10
 2632 0a98 9F90      		pop r9
 2633 0a9a 8F90      		pop r8
 2634 0a9c 7F90      		pop r7
 2635 0a9e 6F90      		pop r6
 2636 0aa0 5F90      		pop r5
 2637 0aa2 4F90      		pop r4
 2638 0aa4 3F90      		pop r3
 2639 0aa6 2F90      		pop r2
 2640 0aa8 0895      		ret
 2641               	.LVL144:
 2642               	.L197:
 2643               	.LBB1295:
 2644               	.LBB1292:
 2645               	.LBB1288:
 2646               	.LBB1276:
 2647               	.LBB1275:
 2648               	.LBB1274:
 2649               	.LBB1269:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 2650               		.loc 5 57 0
 2651 0aaa 8091 0000 		lds r24,ep_in_pipe_data+4
 2652 0aae 392F      		mov r19,r25
 2653 0ab0 381B      		sub r19,r24
 2654               	.LBE1269:
 2655               	.LBE1274:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 2656               		.loc 3 127 0
 2657 0ab2 81E0      		ldi r24,lo8(1)
 2658 0ab4 1316      		cp __zero_reg__,r19
 2659 0ab6 04F4      		brge .+2
 2660 0ab8 00C0      		rjmp .L169
 2661 0aba 00C0      		rjmp .L177
 2662               	.LVL145:
 2663               	.L161:
 2664               	.LBE1275:
 2665               	.LBE1276:
 2666               	.LBE1288:
 2667               	.LBB1289:
 2668               	.LBB1261:
 2669               	.LBB1258:
 2670               	.LBB1255:
 2671               	.LBB1252:
 2672               	.LBB1235:
 2673               	.LBB1229:
 2674               	.LBB1227:
 2675               	.LBB1228:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 2676               		.loc 6 168 0
 2677 0abc 8093 0000 		sts endpoints+20,r24
 2678 0ac0 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 2679               		.loc 6 169 0
 2680 0ac4 20E4      		ldi r18,lo8(64)
 2681 0ac6 30E0      		ldi r19,hi8(64)
 2682               	.LVL146:
 2683 0ac8 2093 0000 		sts endpoints+18,r18
 2684 0acc 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 2685               		.loc 6 176 0
 2686 0ad0 E0E0      		ldi r30,lo8(endpoints+24)
 2687 0ad2 F0E0      		ldi r31,hi8(endpoints+24)
 2688               	/* #APP */
 2689               	 ;  176 "usb/usb.h" 1
 2690 0ad4 04E1      		ldi r16, 20
 2691 0ad6 0693      		.dc.w 0x9306
 2692               		
 2693               	 ;  0 "" 2
 2694               	/* #NOAPP */
 2695 0ad8 00C0      		rjmp .L162
 2696               	.LVL147:
 2697               	.L196:
 2698               	.LBE1228:
 2699               	.LBE1227:
 2700               	.LBE1229:
 2701               	.LBE1235:
 2702               	.LBB1236:
 2703               	.LBB1232:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 2704               		.loc 5 76 0
 2705 0ada 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 2706 0adc 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 2707 0ade 8093 0000 		sts ep_in_pipe_data,r24
 2708 0ae2 9093 0000 		sts ep_in_pipe_data+1,r25
 2709 0ae6 00C0      		rjmp .L158
 2710               	.LVL148:
 2711               	.L159:
 2712               	.LBE1232:
 2713               	.LBE1236:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 2714               		.loc 3 87 0
 2715 0ae8 8091 0000 		lds r24,ep_in_data+1
 2716 0aec 8130      		cpi r24,lo8(1)
 2717 0aee 01F4      		brne .+2
 2718 0af0 00C0      		rjmp .L198
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 2719               		.loc 3 91 0
 2720 0af2 8230      		cpi r24,lo8(2)
 2721 0af4 01F0      		breq .+2
 2722 0af6 00C0      		rjmp .L158
 2723               	.LVL149:
 2724               	.LBB1237:
 2725               	.LBB1238:
 2726               	.LBB1239:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 2727               		.loc 6 228 0
 2728 0af8 8091 0000 		lds r24,endpoints+24
 2729 0afc 8670      		andi r24,lo8(6)
 2730               	.LBE1239:
 2731               	.LBE1238:
 2732               	.LBE1237:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 2733               		.loc 3 91 0
 2734 0afe 8630      		cpi r24,lo8(6)
 2735 0b00 01F0      		breq .+2
 2736 0b02 00C0      		rjmp .L158
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 2737               		.loc 3 92 0
 2738 0b04 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 2739               		.loc 3 93 0
 2740 0b08 1092 0000 		sts ep_in_data+2,__zero_reg__
 2741 0b0c 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 2742               	.LBB1240:
 2743               	.LBB1241:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 2744               		.loc 5 90 0
 2745 0b10 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 2746               		.loc 5 91 0
 2747 0b14 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 2748 0b16 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 2749 0b18 8093 0000 		sts ep_in_pipe_data+2,r24
 2750 0b1c 9093 0000 		sts ep_in_pipe_data+2+1,r25
 2751 0b20 8093 0000 		sts ep_in_pipe_data,r24
 2752 0b24 9093 0000 		sts ep_in_pipe_data+1,r25
 2753               	.LVL150:
 2754 0b28 00C0      		rjmp .L158
 2755               	.LVL151:
 2756               	.L195:
 2757               	.LBE1241:
 2758               	.LBE1240:
 2759               	.LBE1252:
 2760               	.LBE1255:
 2761               	.LBE1258:
 2762               	.LBE1261:
 2763               	.LBE1289:
 2764               	.LBE1292:
 2765               	.LBE1295:
 2766               	.LBB1296:
 225:main.c        ****       sprintf(lat_buff, "%f", gps.lat);
 2767               		.loc 1 225 0
 2768 0b2a EDB7      		in r30,__SP_L__
 2769 0b2c FEB7      		in r31,__SP_H__
 2770 0b2e 3897      		sbiw r30,8
 2771 0b30 EDBF      		out __SP_L__,r30
 2772 0b32 FEBF      		out __SP_H__,r31
 2773 0b34 3196      		adiw r30,1
 2774 0b36 39EC      		ldi r19,lo8(201)
 2775 0b38 632E      		mov r6,r19
 2776 0b3a 712C      		mov r7,__zero_reg__
 2777 0b3c 6C0E      		add r6,r28
 2778 0b3e 7D1E      		adc r7,r29
 2779 0b40 ADB7      		in r26,__SP_L__
 2780 0b42 BEB7      		in r27,__SP_H__
 2781 0b44 1196      		adiw r26,1
 2782 0b46 6D92      		st X+,r6
 2783 0b48 7C92      		st X,r7
 2784 0b4a 1297      		sbiw r26,1+1
 2785 0b4c 00E0      		ldi r16,lo8(.LC2)
 2786 0b4e 10E0      		ldi r17,hi8(.LC2)
 2787 0b50 0283      		std Z+2,r16
 2788 0b52 1383      		std Z+3,r17
 2789 0b54 2A2D      		mov r18,r10
 2790 0b56 382D      		mov r19,r8
 2791 0b58 442D      		mov r20,r4
 2792 0b5a 522D      		mov r21,r2
 2793 0b5c C901      		movw r24,r18
 2794 0b5e DA01      		movw r26,r20
 2795 0b60 8483      		std Z+4,r24
 2796 0b62 9583      		std Z+5,r25
 2797 0b64 A683      		std Z+6,r26
 2798 0b66 B783      		std Z+7,r27
 2799               		.cfi_escape 0x2e,0x8
 2800 0b68 0E94 0000 		call sprintf
 226:main.c        ****       sprintf(lng_buff, "%f", gps.lng);
 2801               		.loc 1 226 0
 2802 0b6c EDB7      		in r30,__SP_L__
 2803 0b6e FEB7      		in r31,__SP_H__
 2804 0b70 3196      		adiw r30,1
 2805 0b72 45E6      		ldi r20,lo8(101)
 2806 0b74 442E      		mov r4,r20
 2807 0b76 512C      		mov r5,__zero_reg__
 2808 0b78 4C0E      		add r4,r28
 2809 0b7a 5D1E      		adc r5,r29
 2810 0b7c ADB7      		in r26,__SP_L__
 2811 0b7e BEB7      		in r27,__SP_H__
 2812 0b80 1196      		adiw r26,1
 2813 0b82 4D92      		st X+,r4
 2814 0b84 5C92      		st X,r5
 2815 0b86 1297      		sbiw r26,1+1
 2816 0b88 0283      		std Z+2,r16
 2817 0b8a 1383      		std Z+3,r17
 2818 0b8c 2B2D      		mov r18,r11
 2819 0b8e 392D      		mov r19,r9
 2820 0b90 432D      		mov r20,r3
 2821 0b92 C15D      		subi r28,lo8(-303)
 2822 0b94 DE4F      		sbci r29,hi8(-303)
 2823 0b96 5881      		ld r21,Y
 2824 0b98 CF52      		subi r28,lo8(303)
 2825 0b9a D140      		sbci r29,hi8(303)
 2826 0b9c C901      		movw r24,r18
 2827 0b9e DA01      		movw r26,r20
 2828 0ba0 8483      		std Z+4,r24
 2829 0ba2 9583      		std Z+5,r25
 2830 0ba4 A683      		std Z+6,r26
 2831 0ba6 B783      		std Z+7,r27
 2832 0ba8 0E94 0000 		call sprintf
 227:main.c        ****       sprintf(dist_buff, "%f", dist);
 2833               		.loc 1 227 0
 2834 0bac EDB7      		in r30,__SP_L__
 2835 0bae FEB7      		in r31,__SP_H__
 2836 0bb0 3196      		adiw r30,1
 2837 0bb2 9E01      		movw r18,r28
 2838 0bb4 2F5F      		subi r18,lo8(-(1))
 2839 0bb6 3F4F      		sbci r19,hi8(-(1))
 2840 0bb8 C35D      		subi r28,lo8(-301)
 2841 0bba DE4F      		sbci r29,hi8(-301)
 2842 0bbc 2883      		st Y,r18
 2843 0bbe 3983      		std Y+1,r19
 2844 0bc0 CD52      		subi r28,lo8(301)
 2845 0bc2 D140      		sbci r29,hi8(301)
 2846 0bc4 ADB7      		in r26,__SP_L__
 2847 0bc6 BEB7      		in r27,__SP_H__
 2848 0bc8 1196      		adiw r26,1
 2849 0bca 2D93      		st X+,r18
 2850 0bcc 3C93      		st X,r19
 2851 0bce 1297      		sbiw r26,1+1
 2852 0bd0 0283      		std Z+2,r16
 2853 0bd2 1383      		std Z+3,r17
 2854 0bd4 C482      		std Z+4,r12
 2855 0bd6 D582      		std Z+5,r13
 2856 0bd8 E682      		std Z+6,r14
 2857 0bda F782      		std Z+7,r15
 2858 0bdc 0E94 0000 		call sprintf
 230:main.c        ****       int len_lat = strlen(lat_buff);
 2859               		.loc 1 230 0
 2860 0be0 F301      		movw r30,r6
 2861 0be2 0190      		ld __tmp_reg__,Z+
 2862 0be4 0020      		tst __tmp_reg__
 2863 0be6 01F4      		brne .-6
 2864 0be8 3197      		sbiw r30,1
 2865 0bea E619      		sub r30,r6
 2866 0bec F709      		sbc r31,r7
 2867               	.LVL152:
 231:main.c        ****       int len_lng = strlen(lng_buff);
 2868               		.loc 1 231 0
 2869 0bee D201      		movw r26,r4
 2870 0bf0 0D90      		ld __tmp_reg__,X+
 2871 0bf2 0020      		tst __tmp_reg__
 2872 0bf4 01F4      		brne .-6
 2873 0bf6 1197      		sbiw r26,1
 2874 0bf8 A419      		sub r26,r4
 2875 0bfa B509      		sbc r27,r5
 2876 0bfc CF5C      		subi r28,lo8(-305)
 2877 0bfe DE4F      		sbci r29,hi8(-305)
 2878 0c00 A883      		st Y,r26
 2879 0c02 B983      		std Y+1,r27
 2880 0c04 C153      		subi r28,lo8(305)
 2881 0c06 D140      		sbci r29,hi8(305)
 2882               	.LVL153:
 232:main.c        ****       int len_dist = strlen(dist_buff);
 2883               		.loc 1 232 0
 2884 0c08 C35D      		subi r28,lo8(-301)
 2885 0c0a DE4F      		sbci r29,hi8(-301)
 2886 0c0c A881      		ld r26,Y
 2887 0c0e B981      		ldd r27,Y+1
 2888 0c10 CD52      		subi r28,lo8(301)
 2889 0c12 D140      		sbci r29,hi8(301)
 2890               	.LVL154:
 2891 0c14 0D90      		ld __tmp_reg__,X+
 2892 0c16 0020      		tst __tmp_reg__
 2893 0c18 01F4      		brne .-6
 2894 0c1a 1197      		sbiw r26,1
 2895 0c1c C35D      		subi r28,lo8(-301)
 2896 0c1e DE4F      		sbci r29,hi8(-301)
 2897 0c20 2881      		ld r18,Y
 2898 0c22 3981      		ldd r19,Y+1
 2899 0c24 CD52      		subi r28,lo8(301)
 2900 0c26 D140      		sbci r29,hi8(301)
 2901 0c28 A21B      		sub r26,r18
 2902 0c2a B30B      		sbc r27,r19
 2903 0c2c C15D      		subi r28,lo8(-303)
 2904 0c2e DE4F      		sbci r29,hi8(-303)
 2905 0c30 A883      		st Y,r26
 2906 0c32 B983      		std Y+1,r27
 2907 0c34 CF52      		subi r28,lo8(303)
 2908 0c36 D140      		sbci r29,hi8(303)
 2909               	.LVL155:
 2910               	.LBB1297:
 235:main.c        ****       for (int i=0; i<len_lat; i++) {
 2911               		.loc 1 235 0
 2912 0c38 8DB7      		in r24,__SP_L__
 2913 0c3a 9EB7      		in r25,__SP_H__
 2914 0c3c 0896      		adiw r24,8
 2915 0c3e 8DBF      		out __SP_L__,r24
 2916 0c40 9EBF      		out __SP_H__,r25
 2917 0c42 1E16      		cp __zero_reg__,r30
 2918 0c44 1F06      		cpc __zero_reg__,r31
 2919 0c46 04F0      		brlt .+2
 2920 0c48 00C0      		rjmp .L100
 2921 0c4a 4301      		movw r8,r6
 204:main.c        **** char* parse_nmea(void) {
 2922               		.loc 1 204 0
 2923 0c4c D301      		movw r26,r6
 2924               	.LVL156:
 2925 0c4e AE0F      		add r26,r30
 2926 0c50 BF1F      		adc r27,r31
 2927 0c52 CB5C      		subi r28,lo8(-309)
 2928 0c54 DE4F      		sbci r29,hi8(-309)
 2929 0c56 A883      		st Y,r26
 2930 0c58 B983      		std Y+1,r27
 2931 0c5a C553      		subi r28,lo8(309)
 2932 0c5c D140      		sbci r29,hi8(309)
 2933               	.LBB1298:
 2934               	.LBB1299:
 2935               	.LBB1300:
 2936               	.LBB1301:
 2937               	.LBB1302:
 2938               	.LBB1303:
 2939               	.LBB1304:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 2940               		.loc 5 57 0
 2941 0c5e 56E0      		ldi r21,lo8(6)
 2942               	.LBE1304:
 2943               	.LBE1303:
 2944               	.LBE1302:
 2945               	.LBE1301:
 2946               	.LBE1300:
 2947               	.LBB1315:
 2948               	.LBB1316:
 2949               	.LBB1317:
 2950               	.LBB1318:
 2951               	.LBB1319:
 2952               	.LBB1320:
 2953               	.LBB1321:
 2954               	.LBB1322:
 2955               	.LBB1323:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 2956               		.loc 6 220 0
 2957 0c60 A0E0      		ldi r26,lo8(endpoints+24)
 2958 0c62 B0E0      		ldi r27,hi8(endpoints+24)
 2959               	.LBE1323:
 2960               	.LBE1322:
 2961               	.LBB1325:
 2962               	.LBB1326:
 2963               		.loc 5 91 0
 2964 0c64 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 2965 0c66 282E      		mov r2,r24
 2966 0c68 80E0      		ldi r24,hi8(ep_in_pipe_buffer)
 2967 0c6a 382E      		mov r3,r24
 2968               	.LBE1326:
 2969               	.LBE1325:
 2970               	.LBB1329:
 2971               	.LBB1330:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 2972               		.loc 3 69 0
 2973 0c6c 91E0      		ldi r25,lo8(1)
 2974 0c6e E92E      		mov r14,r25
 2975 0c70 F12C      		mov r15,__zero_reg__
 2976               	.LBE1330:
 2977               	.LBE1329:
 2978               	.LBB1338:
 2979               	.LBB1339:
 2980               	.LBB1340:
 2981               	.LBB1341:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 2982               		.loc 6 169 0
 2983 0c72 20E4      		ldi r18,lo8(64)
 2984 0c74 A22E      		mov r10,r18
 2985 0c76 B12C      		mov r11,__zero_reg__
 2986               	.LVL157:
 2987               	.L97:
 2988               	.LBE1341:
 2989               	.LBE1340:
 2990               	.LBE1339:
 2991               	.LBE1338:
 2992               	.LBE1321:
 2993               	.LBE1320:
 2994               	.LBE1319:
 2995               	.LBE1318:
 2996               	.LBE1317:
 2997               	.LBE1316:
 2998               	.LBE1315:
 2999               	.LBE1299:
 3000               	.LBE1298:
 236:main.c        ****         send_byte(lat_buff[i]);  
 3001               		.loc 1 236 0 discriminator 2
 3002 0c78 F401      		movw r30,r8
 3003 0c7a 3191      		ld r19,Z+
 3004 0c7c 4F01      		movw r8,r30
 3005               	.LVL158:
 3006               	.L85:
 3007               	.LBB1391:
 3008               	.LBB1389:
 3009               	.LBB1384:
 3010               	.LBB1313:
 3011               	.LBB1311:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3012               		.loc 3 123 0
 3013 0c7e 9FB7      		in r25,__SREG__
 3014               	.LVL159:
 3015               	.LBB1306:
 3016               	.LBB1307:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3017               		.loc 4 50 0
 3018               	/* #APP */
 3019               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3020 0c80 F894      		cli
 3021               	 ;  0 "" 2
 3022               	.LVL160:
 3023               	/* #NOAPP */
 3024               	.LBE1307:
 3025               	.LBE1306:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3026               		.loc 3 124 0
 3027 0c82 8091 0000 		lds r24,ep_in_data+1
 3028 0c86 8823      		tst r24
 3029 0c88 01F4      		brne .+2
 3030 0c8a 00C0      		rjmp .L199
 3031               	.L172:
 125:usb/usb_pipe.h **** 			r = false;
 3032               		.loc 3 125 0
 3033 0c8c 80E0      		ldi r24,lo8(0)
 3034               	.L83:
 3035               	.LBB1308:
 3036               	.LBB1309:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3037               		.loc 4 70 0
 3038 0c8e 9FBF      		out __SREG__,r25
 3039               		.loc 4 71 0
 3040               	.LBE1309:
 3041               	.LBE1308:
 3042               	.LBE1311:
 3043               	.LBE1313:
 3044               	.LBE1384:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3045               		.loc 2 20 0
 3046 0c90 8823      		tst r24
 3047 0c92 01F0      		breq .L85
 3048               	.LVL161:
 3049               	.LBB1385:
 3050               	.LBB1386:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3051               		.loc 3 175 0
 3052 0c94 8091 0000 		lds r24,ep_in_data+2
 3053 0c98 9091 0000 		lds r25,ep_in_data+2+1
 3054 0c9c E091 0000 		lds r30,ep_in_pipe_data+2
 3055 0ca0 F091 0000 		lds r31,ep_in_pipe_data+2+1
 3056               	.LVL162:
 3057 0ca4 E80F      		add r30,r24
 3058 0ca6 F91F      		adc r31,r25
 3059 0ca8 3083      		st Z,r19
 3060 0caa 0196      		adiw r24,1
 3061 0cac 8093 0000 		sts ep_in_data+2,r24
 3062 0cb0 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3063               		.loc 3 176 0
 3064 0cb4 8034      		cpi r24,64
 3065 0cb6 9105      		cpc r25,__zero_reg__
 3066 0cb8 01F4      		brne .+2
 3067 0cba 00C0      		rjmp .L200
 3068               	.LVL163:
 3069               	.L86:
 3070               	.LBE1386:
 3071               	.LBE1385:
 3072               	.LBE1389:
 3073               	.LBE1391:
 235:main.c        ****       for (int i=0; i<len_lat; i++) {
 3074               		.loc 1 235 0 discriminator 2
 3075 0cbc CB5C      		subi r28,lo8(-309)
 3076 0cbe DE4F      		sbci r29,hi8(-309)
 3077 0cc0 2881      		ld r18,Y
 3078 0cc2 3981      		ldd r19,Y+1
 3079 0cc4 C553      		subi r28,lo8(309)
 3080 0cc6 D140      		sbci r29,hi8(309)
 3081 0cc8 8216      		cp r8,r18
 3082 0cca 9306      		cpc r9,r19
 3083 0ccc 01F4      		brne .L97
 3084               	.LVL164:
 3085               	.L100:
 3086               	.LBE1297:
 3087               	.LBB1393:
 3088               	.LBB1394:
 3089               	.LBB1395:
 3090               	.LBB1396:
 3091               	.LBB1397:
 3092               	.LBB1398:
 3093               	.LBB1399:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3094               		.loc 5 57 0
 3095 0cce 96E0      		ldi r25,lo8(6)
 3096               	.L181:
 3097               	.LVL165:
 3098               	.LBE1399:
 3099               	.LBE1398:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3100               		.loc 3 123 0
 3101 0cd0 2FB7      		in r18,__SREG__
 3102               	.LVL166:
 3103               	.LBB1401:
 3104               	.LBB1402:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3105               		.loc 4 50 0
 3106               	/* #APP */
 3107               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3108 0cd2 F894      		cli
 3109               	 ;  0 "" 2
 3110               	.LVL167:
 3111               	/* #NOAPP */
 3112               	.LBE1402:
 3113               	.LBE1401:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3114               		.loc 3 124 0
 3115 0cd4 8091 0000 		lds r24,ep_in_data+1
 3116 0cd8 8823      		tst r24
 3117 0cda 01F4      		brne .+2
 3118 0cdc 00C0      		rjmp .L201
 3119               	.L173:
 125:usb/usb_pipe.h **** 			r = false;
 3120               		.loc 3 125 0
 3121 0cde 80E0      		ldi r24,lo8(0)
 3122               	.L98:
 3123               	.LBB1403:
 3124               	.LBB1404:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3125               		.loc 4 70 0
 3126 0ce0 2FBF      		out __SREG__,r18
 3127               		.loc 4 71 0
 3128               	.LBE1404:
 3129               	.LBE1403:
 3130               	.LBE1397:
 3131               	.LBE1396:
 3132               	.LBE1395:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3133               		.loc 2 20 0
 3134 0ce2 8823      		tst r24
 3135 0ce4 01F0      		breq .L181
 3136               	.LVL168:
 3137               	.LBB1408:
 3138               	.LBB1409:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3139               		.loc 3 175 0
 3140 0ce6 8091 0000 		lds r24,ep_in_data+2
 3141 0cea 9091 0000 		lds r25,ep_in_data+2+1
 3142 0cee E091 0000 		lds r30,ep_in_pipe_data+2
 3143 0cf2 F091 0000 		lds r31,ep_in_pipe_data+2+1
 3144 0cf6 E80F      		add r30,r24
 3145 0cf8 F91F      		adc r31,r25
 3146 0cfa 20E2      		ldi r18,lo8(32)
 3147               	.LVL169:
 3148 0cfc 2083      		st Z,r18
 3149 0cfe 0196      		adiw r24,1
 3150 0d00 8093 0000 		sts ep_in_data+2,r24
 3151 0d04 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3152               		.loc 3 176 0
 3153 0d08 8034      		cpi r24,64
 3154 0d0a 9105      		cpc r25,__zero_reg__
 3155 0d0c 01F4      		brne .+2
 3156 0d0e 00C0      		rjmp .L202
 3157               	.L101:
 3158               	.LVL170:
 3159               	.LBE1409:
 3160               	.LBE1408:
 3161               	.LBE1394:
 3162               	.LBE1393:
 3163               	.LBB1476:
 241:main.c        ****       for (int j=0; j<len_lng; j++) {
 3164               		.loc 1 241 0 discriminator 1
 3165 0d10 CF5C      		subi r28,lo8(-305)
 3166 0d12 DE4F      		sbci r29,hi8(-305)
 3167 0d14 2881      		ld r18,Y
 3168 0d16 3981      		ldd r19,Y+1
 3169 0d18 C153      		subi r28,lo8(305)
 3170 0d1a D140      		sbci r29,hi8(305)
 3171 0d1c 1216      		cp __zero_reg__,r18
 3172 0d1e 1306      		cpc __zero_reg__,r19
 3173 0d20 04F0      		brlt .+2
 3174 0d22 00C0      		rjmp .L130
 241:main.c        ****       for (int j=0; j<len_lng; j++) {
 3175               		.loc 1 241 0 is_stmt 0
 3176 0d24 4201      		movw r8,r4
 204:main.c        **** char* parse_nmea(void) {
 3177               		.loc 1 204 0 is_stmt 1
 3178 0d26 240D      		add r18,r4
 3179 0d28 351D      		adc r19,r5
 3180 0d2a CF5C      		subi r28,lo8(-305)
 3181 0d2c DE4F      		sbci r29,hi8(-305)
 3182 0d2e 2883      		st Y,r18
 3183 0d30 3983      		std Y+1,r19
 3184 0d32 C153      		subi r28,lo8(305)
 3185 0d34 D140      		sbci r29,hi8(305)
 3186               	.LBB1477:
 3187               	.LBB1478:
 3188               	.LBB1479:
 3189               	.LBB1480:
 3190               	.LBB1481:
 3191               	.LBB1482:
 3192               	.LBB1483:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3193               		.loc 5 57 0
 3194 0d36 56E0      		ldi r21,lo8(6)
 3195               	.LBE1483:
 3196               	.LBE1482:
 3197               	.LBE1481:
 3198               	.LBE1480:
 3199               	.LBE1479:
 3200               	.LBB1494:
 3201               	.LBB1495:
 3202               	.LBB1496:
 3203               	.LBB1497:
 3204               	.LBB1498:
 3205               	.LBB1499:
 3206               	.LBB1500:
 3207               	.LBB1501:
 3208               	.LBB1502:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 3209               		.loc 6 220 0
 3210 0d38 F0E0      		ldi r31,lo8(endpoints+24)
 3211 0d3a EF2E      		mov r14,r31
 3212 0d3c F0E0      		ldi r31,hi8(endpoints+24)
 3213 0d3e FF2E      		mov r15,r31
 3214               	.LBE1502:
 3215               	.LBE1501:
 3216               	.LBB1504:
 3217               	.LBB1505:
 3218               		.loc 5 91 0
 3219 0d40 A0E0      		ldi r26,lo8(ep_in_pipe_buffer)
 3220 0d42 2A2E      		mov r2,r26
 3221 0d44 A0E0      		ldi r26,hi8(ep_in_pipe_buffer)
 3222 0d46 3A2E      		mov r3,r26
 3223               	.LBE1505:
 3224               	.LBE1504:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 3225               		.loc 3 88 0
 3226 0d48 12E0      		ldi r17,lo8(2)
 3227               	.LBB1508:
 3228               	.LBB1509:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 3229               		.loc 3 69 0
 3230 0d4a B1E0      		ldi r27,lo8(1)
 3231 0d4c CB2E      		mov r12,r27
 3232 0d4e D12C      		mov r13,__zero_reg__
 3233               	.LBE1509:
 3234               	.LBE1508:
 3235               	.LBB1517:
 3236               	.LBB1518:
 3237               	.LBB1519:
 3238               	.LBB1520:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3239               		.loc 6 169 0
 3240 0d50 00E4      		ldi r16,lo8(64)
 3241 0d52 A02E      		mov r10,r16
 3242 0d54 B12C      		mov r11,__zero_reg__
 3243               	.LVL171:
 3244               	.L127:
 3245               	.LBE1520:
 3246               	.LBE1519:
 3247               	.LBE1518:
 3248               	.LBE1517:
 3249               	.LBE1500:
 3250               	.LBE1499:
 3251               	.LBE1498:
 3252               	.LBE1497:
 3253               	.LBE1496:
 3254               	.LBE1495:
 3255               	.LBE1494:
 3256               	.LBE1478:
 3257               	.LBE1477:
 242:main.c        ****         send_byte(lng_buff[j]);  
 3258               		.loc 1 242 0 discriminator 2
 3259 0d56 D401      		movw r26,r8
 3260 0d58 2D91      		ld r18,X+
 3261 0d5a 4D01      		movw r8,r26
 3262               	.LVL172:
 3263               	.L115:
 3264               	.LBB1570:
 3265               	.LBB1568:
 3266               	.LBB1563:
 3267               	.LBB1492:
 3268               	.LBB1490:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3269               		.loc 3 123 0
 3270 0d5c 9FB7      		in r25,__SREG__
 3271               	.LVL173:
 3272               	.LBB1485:
 3273               	.LBB1486:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3274               		.loc 4 50 0
 3275               	/* #APP */
 3276               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3277 0d5e F894      		cli
 3278               	 ;  0 "" 2
 3279               	.LVL174:
 3280               	/* #NOAPP */
 3281               	.LBE1486:
 3282               	.LBE1485:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3283               		.loc 3 124 0
 3284 0d60 8091 0000 		lds r24,ep_in_data+1
 3285 0d64 8823      		tst r24
 3286 0d66 01F4      		brne .+2
 3287 0d68 00C0      		rjmp .L203
 3288               	.L174:
 125:usb/usb_pipe.h **** 			r = false;
 3289               		.loc 3 125 0
 3290 0d6a 80E0      		ldi r24,lo8(0)
 3291               	.L113:
 3292               	.LBB1487:
 3293               	.LBB1488:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3294               		.loc 4 70 0
 3295 0d6c 9FBF      		out __SREG__,r25
 3296               		.loc 4 71 0
 3297               	.LBE1488:
 3298               	.LBE1487:
 3299               	.LBE1490:
 3300               	.LBE1492:
 3301               	.LBE1563:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3302               		.loc 2 20 0
 3303 0d6e 8823      		tst r24
 3304 0d70 01F0      		breq .L115
 3305               	.LVL175:
 3306               	.LBB1564:
 3307               	.LBB1565:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3308               		.loc 3 175 0
 3309 0d72 8091 0000 		lds r24,ep_in_data+2
 3310 0d76 9091 0000 		lds r25,ep_in_data+2+1
 3311 0d7a E091 0000 		lds r30,ep_in_pipe_data+2
 3312 0d7e F091 0000 		lds r31,ep_in_pipe_data+2+1
 3313 0d82 E80F      		add r30,r24
 3314 0d84 F91F      		adc r31,r25
 3315 0d86 2083      		st Z,r18
 3316 0d88 0196      		adiw r24,1
 3317 0d8a 8093 0000 		sts ep_in_data+2,r24
 3318 0d8e 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3319               		.loc 3 176 0
 3320 0d92 8034      		cpi r24,64
 3321 0d94 9105      		cpc r25,__zero_reg__
 3322 0d96 01F4      		brne .+2
 3323 0d98 00C0      		rjmp .L204
 3324               	.LVL176:
 3325               	.L116:
 3326               	.LBE1565:
 3327               	.LBE1564:
 3328               	.LBE1568:
 3329               	.LBE1570:
 241:main.c        ****       for (int j=0; j<len_lng; j++) {
 3330               		.loc 1 241 0 discriminator 2
 3331 0d9a CF5C      		subi r28,lo8(-305)
 3332 0d9c DE4F      		sbci r29,hi8(-305)
 3333 0d9e 2881      		ld r18,Y
 3334 0da0 3981      		ldd r19,Y+1
 3335 0da2 C153      		subi r28,lo8(305)
 3336 0da4 D140      		sbci r29,hi8(305)
 3337 0da6 8216      		cp r8,r18
 3338 0da8 9306      		cpc r9,r19
 3339 0daa 01F4      		brne .L127
 3340               	.LVL177:
 3341               	.L130:
 3342               	.LBE1476:
 3343               	.LBB1572:
 3344               	.LBB1573:
 3345               	.LBB1574:
 3346               	.LBB1575:
 3347               	.LBB1576:
 3348               	.LBB1577:
 3349               	.LBB1578:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3350               		.loc 5 57 0
 3351 0dac 96E0      		ldi r25,lo8(6)
 3352               	.L180:
 3353               	.LBE1578:
 3354               	.LBE1577:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3355               		.loc 3 123 0
 3356 0dae 2FB7      		in r18,__SREG__
 3357               	.LVL178:
 3358               	.LBB1580:
 3359               	.LBB1581:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3360               		.loc 4 50 0
 3361               	/* #APP */
 3362               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3363 0db0 F894      		cli
 3364               	 ;  0 "" 2
 3365               	.LVL179:
 3366               	/* #NOAPP */
 3367               	.LBE1581:
 3368               	.LBE1580:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3369               		.loc 3 124 0
 3370 0db2 8091 0000 		lds r24,ep_in_data+1
 3371 0db6 8823      		tst r24
 3372 0db8 01F4      		brne .+2
 3373 0dba 00C0      		rjmp .L205
 3374               	.L175:
 125:usb/usb_pipe.h **** 			r = false;
 3375               		.loc 3 125 0
 3376 0dbc 80E0      		ldi r24,lo8(0)
 3377               	.L128:
 3378               	.LBB1582:
 3379               	.LBB1583:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3380               		.loc 4 70 0
 3381 0dbe 2FBF      		out __SREG__,r18
 3382               		.loc 4 71 0
 3383               	.LBE1583:
 3384               	.LBE1582:
 3385               	.LBE1576:
 3386               	.LBE1575:
 3387               	.LBE1574:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3388               		.loc 2 20 0
 3389 0dc0 8823      		tst r24
 3390 0dc2 01F0      		breq .L180
 3391               	.LVL180:
 3392               	.LBB1587:
 3393               	.LBB1588:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3394               		.loc 3 175 0
 3395 0dc4 8091 0000 		lds r24,ep_in_data+2
 3396 0dc8 9091 0000 		lds r25,ep_in_data+2+1
 3397 0dcc E091 0000 		lds r30,ep_in_pipe_data+2
 3398 0dd0 F091 0000 		lds r31,ep_in_pipe_data+2+1
 3399 0dd4 E80F      		add r30,r24
 3400 0dd6 F91F      		adc r31,r25
 3401 0dd8 20E2      		ldi r18,lo8(32)
 3402               	.LVL181:
 3403 0dda 2083      		st Z,r18
 3404 0ddc 0196      		adiw r24,1
 3405 0dde 8093 0000 		sts ep_in_data+2,r24
 3406 0de2 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3407               		.loc 3 176 0
 3408 0de6 8034      		cpi r24,64
 3409 0de8 9105      		cpc r25,__zero_reg__
 3410 0dea 01F4      		brne .+2
 3411 0dec 00C0      		rjmp .L206
 3412               	.L131:
 3413               	.LVL182:
 3414               	.LBE1588:
 3415               	.LBE1587:
 3416               	.LBE1573:
 3417               	.LBE1572:
 3418               	.LBB1653:
 247:main.c        ****       for (int k=0; k<len_dist; k++) {
 3419               		.loc 1 247 0 discriminator 1
 3420 0dee C15D      		subi r28,lo8(-303)
 3421 0df0 DE4F      		sbci r29,hi8(-303)
 3422 0df2 2881      		ld r18,Y
 3423 0df4 3981      		ldd r19,Y+1
 3424 0df6 CF52      		subi r28,lo8(303)
 3425 0df8 D140      		sbci r29,hi8(303)
 3426 0dfa 1216      		cp __zero_reg__,r18
 3427 0dfc 1306      		cpc __zero_reg__,r19
 3428 0dfe 04F0      		brlt .+2
 3429 0e00 00C0      		rjmp .L142
 247:main.c        ****       for (int k=0; k<len_dist; k++) {
 3430               		.loc 1 247 0 is_stmt 0
 3431 0e02 4E01      		movw r8,r28
 3432 0e04 0894      		sec
 3433 0e06 811C      		adc r8,__zero_reg__
 3434 0e08 911C      		adc r9,__zero_reg__
 204:main.c        **** char* parse_nmea(void) {
 3435               		.loc 1 204 0 is_stmt 1
 3436 0e0a 280D      		add r18,r8
 3437 0e0c 391D      		adc r19,r9
 3438 0e0e C15D      		subi r28,lo8(-303)
 3439 0e10 DE4F      		sbci r29,hi8(-303)
 3440 0e12 2883      		st Y,r18
 3441 0e14 3983      		std Y+1,r19
 3442 0e16 CF52      		subi r28,lo8(303)
 3443 0e18 D140      		sbci r29,hi8(303)
 3444               	.LBB1654:
 3445               	.LBB1655:
 3446               	.LBB1656:
 3447               	.LBB1657:
 3448               	.LBB1658:
 3449               	.LBB1659:
 3450               	.LBB1660:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3451               		.loc 5 57 0
 3452 0e1a 76E0      		ldi r23,lo8(6)
 3453               	.LBE1660:
 3454               	.LBE1659:
 3455               	.LBE1658:
 3456               	.LBE1657:
 3457               	.LBE1656:
 3458               	.LBB1671:
 3459               	.LBB1672:
 3460               	.LBB1673:
 3461               	.LBB1674:
 3462               	.LBB1675:
 3463               	.LBB1676:
 3464               	.LBB1677:
 3465               	.LBB1678:
 3466               	.LBB1679:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 3467               		.loc 6 220 0
 3468 0e1c 40E0      		ldi r20,lo8(endpoints+24)
 3469 0e1e E42E      		mov r14,r20
 3470 0e20 40E0      		ldi r20,hi8(endpoints+24)
 3471 0e22 F42E      		mov r15,r20
 3472               	.LBE1679:
 3473               	.LBE1678:
 3474               	.LBB1681:
 3475               	.LBB1682:
 3476               		.loc 5 91 0
 3477 0e24 50E0      		ldi r21,lo8(ep_in_pipe_buffer)
 3478 0e26 252E      		mov r2,r21
 3479 0e28 50E0      		ldi r21,hi8(ep_in_pipe_buffer)
 3480 0e2a 352E      		mov r3,r21
 3481               	.LBE1682:
 3482               	.LBE1681:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 3483               		.loc 3 88 0
 3484 0e2c 12E0      		ldi r17,lo8(2)
 3485               	.LBB1685:
 3486               	.LBB1686:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 3487               		.loc 3 69 0
 3488 0e2e 61E0      		ldi r22,lo8(1)
 3489 0e30 C62E      		mov r12,r22
 3490 0e32 D12C      		mov r13,__zero_reg__
 3491               	.LBE1686:
 3492               	.LBE1685:
 3493               	.LBB1694:
 3494               	.LBB1695:
 3495               	.LBB1696:
 3496               	.LBB1697:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3497               		.loc 6 169 0
 3498 0e34 E0E4      		ldi r30,lo8(64)
 3499 0e36 AE2E      		mov r10,r30
 3500 0e38 B12C      		mov r11,__zero_reg__
 3501               	.LVL183:
 3502               	.L157:
 3503               	.LBE1697:
 3504               	.LBE1696:
 3505               	.LBE1695:
 3506               	.LBE1694:
 3507               	.LBE1677:
 3508               	.LBE1676:
 3509               	.LBE1675:
 3510               	.LBE1674:
 3511               	.LBE1673:
 3512               	.LBE1672:
 3513               	.LBE1671:
 3514               	.LBE1655:
 3515               	.LBE1654:
 248:main.c        ****         send_byte(dist_buff[k]);  
 3516               		.loc 1 248 0 discriminator 2
 3517 0e3a D401      		movw r26,r8
 3518 0e3c 2D91      		ld r18,X+
 3519 0e3e 4D01      		movw r8,r26
 3520               	.LVL184:
 3521               	.L145:
 3522               	.LBB1747:
 3523               	.LBB1745:
 3524               	.LBB1740:
 3525               	.LBB1669:
 3526               	.LBB1667:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3527               		.loc 3 123 0
 3528 0e40 9FB7      		in r25,__SREG__
 3529               	.LVL185:
 3530               	.LBB1662:
 3531               	.LBB1663:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3532               		.loc 4 50 0
 3533               	/* #APP */
 3534               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3535 0e42 F894      		cli
 3536               	 ;  0 "" 2
 3537               	.LVL186:
 3538               	/* #NOAPP */
 3539               	.LBE1663:
 3540               	.LBE1662:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 3541               		.loc 3 124 0
 3542 0e44 8091 0000 		lds r24,ep_in_data+1
 3543 0e48 8823      		tst r24
 3544 0e4a 01F4      		brne .+2
 3545 0e4c 00C0      		rjmp .L207
 3546               	.L176:
 125:usb/usb_pipe.h **** 			r = false;
 3547               		.loc 3 125 0
 3548 0e4e 80E0      		ldi r24,lo8(0)
 3549               	.L143:
 3550               	.LBB1664:
 3551               	.LBB1665:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3552               		.loc 4 70 0
 3553 0e50 9FBF      		out __SREG__,r25
 3554               		.loc 4 71 0
 3555               	.LBE1665:
 3556               	.LBE1664:
 3557               	.LBE1667:
 3558               	.LBE1669:
 3559               	.LBE1740:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 3560               		.loc 2 20 0
 3561 0e52 8823      		tst r24
 3562 0e54 01F0      		breq .L145
 3563               	.LVL187:
 3564               	.LBB1741:
 3565               	.LBB1742:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 3566               		.loc 3 175 0
 3567 0e56 8091 0000 		lds r24,ep_in_data+2
 3568 0e5a 9091 0000 		lds r25,ep_in_data+2+1
 3569 0e5e E091 0000 		lds r30,ep_in_pipe_data+2
 3570 0e62 F091 0000 		lds r31,ep_in_pipe_data+2+1
 3571 0e66 E80F      		add r30,r24
 3572 0e68 F91F      		adc r31,r25
 3573 0e6a 2083      		st Z,r18
 3574 0e6c 0196      		adiw r24,1
 3575 0e6e 8093 0000 		sts ep_in_data+2,r24
 3576 0e72 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 3577               		.loc 3 176 0
 3578 0e76 8034      		cpi r24,64
 3579 0e78 9105      		cpc r25,__zero_reg__
 3580 0e7a 01F4      		brne .+2
 3581 0e7c 00C0      		rjmp .L208
 3582               	.LVL188:
 3583               	.L146:
 3584               	.LBE1742:
 3585               	.LBE1741:
 3586               	.LBE1745:
 3587               	.LBE1747:
 247:main.c        ****       for (int k=0; k<len_dist; k++) {
 3588               		.loc 1 247 0 discriminator 2
 3589 0e7e C15D      		subi r28,lo8(-303)
 3590 0e80 DE4F      		sbci r29,hi8(-303)
 3591 0e82 2881      		ld r18,Y
 3592 0e84 3981      		ldd r19,Y+1
 3593 0e86 CF52      		subi r28,lo8(303)
 3594 0e88 D140      		sbci r29,hi8(303)
 3595 0e8a 8216      		cp r8,r18
 3596 0e8c 9306      		cpc r9,r19
 3597 0e8e 01F4      		brne .L157
 3598               	.LVL189:
 3599               	.L142:
 3600               	.LBE1653:
 3601               	.LBB1749:
 3602               	.LBB1750:
 146:main.c        ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 3603               		.loc 1 146 0
 3604 0e90 D301      		movw r26,r6
 3605 0e92 0D90      		ld __tmp_reg__,X+
 3606 0e94 0020      		tst __tmp_reg__
 3607 0e96 01F4      		brne .-6
 3608 0e98 CD01      		movw r24,r26
 3609 0e9a 8619      		sub r24,r6
 3610 0e9c 9709      		sbc r25,r7
 3611 0e9e 0196      		adiw r24,1
 3612               		.cfi_escape 0x2e,0
 3613 0ea0 0E94 0000 		call malloc
 3614               	.LVL190:
 3615 0ea4 E92E      		mov r14,r25
 3616 0ea6 082F      		mov r16,r24
 3617 0ea8 192F      		mov r17,r25
 3618               	.LVL191:
 148:main.c        ****     strcpy(result, s1);
 3619               		.loc 1 148 0
 3620 0eaa C801      		movw r24,r16
 3621 0eac B301      		movw r22,r6
 3622 0eae 0E94 0000 		call strcpy
 149:main.c        ****     strcat(result, s2);
 3623               		.loc 1 149 0
 3624 0eb2 E02F      		mov r30,r16
 3625 0eb4 FE2D      		mov r31,r14
 3626 0eb6 DF01      		movw r26,r30
 3627 0eb8 0D90      		ld __tmp_reg__,X+
 3628 0eba 0020      		tst __tmp_reg__
 3629 0ebc 01F4      		brne .-6
 3630 0ebe 1197      		sbiw r26,1
 3631 0ec0 AE1B      		sub r26,r30
 3632 0ec2 BF0B      		sbc r27,r31
 3633 0ec4 A00F      		add r26,r16
 3634 0ec6 B11F      		adc r27,r17
 3635 0ec8 8CE2      		ldi r24,lo8(44)
 3636 0eca 90E0      		ldi r25,hi8(44)
 3637 0ecc 8D93      		st X+,r24
 3638 0ece 9C93      		st X,r25
 3639               	.LVL192:
 3640               	.LBE1750:
 3641               	.LBE1749:
 3642               	.LBB1751:
 3643               	.LBB1752:
 146:main.c        ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 3644               		.loc 1 146 0
 3645 0ed0 A02F      		mov r26,r16
 3646 0ed2 BE2D      		mov r27,r14
 3647 0ed4 FD01      		movw r30,r26
 3648 0ed6 0190      		ld __tmp_reg__,Z+
 3649 0ed8 0020      		tst __tmp_reg__
 3650 0eda 01F4      		brne .-6
 3651 0edc 9F01      		movw r18,r30
 3652 0ede F201      		movw r30,r4
 3653 0ee0 0190      		ld __tmp_reg__,Z+
 3654 0ee2 0020      		tst __tmp_reg__
 3655 0ee4 01F4      		brne .-6
 3656 0ee6 CF01      		movw r24,r30
 3657 0ee8 0197      		sbiw r24,1
 3658 0eea 8419      		sub r24,r4
 3659 0eec 9509      		sbc r25,r5
 3660 0eee 8A1B      		sub r24,r26
 3661 0ef0 9B0B      		sbc r25,r27
 3662 0ef2 820F      		add r24,r18
 3663 0ef4 931F      		adc r25,r19
 3664 0ef6 0E94 0000 		call malloc
 3665 0efa E82E      		mov r14,r24
 3666 0efc C92E      		mov r12,r25
 3667               	.LVL193:
 148:main.c        ****     strcpy(result, s1);
 3668               		.loc 1 148 0
 3669 0efe B801      		movw r22,r16
 3670 0f00 0E94 0000 		call strcpy
 3671               	.LVL194:
 149:main.c        ****     strcat(result, s2);
 3672               		.loc 1 149 0
 3673 0f04 8E2D      		mov r24,r14
 3674 0f06 9C2D      		mov r25,r12
 3675 0f08 B201      		movw r22,r4
 3676 0f0a 0E94 0000 		call strcat
 3677               	.LBE1752:
 3678               	.LBE1751:
 253:main.c        ****       *result = concat(concat(lat_str, ","), lng_str);
 3679               		.loc 1 253 0
 3680 0f0e CD5C      		subi r28,lo8(-307)
 3681 0f10 DE4F      		sbci r29,hi8(-307)
 3682 0f12 A881      		ld r26,Y
 3683 0f14 B981      		ldd r27,Y+1
 3684 0f16 C353      		subi r28,lo8(307)
 3685 0f18 D140      		sbci r29,hi8(307)
 3686 0f1a EC92      		st X,r14
 3687 0f1c 1196      		adiw r26,1
 3688 0f1e CC92      		st X,r12
 3689 0f20 1197      		sbiw r26,1
 3690 0f22 00C0      		rjmp .L80
 3691               	.LVL195:
 3692               	.L199:
 3693               	.LBB1753:
 3694               	.LBB1392:
 3695               	.LBB1390:
 3696               	.LBB1387:
 3697               	.LBB1314:
 3698               	.LBB1312:
 3699               	.LBB1310:
 3700               	.LBB1305:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 3701               		.loc 5 57 0
 3702 0f24 8091 0000 		lds r24,ep_in_pipe_data+4
 3703 0f28 252F      		mov r18,r21
 3704 0f2a 281B      		sub r18,r24
 3705               	.LBE1305:
 3706               	.LBE1310:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 3707               		.loc 3 127 0
 3708 0f2c 81E0      		ldi r24,lo8(1)
 3709 0f2e 1216      		cp __zero_reg__,r18
 3710 0f30 04F4      		brge .+2
 3711 0f32 00C0      		rjmp .L83
 3712 0f34 00C0      		rjmp .L172
 3713               	.LVL196:
 3714               	.L200:
 3715               	.LBE1312:
 3716               	.LBE1314:
 3717               	.LBE1387:
 3718               	.LBB1388:
 3719               	.LBB1383:
 3720               	.LBB1382:
 3721               	.LBB1381:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 3722               		.loc 3 177 0
 3723 0f36 CFB6      		in r12,__SREG__
 3724               	.LVL197:
 3725               	.LBB1373:
 3726               	.LBB1374:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3727               		.loc 4 50 0
 3728               	/* #APP */
 3729               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3730 0f38 F894      		cli
 3731               	 ;  0 "" 2
 3732               	.LVL198:
 3733               	/* #NOAPP */
 3734               	.LBE1374:
 3735               	.LBE1373:
 3736               		.loc 3 178 0
 3737 0f3a 1092 0000 		sts ep_in_data+2,__zero_reg__
 3738 0f3e 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 3739               	.LVL199:
 3740               	.LBB1375:
 3741               	.LBB1376:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 3742               		.loc 5 81 0
 3743 0f42 8091 0000 		lds r24,ep_in_pipe_data+4
 3744 0f46 8F5F      		subi r24,lo8(-(1))
 3745 0f48 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 3746               		.loc 5 82 0
 3747 0f4c 8091 0000 		lds r24,ep_in_pipe_data+2
 3748 0f50 9091 0000 		lds r25,ep_in_pipe_data+2+1
 3749 0f54 805C      		subi r24,lo8(-(64))
 3750 0f56 9F4F      		sbci r25,hi8(-(64))
 3751 0f58 8093 0000 		sts ep_in_pipe_data+2,r24
 3752 0f5c 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 3753               		.loc 5 84 0
 3754 0f60 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 3755 0f62 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 3756 0f64 9F07      		cpc r25,r31
 3757 0f66 01F4      		brne .L87
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 3758               		.loc 5 85 0
 3759 0f68 2092 0000 		sts ep_in_pipe_data+2,r2
 3760 0f6c 3092 0000 		sts ep_in_pipe_data+2+1,r3
 3761               	.L87:
 3762               	.LVL200:
 3763               	.LBE1376:
 3764               	.LBE1375:
 3765               	.LBB1377:
 3766               	.LBB1371:
 3767               	.LBB1369:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 3768               		.loc 3 80 0
 3769 0f70 1FB7      		in r17,__SREG__
 3770               	.LVL201:
 3771               	.LBB1348:
 3772               	.LBB1349:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 3773               		.loc 4 50 0
 3774               	/* #APP */
 3775               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 3776 0f72 F894      		cli
 3777               	 ;  0 "" 2
 3778               	.LVL202:
 3779               	/* #NOAPP */
 3780               	.LBE1349:
 3781               	.LBE1348:
 3782               	.LBB1350:
 3783               	.LBB1324:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 3784               		.loc 6 220 0
 3785 0f74 8091 0000 		lds r24,endpoints+24
 3786 0f78 8670      		andi r24,lo8(6)
 3787               	.LBE1324:
 3788               	.LBE1350:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 3789               		.loc 3 82 0
 3790 0f7a 01F4      		brne .L209
 3791               	.LVL203:
 3792               	.L88:
 3793               	.LBB1351:
 3794               	.LBB1352:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3795               		.loc 4 70 0
 3796 0f7c 1FBF      		out __SREG__,r17
 3797               		.loc 4 71 0
 3798               	.LVL204:
 3799               	.LBE1352:
 3800               	.LBE1351:
 3801               	.LBE1369:
 3802               	.LBE1371:
 3803               	.LBE1377:
 3804               	.LBB1378:
 3805               	.LBB1379:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 3806               		.loc 4 70 0
 3807 0f7e CFBE      		out __SREG__,r12
 3808               		.loc 4 71 0
 3809 0f80 00C0      		rjmp .L86
 3810               	.LVL205:
 3811               	.L209:
 3812               	.LBE1379:
 3813               	.LBE1378:
 3814               	.LBB1380:
 3815               	.LBB1372:
 3816               	.LBB1370:
 3817               	.LBB1353:
 3818               	.LBB1354:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 3819               		.loc 5 51 0
 3820 0f82 2091 0000 		lds r18,ep_in_pipe_data+4
 3821               	.LBE1354:
 3822               	.LBE1353:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 3823               		.loc 3 83 0
 3824 0f86 1216      		cp __zero_reg__,r18
 3825 0f88 04F0      		brlt .+2
 3826 0f8a 00C0      		rjmp .L89
 3827               	.LBB1355:
 3828               	.LBB1356:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 3829               		.loc 5 62 0
 3830 0f8c 6091 0000 		lds r22,ep_in_pipe_data
 3831 0f90 7091 0000 		lds r23,ep_in_pipe_data+1
 3832               	.LVL206:
 3833               	.LBE1356:
 3834               	.LBE1355:
 3835               	.LBB1357:
 3836               	.LBB1346:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 3837               		.loc 3 68 0
 3838 0f94 3091 0000 		lds r19,ep_in_data
 3839               	.LVL207:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 3840               		.loc 3 69 0
 3841 0f98 832F      		mov r24,r19
 3842 0f9a 90E0      		ldi r25,lo8(0)
 3843 0f9c 41E0      		ldi r20,lo8(1)
 3844 0f9e 8E15      		cp r24,r14
 3845 0fa0 9F05      		cpc r25,r15
 3846 0fa2 01F4      		brne .L90
 3847 0fa4 40E0      		ldi r20,lo8(0)
 3848               	.L90:
 3849 0fa6 4093 0000 		sts ep_in_data,r20
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 3850               		.loc 3 72 0
 3851 0faa 3323      		tst r19
 3852 0fac 01F4      		brne .L91
 3853               	.LVL208:
 3854               	.LBB1343:
 3855               	.LBB1344:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 3856               		.loc 6 168 0
 3857 0fae 6093 0000 		sts endpoints+28,r22
 3858 0fb2 7093 0000 		sts endpoints+28+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3859               		.loc 6 169 0
 3860 0fb6 A092 0000 		sts endpoints+26,r10
 3861 0fba B092 0000 		sts endpoints+26+1,r11
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 3862               		.loc 6 174 0
 3863 0fbe FD01      		movw r30,r26
 3864               	/* #APP */
 3865               	 ;  174 "usb/usb.h" 1
 3866 0fc0 02E2      		ldi r16, 34
 3867 0fc2 0693      		.dc.w 0x9306
 3868               		
 3869               	 ;  0 "" 2
 3870               	.LVL209:
 3871               	/* #NOAPP */
 3872               	.L92:
 3873               	.LBE1344:
 3874               	.LBE1343:
 3875               	.LBE1346:
 3876               	.LBE1357:
 3877               	.LBB1358:
 3878               	.LBB1359:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 3879               		.loc 5 72 0
 3880 0fc4 2150      		subi r18,lo8(-(-1))
 3881 0fc6 2093 0000 		sts ep_in_pipe_data+4,r18
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 3882               		.loc 5 73 0
 3883 0fca CB01      		movw r24,r22
 3884 0fcc 805C      		subi r24,lo8(-(64))
 3885 0fce 9F4F      		sbci r25,hi8(-(64))
 3886 0fd0 8093 0000 		sts ep_in_pipe_data,r24
 3887 0fd4 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 3888               		.loc 5 75 0
 3889 0fd8 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 3890 0fda 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 3891 0fdc 9F07      		cpc r25,r31
 3892 0fde 01F4      		brne .L88
 3893               	.LBE1359:
 3894               	.LBE1358:
 3895               	.LBB1360:
 3896               	.LBB1327:
 3897               		.loc 5 91 0
 3898 0fe0 2092 0000 		sts ep_in_pipe_data,r2
 3899 0fe4 3092 0000 		sts ep_in_pipe_data+1,r3
 3900               	.LVL210:
 3901 0fe8 00C0      		rjmp .L88
 3902               	.LVL211:
 3903               	.L91:
 3904               	.LBE1327:
 3905               	.LBE1360:
 3906               	.LBB1361:
 3907               	.LBB1347:
 3908               	.LBB1345:
 3909               	.LBB1342:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 3910               		.loc 6 168 0
 3911 0fea 6093 0000 		sts endpoints+20,r22
 3912 0fee 7093 0000 		sts endpoints+20+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 3913               		.loc 6 169 0
 3914 0ff2 A092 0000 		sts endpoints+18,r10
 3915 0ff6 B092 0000 		sts endpoints+18+1,r11
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 3916               		.loc 6 176 0
 3917 0ffa FD01      		movw r30,r26
 3918               	/* #APP */
 3919               	 ;  176 "usb/usb.h" 1
 3920 0ffc 04E1      		ldi r16, 20
 3921 0ffe 0693      		.dc.w 0x9306
 3922               		
 3923               	 ;  0 "" 2
 3924               	/* #NOAPP */
 3925 1000 00C0      		rjmp .L92
 3926               	.LVL212:
 3927               	.L89:
 3928               	.LBE1342:
 3929               	.LBE1345:
 3930               	.LBE1347:
 3931               	.LBE1361:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 3932               		.loc 3 87 0
 3933 1002 8091 0000 		lds r24,ep_in_data+1
 3934 1006 8130      		cpi r24,lo8(1)
 3935 1008 01F0      		breq .L210
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 3936               		.loc 3 91 0
 3937 100a 8230      		cpi r24,lo8(2)
 3938 100c 01F0      		breq .+2
 3939 100e 00C0      		rjmp .L88
 3940               	.LVL213:
 3941               	.LBB1362:
 3942               	.LBB1363:
 3943               	.LBB1364:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 3944               		.loc 6 228 0
 3945 1010 8091 0000 		lds r24,endpoints+24
 3946 1014 8670      		andi r24,lo8(6)
 3947               	.LBE1364:
 3948               	.LBE1363:
 3949               	.LBE1362:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 3950               		.loc 3 91 0
 3951 1016 8630      		cpi r24,lo8(6)
 3952 1018 01F0      		breq .+2
 3953 101a 00C0      		rjmp .L88
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 3954               		.loc 3 92 0
 3955 101c 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 3956               		.loc 3 93 0
 3957 1020 1092 0000 		sts ep_in_data+2,__zero_reg__
 3958 1024 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 3959               	.LBB1365:
 3960               	.LBB1328:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 3961               		.loc 5 90 0
 3962 1028 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 3963               		.loc 5 91 0
 3964 102c 2092 0000 		sts ep_in_pipe_data+2,r2
 3965 1030 3092 0000 		sts ep_in_pipe_data+2+1,r3
 3966 1034 2092 0000 		sts ep_in_pipe_data,r2
 3967 1038 3092 0000 		sts ep_in_pipe_data+1,r3
 3968               	.LVL214:
 3969 103c 00C0      		rjmp .L88
 3970               	.LVL215:
 3971               	.L210:
 3972               	.LBE1328:
 3973               	.LBE1365:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 3974               		.loc 3 88 0
 3975 103e 22E0      		ldi r18,lo8(2)
 3976 1040 2093 0000 		sts ep_in_data+1,r18
 3977               	.LBB1366:
 3978               	.LBB1367:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 3979               		.loc 5 62 0
 3980 1044 7091 0000 		lds r23,ep_in_pipe_data
 3981 1048 E091 0000 		lds r30,ep_in_pipe_data+1
 3982               	.LBE1367:
 3983               	.LBE1366:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 3984               		.loc 3 90 0
 3985 104c 2091 0000 		lds r18,ep_in_data+2
 3986 1050 3091 0000 		lds r19,ep_in_data+2+1
 3987               	.LVL216:
 3988               	.LBB1368:
 3989               	.LBB1337:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 3990               		.loc 3 68 0
 3991 1054 6091 0000 		lds r22,ep_in_data
 3992               	.LVL217:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 3993               		.loc 3 69 0
 3994 1058 862F      		mov r24,r22
 3995 105a 90E0      		ldi r25,lo8(0)
 3996 105c 41E0      		ldi r20,lo8(1)
 3997 105e 8E15      		cp r24,r14
 3998 1060 9F05      		cpc r25,r15
 3999 1062 01F4      		brne .L95
 4000 1064 40E0      		ldi r20,lo8(0)
 4001               	.L95:
 4002 1066 4093 0000 		sts ep_in_data,r20
 4003               	.LBB1331:
 4004               	.LBB1332:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4005               		.loc 6 168 0
 4006 106a 872F      		mov r24,r23
 4007 106c 9E2F      		mov r25,r30
 4008               	.LBE1332:
 4009               	.LBE1331:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4010               		.loc 3 72 0
 4011 106e 6623      		tst r22
 4012 1070 01F4      		brne .L96
 4013               	.LVL218:
 4014               	.LBB1334:
 4015               	.LBB1333:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4016               		.loc 6 168 0
 4017 1072 8093 0000 		sts endpoints+28,r24
 4018 1076 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4019               		.loc 6 169 0
 4020 107a 2093 0000 		sts endpoints+26,r18
 4021 107e 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4022               		.loc 6 174 0
 4023 1082 FD01      		movw r30,r26
 4024               	/* #APP */
 4025               	 ;  174 "usb/usb.h" 1
 4026 1084 02E2      		ldi r16, 34
 4027 1086 0693      		.dc.w 0x9306
 4028               		
 4029               	 ;  0 "" 2
 4030               	/* #NOAPP */
 4031 1088 00C0      		rjmp .L88
 4032               	.LVL219:
 4033               	.L96:
 4034               	.LBE1333:
 4035               	.LBE1334:
 4036               	.LBB1335:
 4037               	.LBB1336:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4038               		.loc 6 168 0
 4039 108a 8093 0000 		sts endpoints+20,r24
 4040 108e 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4041               		.loc 6 169 0
 4042 1092 2093 0000 		sts endpoints+18,r18
 4043 1096 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4044               		.loc 6 176 0
 4045 109a FD01      		movw r30,r26
 4046               	/* #APP */
 4047               	 ;  176 "usb/usb.h" 1
 4048 109c 04E1      		ldi r16, 20
 4049 109e 0693      		.dc.w 0x9306
 4050               		
 4051               	 ;  0 "" 2
 4052               	/* #NOAPP */
 4053 10a0 00C0      		rjmp .L88
 4054               	.LVL220:
 4055               	.L201:
 4056               	.LBE1336:
 4057               	.LBE1335:
 4058               	.LBE1337:
 4059               	.LBE1368:
 4060               	.LBE1370:
 4061               	.LBE1372:
 4062               	.LBE1380:
 4063               	.LBE1381:
 4064               	.LBE1382:
 4065               	.LBE1383:
 4066               	.LBE1388:
 4067               	.LBE1390:
 4068               	.LBE1392:
 4069               	.LBE1753:
 4070               	.LBB1754:
 4071               	.LBB1473:
 4072               	.LBB1410:
 4073               	.LBB1407:
 4074               	.LBB1406:
 4075               	.LBB1405:
 4076               	.LBB1400:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 4077               		.loc 5 57 0
 4078 10a2 8091 0000 		lds r24,ep_in_pipe_data+4
 4079 10a6 392F      		mov r19,r25
 4080 10a8 381B      		sub r19,r24
 4081               	.LBE1400:
 4082               	.LBE1405:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 4083               		.loc 3 127 0
 4084 10aa 81E0      		ldi r24,lo8(1)
 4085 10ac 1316      		cp __zero_reg__,r19
 4086 10ae 04F4      		brge .+2
 4087 10b0 00C0      		rjmp .L98
 4088 10b2 00C0      		rjmp .L173
 4089               	.LVL221:
 4090               	.L203:
 4091               	.LBE1406:
 4092               	.LBE1407:
 4093               	.LBE1410:
 4094               	.LBE1473:
 4095               	.LBE1754:
 4096               	.LBB1755:
 4097               	.LBB1571:
 4098               	.LBB1569:
 4099               	.LBB1566:
 4100               	.LBB1493:
 4101               	.LBB1491:
 4102               	.LBB1489:
 4103               	.LBB1484:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 4104               		.loc 5 57 0
 4105 10b4 8091 0000 		lds r24,ep_in_pipe_data+4
 4106 10b8 352F      		mov r19,r21
 4107 10ba 381B      		sub r19,r24
 4108               	.LBE1484:
 4109               	.LBE1489:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 4110               		.loc 3 127 0
 4111 10bc 81E0      		ldi r24,lo8(1)
 4112 10be 1316      		cp __zero_reg__,r19
 4113 10c0 04F4      		brge .+2
 4114 10c2 00C0      		rjmp .L113
 4115 10c4 00C0      		rjmp .L174
 4116               	.LVL222:
 4117               	.L204:
 4118               	.LBE1491:
 4119               	.LBE1493:
 4120               	.LBE1566:
 4121               	.LBB1567:
 4122               	.LBB1562:
 4123               	.LBB1561:
 4124               	.LBB1560:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 4125               		.loc 3 177 0
 4126 10c6 BFB7      		in r27,__SREG__
 4127               	.LVL223:
 4128               	.LBB1552:
 4129               	.LBB1553:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4130               		.loc 4 50 0
 4131               	/* #APP */
 4132               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4133 10c8 F894      		cli
 4134               	 ;  0 "" 2
 4135               	.LVL224:
 4136               	/* #NOAPP */
 4137               	.LBE1553:
 4138               	.LBE1552:
 4139               		.loc 3 178 0
 4140 10ca 1092 0000 		sts ep_in_data+2,__zero_reg__
 4141 10ce 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4142               	.LVL225:
 4143               	.LBB1554:
 4144               	.LBB1555:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 4145               		.loc 5 81 0
 4146 10d2 8091 0000 		lds r24,ep_in_pipe_data+4
 4147 10d6 8F5F      		subi r24,lo8(-(1))
 4148 10d8 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 4149               		.loc 5 82 0
 4150 10dc 8091 0000 		lds r24,ep_in_pipe_data+2
 4151 10e0 9091 0000 		lds r25,ep_in_pipe_data+2+1
 4152 10e4 805C      		subi r24,lo8(-(64))
 4153 10e6 9F4F      		sbci r25,hi8(-(64))
 4154 10e8 8093 0000 		sts ep_in_pipe_data+2,r24
 4155 10ec 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4156               		.loc 5 84 0
 4157 10f0 E0E0      		ldi r30,hi8(ep_in_pipe_buffer+512)
 4158 10f2 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4159 10f4 9E07      		cpc r25,r30
 4160 10f6 01F4      		brne .L117
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 4161               		.loc 5 85 0
 4162 10f8 2092 0000 		sts ep_in_pipe_data+2,r2
 4163 10fc 3092 0000 		sts ep_in_pipe_data+2+1,r3
 4164               	.L117:
 4165               	.LVL226:
 4166               	.LBE1555:
 4167               	.LBE1554:
 4168               	.LBB1556:
 4169               	.LBB1550:
 4170               	.LBB1548:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 4171               		.loc 3 80 0
 4172 1100 AFB7      		in r26,__SREG__
 4173               	.LVL227:
 4174               	.LBB1527:
 4175               	.LBB1528:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4176               		.loc 4 50 0
 4177               	/* #APP */
 4178               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4179 1102 F894      		cli
 4180               	 ;  0 "" 2
 4181               	.LVL228:
 4182               	/* #NOAPP */
 4183               	.LBE1528:
 4184               	.LBE1527:
 4185               	.LBB1529:
 4186               	.LBB1503:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 4187               		.loc 6 220 0
 4188 1104 8091 0000 		lds r24,endpoints+24
 4189 1108 8670      		andi r24,lo8(6)
 4190               	.LBE1503:
 4191               	.LBE1529:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 4192               		.loc 3 82 0
 4193 110a 01F4      		brne .L211
 4194               	.LVL229:
 4195               	.L118:
 4196               	.LBB1530:
 4197               	.LBB1531:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4198               		.loc 4 70 0
 4199 110c AFBF      		out __SREG__,r26
 4200               		.loc 4 71 0
 4201               	.LVL230:
 4202               	.LBE1531:
 4203               	.LBE1530:
 4204               	.LBE1548:
 4205               	.LBE1550:
 4206               	.LBE1556:
 4207               	.LBB1557:
 4208               	.LBB1558:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4209               		.loc 4 70 0
 4210 110e BFBF      		out __SREG__,r27
 4211               		.loc 4 71 0
 4212 1110 00C0      		rjmp .L116
 4213               	.LVL231:
 4214               	.L211:
 4215               	.LBE1558:
 4216               	.LBE1557:
 4217               	.LBB1559:
 4218               	.LBB1551:
 4219               	.LBB1549:
 4220               	.LBB1532:
 4221               	.LBB1533:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 4222               		.loc 5 51 0
 4223 1112 2091 0000 		lds r18,ep_in_pipe_data+4
 4224               	.LBE1533:
 4225               	.LBE1532:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 4226               		.loc 3 83 0
 4227 1116 1216      		cp __zero_reg__,r18
 4228 1118 04F0      		brlt .+2
 4229 111a 00C0      		rjmp .L119
 4230               	.LBB1534:
 4231               	.LBB1535:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4232               		.loc 5 62 0
 4233 111c 6091 0000 		lds r22,ep_in_pipe_data
 4234 1120 7091 0000 		lds r23,ep_in_pipe_data+1
 4235               	.LVL232:
 4236               	.LBE1535:
 4237               	.LBE1534:
 4238               	.LBB1536:
 4239               	.LBB1525:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4240               		.loc 3 68 0
 4241 1124 3091 0000 		lds r19,ep_in_data
 4242               	.LVL233:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4243               		.loc 3 69 0
 4244 1128 832F      		mov r24,r19
 4245 112a 90E0      		ldi r25,lo8(0)
 4246 112c 41E0      		ldi r20,lo8(1)
 4247 112e 8C15      		cp r24,r12
 4248 1130 9D05      		cpc r25,r13
 4249 1132 01F4      		brne .L120
 4250 1134 40E0      		ldi r20,lo8(0)
 4251               	.L120:
 4252 1136 4093 0000 		sts ep_in_data,r20
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4253               		.loc 3 72 0
 4254 113a 3323      		tst r19
 4255 113c 01F4      		brne .L121
 4256               	.LVL234:
 4257               	.LBB1522:
 4258               	.LBB1523:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4259               		.loc 6 168 0
 4260 113e 6093 0000 		sts endpoints+28,r22
 4261 1142 7093 0000 		sts endpoints+28+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4262               		.loc 6 169 0
 4263 1146 A092 0000 		sts endpoints+26,r10
 4264 114a B092 0000 		sts endpoints+26+1,r11
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4265               		.loc 6 174 0
 4266 114e F701      		movw r30,r14
 4267               	/* #APP */
 4268               	 ;  174 "usb/usb.h" 1
 4269 1150 02E2      		ldi r16, 34
 4270 1152 0693      		.dc.w 0x9306
 4271               		
 4272               	 ;  0 "" 2
 4273               	.LVL235:
 4274               	/* #NOAPP */
 4275               	.L122:
 4276               	.LBE1523:
 4277               	.LBE1522:
 4278               	.LBE1525:
 4279               	.LBE1536:
 4280               	.LBB1537:
 4281               	.LBB1538:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 4282               		.loc 5 72 0
 4283 1154 2150      		subi r18,lo8(-(-1))
 4284 1156 2093 0000 		sts ep_in_pipe_data+4,r18
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 4285               		.loc 5 73 0
 4286 115a CB01      		movw r24,r22
 4287 115c 805C      		subi r24,lo8(-(64))
 4288 115e 9F4F      		sbci r25,hi8(-(64))
 4289 1160 8093 0000 		sts ep_in_pipe_data,r24
 4290 1164 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4291               		.loc 5 75 0
 4292 1168 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 4293 116a 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4294 116c 9F07      		cpc r25,r31
 4295 116e 01F4      		brne .L118
 4296               	.LBE1538:
 4297               	.LBE1537:
 4298               	.LBB1539:
 4299               	.LBB1506:
 4300               		.loc 5 91 0
 4301 1170 2092 0000 		sts ep_in_pipe_data,r2
 4302 1174 3092 0000 		sts ep_in_pipe_data+1,r3
 4303               	.LVL236:
 4304 1178 00C0      		rjmp .L118
 4305               	.LVL237:
 4306               	.L121:
 4307               	.LBE1506:
 4308               	.LBE1539:
 4309               	.LBB1540:
 4310               	.LBB1526:
 4311               	.LBB1524:
 4312               	.LBB1521:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4313               		.loc 6 168 0
 4314 117a 6093 0000 		sts endpoints+20,r22
 4315 117e 7093 0000 		sts endpoints+20+1,r23
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4316               		.loc 6 169 0
 4317 1182 A092 0000 		sts endpoints+18,r10
 4318 1186 B092 0000 		sts endpoints+18+1,r11
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4319               		.loc 6 176 0
 4320 118a F701      		movw r30,r14
 4321               	/* #APP */
 4322               	 ;  176 "usb/usb.h" 1
 4323 118c 04E1      		ldi r16, 20
 4324 118e 0693      		.dc.w 0x9306
 4325               		
 4326               	 ;  0 "" 2
 4327               	/* #NOAPP */
 4328 1190 00C0      		rjmp .L122
 4329               	.LVL238:
 4330               	.L119:
 4331               	.LBE1521:
 4332               	.LBE1524:
 4333               	.LBE1526:
 4334               	.LBE1540:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 4335               		.loc 3 87 0
 4336 1192 8091 0000 		lds r24,ep_in_data+1
 4337 1196 8130      		cpi r24,lo8(1)
 4338 1198 01F0      		breq .L212
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4339               		.loc 3 91 0
 4340 119a 8230      		cpi r24,lo8(2)
 4341 119c 01F0      		breq .+2
 4342 119e 00C0      		rjmp .L118
 4343               	.LVL239:
 4344               	.LBB1541:
 4345               	.LBB1542:
 4346               	.LBB1543:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 4347               		.loc 6 228 0
 4348 11a0 8091 0000 		lds r24,endpoints+24
 4349 11a4 8670      		andi r24,lo8(6)
 4350               	.LBE1543:
 4351               	.LBE1542:
 4352               	.LBE1541:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4353               		.loc 3 91 0
 4354 11a6 8630      		cpi r24,lo8(6)
 4355 11a8 01F0      		breq .+2
 4356 11aa 00C0      		rjmp .L118
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 4357               		.loc 3 92 0
 4358 11ac 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 4359               		.loc 3 93 0
 4360 11b0 1092 0000 		sts ep_in_data+2,__zero_reg__
 4361 11b4 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4362               	.LBB1544:
 4363               	.LBB1507:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 4364               		.loc 5 90 0
 4365 11b8 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 4366               		.loc 5 91 0
 4367 11bc 2092 0000 		sts ep_in_pipe_data+2,r2
 4368 11c0 3092 0000 		sts ep_in_pipe_data+2+1,r3
 4369 11c4 2092 0000 		sts ep_in_pipe_data,r2
 4370 11c8 3092 0000 		sts ep_in_pipe_data+1,r3
 4371               	.LVL240:
 4372 11cc 00C0      		rjmp .L118
 4373               	.LVL241:
 4374               	.L212:
 4375               	.LBE1507:
 4376               	.LBE1544:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 4377               		.loc 3 88 0
 4378 11ce 1093 0000 		sts ep_in_data+1,r17
 4379               	.LBB1545:
 4380               	.LBB1546:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4381               		.loc 5 62 0
 4382 11d2 7091 0000 		lds r23,ep_in_pipe_data
 4383 11d6 E091 0000 		lds r30,ep_in_pipe_data+1
 4384               	.LBE1546:
 4385               	.LBE1545:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 4386               		.loc 3 90 0
 4387 11da 2091 0000 		lds r18,ep_in_data+2
 4388 11de 3091 0000 		lds r19,ep_in_data+2+1
 4389               	.LVL242:
 4390               	.LBB1547:
 4391               	.LBB1516:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4392               		.loc 3 68 0
 4393 11e2 6091 0000 		lds r22,ep_in_data
 4394               	.LVL243:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4395               		.loc 3 69 0
 4396 11e6 862F      		mov r24,r22
 4397 11e8 90E0      		ldi r25,lo8(0)
 4398 11ea 41E0      		ldi r20,lo8(1)
 4399 11ec 8C15      		cp r24,r12
 4400 11ee 9D05      		cpc r25,r13
 4401 11f0 01F4      		brne .L125
 4402 11f2 40E0      		ldi r20,lo8(0)
 4403               	.L125:
 4404 11f4 4093 0000 		sts ep_in_data,r20
 4405               	.LBB1510:
 4406               	.LBB1511:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4407               		.loc 6 168 0
 4408 11f8 872F      		mov r24,r23
 4409 11fa 9E2F      		mov r25,r30
 4410               	.LBE1511:
 4411               	.LBE1510:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4412               		.loc 3 72 0
 4413 11fc 6623      		tst r22
 4414 11fe 01F4      		brne .L126
 4415               	.LVL244:
 4416               	.LBB1513:
 4417               	.LBB1512:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4418               		.loc 6 168 0
 4419 1200 8093 0000 		sts endpoints+28,r24
 4420 1204 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4421               		.loc 6 169 0
 4422 1208 2093 0000 		sts endpoints+26,r18
 4423 120c 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4424               		.loc 6 174 0
 4425 1210 F701      		movw r30,r14
 4426               	/* #APP */
 4427               	 ;  174 "usb/usb.h" 1
 4428 1212 02E2      		ldi r16, 34
 4429 1214 0693      		.dc.w 0x9306
 4430               		
 4431               	 ;  0 "" 2
 4432               	/* #NOAPP */
 4433 1216 00C0      		rjmp .L118
 4434               	.LVL245:
 4435               	.L126:
 4436               	.LBE1512:
 4437               	.LBE1513:
 4438               	.LBB1514:
 4439               	.LBB1515:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4440               		.loc 6 168 0
 4441 1218 8093 0000 		sts endpoints+20,r24
 4442 121c 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4443               		.loc 6 169 0
 4444 1220 2093 0000 		sts endpoints+18,r18
 4445 1224 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4446               		.loc 6 176 0
 4447 1228 F701      		movw r30,r14
 4448               	/* #APP */
 4449               	 ;  176 "usb/usb.h" 1
 4450 122a 04E1      		ldi r16, 20
 4451 122c 0693      		.dc.w 0x9306
 4452               		
 4453               	 ;  0 "" 2
 4454               	/* #NOAPP */
 4455 122e 00C0      		rjmp .L118
 4456               	.LVL246:
 4457               	.L205:
 4458               	.LBE1515:
 4459               	.LBE1514:
 4460               	.LBE1516:
 4461               	.LBE1547:
 4462               	.LBE1549:
 4463               	.LBE1551:
 4464               	.LBE1559:
 4465               	.LBE1560:
 4466               	.LBE1561:
 4467               	.LBE1562:
 4468               	.LBE1567:
 4469               	.LBE1569:
 4470               	.LBE1571:
 4471               	.LBE1755:
 4472               	.LBB1756:
 4473               	.LBB1650:
 4474               	.LBB1589:
 4475               	.LBB1586:
 4476               	.LBB1585:
 4477               	.LBB1584:
 4478               	.LBB1579:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 4479               		.loc 5 57 0
 4480 1230 8091 0000 		lds r24,ep_in_pipe_data+4
 4481 1234 392F      		mov r19,r25
 4482 1236 381B      		sub r19,r24
 4483               	.LBE1579:
 4484               	.LBE1584:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 4485               		.loc 3 127 0
 4486 1238 81E0      		ldi r24,lo8(1)
 4487 123a 1316      		cp __zero_reg__,r19
 4488 123c 04F4      		brge .+2
 4489 123e 00C0      		rjmp .L128
 4490 1240 00C0      		rjmp .L175
 4491               	.LVL247:
 4492               	.L198:
 4493               	.LBE1585:
 4494               	.LBE1586:
 4495               	.LBE1589:
 4496               	.LBE1650:
 4497               	.LBE1756:
 4498               	.LBE1296:
 4499               	.LBB1762:
 4500               	.LBB1293:
 4501               	.LBB1290:
 4502               	.LBB1262:
 4503               	.LBB1259:
 4504               	.LBB1256:
 4505               	.LBB1253:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 4506               		.loc 3 88 0
 4507 1242 82E0      		ldi r24,lo8(2)
 4508 1244 8093 0000 		sts ep_in_data+1,r24
 4509               	.LBB1242:
 4510               	.LBB1243:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4511               		.loc 5 62 0
 4512 1248 6091 0000 		lds r22,ep_in_pipe_data
 4513 124c 4091 0000 		lds r20,ep_in_pipe_data+1
 4514               	.LBE1243:
 4515               	.LBE1242:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 4516               		.loc 3 90 0
 4517 1250 8091 0000 		lds r24,ep_in_data+2
 4518 1254 9091 0000 		lds r25,ep_in_data+2+1
 4519               	.LVL248:
 4520               	.LBB1244:
 4521               	.LBB1245:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4522               		.loc 3 68 0
 4523 1258 2091 0000 		lds r18,ep_in_data
 4524               	.LVL249:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4525               		.loc 3 69 0
 4526 125c 31E0      		ldi r19,lo8(1)
 4527 125e 2130      		cpi r18,lo8(1)
 4528 1260 01F4      		brne .L165
 4529 1262 30E0      		ldi r19,lo8(0)
 4530               	.L165:
 4531 1264 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4532               		.loc 3 72 0
 4533 1268 2223      		tst r18
 4534 126a 01F0      		breq .+2
 4535 126c 00C0      		rjmp .L166
 4536               	.LVL250:
 4537               	.LBB1246:
 4538               	.LBB1247:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4539               		.loc 6 168 0
 4540 126e 262F      		mov r18,r22
 4541 1270 342F      		mov r19,r20
 4542 1272 2093 0000 		sts endpoints+28,r18
 4543 1276 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4544               		.loc 6 169 0
 4545 127a 8093 0000 		sts endpoints+26,r24
 4546 127e 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4547               		.loc 6 174 0
 4548 1282 E0E0      		ldi r30,lo8(endpoints+24)
 4549 1284 F0E0      		ldi r31,hi8(endpoints+24)
 4550               	.LVL251:
 4551               	/* #APP */
 4552               	 ;  174 "usb/usb.h" 1
 4553 1286 02E2      		ldi r16, 34
 4554 1288 0693      		.dc.w 0x9306
 4555               		
 4556               	 ;  0 "" 2
 4557               	/* #NOAPP */
 4558 128a 00C0      		rjmp .L158
 4559               	.LVL252:
 4560               	.L202:
 4561               	.LBE1247:
 4562               	.LBE1246:
 4563               	.LBE1245:
 4564               	.LBE1244:
 4565               	.LBE1253:
 4566               	.LBE1256:
 4567               	.LBE1259:
 4568               	.LBE1262:
 4569               	.LBE1290:
 4570               	.LBE1293:
 4571               	.LBE1762:
 4572               	.LBB1763:
 4573               	.LBB1757:
 4574               	.LBB1474:
 4575               	.LBB1411:
 4576               	.LBB1412:
 4577               	.LBB1413:
 4578               	.LBB1414:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 4579               		.loc 3 177 0
 4580 128c 7FB7      		in r23,__SREG__
 4581               	.LVL253:
 4582               	.LBB1415:
 4583               	.LBB1416:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4584               		.loc 4 50 0
 4585               	/* #APP */
 4586               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4587 128e F894      		cli
 4588               	 ;  0 "" 2
 4589               	.LVL254:
 4590               	/* #NOAPP */
 4591               	.LBE1416:
 4592               	.LBE1415:
 4593               		.loc 3 178 0
 4594 1290 1092 0000 		sts ep_in_data+2,__zero_reg__
 4595 1294 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4596               	.LVL255:
 4597               	.LBB1417:
 4598               	.LBB1418:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 4599               		.loc 5 81 0
 4600 1298 8091 0000 		lds r24,ep_in_pipe_data+4
 4601 129c 8F5F      		subi r24,lo8(-(1))
 4602 129e 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 4603               		.loc 5 82 0
 4604 12a2 8091 0000 		lds r24,ep_in_pipe_data+2
 4605 12a6 9091 0000 		lds r25,ep_in_pipe_data+2+1
 4606 12aa 805C      		subi r24,lo8(-(64))
 4607 12ac 9F4F      		sbci r25,hi8(-(64))
 4608 12ae 8093 0000 		sts ep_in_pipe_data+2,r24
 4609 12b2 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4610               		.loc 5 84 0
 4611 12b6 30E0      		ldi r19,hi8(ep_in_pipe_buffer+512)
 4612 12b8 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4613 12ba 9307      		cpc r25,r19
 4614 12bc 01F4      		brne .L102
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 4615               		.loc 5 85 0
 4616 12be 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 4617 12c0 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 4618 12c2 8093 0000 		sts ep_in_pipe_data+2,r24
 4619 12c6 9093 0000 		sts ep_in_pipe_data+2+1,r25
 4620               	.L102:
 4621               	.LVL256:
 4622               	.LBE1418:
 4623               	.LBE1417:
 4624               	.LBB1419:
 4625               	.LBB1420:
 4626               	.LBB1421:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 4627               		.loc 3 80 0
 4628 12ca 6FB7      		in r22,__SREG__
 4629               	.LVL257:
 4630               	.LBB1422:
 4631               	.LBB1423:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4632               		.loc 4 50 0
 4633               	/* #APP */
 4634               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4635 12cc F894      		cli
 4636               	 ;  0 "" 2
 4637               	.LVL258:
 4638               	/* #NOAPP */
 4639               	.LBE1423:
 4640               	.LBE1422:
 4641               	.LBB1424:
 4642               	.LBB1425:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 4643               		.loc 6 220 0
 4644 12ce 8091 0000 		lds r24,endpoints+24
 4645 12d2 8670      		andi r24,lo8(6)
 4646               	.LBE1425:
 4647               	.LBE1424:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 4648               		.loc 3 82 0
 4649 12d4 01F0      		breq .L103
 4650               	.LBB1426:
 4651               	.LBB1427:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 4652               		.loc 5 51 0
 4653 12d6 4091 0000 		lds r20,ep_in_pipe_data+4
 4654               	.LBE1427:
 4655               	.LBE1426:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 4656               		.loc 3 83 0
 4657 12da 1416      		cp __zero_reg__,r20
 4658 12dc 04F0      		brlt .+2
 4659 12de 00C0      		rjmp .L104
 4660               	.LBB1428:
 4661               	.LBB1429:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4662               		.loc 5 62 0
 4663 12e0 2091 0000 		lds r18,ep_in_pipe_data
 4664 12e4 3091 0000 		lds r19,ep_in_pipe_data+1
 4665               	.LVL259:
 4666               	.LBE1429:
 4667               	.LBE1428:
 4668               	.LBB1430:
 4669               	.LBB1431:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4670               		.loc 3 68 0
 4671 12e8 9091 0000 		lds r25,ep_in_data
 4672               	.LVL260:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4673               		.loc 3 69 0
 4674 12ec 81E0      		ldi r24,lo8(1)
 4675 12ee 9130      		cpi r25,lo8(1)
 4676 12f0 01F4      		brne .L105
 4677 12f2 80E0      		ldi r24,lo8(0)
 4678               	.L105:
 4679 12f4 8093 0000 		sts ep_in_data,r24
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4680               		.loc 3 72 0
 4681 12f8 9923      		tst r25
 4682 12fa 01F4      		brne .L106
 4683               	.LVL261:
 4684               	.LBB1432:
 4685               	.LBB1433:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4686               		.loc 6 168 0
 4687 12fc 2093 0000 		sts endpoints+28,r18
 4688 1300 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4689               		.loc 6 169 0
 4690 1304 80E4      		ldi r24,lo8(64)
 4691 1306 90E0      		ldi r25,hi8(64)
 4692 1308 8093 0000 		sts endpoints+26,r24
 4693 130c 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4694               		.loc 6 174 0
 4695 1310 E0E0      		ldi r30,lo8(endpoints+24)
 4696 1312 F0E0      		ldi r31,hi8(endpoints+24)
 4697               	.LVL262:
 4698               	/* #APP */
 4699               	 ;  174 "usb/usb.h" 1
 4700 1314 02E2      		ldi r16, 34
 4701 1316 0693      		.dc.w 0x9306
 4702               		
 4703               	 ;  0 "" 2
 4704               	.LVL263:
 4705               	/* #NOAPP */
 4706               	.L107:
 4707               	.LBE1433:
 4708               	.LBE1432:
 4709               	.LBE1431:
 4710               	.LBE1430:
 4711               	.LBB1437:
 4712               	.LBB1438:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 4713               		.loc 5 72 0
 4714 1318 842F      		mov r24,r20
 4715 131a 8150      		subi r24,lo8(-(-1))
 4716 131c 8093 0000 		sts ep_in_pipe_data+4,r24
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 4717               		.loc 5 73 0
 4718 1320 C901      		movw r24,r18
 4719 1322 805C      		subi r24,lo8(-(64))
 4720 1324 9F4F      		sbci r25,hi8(-(64))
 4721 1326 8093 0000 		sts ep_in_pipe_data,r24
 4722 132a 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4723               		.loc 5 75 0
 4724 132e A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 4725 1330 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4726 1332 9A07      		cpc r25,r26
 4727 1334 01F0      		breq .L213
 4728               	.LVL264:
 4729               	.L103:
 4730               	.LBE1438:
 4731               	.LBE1437:
 4732               	.LBB1440:
 4733               	.LBB1441:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4734               		.loc 4 70 0
 4735 1336 6FBF      		out __SREG__,r22
 4736               		.loc 4 71 0
 4737               	.LVL265:
 4738               	.LBE1441:
 4739               	.LBE1440:
 4740               	.LBE1421:
 4741               	.LBE1420:
 4742               	.LBE1419:
 4743               	.LBB1465:
 4744               	.LBB1466:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 4745               		.loc 4 70 0
 4746 1338 7FBF      		out __SREG__,r23
 4747               		.loc 4 71 0
 4748 133a 00C0      		rjmp .L101
 4749               	.LVL266:
 4750               	.L106:
 4751               	.LBE1466:
 4752               	.LBE1465:
 4753               	.LBB1467:
 4754               	.LBB1463:
 4755               	.LBB1461:
 4756               	.LBB1442:
 4757               	.LBB1436:
 4758               	.LBB1434:
 4759               	.LBB1435:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4760               		.loc 6 168 0
 4761 133c 2093 0000 		sts endpoints+20,r18
 4762 1340 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4763               		.loc 6 169 0
 4764 1344 80E4      		ldi r24,lo8(64)
 4765 1346 90E0      		ldi r25,hi8(64)
 4766 1348 8093 0000 		sts endpoints+18,r24
 4767 134c 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 4768               		.loc 6 176 0
 4769 1350 E0E0      		ldi r30,lo8(endpoints+24)
 4770 1352 F0E0      		ldi r31,hi8(endpoints+24)
 4771               	/* #APP */
 4772               	 ;  176 "usb/usb.h" 1
 4773 1354 04E1      		ldi r16, 20
 4774 1356 0693      		.dc.w 0x9306
 4775               		
 4776               	 ;  0 "" 2
 4777               	/* #NOAPP */
 4778 1358 00C0      		rjmp .L107
 4779               	.LVL267:
 4780               	.L104:
 4781               	.LBE1435:
 4782               	.LBE1434:
 4783               	.LBE1436:
 4784               	.LBE1442:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 4785               		.loc 3 87 0
 4786 135a 8091 0000 		lds r24,ep_in_data+1
 4787 135e 8130      		cpi r24,lo8(1)
 4788 1360 01F0      		breq .L214
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4789               		.loc 3 91 0
 4790 1362 8230      		cpi r24,lo8(2)
 4791 1364 01F4      		brne .L103
 4792               	.LVL268:
 4793               	.LBB1443:
 4794               	.LBB1444:
 4795               	.LBB1445:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 4796               		.loc 6 228 0
 4797 1366 8091 0000 		lds r24,endpoints+24
 4798 136a 8670      		andi r24,lo8(6)
 4799               	.LBE1445:
 4800               	.LBE1444:
 4801               	.LBE1443:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 4802               		.loc 3 91 0
 4803 136c 8630      		cpi r24,lo8(6)
 4804 136e 01F4      		brne .L103
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 4805               		.loc 3 92 0
 4806 1370 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 4807               		.loc 3 93 0
 4808 1374 1092 0000 		sts ep_in_data+2,__zero_reg__
 4809 1378 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4810               	.LBB1446:
 4811               	.LBB1447:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 4812               		.loc 5 90 0
 4813 137c 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 4814               		.loc 5 91 0
 4815 1380 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 4816 1382 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 4817 1384 8093 0000 		sts ep_in_pipe_data+2,r24
 4818 1388 9093 0000 		sts ep_in_pipe_data+2+1,r25
 4819 138c 8093 0000 		sts ep_in_pipe_data,r24
 4820 1390 9093 0000 		sts ep_in_pipe_data+1,r25
 4821               	.LVL269:
 4822 1394 00C0      		rjmp .L103
 4823               	.LVL270:
 4824               	.L213:
 4825               	.LBE1447:
 4826               	.LBE1446:
 4827               	.LBB1448:
 4828               	.LBB1439:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 4829               		.loc 5 76 0
 4830 1396 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 4831 1398 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 4832 139a 8093 0000 		sts ep_in_pipe_data,r24
 4833 139e 9093 0000 		sts ep_in_pipe_data+1,r25
 4834 13a2 00C0      		rjmp .L103
 4835               	.LVL271:
 4836               	.L214:
 4837               	.LBE1439:
 4838               	.LBE1448:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 4839               		.loc 3 88 0
 4840 13a4 82E0      		ldi r24,lo8(2)
 4841 13a6 8093 0000 		sts ep_in_data+1,r24
 4842               	.LBB1449:
 4843               	.LBB1450:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 4844               		.loc 5 62 0
 4845 13aa 4091 0000 		lds r20,ep_in_pipe_data
 4846 13ae 5091 0000 		lds r21,ep_in_pipe_data+1
 4847               	.LBE1450:
 4848               	.LBE1449:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 4849               		.loc 3 90 0
 4850 13b2 8091 0000 		lds r24,ep_in_data+2
 4851 13b6 9091 0000 		lds r25,ep_in_data+2+1
 4852               	.LVL272:
 4853               	.LBB1451:
 4854               	.LBB1452:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 4855               		.loc 3 68 0
 4856 13ba 3091 0000 		lds r19,ep_in_data
 4857               	.LVL273:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 4858               		.loc 3 69 0
 4859 13be 21E0      		ldi r18,lo8(1)
 4860 13c0 3130      		cpi r19,lo8(1)
 4861 13c2 01F4      		brne .L110
 4862 13c4 20E0      		ldi r18,lo8(0)
 4863               	.L110:
 4864 13c6 2093 0000 		sts ep_in_data,r18
 4865               	.LBB1453:
 4866               	.LBB1454:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4867               		.loc 6 168 0
 4868 13ca 242F      		mov r18,r20
 4869               	.LBE1454:
 4870               	.LBE1453:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 4871               		.loc 3 72 0
 4872 13cc 3323      		tst r19
 4873 13ce 01F0      		breq .+2
 4874 13d0 00C0      		rjmp .L111
 4875               	.LVL274:
 4876               	.LBB1456:
 4877               	.LBB1455:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 4878               		.loc 6 168 0
 4879 13d2 352F      		mov r19,r21
 4880 13d4 2093 0000 		sts endpoints+28,r18
 4881 13d8 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 4882               		.loc 6 169 0
 4883 13dc 8093 0000 		sts endpoints+26,r24
 4884 13e0 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 4885               		.loc 6 174 0
 4886 13e4 E0E0      		ldi r30,lo8(endpoints+24)
 4887 13e6 F0E0      		ldi r31,hi8(endpoints+24)
 4888               	.LVL275:
 4889               	/* #APP */
 4890               	 ;  174 "usb/usb.h" 1
 4891 13e8 02E2      		ldi r16, 34
 4892 13ea 0693      		.dc.w 0x9306
 4893               		
 4894               	 ;  0 "" 2
 4895               	/* #NOAPP */
 4896 13ec 00C0      		rjmp .L103
 4897               	.LVL276:
 4898               	.L207:
 4899               	.LBE1455:
 4900               	.LBE1456:
 4901               	.LBE1452:
 4902               	.LBE1451:
 4903               	.LBE1461:
 4904               	.LBE1463:
 4905               	.LBE1467:
 4906               	.LBE1414:
 4907               	.LBE1413:
 4908               	.LBE1412:
 4909               	.LBE1411:
 4910               	.LBE1474:
 4911               	.LBE1757:
 4912               	.LBB1758:
 4913               	.LBB1748:
 4914               	.LBB1746:
 4915               	.LBB1743:
 4916               	.LBB1670:
 4917               	.LBB1668:
 4918               	.LBB1666:
 4919               	.LBB1661:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 4920               		.loc 5 57 0
 4921 13ee 8091 0000 		lds r24,ep_in_pipe_data+4
 4922 13f2 372F      		mov r19,r23
 4923 13f4 381B      		sub r19,r24
 4924               	.LBE1661:
 4925               	.LBE1666:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 4926               		.loc 3 127 0
 4927 13f6 81E0      		ldi r24,lo8(1)
 4928 13f8 1316      		cp __zero_reg__,r19
 4929 13fa 04F4      		brge .+2
 4930 13fc 00C0      		rjmp .L143
 4931 13fe 00C0      		rjmp .L176
 4932               	.LVL277:
 4933               	.L208:
 4934               	.LBE1668:
 4935               	.LBE1670:
 4936               	.LBE1743:
 4937               	.LBB1744:
 4938               	.LBB1739:
 4939               	.LBB1738:
 4940               	.LBB1737:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 4941               		.loc 3 177 0
 4942 1400 BFB7      		in r27,__SREG__
 4943               	.LVL278:
 4944               	.LBB1729:
 4945               	.LBB1730:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4946               		.loc 4 50 0
 4947               	/* #APP */
 4948               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4949 1402 F894      		cli
 4950               	 ;  0 "" 2
 4951               	.LVL279:
 4952               	/* #NOAPP */
 4953               	.LBE1730:
 4954               	.LBE1729:
 4955               		.loc 3 178 0
 4956 1404 1092 0000 		sts ep_in_data+2,__zero_reg__
 4957 1408 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 4958               	.LVL280:
 4959               	.LBB1731:
 4960               	.LBB1732:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 4961               		.loc 5 81 0
 4962 140c 8091 0000 		lds r24,ep_in_pipe_data+4
 4963 1410 8F5F      		subi r24,lo8(-(1))
 4964 1412 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 4965               		.loc 5 82 0
 4966 1416 8091 0000 		lds r24,ep_in_pipe_data+2
 4967 141a 9091 0000 		lds r25,ep_in_pipe_data+2+1
 4968 141e 805C      		subi r24,lo8(-(64))
 4969 1420 9F4F      		sbci r25,hi8(-(64))
 4970 1422 8093 0000 		sts ep_in_pipe_data+2,r24
 4971 1426 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 4972               		.loc 5 84 0
 4973 142a E0E0      		ldi r30,hi8(ep_in_pipe_buffer+512)
 4974 142c 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 4975 142e 9E07      		cpc r25,r30
 4976 1430 01F4      		brne .L147
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 4977               		.loc 5 85 0
 4978 1432 2092 0000 		sts ep_in_pipe_data+2,r2
 4979 1436 3092 0000 		sts ep_in_pipe_data+2+1,r3
 4980               	.L147:
 4981               	.LVL281:
 4982               	.LBE1732:
 4983               	.LBE1731:
 4984               	.LBB1733:
 4985               	.LBB1727:
 4986               	.LBB1725:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 4987               		.loc 3 80 0
 4988 143a AFB7      		in r26,__SREG__
 4989               	.LVL282:
 4990               	.LBB1704:
 4991               	.LBB1705:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 4992               		.loc 4 50 0
 4993               	/* #APP */
 4994               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 4995 143c F894      		cli
 4996               	 ;  0 "" 2
 4997               	.LVL283:
 4998               	/* #NOAPP */
 4999               	.LBE1705:
 5000               	.LBE1704:
 5001               	.LBB1706:
 5002               	.LBB1680:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 5003               		.loc 6 220 0
 5004 143e 8091 0000 		lds r24,endpoints+24
 5005 1442 8670      		andi r24,lo8(6)
 5006               	.LBE1680:
 5007               	.LBE1706:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 5008               		.loc 3 82 0
 5009 1444 01F4      		brne .L215
 5010               	.LVL284:
 5011               	.L148:
 5012               	.LBB1707:
 5013               	.LBB1708:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5014               		.loc 4 70 0
 5015 1446 AFBF      		out __SREG__,r26
 5016               		.loc 4 71 0
 5017               	.LVL285:
 5018               	.LBE1708:
 5019               	.LBE1707:
 5020               	.LBE1725:
 5021               	.LBE1727:
 5022               	.LBE1733:
 5023               	.LBB1734:
 5024               	.LBB1735:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5025               		.loc 4 70 0
 5026 1448 BFBF      		out __SREG__,r27
 5027               		.loc 4 71 0
 5028 144a 00C0      		rjmp .L146
 5029               	.LVL286:
 5030               	.L215:
 5031               	.LBE1735:
 5032               	.LBE1734:
 5033               	.LBB1736:
 5034               	.LBB1728:
 5035               	.LBB1726:
 5036               	.LBB1709:
 5037               	.LBB1710:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 5038               		.loc 5 51 0
 5039 144c 2091 0000 		lds r18,ep_in_pipe_data+4
 5040               	.LBE1710:
 5041               	.LBE1709:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 5042               		.loc 3 83 0
 5043 1450 1216      		cp __zero_reg__,r18
 5044 1452 04F0      		brlt .+2
 5045 1454 00C0      		rjmp .L149
 5046               	.LBB1711:
 5047               	.LBB1712:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5048               		.loc 5 62 0
 5049 1456 4091 0000 		lds r20,ep_in_pipe_data
 5050 145a 5091 0000 		lds r21,ep_in_pipe_data+1
 5051               	.LVL287:
 5052               	.LBE1712:
 5053               	.LBE1711:
 5054               	.LBB1713:
 5055               	.LBB1702:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5056               		.loc 3 68 0
 5057 145e 3091 0000 		lds r19,ep_in_data
 5058               	.LVL288:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5059               		.loc 3 69 0
 5060 1462 832F      		mov r24,r19
 5061 1464 90E0      		ldi r25,lo8(0)
 5062 1466 61E0      		ldi r22,lo8(1)
 5063 1468 8C15      		cp r24,r12
 5064 146a 9D05      		cpc r25,r13
 5065 146c 01F4      		brne .L150
 5066 146e 60E0      		ldi r22,lo8(0)
 5067               	.L150:
 5068 1470 6093 0000 		sts ep_in_data,r22
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5069               		.loc 3 72 0
 5070 1474 3323      		tst r19
 5071 1476 01F4      		brne .L151
 5072               	.LVL289:
 5073               	.LBB1699:
 5074               	.LBB1700:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5075               		.loc 6 168 0
 5076 1478 4093 0000 		sts endpoints+28,r20
 5077 147c 5093 0000 		sts endpoints+28+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5078               		.loc 6 169 0
 5079 1480 A092 0000 		sts endpoints+26,r10
 5080 1484 B092 0000 		sts endpoints+26+1,r11
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5081               		.loc 6 174 0
 5082 1488 F701      		movw r30,r14
 5083               	/* #APP */
 5084               	 ;  174 "usb/usb.h" 1
 5085 148a 02E2      		ldi r16, 34
 5086 148c 0693      		.dc.w 0x9306
 5087               		
 5088               	 ;  0 "" 2
 5089               	.LVL290:
 5090               	/* #NOAPP */
 5091               	.L152:
 5092               	.LBE1700:
 5093               	.LBE1699:
 5094               	.LBE1702:
 5095               	.LBE1713:
 5096               	.LBB1714:
 5097               	.LBB1715:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 5098               		.loc 5 72 0
 5099 148e 2150      		subi r18,lo8(-(-1))
 5100 1490 2093 0000 		sts ep_in_pipe_data+4,r18
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 5101               		.loc 5 73 0
 5102 1494 CA01      		movw r24,r20
 5103 1496 805C      		subi r24,lo8(-(64))
 5104 1498 9F4F      		sbci r25,hi8(-(64))
 5105 149a 8093 0000 		sts ep_in_pipe_data,r24
 5106 149e 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 5107               		.loc 5 75 0
 5108 14a2 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 5109 14a4 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 5110 14a6 9F07      		cpc r25,r31
 5111 14a8 01F4      		brne .L148
 5112               	.LBE1715:
 5113               	.LBE1714:
 5114               	.LBB1716:
 5115               	.LBB1683:
 5116               		.loc 5 91 0
 5117 14aa 2092 0000 		sts ep_in_pipe_data,r2
 5118 14ae 3092 0000 		sts ep_in_pipe_data+1,r3
 5119               	.LVL291:
 5120 14b2 00C0      		rjmp .L148
 5121               	.LVL292:
 5122               	.L151:
 5123               	.LBE1683:
 5124               	.LBE1716:
 5125               	.LBB1717:
 5126               	.LBB1703:
 5127               	.LBB1701:
 5128               	.LBB1698:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5129               		.loc 6 168 0
 5130 14b4 4093 0000 		sts endpoints+20,r20
 5131 14b8 5093 0000 		sts endpoints+20+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5132               		.loc 6 169 0
 5133 14bc A092 0000 		sts endpoints+18,r10
 5134 14c0 B092 0000 		sts endpoints+18+1,r11
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5135               		.loc 6 176 0
 5136 14c4 F701      		movw r30,r14
 5137               	/* #APP */
 5138               	 ;  176 "usb/usb.h" 1
 5139 14c6 04E1      		ldi r16, 20
 5140 14c8 0693      		.dc.w 0x9306
 5141               		
 5142               	 ;  0 "" 2
 5143               	/* #NOAPP */
 5144 14ca 00C0      		rjmp .L152
 5145               	.LVL293:
 5146               	.L149:
 5147               	.LBE1698:
 5148               	.LBE1701:
 5149               	.LBE1703:
 5150               	.LBE1717:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 5151               		.loc 3 87 0
 5152 14cc 8091 0000 		lds r24,ep_in_data+1
 5153 14d0 8130      		cpi r24,lo8(1)
 5154 14d2 01F0      		breq .L216
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5155               		.loc 3 91 0
 5156 14d4 8230      		cpi r24,lo8(2)
 5157 14d6 01F0      		breq .+2
 5158 14d8 00C0      		rjmp .L148
 5159               	.LVL294:
 5160               	.LBB1718:
 5161               	.LBB1719:
 5162               	.LBB1720:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 5163               		.loc 6 228 0
 5164 14da 8091 0000 		lds r24,endpoints+24
 5165 14de 8670      		andi r24,lo8(6)
 5166               	.LBE1720:
 5167               	.LBE1719:
 5168               	.LBE1718:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5169               		.loc 3 91 0
 5170 14e0 8630      		cpi r24,lo8(6)
 5171 14e2 01F0      		breq .+2
 5172 14e4 00C0      		rjmp .L148
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 5173               		.loc 3 92 0
 5174 14e6 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 5175               		.loc 3 93 0
 5176 14ea 1092 0000 		sts ep_in_data+2,__zero_reg__
 5177 14ee 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 5178               	.LBB1721:
 5179               	.LBB1684:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 5180               		.loc 5 90 0
 5181 14f2 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 5182               		.loc 5 91 0
 5183 14f6 2092 0000 		sts ep_in_pipe_data+2,r2
 5184 14fa 3092 0000 		sts ep_in_pipe_data+2+1,r3
 5185 14fe 2092 0000 		sts ep_in_pipe_data,r2
 5186 1502 3092 0000 		sts ep_in_pipe_data+1,r3
 5187               	.LVL295:
 5188 1506 00C0      		rjmp .L148
 5189               	.LVL296:
 5190               	.L216:
 5191               	.LBE1684:
 5192               	.LBE1721:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 5193               		.loc 3 88 0
 5194 1508 1093 0000 		sts ep_in_data+1,r17
 5195               	.LBB1722:
 5196               	.LBB1723:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5197               		.loc 5 62 0
 5198 150c 6091 0000 		lds r22,ep_in_pipe_data
 5199 1510 E091 0000 		lds r30,ep_in_pipe_data+1
 5200               	.LBE1723:
 5201               	.LBE1722:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 5202               		.loc 3 90 0
 5203 1514 2091 0000 		lds r18,ep_in_data+2
 5204 1518 3091 0000 		lds r19,ep_in_data+2+1
 5205               	.LVL297:
 5206               	.LBB1724:
 5207               	.LBB1693:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5208               		.loc 3 68 0
 5209 151c 5091 0000 		lds r21,ep_in_data
 5210               	.LVL298:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5211               		.loc 3 69 0
 5212 1520 852F      		mov r24,r21
 5213 1522 90E0      		ldi r25,lo8(0)
 5214 1524 41E0      		ldi r20,lo8(1)
 5215 1526 8C15      		cp r24,r12
 5216 1528 9D05      		cpc r25,r13
 5217 152a 01F4      		brne .L155
 5218 152c 40E0      		ldi r20,lo8(0)
 5219               	.L155:
 5220 152e 4093 0000 		sts ep_in_data,r20
 5221               	.LBB1687:
 5222               	.LBB1688:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5223               		.loc 6 168 0
 5224 1532 862F      		mov r24,r22
 5225 1534 9E2F      		mov r25,r30
 5226               	.LBE1688:
 5227               	.LBE1687:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5228               		.loc 3 72 0
 5229 1536 5523      		tst r21
 5230 1538 01F4      		brne .L156
 5231               	.LVL299:
 5232               	.LBB1690:
 5233               	.LBB1689:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5234               		.loc 6 168 0
 5235 153a 8093 0000 		sts endpoints+28,r24
 5236 153e 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5237               		.loc 6 169 0
 5238 1542 2093 0000 		sts endpoints+26,r18
 5239 1546 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5240               		.loc 6 174 0
 5241 154a F701      		movw r30,r14
 5242               	/* #APP */
 5243               	 ;  174 "usb/usb.h" 1
 5244 154c 02E2      		ldi r16, 34
 5245 154e 0693      		.dc.w 0x9306
 5246               		
 5247               	 ;  0 "" 2
 5248               	/* #NOAPP */
 5249 1550 00C0      		rjmp .L148
 5250               	.LVL300:
 5251               	.L156:
 5252               	.LBE1689:
 5253               	.LBE1690:
 5254               	.LBB1691:
 5255               	.LBB1692:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5256               		.loc 6 168 0
 5257 1552 8093 0000 		sts endpoints+20,r24
 5258 1556 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5259               		.loc 6 169 0
 5260 155a 2093 0000 		sts endpoints+18,r18
 5261 155e 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5262               		.loc 6 176 0
 5263 1562 F701      		movw r30,r14
 5264               	/* #APP */
 5265               	 ;  176 "usb/usb.h" 1
 5266 1564 04E1      		ldi r16, 20
 5267 1566 0693      		.dc.w 0x9306
 5268               		
 5269               	 ;  0 "" 2
 5270               	/* #NOAPP */
 5271 1568 00C0      		rjmp .L148
 5272               	.LVL301:
 5273               	.L206:
 5274               	.LBE1692:
 5275               	.LBE1691:
 5276               	.LBE1693:
 5277               	.LBE1724:
 5278               	.LBE1726:
 5279               	.LBE1728:
 5280               	.LBE1736:
 5281               	.LBE1737:
 5282               	.LBE1738:
 5283               	.LBE1739:
 5284               	.LBE1744:
 5285               	.LBE1746:
 5286               	.LBE1748:
 5287               	.LBE1758:
 5288               	.LBB1759:
 5289               	.LBB1651:
 5290               	.LBB1590:
 5291               	.LBB1591:
 5292               	.LBB1592:
 5293               	.LBB1593:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 5294               		.loc 3 177 0
 5295 156a 7FB7      		in r23,__SREG__
 5296               	.LVL302:
 5297               	.LBB1594:
 5298               	.LBB1595:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 5299               		.loc 4 50 0
 5300               	/* #APP */
 5301               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 5302 156c F894      		cli
 5303               	 ;  0 "" 2
 5304               	.LVL303:
 5305               	/* #NOAPP */
 5306               	.LBE1595:
 5307               	.LBE1594:
 5308               		.loc 3 178 0
 5309 156e 1092 0000 		sts ep_in_data+2,__zero_reg__
 5310 1572 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 5311               	.LVL304:
 5312               	.LBB1596:
 5313               	.LBB1597:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 5314               		.loc 5 81 0
 5315 1576 8091 0000 		lds r24,ep_in_pipe_data+4
 5316 157a 8F5F      		subi r24,lo8(-(1))
 5317 157c 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 5318               		.loc 5 82 0
 5319 1580 8091 0000 		lds r24,ep_in_pipe_data+2
 5320 1584 9091 0000 		lds r25,ep_in_pipe_data+2+1
 5321 1588 805C      		subi r24,lo8(-(64))
 5322 158a 9F4F      		sbci r25,hi8(-(64))
 5323 158c 8093 0000 		sts ep_in_pipe_data+2,r24
 5324 1590 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 5325               		.loc 5 84 0
 5326 1594 30E0      		ldi r19,hi8(ep_in_pipe_buffer+512)
 5327 1596 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 5328 1598 9307      		cpc r25,r19
 5329 159a 01F4      		brne .L132
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 5330               		.loc 5 85 0
 5331 159c 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5332 159e 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5333 15a0 8093 0000 		sts ep_in_pipe_data+2,r24
 5334 15a4 9093 0000 		sts ep_in_pipe_data+2+1,r25
 5335               	.L132:
 5336               	.LVL305:
 5337               	.LBE1597:
 5338               	.LBE1596:
 5339               	.LBB1598:
 5340               	.LBB1599:
 5341               	.LBB1600:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 5342               		.loc 3 80 0
 5343 15a8 6FB7      		in r22,__SREG__
 5344               	.LVL306:
 5345               	.LBB1601:
 5346               	.LBB1602:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 5347               		.loc 4 50 0
 5348               	/* #APP */
 5349               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 5350 15aa F894      		cli
 5351               	 ;  0 "" 2
 5352               	.LVL307:
 5353               	/* #NOAPP */
 5354               	.LBE1602:
 5355               	.LBE1601:
 5356               	.LBB1603:
 5357               	.LBB1604:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 5358               		.loc 6 220 0
 5359 15ac 8091 0000 		lds r24,endpoints+24
 5360 15b0 8670      		andi r24,lo8(6)
 5361               	.LBE1604:
 5362               	.LBE1603:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 5363               		.loc 3 82 0
 5364 15b2 01F0      		breq .L133
 5365               	.LBB1605:
 5366               	.LBB1606:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 5367               		.loc 5 51 0
 5368 15b4 4091 0000 		lds r20,ep_in_pipe_data+4
 5369               	.LBE1606:
 5370               	.LBE1605:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 5371               		.loc 3 83 0
 5372 15b8 1416      		cp __zero_reg__,r20
 5373 15ba 04F0      		brlt .+2
 5374 15bc 00C0      		rjmp .L134
 5375               	.LBB1607:
 5376               	.LBB1608:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5377               		.loc 5 62 0
 5378 15be 8091 0000 		lds r24,ep_in_pipe_data
 5379 15c2 9091 0000 		lds r25,ep_in_pipe_data+1
 5380               	.LVL308:
 5381               	.LBE1608:
 5382               	.LBE1607:
 5383               	.LBB1609:
 5384               	.LBB1610:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5385               		.loc 3 68 0
 5386 15c6 2091 0000 		lds r18,ep_in_data
 5387               	.LVL309:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5388               		.loc 3 69 0
 5389 15ca 31E0      		ldi r19,lo8(1)
 5390 15cc 2130      		cpi r18,lo8(1)
 5391 15ce 01F4      		brne .L135
 5392 15d0 30E0      		ldi r19,lo8(0)
 5393               	.L135:
 5394 15d2 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5395               		.loc 3 72 0
 5396 15d6 2223      		tst r18
 5397 15d8 01F4      		brne .L136
 5398               	.LVL310:
 5399               	.LBB1611:
 5400               	.LBB1612:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5401               		.loc 6 168 0
 5402 15da 8093 0000 		sts endpoints+28,r24
 5403 15de 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5404               		.loc 6 169 0
 5405 15e2 20E4      		ldi r18,lo8(64)
 5406 15e4 30E0      		ldi r19,hi8(64)
 5407 15e6 2093 0000 		sts endpoints+26,r18
 5408 15ea 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5409               		.loc 6 174 0
 5410 15ee E0E0      		ldi r30,lo8(endpoints+24)
 5411 15f0 F0E0      		ldi r31,hi8(endpoints+24)
 5412               	.LVL311:
 5413               	/* #APP */
 5414               	 ;  174 "usb/usb.h" 1
 5415 15f2 02E2      		ldi r16, 34
 5416 15f4 0693      		.dc.w 0x9306
 5417               		
 5418               	 ;  0 "" 2
 5419               	.LVL312:
 5420               	/* #NOAPP */
 5421               	.L137:
 5422               	.LBE1612:
 5423               	.LBE1611:
 5424               	.LBE1610:
 5425               	.LBE1609:
 5426               	.LBB1616:
 5427               	.LBB1617:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 5428               		.loc 5 72 0
 5429 15f6 4150      		subi r20,lo8(-(-1))
 5430 15f8 4093 0000 		sts ep_in_pipe_data+4,r20
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 5431               		.loc 5 73 0
 5432 15fc 805C      		subi r24,lo8(-(64))
 5433 15fe 9F4F      		sbci r25,hi8(-(64))
 5434 1600 8093 0000 		sts ep_in_pipe_data,r24
 5435 1604 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 5436               		.loc 5 75 0
 5437 1608 A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 5438 160a 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 5439 160c 9A07      		cpc r25,r26
 5440 160e 01F0      		breq .L217
 5441               	.LVL313:
 5442               	.L133:
 5443               	.LBE1617:
 5444               	.LBE1616:
 5445               	.LBB1619:
 5446               	.LBB1620:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5447               		.loc 4 70 0
 5448 1610 6FBF      		out __SREG__,r22
 5449               		.loc 4 71 0
 5450               	.LVL314:
 5451               	.LBE1620:
 5452               	.LBE1619:
 5453               	.LBE1600:
 5454               	.LBE1599:
 5455               	.LBE1598:
 5456               	.LBB1642:
 5457               	.LBB1643:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 5458               		.loc 4 70 0
 5459 1612 7FBF      		out __SREG__,r23
 5460               		.loc 4 71 0
 5461 1614 00C0      		rjmp .L131
 5462               	.LVL315:
 5463               	.L136:
 5464               	.LBE1643:
 5465               	.LBE1642:
 5466               	.LBB1644:
 5467               	.LBB1640:
 5468               	.LBB1638:
 5469               	.LBB1621:
 5470               	.LBB1615:
 5471               	.LBB1613:
 5472               	.LBB1614:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5473               		.loc 6 168 0
 5474 1616 8093 0000 		sts endpoints+20,r24
 5475 161a 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5476               		.loc 6 169 0
 5477 161e 20E4      		ldi r18,lo8(64)
 5478 1620 30E0      		ldi r19,hi8(64)
 5479               	.LVL316:
 5480 1622 2093 0000 		sts endpoints+18,r18
 5481 1626 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5482               		.loc 6 176 0
 5483 162a E0E0      		ldi r30,lo8(endpoints+24)
 5484 162c F0E0      		ldi r31,hi8(endpoints+24)
 5485               	/* #APP */
 5486               	 ;  176 "usb/usb.h" 1
 5487 162e 04E1      		ldi r16, 20
 5488 1630 0693      		.dc.w 0x9306
 5489               		
 5490               	 ;  0 "" 2
 5491               	/* #NOAPP */
 5492 1632 00C0      		rjmp .L137
 5493               	.LVL317:
 5494               	.L134:
 5495               	.LBE1614:
 5496               	.LBE1613:
 5497               	.LBE1615:
 5498               	.LBE1621:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 5499               		.loc 3 87 0
 5500 1634 8091 0000 		lds r24,ep_in_data+1
 5501 1638 8130      		cpi r24,lo8(1)
 5502 163a 01F0      		breq .L218
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5503               		.loc 3 91 0
 5504 163c 8230      		cpi r24,lo8(2)
 5505 163e 01F4      		brne .L133
 5506               	.LVL318:
 5507               	.LBB1622:
 5508               	.LBB1623:
 5509               	.LBB1624:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 5510               		.loc 6 228 0
 5511 1640 8091 0000 		lds r24,endpoints+24
 5512 1644 8670      		andi r24,lo8(6)
 5513               	.LBE1624:
 5514               	.LBE1623:
 5515               	.LBE1622:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 5516               		.loc 3 91 0
 5517 1646 8630      		cpi r24,lo8(6)
 5518 1648 01F4      		brne .L133
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 5519               		.loc 3 92 0
 5520 164a 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 5521               		.loc 3 93 0
 5522 164e 1092 0000 		sts ep_in_data+2,__zero_reg__
 5523 1652 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 5524               	.LBB1625:
 5525               	.LBB1626:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 5526               		.loc 5 90 0
 5527 1656 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 5528               		.loc 5 91 0
 5529 165a 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5530 165c 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5531 165e 8093 0000 		sts ep_in_pipe_data+2,r24
 5532 1662 9093 0000 		sts ep_in_pipe_data+2+1,r25
 5533 1666 8093 0000 		sts ep_in_pipe_data,r24
 5534 166a 9093 0000 		sts ep_in_pipe_data+1,r25
 5535               	.LVL319:
 5536 166e 00C0      		rjmp .L133
 5537               	.LVL320:
 5538               	.L217:
 5539               	.LBE1626:
 5540               	.LBE1625:
 5541               	.LBB1627:
 5542               	.LBB1618:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 5543               		.loc 5 76 0
 5544 1670 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 5545 1672 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 5546 1674 8093 0000 		sts ep_in_pipe_data,r24
 5547 1678 9093 0000 		sts ep_in_pipe_data+1,r25
 5548 167c 00C0      		rjmp .L133
 5549               	.LVL321:
 5550               	.L218:
 5551               	.LBE1618:
 5552               	.LBE1627:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 5553               		.loc 3 88 0
 5554 167e 82E0      		ldi r24,lo8(2)
 5555 1680 8093 0000 		sts ep_in_data+1,r24
 5556               	.LBB1628:
 5557               	.LBB1629:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 5558               		.loc 5 62 0
 5559 1684 4091 0000 		lds r20,ep_in_pipe_data
 5560 1688 5091 0000 		lds r21,ep_in_pipe_data+1
 5561               	.LBE1629:
 5562               	.LBE1628:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 5563               		.loc 3 90 0
 5564 168c 8091 0000 		lds r24,ep_in_data+2
 5565 1690 9091 0000 		lds r25,ep_in_data+2+1
 5566               	.LVL322:
 5567               	.LBB1630:
 5568               	.LBB1631:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 5569               		.loc 3 68 0
 5570 1694 2091 0000 		lds r18,ep_in_data
 5571               	.LVL323:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 5572               		.loc 3 69 0
 5573 1698 31E0      		ldi r19,lo8(1)
 5574 169a 2130      		cpi r18,lo8(1)
 5575 169c 01F4      		brne .L140
 5576 169e 30E0      		ldi r19,lo8(0)
 5577               	.L140:
 5578 16a0 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 5579               		.loc 3 72 0
 5580 16a4 2223      		tst r18
 5581 16a6 01F4      		brne .L141
 5582               	.LVL324:
 5583               	.LBB1632:
 5584               	.LBB1633:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5585               		.loc 6 168 0
 5586 16a8 4093 0000 		sts endpoints+28,r20
 5587 16ac 5093 0000 		sts endpoints+28+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5588               		.loc 6 169 0
 5589 16b0 8093 0000 		sts endpoints+26,r24
 5590 16b4 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 5591               		.loc 6 174 0
 5592 16b8 E0E0      		ldi r30,lo8(endpoints+24)
 5593 16ba F0E0      		ldi r31,hi8(endpoints+24)
 5594               	.LVL325:
 5595               	/* #APP */
 5596               	 ;  174 "usb/usb.h" 1
 5597 16bc 02E2      		ldi r16, 34
 5598 16be 0693      		.dc.w 0x9306
 5599               		
 5600               	 ;  0 "" 2
 5601               	/* #NOAPP */
 5602 16c0 00C0      		rjmp .L133
 5603               	.LVL326:
 5604               	.L166:
 5605               	.LBE1633:
 5606               	.LBE1632:
 5607               	.LBE1631:
 5608               	.LBE1630:
 5609               	.LBE1638:
 5610               	.LBE1640:
 5611               	.LBE1644:
 5612               	.LBE1593:
 5613               	.LBE1592:
 5614               	.LBE1591:
 5615               	.LBE1590:
 5616               	.LBE1651:
 5617               	.LBE1759:
 5618               	.LBE1763:
 5619               	.LBB1764:
 5620               	.LBB1294:
 5621               	.LBB1291:
 5622               	.LBB1263:
 5623               	.LBB1260:
 5624               	.LBB1257:
 5625               	.LBB1254:
 5626               	.LBB1251:
 5627               	.LBB1250:
 5628               	.LBB1248:
 5629               	.LBB1249:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5630               		.loc 6 168 0
 5631 16c2 262F      		mov r18,r22
 5632               	.LVL327:
 5633 16c4 342F      		mov r19,r20
 5634 16c6 2093 0000 		sts endpoints+20,r18
 5635 16ca 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5636               		.loc 6 169 0
 5637 16ce 8093 0000 		sts endpoints+18,r24
 5638 16d2 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5639               		.loc 6 176 0
 5640 16d6 E0E0      		ldi r30,lo8(endpoints+24)
 5641 16d8 F0E0      		ldi r31,hi8(endpoints+24)
 5642               	/* #APP */
 5643               	 ;  176 "usb/usb.h" 1
 5644 16da 04E1      		ldi r16, 20
 5645 16dc 0693      		.dc.w 0x9306
 5646               		
 5647               	 ;  0 "" 2
 5648               	/* #NOAPP */
 5649 16de 00C0      		rjmp .L158
 5650               	.LVL328:
 5651               	.L111:
 5652               	.LBE1249:
 5653               	.LBE1248:
 5654               	.LBE1250:
 5655               	.LBE1251:
 5656               	.LBE1254:
 5657               	.LBE1257:
 5658               	.LBE1260:
 5659               	.LBE1263:
 5660               	.LBE1291:
 5661               	.LBE1294:
 5662               	.LBE1764:
 5663               	.LBB1765:
 5664               	.LBB1760:
 5665               	.LBB1475:
 5666               	.LBB1472:
 5667               	.LBB1471:
 5668               	.LBB1470:
 5669               	.LBB1469:
 5670               	.LBB1468:
 5671               	.LBB1464:
 5672               	.LBB1462:
 5673               	.LBB1460:
 5674               	.LBB1459:
 5675               	.LBB1457:
 5676               	.LBB1458:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5677               		.loc 6 168 0
 5678 16e0 352F      		mov r19,r21
 5679               	.LVL329:
 5680 16e2 2093 0000 		sts endpoints+20,r18
 5681 16e6 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5682               		.loc 6 169 0
 5683 16ea 8093 0000 		sts endpoints+18,r24
 5684 16ee 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5685               		.loc 6 176 0
 5686 16f2 E0E0      		ldi r30,lo8(endpoints+24)
 5687 16f4 F0E0      		ldi r31,hi8(endpoints+24)
 5688               	/* #APP */
 5689               	 ;  176 "usb/usb.h" 1
 5690 16f6 04E1      		ldi r16, 20
 5691 16f8 0693      		.dc.w 0x9306
 5692               		
 5693               	 ;  0 "" 2
 5694               	/* #NOAPP */
 5695 16fa 00C0      		rjmp .L103
 5696               	.LVL330:
 5697               	.L141:
 5698               	.LBE1458:
 5699               	.LBE1457:
 5700               	.LBE1459:
 5701               	.LBE1460:
 5702               	.LBE1462:
 5703               	.LBE1464:
 5704               	.LBE1468:
 5705               	.LBE1469:
 5706               	.LBE1470:
 5707               	.LBE1471:
 5708               	.LBE1472:
 5709               	.LBE1475:
 5710               	.LBE1760:
 5711               	.LBB1761:
 5712               	.LBB1652:
 5713               	.LBB1649:
 5714               	.LBB1648:
 5715               	.LBB1647:
 5716               	.LBB1646:
 5717               	.LBB1645:
 5718               	.LBB1641:
 5719               	.LBB1639:
 5720               	.LBB1637:
 5721               	.LBB1636:
 5722               	.LBB1634:
 5723               	.LBB1635:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 5724               		.loc 6 168 0
 5725 16fc 4093 0000 		sts endpoints+20,r20
 5726 1700 5093 0000 		sts endpoints+20+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 5727               		.loc 6 169 0
 5728 1704 8093 0000 		sts endpoints+18,r24
 5729 1708 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 5730               		.loc 6 176 0
 5731 170c E0E0      		ldi r30,lo8(endpoints+24)
 5732 170e F0E0      		ldi r31,hi8(endpoints+24)
 5733               	/* #APP */
 5734               	 ;  176 "usb/usb.h" 1
 5735 1710 04E1      		ldi r16, 20
 5736 1712 0693      		.dc.w 0x9306
 5737               		
 5738               	 ;  0 "" 2
 5739               	/* #NOAPP */
 5740 1714 00C0      		rjmp .L133
 5741               	.LBE1635:
 5742               	.LBE1634:
 5743               	.LBE1636:
 5744               	.LBE1637:
 5745               	.LBE1639:
 5746               	.LBE1641:
 5747               	.LBE1645:
 5748               	.LBE1646:
 5749               	.LBE1647:
 5750               	.LBE1648:
 5751               	.LBE1649:
 5752               	.LBE1652:
 5753               	.LBE1761:
 5754               	.LBE1765:
 5755               		.cfi_endproc
 5756               	.LFE70:
 5758               	.global	uart_putchar
 5760               	uart_putchar:
 5761               	.LFB71:
 263:main.c        **** int uart_putchar (char c, USART_t* USART) { 
 5762               		.loc 1 263 0
 5763               		.cfi_startproc
 5764               	.LVL331:
 5765               	/* prologue: function */
 5766               	/* frame size = 0 */
 5767               	/* stack size = 0 */
 5768               	.L__stack_usage = 0
 5769 1716 FB01      		movw r30,r22
 264:main.c        ****     if (c == '\n') 
 5770               		.loc 1 264 0
 5771 1718 8A30      		cpi r24,lo8(10)
 5772 171a 01F0      		breq .L224
 5773               	.L223:
 268:main.c        ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 5774               		.loc 1 268 0 discriminator 1
 5775 171c 9181      		ldd r25,Z+1
 5776 171e 95FF      		sbrs r25,5
 5777 1720 00C0      		rjmp .L223
 271:main.c        ****     USART->DATA = c; 
 5778               		.loc 1 271 0
 5779 1722 8083      		st Z,r24
 274:main.c        **** } 
 5780               		.loc 1 274 0
 5781 1724 80E0      		ldi r24,lo8(0)
 5782 1726 90E0      		ldi r25,hi8(0)
 5783               	.LVL332:
 5784               	/* epilogue start */
 5785 1728 0895      		ret
 5786               	.LVL333:
 5787               	.L224:
 5788               	.LBB1782:
 5789               	.LBB1783:
 268:main.c        ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 5790               		.loc 1 268 0
 5791 172a 9181      		ldd r25,Z+1
 5792 172c 95FF      		sbrs r25,5
 5793 172e 00C0      		rjmp .L224
 271:main.c        ****     USART->DATA = c; 
 5794               		.loc 1 271 0
 5795 1730 9DE0      		ldi r25,lo8(13)
 5796 1732 9083      		st Z,r25
 5797 1734 00C0      		rjmp .L223
 5798               	.LBE1783:
 5799               	.LBE1782:
 5800               		.cfi_endproc
 5801               	.LFE71:
 5803               	.global	uart_getchar
 5805               	uart_getchar:
 5806               	.LFB72:
 277:main.c        **** char uart_getchar (USART_t* USART) { 
 5807               		.loc 1 277 0
 5808               		.cfi_startproc
 5809               	.LVL334:
 5810               	/* prologue: function */
 5811               	/* frame size = 0 */
 5812               	/* stack size = 0 */
 5813               	.L__stack_usage = 0
 5814 1736 FC01      		movw r30,r24
 5815               	.LVL335:
 5816               	.L228:
 280:main.c        ****     while ( !( USART->STATUS & USART_RXCIF_bm) ); 
 5817               		.loc 1 280 0 discriminator 1
 5818 1738 8181      		ldd r24,Z+1
 5819 173a 87FF      		sbrs r24,7
 5820 173c 00C0      		rjmp .L228
 283:main.c        ****     return USART->DATA; 
 5821               		.loc 1 283 0
 5822 173e 8081      		ld r24,Z
 5823               	/* epilogue start */
 284:main.c        **** } 
 5824               		.loc 1 284 0
 5825 1740 0895      		ret
 5826               		.cfi_endproc
 5827               	.LFE72:
 5829               		.data
 5830               	.LC3:
 5831 0045 4154 2B43 		.string	"AT+CMGF=1\r"
 5831      4D47 463D 
 5831      310D 00
 5832               	.LC4:
 5833 0050 4154 2B43 		.string	"AT+CMGS=\""
 5833      4D47 533D 
 5833      2200 
 5834               	.LC5:
 5835 005a 220D 00   		.string	"\"\r"
 5836               		.text
 5837               	.global	send_message
 5839               	send_message:
 5840               	.LFB73:
 286:main.c        **** void send_message(char* number, char* text_message) {
 5841               		.loc 1 286 0
 5842               		.cfi_startproc
 5843               	.LVL336:
 5844 1742 4F92      		push r4
 5845               	.LCFI94:
 5846               		.cfi_def_cfa_offset 3
 5847               		.cfi_offset 4, -2
 5848 1744 5F92      		push r5
 5849               	.LCFI95:
 5850               		.cfi_def_cfa_offset 4
 5851               		.cfi_offset 5, -3
 5852 1746 6F92      		push r6
 5853               	.LCFI96:
 5854               		.cfi_def_cfa_offset 5
 5855               		.cfi_offset 6, -4
 5856 1748 7F92      		push r7
 5857               	.LCFI97:
 5858               		.cfi_def_cfa_offset 6
 5859               		.cfi_offset 7, -5
 5860 174a 8F92      		push r8
 5861               	.LCFI98:
 5862               		.cfi_def_cfa_offset 7
 5863               		.cfi_offset 8, -6
 5864 174c 9F92      		push r9
 5865               	.LCFI99:
 5866               		.cfi_def_cfa_offset 8
 5867               		.cfi_offset 9, -7
 5868 174e AF92      		push r10
 5869               	.LCFI100:
 5870               		.cfi_def_cfa_offset 9
 5871               		.cfi_offset 10, -8
 5872 1750 BF92      		push r11
 5873               	.LCFI101:
 5874               		.cfi_def_cfa_offset 10
 5875               		.cfi_offset 11, -9
 5876 1752 CF92      		push r12
 5877               	.LCFI102:
 5878               		.cfi_def_cfa_offset 11
 5879               		.cfi_offset 12, -10
 5880 1754 DF92      		push r13
 5881               	.LCFI103:
 5882               		.cfi_def_cfa_offset 12
 5883               		.cfi_offset 13, -11
 5884 1756 EF92      		push r14
 5885               	.LCFI104:
 5886               		.cfi_def_cfa_offset 13
 5887               		.cfi_offset 14, -12
 5888 1758 FF92      		push r15
 5889               	.LCFI105:
 5890               		.cfi_def_cfa_offset 14
 5891               		.cfi_offset 15, -13
 5892 175a 0F93      		push r16
 5893               	.LCFI106:
 5894               		.cfi_def_cfa_offset 15
 5895               		.cfi_offset 16, -14
 5896 175c 1F93      		push r17
 5897               	.LCFI107:
 5898               		.cfi_def_cfa_offset 16
 5899               		.cfi_offset 17, -15
 5900 175e CF93      		push r28
 5901               	.LCFI108:
 5902               		.cfi_def_cfa_offset 17
 5903               		.cfi_offset 28, -16
 5904 1760 DF93      		push r29
 5905               	.LCFI109:
 5906               		.cfi_def_cfa_offset 18
 5907               		.cfi_offset 29, -17
 5908 1762 00D0      		rcall .
 5909               	.LCFI110:
 5910               		.cfi_def_cfa_offset 20
 5911 1764 CDB7      		in r28,__SP_L__
 5912 1766 DEB7      		in r29,__SP_H__
 5913               	.LCFI111:
 5914               		.cfi_def_cfa_register 28
 5915               	/* prologue: function */
 5916               	/* frame size = 2 */
 5917               	/* stack size = 18 */
 5918               	.L__stack_usage = 18
 5919 1768 182F      		mov r17,r24
 5920 176a 792E      		mov r7,r25
 5921 176c 662E      		mov r6,r22
 5922 176e 572E      		mov r5,r23
 5923               	.LVL337:
 5924               	.L231:
 5925               	.LBB2397:
 5926               	.LBB2398:
 268:main.c        ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 5927               		.loc 1 268 0
 5928 1770 8091 A109 		lds r24,2465
 5929 1774 85FF      		sbrs r24,5
 5930 1776 00C0      		rjmp .L231
 271:main.c        ****     USART->DATA = c; 
 5931               		.loc 1 271 0
 5932 1778 8DE0      		ldi r24,lo8(13)
 5933 177a 8093 A009 		sts 2464,r24
 5934               	.LVL338:
 5935               	.LBE2398:
 5936               	.LBE2397:
 5937               	.LBB2399:
 5938               	.LBB2400:
 5939               		.loc 7 164 0
 5940 177e 8FEF      		 ldi r24,lo8(639999)
 5941 1780 93EC      	    ldi r25,hi8(639999)
 5942 1782 A9E0      	    ldi r26,hlo8(639999)
 5943 1784 8150      	    1:subi r24,1
 5944 1786 9040      	    sbci r25,0
 5945 1788 A040      	    sbci r26,0
 5946 178a 01F4      	    brne 1b
 5947 178c 00C0      		rjmp .
 5948 178e 0000      		nop
 5949               	.LVL339:
 5950               	.LBE2400:
 5951               	.LBE2399:
 5952               	.LBB2401:
 5953               	.LBB2402:
 5954 1790 8FEF      		 ldi r24,lo8(639999)
 5955 1792 93EC      	    ldi r25,hi8(639999)
 5956 1794 A9E0      	    ldi r26,hlo8(639999)
 5957 1796 8150      	    1:subi r24,1
 5958 1798 9040      	    sbci r25,0
 5959 179a A040      	    sbci r26,0
 5960 179c 01F4      	    brne 1b
 5961 179e 00C0      		rjmp .
 5962 17a0 0000      		nop
 5963               	.LVL340:
 5964 17a2 90E0      		ldi r25,lo8(.LC3+1)
 5965 17a4 A92E      		mov r10,r25
 5966 17a6 90E0      		ldi r25,hi8(.LC3+1)
 5967 17a8 B92E      		mov r11,r25
 296:main.c        ****   while (*text_mode != '\0') {  
 5968               		.loc 1 296 0
 5969 17aa 01E4      		ldi r16,lo8(65)
 5970               	.LBE2402:
 5971               	.LBE2401:
 5972               	.LBB2403:
 5973               	.LBB2404:
 5974               	.LBB2405:
 5975               	.LBB2406:
 5976               	.LBB2407:
 5977               	.LBB2408:
 5978               	.LBB2409:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 5979               		.loc 5 57 0
 5980 17ac 26E0      		ldi r18,lo8(6)
 5981 17ae 422E      		mov r4,r18
 5982               	.LBE2409:
 5983               	.LBE2408:
 5984               	.LBE2407:
 5985               	.LBE2406:
 5986               	.LBE2405:
 5987               	.LBB2420:
 5988               	.LBB2421:
 5989               	.LBB2422:
 5990               	.LBB2423:
 5991               	.LBB2424:
 5992               	.LBB2425:
 5993               	.LBB2426:
 5994               	.LBB2427:
 5995               	.LBB2428:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 5996               		.loc 6 220 0
 5997 17b0 30E0      		ldi r19,lo8(endpoints+24)
 5998 17b2 E32E      		mov r14,r19
 5999 17b4 30E0      		ldi r19,hi8(endpoints+24)
 6000 17b6 F32E      		mov r15,r19
 6001               	.LBE2428:
 6002               	.LBE2427:
 6003               	.LBB2430:
 6004               	.LBB2431:
 6005               		.loc 5 91 0
 6006 17b8 40E0      		ldi r20,lo8(ep_in_pipe_buffer)
 6007 17ba 842E      		mov r8,r20
 6008 17bc 40E0      		ldi r20,hi8(ep_in_pipe_buffer)
 6009 17be 942E      		mov r9,r20
 6010               	.LBE2431:
 6011               	.LBE2430:
 6012               	.LBB2434:
 6013               	.LBB2435:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 6014               		.loc 3 69 0
 6015 17c0 61E0      		ldi r22,lo8(1)
 6016 17c2 70E0      		ldi r23,hi8(1)
 6017               	.LVL341:
 6018               	.LBE2435:
 6019               	.LBE2434:
 6020               	.LBB2444:
 6021               	.LBB2445:
 6022               	.LBB2446:
 6023               	.LBB2447:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 6024               		.loc 6 169 0
 6025 17c4 50E4      		ldi r21,lo8(64)
 6026 17c6 C52E      		mov r12,r21
 6027 17c8 D12C      		mov r13,__zero_reg__
 6028               	.LVL342:
 6029               	.L378:
 6030               	.LBE2447:
 6031               	.LBE2446:
 6032               	.LBE2445:
 6033               	.LBE2444:
 6034               	.LBE2426:
 6035               	.LBE2425:
 6036               	.LBE2424:
 6037               	.LBE2423:
 6038               	.LBE2422:
 6039               	.LBE2421:
 6040               	.LBE2420:
 6041               	.LBE2404:
 6042               	.LBE2403:
 6043               	.LBB2511:
 6044               	.LBB2512:
 268:main.c        ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 6045               		.loc 1 268 0
 6046 17ca 8091 A109 		lds r24,2465
 6047 17ce 85FF      		sbrs r24,5
 6048 17d0 00C0      		rjmp .L378
 271:main.c        ****     USART->DATA = c; 
 6049               		.loc 1 271 0
 6050 17d2 0093 A009 		sts 2464,r16
 6051               	.L235:
 6052               	.LBE2512:
 6053               	.LBE2511:
 6054               	.LBB2514:
 6055               	.LBB2515:
 280:main.c        ****     while ( !( USART->STATUS & USART_RXCIF_bm) ); 
 6056               		.loc 1 280 0
 6057 17d6 8091 A109 		lds r24,2465
 6058 17da 87FF      		sbrs r24,7
 6059 17dc 00C0      		rjmp .L235
 283:main.c        ****     return USART->DATA; 
 6060               		.loc 1 283 0
 6061 17de 2091 A009 		lds r18,2464
 6062               	.LVL343:
 6063               	.L238:
 6064               	.LBE2515:
 6065               	.LBE2514:
 6066               	.LBB2516:
 6067               	.LBB2507:
 6068               	.LBB2500:
 6069               	.LBB2418:
 6070               	.LBB2416:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6071               		.loc 3 123 0
 6072 17e2 9FB7      		in r25,__SREG__
 6073               	.LVL344:
 6074               	.LBB2411:
 6075               	.LBB2412:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6076               		.loc 4 50 0
 6077               	/* #APP */
 6078               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6079 17e4 F894      		cli
 6080               	 ;  0 "" 2
 6081               	.LVL345:
 6082               	/* #NOAPP */
 6083               	.LBE2412:
 6084               	.LBE2411:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 6085               		.loc 3 124 0
 6086 17e6 8091 0000 		lds r24,ep_in_data+1
 6087 17ea 8823      		tst r24
 6088 17ec 01F0      		breq .L382
 6089               	.L348:
 125:usb/usb_pipe.h **** 			r = false;
 6090               		.loc 3 125 0
 6091 17ee 80E0      		ldi r24,lo8(0)
 6092               	.L236:
 6093               	.LBB2413:
 6094               	.LBB2414:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6095               		.loc 4 70 0
 6096 17f0 9FBF      		out __SREG__,r25
 6097               		.loc 4 71 0
 6098               	.LBE2414:
 6099               	.LBE2413:
 6100               	.LBE2416:
 6101               	.LBE2418:
 6102               	.LBE2500:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 6103               		.loc 2 20 0
 6104 17f2 8823      		tst r24
 6105 17f4 01F0      		breq .L238
 6106               	.LVL346:
 6107               	.LBB2501:
 6108               	.LBB2502:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 6109               		.loc 3 175 0
 6110 17f6 8091 0000 		lds r24,ep_in_data+2
 6111 17fa 9091 0000 		lds r25,ep_in_data+2+1
 6112 17fe E091 0000 		lds r30,ep_in_pipe_data+2
 6113 1802 F091 0000 		lds r31,ep_in_pipe_data+2+1
 6114 1806 E80F      		add r30,r24
 6115 1808 F91F      		adc r31,r25
 6116 180a 2083      		st Z,r18
 6117 180c 0196      		adiw r24,1
 6118 180e 8093 0000 		sts ep_in_data+2,r24
 6119 1812 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 6120               		.loc 3 176 0
 6121 1816 8034      		cpi r24,64
 6122 1818 9105      		cpc r25,__zero_reg__
 6123 181a 01F0      		breq .L383
 6124               	.LBE2502:
 6125               	.LBE2501:
 6126               	.LBE2507:
 6127               	.LBE2516:
 296:main.c        ****   while (*text_mode != '\0') {  
 6128               		.loc 1 296 0
 6129 181c D501      		movw r26,r10
 6130 181e 0D91      		ld r16,X+
 6131 1820 5D01      		movw r10,r26
 6132 1822 0023      		tst r16
 6133 1824 01F4      		brne .+2
 6134 1826 00C0      		rjmp .L384
 6135               	.LVL347:
 6136               	.L250:
 6137               	.LBB2517:
 6138               	.LBB2513:
 264:main.c        ****     if (c == '\n') 
 6139               		.loc 1 264 0
 6140 1828 0A30      		cpi r16,lo8(10)
 6141 182a 01F4      		brne .L378
 265:main.c        ****         uart_putchar('\r', USART); 
 6142               		.loc 1 265 0
 6143 182c 8DE0      		ldi r24,lo8(13)
 6144 182e 6983      		std Y+1,r22
 6145 1830 7A83      		std Y+2,r23
 6146 1832 0E94 0000 		call uart_putchar.constprop.10
 6147               	.LVL348:
 6148 1836 7A81      		ldd r23,Y+2
 6149 1838 6981      		ldd r22,Y+1
 6150 183a 00C0      		rjmp .L378
 6151               	.LVL349:
 6152               	.L382:
 6153               	.LBE2513:
 6154               	.LBE2517:
 6155               	.LBB2518:
 6156               	.LBB2508:
 6157               	.LBB2503:
 6158               	.LBB2419:
 6159               	.LBB2417:
 6160               	.LBB2415:
 6161               	.LBB2410:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 6162               		.loc 5 57 0
 6163 183c 8091 0000 		lds r24,ep_in_pipe_data+4
 6164 1840 342D      		mov r19,r4
 6165 1842 381B      		sub r19,r24
 6166               	.LBE2410:
 6167               	.LBE2415:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 6168               		.loc 3 127 0
 6169 1844 81E0      		ldi r24,lo8(1)
 6170 1846 1316      		cp __zero_reg__,r19
 6171 1848 04F0      		brlt .L236
 6172 184a 00C0      		rjmp .L348
 6173               	.LVL350:
 6174               	.L383:
 6175               	.LBE2417:
 6176               	.LBE2419:
 6177               	.LBE2503:
 6178               	.LBB2504:
 6179               	.LBB2497:
 6180               	.LBB2494:
 6181               	.LBB2491:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 6182               		.loc 3 177 0
 6183 184c AFB7      		in r26,__SREG__
 6184               	.LVL351:
 6185               	.LBB2482:
 6186               	.LBB2483:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6187               		.loc 4 50 0
 6188               	/* #APP */
 6189               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6190 184e F894      		cli
 6191               	 ;  0 "" 2
 6192               	.LVL352:
 6193               	/* #NOAPP */
 6194               	.LBE2483:
 6195               	.LBE2482:
 6196               		.loc 3 178 0
 6197 1850 1092 0000 		sts ep_in_data+2,__zero_reg__
 6198 1854 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 6199               	.LVL353:
 6200               	.LBB2484:
 6201               	.LBB2485:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 6202               		.loc 5 81 0
 6203 1858 8091 0000 		lds r24,ep_in_pipe_data+4
 6204 185c 8F5F      		subi r24,lo8(-(1))
 6205 185e 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 6206               		.loc 5 82 0
 6207 1862 8091 0000 		lds r24,ep_in_pipe_data+2
 6208 1866 9091 0000 		lds r25,ep_in_pipe_data+2+1
 6209 186a 805C      		subi r24,lo8(-(64))
 6210 186c 9F4F      		sbci r25,hi8(-(64))
 6211 186e 8093 0000 		sts ep_in_pipe_data+2,r24
 6212 1872 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 6213               		.loc 5 84 0
 6214 1876 B0E0      		ldi r27,hi8(ep_in_pipe_buffer+512)
 6215 1878 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 6216 187a 9B07      		cpc r25,r27
 6217 187c 01F4      		brne .L240
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 6218               		.loc 5 85 0
 6219 187e 8092 0000 		sts ep_in_pipe_data+2,r8
 6220 1882 9092 0000 		sts ep_in_pipe_data+2+1,r9
 6221               	.L240:
 6222               	.LVL354:
 6223               	.LBE2485:
 6224               	.LBE2484:
 6225               	.LBB2486:
 6226               	.LBB2479:
 6227               	.LBB2476:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6228               		.loc 3 80 0
 6229 1886 4FB7      		in r20,__SREG__
 6230               	.LVL355:
 6231               	.LBB2454:
 6232               	.LBB2455:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6233               		.loc 4 50 0
 6234               	/* #APP */
 6235               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6236 1888 F894      		cli
 6237               	 ;  0 "" 2
 6238               	.LVL356:
 6239               	/* #NOAPP */
 6240               	.LBE2455:
 6241               	.LBE2454:
 6242               	.LBB2456:
 6243               	.LBB2429:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6244               		.loc 6 220 0
 6245 188a 8091 0000 		lds r24,endpoints+24
 6246 188e 8670      		andi r24,lo8(6)
 6247               	.LBE2429:
 6248               	.LBE2456:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 6249               		.loc 3 82 0
 6250 1890 01F0      		breq .+2
 6251 1892 00C0      		rjmp .L385
 6252               	.LVL357:
 6253               	.L241:
 6254               	.LBB2457:
 6255               	.LBB2458:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6256               		.loc 4 70 0
 6257 1894 4FBF      		out __SREG__,r20
 6258               		.loc 4 71 0
 6259               	.LVL358:
 6260               	.LBE2458:
 6261               	.LBE2457:
 6262               	.LBE2476:
 6263               	.LBE2479:
 6264               	.LBE2486:
 6265               	.LBB2487:
 6266               	.LBB2488:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6267               		.loc 4 70 0
 6268 1896 AFBF      		out __SREG__,r26
 6269               		.loc 4 71 0
 6270               	.LBE2488:
 6271               	.LBE2487:
 6272               	.LBE2491:
 6273               	.LBE2494:
 6274               	.LBE2497:
 6275               	.LBE2504:
 6276               	.LBE2508:
 6277               	.LBE2518:
 296:main.c        ****   while (*text_mode != '\0') {  
 6278               		.loc 1 296 0
 6279 1898 D501      		movw r26,r10
 6280               	.LVL359:
 6281 189a 0D91      		ld r16,X+
 6282 189c 5D01      		movw r10,r26
 6283 189e 0023      		tst r16
 6284 18a0 01F0      		breq .+2
 6285 18a2 00C0      		rjmp .L250
 6286               	.LVL360:
 6287               	.L384:
 6288               	.LBB2519:
 6289               	.LBB2520:
 6290               		.loc 7 164 0
 6291 18a4 8FEF      		 ldi r24,lo8(639999)
 6292 18a6 93EC      	    ldi r25,hi8(639999)
 6293 18a8 A9E0      	    ldi r26,hlo8(639999)
 6294 18aa 8150      	    1:subi r24,1
 6295 18ac 9040      	    sbci r25,0
 6296 18ae A040      	    sbci r26,0
 6297 18b0 01F4      	    brne 1b
 6298 18b2 00C0      		rjmp .
 6299 18b4 0000      		nop
 6300               	.LVL361:
 6301               	.LBE2520:
 6302               	.LBE2519:
 6303               	.LBB2521:
 6304               	.LBB2522:
 6305               	.LBB2523:
 6306               	.LBB2524:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 6307               		.loc 3 110 0
 6308 18b6 81E0      		ldi r24,lo8(1)
 6309 18b8 8093 0000 		sts ep_in_data+1,r24
 6310               	.LVL362:
 6311               	.LBB2525:
 6312               	.LBB2526:
 6313               	.LBB2527:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6314               		.loc 3 80 0
 6315 18bc 5FB7      		in r21,__SREG__
 6316               	.LVL363:
 6317               	.LBB2528:
 6318               	.LBB2529:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6319               		.loc 4 50 0
 6320               	/* #APP */
 6321               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6322 18be F894      		cli
 6323               	 ;  0 "" 2
 6324               	.LVL364:
 6325               	/* #NOAPP */
 6326               	.LBE2529:
 6327               	.LBE2528:
 6328               	.LBB2530:
 6329               	.LBB2531:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6330               		.loc 6 220 0
 6331 18c0 8091 0000 		lds r24,endpoints+24
 6332 18c4 8670      		andi r24,lo8(6)
 6333               	.LBE2531:
 6334               	.LBE2530:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 6335               		.loc 3 82 0
 6336 18c6 01F0      		breq .+2
 6337 18c8 00C0      		rjmp .L386
 6338               	.LVL365:
 6339               	.L251:
 6340               	.LBB2532:
 6341               	.LBB2533:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6342               		.loc 4 70 0
 6343 18ca 5FBF      		out __SREG__,r21
 6344               		.loc 4 71 0
 6345               	.LBE2533:
 6346               	.LBE2532:
 6347               	.LBE2527:
 6348               	.LBE2526:
 6349               	.LBE2525:
 6350               	.LBE2524:
 6351               	.LBE2523:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 6352               		.loc 2 27 0
 6353 18cc 82E0      		ldi r24,lo8(2)
 6354 18ce E0EC      		ldi r30,lo8(1216)
 6355 18d0 F4E0      		ldi r31,hi8(1216)
 6356 18d2 8587      		std Z+13,r24
 6357               	.LBB2575:
 6358               	.LBB2576:
 6359               	.LBB2577:
 6360               	.LBB2578:
 6361               	.LBB2579:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 6362               		.loc 5 57 0
 6363 18d4 36E0      		ldi r19,lo8(6)
 6364               	.L260:
 6365               	.LVL366:
 6366               	.LBE2579:
 6367               	.LBE2578:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6368               		.loc 3 123 0
 6369 18d6 9FB7      		in r25,__SREG__
 6370               	.LVL367:
 6371               	.LBB2581:
 6372               	.LBB2582:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6373               		.loc 4 50 0
 6374               	/* #APP */
 6375               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6376 18d8 F894      		cli
 6377               	 ;  0 "" 2
 6378               	.LVL368:
 6379               	/* #NOAPP */
 6380               	.LBE2582:
 6381               	.LBE2581:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 6382               		.loc 3 124 0
 6383 18da 8091 0000 		lds r24,ep_in_data+1
 6384 18de 8823      		tst r24
 6385 18e0 01F4      		brne .+2
 6386 18e2 00C0      		rjmp .L387
 6387               	.L349:
 125:usb/usb_pipe.h **** 			r = false;
 6388               		.loc 3 125 0
 6389 18e4 80E0      		ldi r24,lo8(0)
 6390               	.L262:
 6391               	.LBB2583:
 6392               	.LBB2584:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6393               		.loc 4 70 0
 6394 18e6 9FBF      		out __SREG__,r25
 6395               		.loc 4 71 0
 6396               	.LBE2584:
 6397               	.LBE2583:
 6398               	.LBE2577:
 6399               	.LBE2576:
 6400               	.LBE2575:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 6401               		.loc 2 28 0
 6402 18e8 8823      		tst r24
 6403 18ea 01F4      		brne .L261
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 6404               		.loc 2 29 0
 6405 18ec 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 6406 18f0 8823      		tst r24
 6407 18f2 01F0      		breq .L260
 6408               	.LVL369:
 6409               	.LBB2588:
 6410               	.LBB2589:
 6411               	.LBB2590:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6412               		.loc 3 54 0
 6413 18f4 2FB7      		in r18,__SREG__
 6414               	.LVL370:
 6415               	.LBB2591:
 6416               	.LBB2592:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6417               		.loc 4 50 0
 6418               	/* #APP */
 6419               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6420 18f6 F894      		cli
 6421               	 ;  0 "" 2
 6422               	.LVL371:
 6423               	/* #NOAPP */
 6424               	.LBE2592:
 6425               	.LBE2591:
 6426               	.LBB2593:
 6427               	.LBB2594:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 6428               		.loc 5 90 0
 6429 18f8 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 6430               		.loc 5 91 0
 6431 18fc 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 6432 18fe 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 6433 1900 8093 0000 		sts ep_in_pipe_data+2,r24
 6434 1904 9093 0000 		sts ep_in_pipe_data+2+1,r25
 6435 1908 8093 0000 		sts ep_in_pipe_data,r24
 6436 190c 9093 0000 		sts ep_in_pipe_data+1,r25
 6437               	.LVL372:
 6438               	.LBE2594:
 6439               	.LBE2593:
 6440               	.LBB2595:
 6441               	.LBB2596:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6442               		.loc 6 158 0
 6443 1910 E0E0      		ldi r30,lo8(endpoints+24)
 6444 1912 F0E0      		ldi r31,hi8(endpoints+24)
 6445               	/* #APP */
 6446               	 ;  158 "usb/usb.h" 1
 6447 1914 06E0      		ldi r16, 6
 6448 1916 0593      		.dc.w 0x9305
 6449               		
 6450               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 6451               		.loc 6 159 0
 6452               	 ;  159 "usb/usb.h" 1
 6453 1918 08E0      		ldi r16, 8
 6454 191a 0693      		.dc.w 0x9306
 6455               		
 6456               	 ;  0 "" 2
 6457               	/* #NOAPP */
 6458               	.LBE2596:
 6459               	.LBE2595:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 6460               		.loc 3 57 0
 6461 191c 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 6462               		.loc 3 58 0
 6463 1920 1092 0000 		sts ep_in_data+2,__zero_reg__
 6464 1924 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 6465               		.loc 3 59 0
 6466 1928 1092 0000 		sts ep_in_data,__zero_reg__
 6467               	.LVL373:
 6468               	.LBB2597:
 6469               	.LBB2598:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6470               		.loc 4 70 0
 6471 192c 2FBF      		out __SREG__,r18
 6472               		.loc 4 71 0
 6473               	.LVL374:
 6474               	.L261:
 6475               	.LBE2598:
 6476               	.LBE2597:
 6477               	.LBE2590:
 6478               	.LBE2589:
 6479               	.LBE2588:
 6480               	.LBE2522:
 6481               	.LBE2521:
 6482               	.LBB2606:
 6483               	.LBB2607:
 146:main.c        ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 6484               		.loc 1 146 0
 6485 192e E12F      		mov r30,r17
 6486 1930 F72D      		mov r31,r7
 6487 1932 DF01      		movw r26,r30
 6488 1934 0D90      		ld __tmp_reg__,X+
 6489 1936 0020      		tst __tmp_reg__
 6490 1938 01F4      		brne .-6
 6491 193a CD01      		movw r24,r26
 6492 193c 8E1B      		sub r24,r30
 6493 193e 9F0B      		sbc r25,r31
 6494 1940 0996      		adiw r24,9
 6495 1942 0E94 0000 		call malloc
 6496               	.LVL375:
 6497 1946 082F      		mov r16,r24
 6498 1948 E92E      		mov r14,r25
 6499               	.LVL376:
 148:main.c        ****     strcpy(result, s1);
 6500               		.loc 1 148 0
 6501 194a E82F      		mov r30,r24
 6502 194c F92F      		mov r31,r25
 6503 194e A0E0      		ldi r26,lo8(.LC4)
 6504 1950 B0E0      		ldi r27,hi8(.LC4)
 6505 1952 8AE0      		ldi r24,lo8(10)
 6506               	.LVL377:
 6507               	.L265:
 6508 1954 0D90      		ld r0,X+
 6509 1956 0192      		st Z+,r0
 6510 1958 8150      		subi r24,lo8(-(-1))
 6511 195a 01F4      		brne .L265
 149:main.c        ****     strcat(result, s2);
 6512               		.loc 1 149 0
 6513 195c 802F      		mov r24,r16
 6514 195e 9E2D      		mov r25,r14
 6515               	.LVL378:
 6516 1960 612F      		mov r22,r17
 6517 1962 772D      		mov r23,r7
 6518 1964 0E94 0000 		call strcat
 6519               	.LVL379:
 6520               	.LBE2607:
 6521               	.LBE2606:
 6522               	.LBB2608:
 6523               	.LBB2609:
 146:main.c        ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 6524               		.loc 1 146 0
 6525 1968 E02F      		mov r30,r16
 6526 196a FE2D      		mov r31,r14
 6527 196c DF01      		movw r26,r30
 6528 196e 0D90      		ld __tmp_reg__,X+
 6529 1970 0020      		tst __tmp_reg__
 6530 1972 01F4      		brne .-6
 6531 1974 CD01      		movw r24,r26
 6532 1976 8E1B      		sub r24,r30
 6533 1978 9F0B      		sbc r25,r31
 6534 197a 0296      		adiw r24,2
 6535 197c 0E94 0000 		call malloc
 6536 1980 192F      		mov r17,r25
 6537               	.LVL380:
 6538 1982 A82E      		mov r10,r24
 6539 1984 B92E      		mov r11,r25
 6540               	.LVL381:
 148:main.c        ****     strcpy(result, s1);
 6541               		.loc 1 148 0
 6542 1986 C501      		movw r24,r10
 6543 1988 602F      		mov r22,r16
 6544 198a 7E2D      		mov r23,r14
 6545 198c 0E94 0000 		call strcpy
 149:main.c        ****     strcat(result, s2);
 6546               		.loc 1 149 0
 6547 1990 AA2D      		mov r26,r10
 6548 1992 B12F      		mov r27,r17
 6549 1994 FD01      		movw r30,r26
 6550 1996 0190      		ld __tmp_reg__,Z+
 6551 1998 0020      		tst __tmp_reg__
 6552 199a 01F4      		brne .-6
 6553 199c 3197      		sbiw r30,1
 6554 199e EA1B      		sub r30,r26
 6555 19a0 FB0B      		sbc r31,r27
 6556 19a2 EA0D      		add r30,r10
 6557 19a4 FB1D      		adc r31,r11
 6558 19a6 A0E0      		ldi r26,lo8(.LC5)
 6559 19a8 B0E0      		ldi r27,hi8(.LC5)
 6560 19aa 83E0      		ldi r24,lo8(3)
 6561               	.L266:
 6562 19ac 0D90      		ld r0,X+
 6563 19ae 0192      		st Z+,r0
 6564 19b0 8150      		subi r24,lo8(-(-1))
 6565 19b2 01F4      		brne .L266
 6566               	.LVL382:
 6567               	.LBE2609:
 6568               	.LBE2608:
 315:main.c        ****   while (*new_number_string != '\0') {
 6569               		.loc 1 315 0
 6570 19b4 F501      		movw r30,r10
 6571 19b6 0081      		ld r16,Z
 6572               	.LVL383:
 6573 19b8 0023      		tst r16
 6574 19ba 01F4      		brne .+2
 6575 19bc 00C0      		rjmp .L267
 286:main.c        **** void send_message(char* number, char* text_message) {
 6576               		.loc 1 286 0
 6577 19be 0894      		sec
 6578 19c0 A11C      		adc r10,__zero_reg__
 6579 19c2 B11C      		adc r11,__zero_reg__
 6580               	.LVL384:
 6581               	.LBB2610:
 6582               	.LBB2611:
 6583               	.LBB2612:
 6584               	.LBB2613:
 6585               	.LBB2614:
 6586               	.LBB2615:
 6587               	.LBB2616:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 6588               		.loc 5 57 0
 6589 19c4 F6E0      		ldi r31,lo8(6)
 6590 19c6 7F2E      		mov r7,r31
 6591               	.LBE2616:
 6592               	.LBE2615:
 6593               	.LBE2614:
 6594               	.LBE2613:
 6595               	.LBE2612:
 6596               	.LBB2627:
 6597               	.LBB2628:
 6598               	.LBB2629:
 6599               	.LBB2630:
 6600               	.LBB2631:
 6601               	.LBB2632:
 6602               	.LBB2633:
 6603               	.LBB2634:
 6604               	.LBB2635:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6605               		.loc 6 220 0
 6606 19c8 A0E0      		ldi r26,lo8(endpoints+24)
 6607 19ca EA2E      		mov r14,r26
 6608 19cc A0E0      		ldi r26,hi8(endpoints+24)
 6609 19ce FA2E      		mov r15,r26
 6610               	.LBE2635:
 6611               	.LBE2634:
 6612               	.LBB2637:
 6613               	.LBB2638:
 6614               		.loc 5 91 0
 6615 19d0 B0E0      		ldi r27,lo8(ep_in_pipe_buffer)
 6616 19d2 8B2E      		mov r8,r27
 6617 19d4 B0E0      		ldi r27,hi8(ep_in_pipe_buffer)
 6618 19d6 9B2E      		mov r9,r27
 6619               	.LBE2638:
 6620               	.LBE2637:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 6621               		.loc 3 88 0
 6622 19d8 12E0      		ldi r17,lo8(2)
 6623               	.LBB2641:
 6624               	.LBB2642:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 6625               		.loc 3 69 0
 6626 19da 61E0      		ldi r22,lo8(1)
 6627 19dc 70E0      		ldi r23,hi8(1)
 6628               	.LBE2642:
 6629               	.LBE2641:
 6630               	.LBB2651:
 6631               	.LBB2652:
 6632               	.LBB2653:
 6633               	.LBB2654:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 6634               		.loc 6 169 0
 6635 19de 80E4      		ldi r24,lo8(64)
 6636 19e0 C82E      		mov r12,r24
 6637 19e2 D12C      		mov r13,__zero_reg__
 6638               	.LVL385:
 6639               	.L285:
 6640               	.LBE2654:
 6641               	.LBE2653:
 6642               	.LBE2652:
 6643               	.LBE2651:
 6644               	.LBE2633:
 6645               	.LBE2632:
 6646               	.LBE2631:
 6647               	.LBE2630:
 6648               	.LBE2629:
 6649               	.LBE2628:
 6650               	.LBE2627:
 6651               	.LBE2611:
 6652               	.LBE2610:
 6653               	.LBB2722:
 6654               	.LBB2723:
 264:main.c        ****     if (c == '\n') 
 6655               		.loc 1 264 0
 6656 19e4 0A30      		cpi r16,lo8(10)
 6657 19e6 01F4      		brne .+2
 6658 19e8 00C0      		rjmp .L388
 6659               	.L358:
 268:main.c        ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 6660               		.loc 1 268 0
 6661 19ea 8091 A109 		lds r24,2465
 6662 19ee 85FF      		sbrs r24,5
 6663 19f0 00C0      		rjmp .L358
 271:main.c        ****     USART->DATA = c; 
 6664               		.loc 1 271 0
 6665 19f2 0093 A009 		sts 2464,r16
 6666               	.L270:
 6667               	.LBE2723:
 6668               	.LBE2722:
 6669               	.LBB2725:
 6670               	.LBB2726:
 280:main.c        ****     while ( !( USART->STATUS & USART_RXCIF_bm) ); 
 6671               		.loc 1 280 0
 6672 19f6 8091 A109 		lds r24,2465
 6673 19fa 87FF      		sbrs r24,7
 6674 19fc 00C0      		rjmp .L270
 283:main.c        ****     return USART->DATA; 
 6675               		.loc 1 283 0
 6676 19fe 2091 A009 		lds r18,2464
 6677               	.LVL386:
 6678               	.L273:
 6679               	.LBE2726:
 6680               	.LBE2725:
 6681               	.LBB2727:
 6682               	.LBB2717:
 6683               	.LBB2710:
 6684               	.LBB2625:
 6685               	.LBB2623:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6686               		.loc 3 123 0
 6687 1a02 9FB7      		in r25,__SREG__
 6688               	.LVL387:
 6689               	.LBB2618:
 6690               	.LBB2619:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6691               		.loc 4 50 0
 6692               	/* #APP */
 6693               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6694 1a04 F894      		cli
 6695               	 ;  0 "" 2
 6696               	.LVL388:
 6697               	/* #NOAPP */
 6698               	.LBE2619:
 6699               	.LBE2618:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 6700               		.loc 3 124 0
 6701 1a06 8091 0000 		lds r24,ep_in_data+1
 6702 1a0a 8823      		tst r24
 6703 1a0c 01F4      		brne .+2
 6704 1a0e 00C0      		rjmp .L389
 6705               	.L350:
 125:usb/usb_pipe.h **** 			r = false;
 6706               		.loc 3 125 0
 6707 1a10 80E0      		ldi r24,lo8(0)
 6708               	.L271:
 6709               	.LBB2620:
 6710               	.LBB2621:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6711               		.loc 4 70 0
 6712 1a12 9FBF      		out __SREG__,r25
 6713               		.loc 4 71 0
 6714               	.LBE2621:
 6715               	.LBE2620:
 6716               	.LBE2623:
 6717               	.LBE2625:
 6718               	.LBE2710:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 6719               		.loc 2 20 0
 6720 1a14 8823      		tst r24
 6721 1a16 01F0      		breq .L273
 6722               	.LVL389:
 6723               	.LBB2711:
 6724               	.LBB2712:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 6725               		.loc 3 175 0
 6726 1a18 8091 0000 		lds r24,ep_in_data+2
 6727 1a1c 9091 0000 		lds r25,ep_in_data+2+1
 6728 1a20 E091 0000 		lds r30,ep_in_pipe_data+2
 6729 1a24 F091 0000 		lds r31,ep_in_pipe_data+2+1
 6730 1a28 E80F      		add r30,r24
 6731 1a2a F91F      		adc r31,r25
 6732 1a2c 2083      		st Z,r18
 6733 1a2e 0196      		adiw r24,1
 6734 1a30 8093 0000 		sts ep_in_data+2,r24
 6735 1a34 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 6736               		.loc 3 176 0
 6737 1a38 8034      		cpi r24,64
 6738 1a3a 9105      		cpc r25,__zero_reg__
 6739 1a3c 01F4      		brne .+2
 6740 1a3e 00C0      		rjmp .L390
 6741               	.LVL390:
 6742               	.L274:
 6743               	.LBE2712:
 6744               	.LBE2711:
 6745               	.LBE2717:
 6746               	.LBE2727:
 315:main.c        ****   while (*new_number_string != '\0') {
 6747               		.loc 1 315 0
 6748 1a40 D501      		movw r26,r10
 6749 1a42 0D91      		ld r16,X+
 6750 1a44 5D01      		movw r10,r26
 6751 1a46 0023      		tst r16
 6752 1a48 01F4      		brne .L285
 6753               	.LVL391:
 6754               	.L267:
 6755               	.LBB2728:
 6756               	.LBB2729:
 6757               		.loc 7 164 0
 6758 1a4a 8FEF      		 ldi r24,lo8(639999)
 6759 1a4c 93EC      	    ldi r25,hi8(639999)
 6760 1a4e A9E0      	    ldi r26,hlo8(639999)
 6761 1a50 8150      	    1:subi r24,1
 6762 1a52 9040      	    sbci r25,0
 6763 1a54 A040      	    sbci r26,0
 6764 1a56 01F4      	    brne 1b
 6765 1a58 00C0      		rjmp .
 6766 1a5a 0000      		nop
 6767               	.LBE2729:
 6768               	.LBE2728:
 6769               	.LBB2730:
 6770               	.LBB2731:
 6771               	.LBB2732:
 6772               	.LBB2733:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 6773               		.loc 3 110 0
 6774 1a5c 81E0      		ldi r24,lo8(1)
 6775 1a5e 8093 0000 		sts ep_in_data+1,r24
 6776               	.LVL392:
 6777               	.LBB2734:
 6778               	.LBB2735:
 6779               	.LBB2736:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6780               		.loc 3 80 0
 6781 1a62 2FB7      		in r18,__SREG__
 6782               	.LVL393:
 6783               	.LBB2737:
 6784               	.LBB2738:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6785               		.loc 4 50 0
 6786               	/* #APP */
 6787               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6788 1a64 F894      		cli
 6789               	 ;  0 "" 2
 6790               	.LVL394:
 6791               	/* #NOAPP */
 6792               	.LBE2738:
 6793               	.LBE2737:
 6794               	.LBB2739:
 6795               	.LBB2740:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6796               		.loc 6 220 0
 6797 1a66 8091 0000 		lds r24,endpoints+24
 6798 1a6a 8670      		andi r24,lo8(6)
 6799               	.LBE2740:
 6800               	.LBE2739:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 6801               		.loc 3 82 0
 6802 1a6c 01F0      		breq .+2
 6803 1a6e 00C0      		rjmp .L391
 6804               	.LVL395:
 6805               	.L286:
 6806               	.LBB2741:
 6807               	.LBB2742:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6808               		.loc 4 70 0
 6809 1a70 2FBF      		out __SREG__,r18
 6810               		.loc 4 71 0
 6811               	.LBE2742:
 6812               	.LBE2741:
 6813               	.LBE2736:
 6814               	.LBE2735:
 6815               	.LBE2734:
 6816               	.LBE2733:
 6817               	.LBE2732:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 6818               		.loc 2 27 0
 6819 1a72 82E0      		ldi r24,lo8(2)
 6820 1a74 E0EC      		ldi r30,lo8(1216)
 6821 1a76 F4E0      		ldi r31,hi8(1216)
 6822 1a78 8587      		std Z+13,r24
 6823               	.LBB2792:
 6824               	.LBB2793:
 6825               	.LBB2794:
 6826               	.LBB2795:
 6827               	.LBB2796:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 6828               		.loc 5 57 0
 6829 1a7a 36E0      		ldi r19,lo8(6)
 6830               	.LVL396:
 6831               	.L295:
 6832               	.LBE2796:
 6833               	.LBE2795:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6834               		.loc 3 123 0
 6835 1a7c 9FB7      		in r25,__SREG__
 6836               	.LVL397:
 6837               	.LBB2798:
 6838               	.LBB2799:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6839               		.loc 4 50 0
 6840               	/* #APP */
 6841               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6842 1a7e F894      		cli
 6843               	 ;  0 "" 2
 6844               	.LVL398:
 6845               	/* #NOAPP */
 6846               	.LBE2799:
 6847               	.LBE2798:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 6848               		.loc 3 124 0
 6849 1a80 8091 0000 		lds r24,ep_in_data+1
 6850 1a84 8823      		tst r24
 6851 1a86 01F4      		brne .+2
 6852 1a88 00C0      		rjmp .L392
 6853               	.L351:
 125:usb/usb_pipe.h **** 			r = false;
 6854               		.loc 3 125 0
 6855 1a8a 80E0      		ldi r24,lo8(0)
 6856               	.L297:
 6857               	.LBB2800:
 6858               	.LBB2801:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6859               		.loc 4 70 0
 6860 1a8c 9FBF      		out __SREG__,r25
 6861               		.loc 4 71 0
 6862               	.LBE2801:
 6863               	.LBE2800:
 6864               	.LBE2794:
 6865               	.LBE2793:
 6866               	.LBE2792:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 6867               		.loc 2 28 0
 6868 1a8e 8823      		tst r24
 6869 1a90 01F4      		brne .L296
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 6870               		.loc 2 29 0
 6871 1a92 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 6872 1a96 8823      		tst r24
 6873 1a98 01F0      		breq .L295
 6874               	.LVL399:
 6875               	.LBB2805:
 6876               	.LBB2806:
 6877               	.LBB2807:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 6878               		.loc 3 54 0
 6879 1a9a 2FB7      		in r18,__SREG__
 6880               	.LVL400:
 6881               	.LBB2808:
 6882               	.LBB2809:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 6883               		.loc 4 50 0
 6884               	/* #APP */
 6885               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 6886 1a9c F894      		cli
 6887               	 ;  0 "" 2
 6888               	.LVL401:
 6889               	/* #NOAPP */
 6890               	.LBE2809:
 6891               	.LBE2808:
 6892               	.LBB2810:
 6893               	.LBB2811:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 6894               		.loc 5 90 0
 6895 1a9e 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 6896               		.loc 5 91 0
 6897 1aa2 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 6898 1aa4 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 6899 1aa6 8093 0000 		sts ep_in_pipe_data+2,r24
 6900 1aaa 9093 0000 		sts ep_in_pipe_data+2+1,r25
 6901 1aae 8093 0000 		sts ep_in_pipe_data,r24
 6902 1ab2 9093 0000 		sts ep_in_pipe_data+1,r25
 6903               	.LVL402:
 6904               	.LBE2811:
 6905               	.LBE2810:
 6906               	.LBB2812:
 6907               	.LBB2813:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 6908               		.loc 6 158 0
 6909 1ab6 E0E0      		ldi r30,lo8(endpoints+24)
 6910 1ab8 F0E0      		ldi r31,hi8(endpoints+24)
 6911               	/* #APP */
 6912               	 ;  158 "usb/usb.h" 1
 6913 1aba 06E0      		ldi r16, 6
 6914 1abc 0593      		.dc.w 0x9305
 6915               		
 6916               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 6917               		.loc 6 159 0
 6918               	 ;  159 "usb/usb.h" 1
 6919 1abe 08E0      		ldi r16, 8
 6920 1ac0 0693      		.dc.w 0x9306
 6921               		
 6922               	 ;  0 "" 2
 6923               	/* #NOAPP */
 6924               	.LBE2813:
 6925               	.LBE2812:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 6926               		.loc 3 57 0
 6927 1ac2 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 6928               		.loc 3 58 0
 6929 1ac6 1092 0000 		sts ep_in_data+2,__zero_reg__
 6930 1aca 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 6931               		.loc 3 59 0
 6932 1ace 1092 0000 		sts ep_in_data,__zero_reg__
 6933               	.LVL403:
 6934               	.LBB2814:
 6935               	.LBB2815:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 6936               		.loc 4 70 0
 6937 1ad2 2FBF      		out __SREG__,r18
 6938               		.loc 4 71 0
 6939               	.LVL404:
 6940               	.L296:
 6941               	.LBE2815:
 6942               	.LBE2814:
 6943               	.LBE2807:
 6944               	.LBE2806:
 6945               	.LBE2805:
 6946               	.LBE2731:
 6947               	.LBE2730:
 6948               	.LBB2828:
 6949               	.LBB2829:
 146:main.c        ****     char *result = malloc(strlen(s1)+strlen(s2)+1);
 6950               		.loc 1 146 0
 6951 1ad4 E62D      		mov r30,r6
 6952 1ad6 F52D      		mov r31,r5
 6953 1ad8 DF01      		movw r26,r30
 6954 1ada 0D90      		ld __tmp_reg__,X+
 6955 1adc 0020      		tst __tmp_reg__
 6956 1ade 01F4      		brne .-6
 6957 1ae0 CD01      		movw r24,r26
 6958 1ae2 8E1B      		sub r24,r30
 6959 1ae4 9F0B      		sbc r25,r31
 6960 1ae6 0196      		adiw r24,1
 6961 1ae8 0E94 0000 		call malloc
 6962               	.LVL405:
 6963 1aec 192F      		mov r17,r25
 6964 1aee A82E      		mov r10,r24
 6965 1af0 B92E      		mov r11,r25
 6966               	.LVL406:
 148:main.c        ****     strcpy(result, s1);
 6967               		.loc 1 148 0
 6968 1af2 C501      		movw r24,r10
 6969 1af4 662D      		mov r22,r6
 6970 1af6 752D      		mov r23,r5
 6971 1af8 0E94 0000 		call strcpy
 149:main.c        ****     strcat(result, s2);
 6972               		.loc 1 149 0
 6973 1afc AA2D      		mov r26,r10
 6974 1afe B12F      		mov r27,r17
 6975 1b00 FD01      		movw r30,r26
 6976 1b02 0190      		ld __tmp_reg__,Z+
 6977 1b04 0020      		tst __tmp_reg__
 6978 1b06 01F4      		brne .-6
 6979 1b08 3197      		sbiw r30,1
 6980 1b0a EA1B      		sub r30,r26
 6981 1b0c FB0B      		sbc r31,r27
 6982 1b0e EA0D      		add r30,r10
 6983 1b10 FB1D      		adc r31,r11
 6984 1b12 8DE0      		ldi r24,lo8(13)
 6985 1b14 90E0      		ldi r25,hi8(13)
 6986 1b16 8083      		st Z,r24
 6987 1b18 9183      		std Z+1,r25
 6988               	.LVL407:
 6989               	.LBE2829:
 6990               	.LBE2828:
 327:main.c        ****   while (*new_text_message != '\0') {
 6991               		.loc 1 327 0
 6992 1b1a F501      		movw r30,r10
 6993 1b1c 0081      		ld r16,Z
 6994 1b1e 0023      		tst r16
 6995 1b20 01F4      		brne .+2
 6996 1b22 00C0      		rjmp .L300
 286:main.c        **** void send_message(char* number, char* text_message) {
 6997               		.loc 1 286 0
 6998 1b24 0894      		sec
 6999 1b26 A11C      		adc r10,__zero_reg__
 7000 1b28 B11C      		adc r11,__zero_reg__
 7001               	.LVL408:
 7002               	.LBB2830:
 7003               	.LBB2831:
 7004               	.LBB2832:
 7005               	.LBB2833:
 7006               	.LBB2834:
 7007               	.LBB2835:
 7008               	.LBB2836:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 7009               		.loc 5 57 0
 7010 1b2a 56E0      		ldi r21,lo8(6)
 7011 1b2c 752E      		mov r7,r21
 7012               	.LBE2836:
 7013               	.LBE2835:
 7014               	.LBE2834:
 7015               	.LBE2833:
 7016               	.LBE2832:
 7017               	.LBB2847:
 7018               	.LBB2848:
 7019               	.LBB2849:
 7020               	.LBB2850:
 7021               	.LBB2851:
 7022               	.LBB2852:
 7023               	.LBB2853:
 7024               	.LBB2854:
 7025               	.LBB2855:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 7026               		.loc 6 220 0
 7027 1b2e 60E0      		ldi r22,lo8(endpoints+24)
 7028 1b30 E62E      		mov r14,r22
 7029 1b32 60E0      		ldi r22,hi8(endpoints+24)
 7030 1b34 F62E      		mov r15,r22
 7031               	.LBE2855:
 7032               	.LBE2854:
 7033               	.LBB2857:
 7034               	.LBB2858:
 7035               		.loc 5 91 0
 7036 1b36 70E0      		ldi r23,lo8(ep_in_pipe_buffer)
 7037 1b38 872E      		mov r8,r23
 7038 1b3a 70E0      		ldi r23,hi8(ep_in_pipe_buffer)
 7039 1b3c 972E      		mov r9,r23
 7040               	.LBE2858:
 7041               	.LBE2857:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 7042               		.loc 3 88 0
 7043 1b3e 12E0      		ldi r17,lo8(2)
 7044               	.LBB2861:
 7045               	.LBB2862:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7046               		.loc 3 69 0
 7047 1b40 61E0      		ldi r22,lo8(1)
 7048 1b42 70E0      		ldi r23,hi8(1)
 7049               	.LBE2862:
 7050               	.LBE2861:
 7051               	.LBB2871:
 7052               	.LBB2872:
 7053               	.LBB2873:
 7054               	.LBB2874:
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7055               		.loc 6 169 0
 7056 1b44 E0E4      		ldi r30,lo8(64)
 7057 1b46 CE2E      		mov r12,r30
 7058 1b48 D12C      		mov r13,__zero_reg__
 7059               	.LVL409:
 7060               	.L318:
 7061               	.LBE2874:
 7062               	.LBE2873:
 7063               	.LBE2872:
 7064               	.LBE2871:
 7065               	.LBE2853:
 7066               	.LBE2852:
 7067               	.LBE2851:
 7068               	.LBE2850:
 7069               	.LBE2849:
 7070               	.LBE2848:
 7071               	.LBE2847:
 7072               	.LBE2831:
 7073               	.LBE2830:
 7074               	.LBB2942:
 7075               	.LBB2943:
 264:main.c        ****     if (c == '\n') 
 7076               		.loc 1 264 0
 7077 1b4a 0A30      		cpi r16,lo8(10)
 7078 1b4c 01F4      		brne .+2
 7079 1b4e 00C0      		rjmp .L393
 7080               	.L357:
 268:main.c        ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 7081               		.loc 1 268 0
 7082 1b50 8091 A109 		lds r24,2465
 7083 1b54 85FF      		sbrs r24,5
 7084 1b56 00C0      		rjmp .L357
 271:main.c        ****     USART->DATA = c; 
 7085               		.loc 1 271 0
 7086 1b58 0093 A009 		sts 2464,r16
 7087               	.L303:
 7088               	.LBE2943:
 7089               	.LBE2942:
 7090               	.LBB2945:
 7091               	.LBB2946:
 280:main.c        ****     while ( !( USART->STATUS & USART_RXCIF_bm) ); 
 7092               		.loc 1 280 0
 7093 1b5c 8091 A109 		lds r24,2465
 7094 1b60 87FF      		sbrs r24,7
 7095 1b62 00C0      		rjmp .L303
 283:main.c        ****     return USART->DATA; 
 7096               		.loc 1 283 0
 7097 1b64 2091 A009 		lds r18,2464
 7098               	.LVL410:
 7099               	.L306:
 7100               	.LBE2946:
 7101               	.LBE2945:
 7102               	.LBB2947:
 7103               	.LBB2937:
 7104               	.LBB2930:
 7105               	.LBB2845:
 7106               	.LBB2843:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 7107               		.loc 3 123 0
 7108 1b68 9FB7      		in r25,__SREG__
 7109               	.LVL411:
 7110               	.LBB2838:
 7111               	.LBB2839:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 7112               		.loc 4 50 0
 7113               	/* #APP */
 7114               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 7115 1b6a F894      		cli
 7116               	 ;  0 "" 2
 7117               	.LVL412:
 7118               	/* #NOAPP */
 7119               	.LBE2839:
 7120               	.LBE2838:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 7121               		.loc 3 124 0
 7122 1b6c 8091 0000 		lds r24,ep_in_data+1
 7123 1b70 8823      		tst r24
 7124 1b72 01F4      		brne .+2
 7125 1b74 00C0      		rjmp .L394
 7126               	.L352:
 125:usb/usb_pipe.h **** 			r = false;
 7127               		.loc 3 125 0
 7128 1b76 80E0      		ldi r24,lo8(0)
 7129               	.L304:
 7130               	.LBB2840:
 7131               	.LBB2841:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 7132               		.loc 4 70 0
 7133 1b78 9FBF      		out __SREG__,r25
 7134               		.loc 4 71 0
 7135               	.LBE2841:
 7136               	.LBE2840:
 7137               	.LBE2843:
 7138               	.LBE2845:
 7139               	.LBE2930:
  20:Framework.h   ****     while (!usb_pipe_can_write(&ep_in));
 7140               		.loc 2 20 0
 7141 1b7a 8823      		tst r24
 7142 1b7c 01F0      		breq .L306
 7143               	.LVL413:
 7144               	.LBB2931:
 7145               	.LBB2932:
 175:usb/usb_pipe.h **** 	p->pipe->data->write_ptr[p->data->packet_offset++] = v;
 7146               		.loc 3 175 0
 7147 1b7e 8091 0000 		lds r24,ep_in_data+2
 7148 1b82 9091 0000 		lds r25,ep_in_data+2+1
 7149 1b86 E091 0000 		lds r30,ep_in_pipe_data+2
 7150 1b8a F091 0000 		lds r31,ep_in_pipe_data+2+1
 7151 1b8e E80F      		add r30,r24
 7152 1b90 F91F      		adc r31,r25
 7153 1b92 2083      		st Z,r18
 7154 1b94 0196      		adiw r24,1
 7155 1b96 8093 0000 		sts ep_in_data+2,r24
 7156 1b9a 9093 0000 		sts ep_in_data+2+1,r25
 176:usb/usb_pipe.h **** 	if (p->data->packet_offset == p->pipe->size){
 7157               		.loc 3 176 0
 7158 1b9e 8034      		cpi r24,64
 7159 1ba0 9105      		cpc r25,__zero_reg__
 7160 1ba2 01F4      		brne .+2
 7161 1ba4 00C0      		rjmp .L395
 7162               	.LVL414:
 7163               	.L307:
 7164               	.LBE2932:
 7165               	.LBE2931:
 7166               	.LBE2937:
 7167               	.LBE2947:
 327:main.c        ****   while (*new_text_message != '\0') {
 7168               		.loc 1 327 0
 7169 1ba6 D501      		movw r26,r10
 7170 1ba8 0D91      		ld r16,X+
 7171 1baa 5D01      		movw r10,r26
 7172 1bac 0023      		tst r16
 7173 1bae 01F4      		brne .L318
 7174               	.LVL415:
 7175               	.L300:
 7176               	.LBB2948:
 7177               	.LBB2949:
 7178               		.loc 7 164 0
 7179 1bb0 8FEF      		 ldi r24,lo8(639999)
 7180 1bb2 93EC      	    ldi r25,hi8(639999)
 7181 1bb4 A9E0      	    ldi r26,hlo8(639999)
 7182 1bb6 8150      	    1:subi r24,1
 7183 1bb8 9040      	    sbci r25,0
 7184 1bba A040      	    sbci r26,0
 7185 1bbc 01F4      	    brne 1b
 7186 1bbe 00C0      		rjmp .
 7187 1bc0 0000      		nop
 7188               	.LBE2949:
 7189               	.LBE2948:
 7190               	.LBB2950:
 7191               	.LBB2951:
 7192               	.LBB2952:
 7193               	.LBB2953:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 7194               		.loc 3 110 0
 7195 1bc2 81E0      		ldi r24,lo8(1)
 7196 1bc4 8093 0000 		sts ep_in_data+1,r24
 7197               	.LVL416:
 7198               	.LBB2954:
 7199               	.LBB2955:
 7200               	.LBB2956:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 7201               		.loc 3 80 0
 7202 1bc8 2FB7      		in r18,__SREG__
 7203               	.LVL417:
 7204               	.LBB2957:
 7205               	.LBB2958:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 7206               		.loc 4 50 0
 7207               	/* #APP */
 7208               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 7209 1bca F894      		cli
 7210               	 ;  0 "" 2
 7211               	.LVL418:
 7212               	/* #NOAPP */
 7213               	.LBE2958:
 7214               	.LBE2957:
 7215               	.LBB2959:
 7216               	.LBB2960:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 7217               		.loc 6 220 0
 7218 1bcc 8091 0000 		lds r24,endpoints+24
 7219 1bd0 8670      		andi r24,lo8(6)
 7220               	.LBE2960:
 7221               	.LBE2959:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 7222               		.loc 3 82 0
 7223 1bd2 01F0      		breq .+2
 7224 1bd4 00C0      		rjmp .L396
 7225               	.LVL419:
 7226               	.L319:
 7227               	.LBB2961:
 7228               	.LBB2962:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 7229               		.loc 4 70 0
 7230 1bd6 2FBF      		out __SREG__,r18
 7231               		.loc 4 71 0
 7232               	.LBE2962:
 7233               	.LBE2961:
 7234               	.LBE2956:
 7235               	.LBE2955:
 7236               	.LBE2954:
 7237               	.LBE2953:
 7238               	.LBE2952:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 7239               		.loc 2 27 0
 7240 1bd8 82E0      		ldi r24,lo8(2)
 7241 1bda E0EC      		ldi r30,lo8(1216)
 7242 1bdc F4E0      		ldi r31,hi8(1216)
 7243 1bde 8587      		std Z+13,r24
 7244               	.LBB3006:
 7245               	.LBB3007:
 7246               	.LBB3008:
 7247               	.LBB3009:
 7248               	.LBB3010:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 7249               		.loc 5 57 0
 7250 1be0 36E0      		ldi r19,lo8(6)
 7251               	.LVL420:
 7252               	.L328:
 7253               	.LBE3010:
 7254               	.LBE3009:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 7255               		.loc 3 123 0
 7256 1be2 9FB7      		in r25,__SREG__
 7257               	.LVL421:
 7258               	.LBB3012:
 7259               	.LBB3013:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 7260               		.loc 4 50 0
 7261               	/* #APP */
 7262               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 7263 1be4 F894      		cli
 7264               	 ;  0 "" 2
 7265               	.LVL422:
 7266               	/* #NOAPP */
 7267               	.LBE3013:
 7268               	.LBE3012:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 7269               		.loc 3 124 0
 7270 1be6 8091 0000 		lds r24,ep_in_data+1
 7271 1bea 8823      		tst r24
 7272 1bec 01F4      		brne .+2
 7273 1bee 00C0      		rjmp .L397
 7274               	.L353:
 125:usb/usb_pipe.h **** 			r = false;
 7275               		.loc 3 125 0
 7276 1bf0 80E0      		ldi r24,lo8(0)
 7277               	.L330:
 7278               	.LBB3014:
 7279               	.LBB3015:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 7280               		.loc 4 70 0
 7281 1bf2 9FBF      		out __SREG__,r25
 7282               		.loc 4 71 0
 7283               	.LBE3015:
 7284               	.LBE3014:
 7285               	.LBE3008:
 7286               	.LBE3007:
 7287               	.LBE3006:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 7288               		.loc 2 28 0
 7289 1bf4 8823      		tst r24
 7290 1bf6 01F4      		brne .L356
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 7291               		.loc 2 29 0
 7292 1bf8 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 7293 1bfc 8823      		tst r24
 7294 1bfe 01F0      		breq .L328
 7295               	.LVL423:
 7296               	.LBB3019:
 7297               	.LBB3020:
 7298               	.LBB3021:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 7299               		.loc 3 54 0
 7300 1c00 2FB7      		in r18,__SREG__
 7301               	.LVL424:
 7302               	.LBB3022:
 7303               	.LBB3023:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 7304               		.loc 4 50 0
 7305               	/* #APP */
 7306               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 7307 1c02 F894      		cli
 7308               	 ;  0 "" 2
 7309               	.LVL425:
 7310               	/* #NOAPP */
 7311               	.LBE3023:
 7312               	.LBE3022:
 7313               	.LBB3024:
 7314               	.LBB3025:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 7315               		.loc 5 90 0
 7316 1c04 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 7317               		.loc 5 91 0
 7318 1c08 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7319 1c0a 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7320 1c0c 8093 0000 		sts ep_in_pipe_data+2,r24
 7321 1c10 9093 0000 		sts ep_in_pipe_data+2+1,r25
 7322 1c14 8093 0000 		sts ep_in_pipe_data,r24
 7323 1c18 9093 0000 		sts ep_in_pipe_data+1,r25
 7324               	.LVL426:
 7325               	.LBE3025:
 7326               	.LBE3024:
 7327               	.LBB3026:
 7328               	.LBB3027:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 7329               		.loc 6 158 0
 7330 1c1c E0E0      		ldi r30,lo8(endpoints+24)
 7331 1c1e F0E0      		ldi r31,hi8(endpoints+24)
 7332               	/* #APP */
 7333               	 ;  158 "usb/usb.h" 1
 7334 1c20 06E0      		ldi r16, 6
 7335 1c22 0593      		.dc.w 0x9305
 7336               		
 7337               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 7338               		.loc 6 159 0
 7339               	 ;  159 "usb/usb.h" 1
 7340 1c24 08E0      		ldi r16, 8
 7341 1c26 0693      		.dc.w 0x9306
 7342               		
 7343               	 ;  0 "" 2
 7344               	/* #NOAPP */
 7345               	.LBE3027:
 7346               	.LBE3026:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 7347               		.loc 3 57 0
 7348 1c28 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 7349               		.loc 3 58 0
 7350 1c2c 1092 0000 		sts ep_in_data+2,__zero_reg__
 7351 1c30 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 7352               		.loc 3 59 0
 7353 1c34 1092 0000 		sts ep_in_data,__zero_reg__
 7354               	.LVL427:
 7355               	.LBB3028:
 7356               	.LBB3029:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 7357               		.loc 4 70 0
 7358 1c38 2FBF      		out __SREG__,r18
 7359               		.loc 4 71 0
 7360               	.LVL428:
 7361               	.L356:
 7362               	.LBE3029:
 7363               	.LBE3028:
 7364               	.LBE3021:
 7365               	.LBE3020:
 7366               	.LBE3019:
 7367               	.LBE2951:
 7368               	.LBE2950:
 7369               	.LBB3040:
 7370               	.LBB3041:
 268:main.c        ****     while ( !( USART->STATUS & USART_DREIF_bm) ); 
 7371               		.loc 1 268 0
 7372 1c3a 8091 A109 		lds r24,2465
 7373 1c3e 85FF      		sbrs r24,5
 7374 1c40 00C0      		rjmp .L356
 271:main.c        ****     USART->DATA = c; 
 7375               		.loc 1 271 0
 7376 1c42 8AE1      		ldi r24,lo8(26)
 7377 1c44 8093 A009 		sts 2464,r24
 7378               	.LVL429:
 7379               	.LBE3041:
 7380               	.LBE3040:
 7381               	.LBB3042:
 7382               	.LBB3043:
 7383               		.loc 7 164 0
 7384 1c48 8FEF      		 ldi r24,lo8(639999)
 7385 1c4a 93EC      	    ldi r25,hi8(639999)
 7386 1c4c A9E0      	    ldi r26,hlo8(639999)
 7387 1c4e 8150      	    1:subi r24,1
 7388 1c50 9040      	    sbci r25,0
 7389 1c52 A040      	    sbci r26,0
 7390 1c54 01F4      	    brne 1b
 7391 1c56 00C0      		rjmp .
 7392 1c58 0000      		nop
 7393               	.LBE3043:
 7394               	.LBE3042:
 7395               	.LBB3044:
 7396               	.LBB3045:
 7397               	.LBB3046:
 7398               	.LBB3047:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 7399               		.loc 3 110 0
 7400 1c5a 81E0      		ldi r24,lo8(1)
 7401 1c5c 8093 0000 		sts ep_in_data+1,r24
 7402               	.LVL430:
 7403               	.LBB3048:
 7404               	.LBB3049:
 7405               	.LBB3050:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 7406               		.loc 3 80 0
 7407 1c60 2FB7      		in r18,__SREG__
 7408               	.LVL431:
 7409               	.LBB3051:
 7410               	.LBB3052:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 7411               		.loc 4 50 0
 7412               	/* #APP */
 7413               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 7414 1c62 F894      		cli
 7415               	 ;  0 "" 2
 7416               	.LVL432:
 7417               	/* #NOAPP */
 7418               	.LBE3052:
 7419               	.LBE3051:
 7420               	.LBB3053:
 7421               	.LBB3054:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 7422               		.loc 6 220 0
 7423 1c64 8091 0000 		lds r24,endpoints+24
 7424 1c68 8670      		andi r24,lo8(6)
 7425               	.LBE3054:
 7426               	.LBE3053:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 7427               		.loc 3 82 0
 7428 1c6a 01F0      		breq .+2
 7429 1c6c 00C0      		rjmp .L398
 7430               	.LVL433:
 7431               	.L334:
 7432               	.LBB3055:
 7433               	.LBB3056:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 7434               		.loc 4 70 0
 7435 1c6e 2FBF      		out __SREG__,r18
 7436               		.loc 4 71 0
 7437               	.LBE3056:
 7438               	.LBE3055:
 7439               	.LBE3050:
 7440               	.LBE3049:
 7441               	.LBE3048:
 7442               	.LBE3047:
 7443               	.LBE3046:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 7444               		.loc 2 27 0
 7445 1c70 82E0      		ldi r24,lo8(2)
 7446 1c72 E0EC      		ldi r30,lo8(1216)
 7447 1c74 F4E0      		ldi r31,hi8(1216)
 7448 1c76 8587      		std Z+13,r24
 7449               	.LBB3106:
 7450               	.LBB3107:
 7451               	.LBB3108:
 7452               	.LBB3109:
 7453               	.LBB3110:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 7454               		.loc 5 57 0
 7455 1c78 36E0      		ldi r19,lo8(6)
 7456               	.LVL434:
 7457               	.L343:
 7458               	.LBE3110:
 7459               	.LBE3109:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 7460               		.loc 3 123 0
 7461 1c7a 9FB7      		in r25,__SREG__
 7462               	.LVL435:
 7463               	.LBB3112:
 7464               	.LBB3113:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 7465               		.loc 4 50 0
 7466               	/* #APP */
 7467               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 7468 1c7c F894      		cli
 7469               	 ;  0 "" 2
 7470               	.LVL436:
 7471               	/* #NOAPP */
 7472               	.LBE3113:
 7473               	.LBE3112:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 7474               		.loc 3 124 0
 7475 1c7e 8091 0000 		lds r24,ep_in_data+1
 7476 1c82 8823      		tst r24
 7477 1c84 01F4      		brne .+2
 7478 1c86 00C0      		rjmp .L399
 7479               	.L354:
 125:usb/usb_pipe.h **** 			r = false;
 7480               		.loc 3 125 0
 7481 1c88 80E0      		ldi r24,lo8(0)
 7482               	.L345:
 7483               	.LBB3114:
 7484               	.LBB3115:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 7485               		.loc 4 70 0
 7486 1c8a 9FBF      		out __SREG__,r25
 7487               		.loc 4 71 0
 7488               	.LBE3115:
 7489               	.LBE3114:
 7490               	.LBE3108:
 7491               	.LBE3107:
 7492               	.LBE3106:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 7493               		.loc 2 28 0
 7494 1c8c 8823      		tst r24
 7495 1c8e 01F4      		brne .L230
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 7496               		.loc 2 29 0
 7497 1c90 8091 0000 		lds r24,timeout_or_sampling_no_longer_enabled
 7498 1c94 8823      		tst r24
 7499 1c96 01F0      		breq .L343
 7500               	.LVL437:
 7501               	.LBB3119:
 7502               	.LBB3120:
 7503               	.LBB3121:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 7504               		.loc 3 54 0
 7505 1c98 2FB7      		in r18,__SREG__
 7506               	.LVL438:
 7507               	.LBB3122:
 7508               	.LBB3123:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 7509               		.loc 4 50 0
 7510               	/* #APP */
 7511               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 7512 1c9a F894      		cli
 7513               	 ;  0 "" 2
 7514               	.LVL439:
 7515               	/* #NOAPP */
 7516               	.LBE3123:
 7517               	.LBE3122:
 7518               	.LBB3124:
 7519               	.LBB3125:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 7520               		.loc 5 90 0
 7521 1c9c 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 7522               		.loc 5 91 0
 7523 1ca0 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7524 1ca2 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7525 1ca4 8093 0000 		sts ep_in_pipe_data+2,r24
 7526 1ca8 9093 0000 		sts ep_in_pipe_data+2+1,r25
 7527 1cac 8093 0000 		sts ep_in_pipe_data,r24
 7528 1cb0 9093 0000 		sts ep_in_pipe_data+1,r25
 7529               	.LVL440:
 7530               	.LBE3125:
 7531               	.LBE3124:
 7532               	.LBB3126:
 7533               	.LBB3127:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 7534               		.loc 6 158 0
 7535 1cb4 E0E0      		ldi r30,lo8(endpoints+24)
 7536 1cb6 F0E0      		ldi r31,hi8(endpoints+24)
 7537               	/* #APP */
 7538               	 ;  158 "usb/usb.h" 1
 7539 1cb8 06E0      		ldi r16, 6
 7540 1cba 0593      		.dc.w 0x9305
 7541               		
 7542               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 7543               		.loc 6 159 0
 7544               	 ;  159 "usb/usb.h" 1
 7545 1cbc 08E0      		ldi r16, 8
 7546 1cbe 0693      		.dc.w 0x9306
 7547               		
 7548               	 ;  0 "" 2
 7549               	/* #NOAPP */
 7550               	.LBE3127:
 7551               	.LBE3126:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 7552               		.loc 3 57 0
 7553 1cc0 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 7554               		.loc 3 58 0
 7555 1cc4 1092 0000 		sts ep_in_data+2,__zero_reg__
 7556 1cc8 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 7557               		.loc 3 59 0
 7558 1ccc 1092 0000 		sts ep_in_data,__zero_reg__
 7559               	.LVL441:
 7560               	.LBB3128:
 7561               	.LBB3129:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 7562               		.loc 4 70 0
 7563 1cd0 2FBF      		out __SREG__,r18
 7564               		.loc 4 71 0
 7565               	.LVL442:
 7566               	.L230:
 7567               	/* epilogue start */
 7568               	.LBE3129:
 7569               	.LBE3128:
 7570               	.LBE3121:
 7571               	.LBE3120:
 7572               	.LBE3119:
 7573               	.LBE3045:
 7574               	.LBE3044:
 346:main.c        **** }
 7575               		.loc 1 346 0
 7576 1cd2 0F90      		pop __tmp_reg__
 7577 1cd4 0F90      		pop __tmp_reg__
 7578 1cd6 DF91      		pop r29
 7579 1cd8 CF91      		pop r28
 7580 1cda 1F91      		pop r17
 7581 1cdc 0F91      		pop r16
 7582 1cde FF90      		pop r15
 7583 1ce0 EF90      		pop r14
 7584 1ce2 DF90      		pop r13
 7585 1ce4 CF90      		pop r12
 7586 1ce6 BF90      		pop r11
 7587 1ce8 AF90      		pop r10
 7588 1cea 9F90      		pop r9
 7589 1cec 8F90      		pop r8
 7590 1cee 7F90      		pop r7
 7591 1cf0 6F90      		pop r6
 7592               	.LVL443:
 7593 1cf2 5F90      		pop r5
 7594 1cf4 4F90      		pop r4
 7595 1cf6 0895      		ret
 7596               	.LVL444:
 7597               	.L385:
 7598               	.LBB3142:
 7599               	.LBB2509:
 7600               	.LBB2505:
 7601               	.LBB2498:
 7602               	.LBB2495:
 7603               	.LBB2492:
 7604               	.LBB2489:
 7605               	.LBB2480:
 7606               	.LBB2477:
 7607               	.LBB2459:
 7608               	.LBB2460:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 7609               		.loc 5 51 0
 7610 1cf8 5091 0000 		lds r21,ep_in_pipe_data+4
 7611               	.LBE2460:
 7612               	.LBE2459:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 7613               		.loc 3 83 0
 7614 1cfc 1516      		cp __zero_reg__,r21
 7615 1cfe 04F0      		brlt .+2
 7616 1d00 00C0      		rjmp .L242
 7617               	.LBB2461:
 7618               	.LBB2462:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 7619               		.loc 5 62 0
 7620 1d02 2091 0000 		lds r18,ep_in_pipe_data
 7621 1d06 3091 0000 		lds r19,ep_in_pipe_data+1
 7622               	.LVL445:
 7623               	.LBE2462:
 7624               	.LBE2461:
 7625               	.LBB2463:
 7626               	.LBB2452:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 7627               		.loc 3 68 0
 7628 1d0a E091 0000 		lds r30,ep_in_data
 7629               	.LVL446:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7630               		.loc 3 69 0
 7631 1d0e 8E2F      		mov r24,r30
 7632 1d10 90E0      		ldi r25,lo8(0)
 7633               	.LVL447:
 7634 1d12 F1E0      		ldi r31,lo8(1)
 7635 1d14 8617      		cp r24,r22
 7636 1d16 9707      		cpc r25,r23
 7637 1d18 01F4      		brne .L243
 7638 1d1a F0E0      		ldi r31,lo8(0)
 7639               	.L243:
 7640 1d1c F093 0000 		sts ep_in_data,r31
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 7641               		.loc 3 72 0
 7642 1d20 EE23      		tst r30
 7643 1d22 01F4      		brne .L244
 7644               	.LVL448:
 7645               	.LBB2449:
 7646               	.LBB2450:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7647               		.loc 6 168 0
 7648 1d24 2093 0000 		sts endpoints+28,r18
 7649 1d28 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7650               		.loc 6 169 0
 7651 1d2c C092 0000 		sts endpoints+26,r12
 7652 1d30 D092 0000 		sts endpoints+26+1,r13
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 7653               		.loc 6 174 0
 7654 1d34 F701      		movw r30,r14
 7655               	/* #APP */
 7656               	 ;  174 "usb/usb.h" 1
 7657 1d36 02E2      		ldi r16, 34
 7658 1d38 0693      		.dc.w 0x9306
 7659               		
 7660               	 ;  0 "" 2
 7661               	.LVL449:
 7662               	/* #NOAPP */
 7663               	.L245:
 7664               	.LBE2450:
 7665               	.LBE2449:
 7666               	.LBE2452:
 7667               	.LBE2463:
 7668               	.LBB2464:
 7669               	.LBB2465:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 7670               		.loc 5 72 0
 7671 1d3a 5150      		subi r21,lo8(-(-1))
 7672 1d3c 5093 0000 		sts ep_in_pipe_data+4,r21
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 7673               		.loc 5 73 0
 7674 1d40 C901      		movw r24,r18
 7675 1d42 805C      		subi r24,lo8(-(64))
 7676 1d44 9F4F      		sbci r25,hi8(-(64))
 7677 1d46 8093 0000 		sts ep_in_pipe_data,r24
 7678 1d4a 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 7679               		.loc 5 75 0
 7680 1d4e F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 7681 1d50 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 7682 1d52 9F07      		cpc r25,r31
 7683 1d54 01F0      		breq .+2
 7684 1d56 00C0      		rjmp .L241
 7685               	.LBE2465:
 7686               	.LBE2464:
 7687               	.LBB2466:
 7688               	.LBB2432:
 7689               		.loc 5 91 0
 7690 1d58 8092 0000 		sts ep_in_pipe_data,r8
 7691 1d5c 9092 0000 		sts ep_in_pipe_data+1,r9
 7692               	.LVL450:
 7693 1d60 00C0      		rjmp .L241
 7694               	.LVL451:
 7695               	.L244:
 7696               	.LBE2432:
 7697               	.LBE2466:
 7698               	.LBB2467:
 7699               	.LBB2453:
 7700               	.LBB2451:
 7701               	.LBB2448:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7702               		.loc 6 168 0
 7703 1d62 2093 0000 		sts endpoints+20,r18
 7704 1d66 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7705               		.loc 6 169 0
 7706 1d6a C092 0000 		sts endpoints+18,r12
 7707 1d6e D092 0000 		sts endpoints+18+1,r13
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 7708               		.loc 6 176 0
 7709 1d72 F701      		movw r30,r14
 7710               	/* #APP */
 7711               	 ;  176 "usb/usb.h" 1
 7712 1d74 04E1      		ldi r16, 20
 7713 1d76 0693      		.dc.w 0x9306
 7714               		
 7715               	 ;  0 "" 2
 7716               	/* #NOAPP */
 7717 1d78 00C0      		rjmp .L245
 7718               	.LVL452:
 7719               	.L242:
 7720               	.LBE2448:
 7721               	.LBE2451:
 7722               	.LBE2453:
 7723               	.LBE2467:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 7724               		.loc 3 87 0
 7725 1d7a 8091 0000 		lds r24,ep_in_data+1
 7726 1d7e 8130      		cpi r24,lo8(1)
 7727 1d80 01F0      		breq .L400
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 7728               		.loc 3 91 0
 7729 1d82 8230      		cpi r24,lo8(2)
 7730 1d84 01F0      		breq .+2
 7731 1d86 00C0      		rjmp .L241
 7732               	.LVL453:
 7733               	.LBB2468:
 7734               	.LBB2469:
 7735               	.LBB2470:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 7736               		.loc 6 228 0
 7737 1d88 8091 0000 		lds r24,endpoints+24
 7738 1d8c 8670      		andi r24,lo8(6)
 7739               	.LBE2470:
 7740               	.LBE2469:
 7741               	.LBE2468:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 7742               		.loc 3 91 0
 7743 1d8e 8630      		cpi r24,lo8(6)
 7744 1d90 01F0      		breq .+2
 7745 1d92 00C0      		rjmp .L241
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 7746               		.loc 3 92 0
 7747 1d94 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 7748               		.loc 3 93 0
 7749 1d98 1092 0000 		sts ep_in_data+2,__zero_reg__
 7750 1d9c 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 7751               	.LBB2471:
 7752               	.LBB2433:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 7753               		.loc 5 90 0
 7754 1da0 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 7755               		.loc 5 91 0
 7756 1da4 8092 0000 		sts ep_in_pipe_data+2,r8
 7757 1da8 9092 0000 		sts ep_in_pipe_data+2+1,r9
 7758 1dac 8092 0000 		sts ep_in_pipe_data,r8
 7759 1db0 9092 0000 		sts ep_in_pipe_data+1,r9
 7760               	.LVL454:
 7761 1db4 00C0      		rjmp .L241
 7762               	.LVL455:
 7763               	.L400:
 7764               	.LBE2433:
 7765               	.LBE2471:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 7766               		.loc 3 88 0
 7767 1db6 22E0      		ldi r18,lo8(2)
 7768               	.LVL456:
 7769 1db8 2093 0000 		sts ep_in_data+1,r18
 7770               	.LBB2472:
 7771               	.LBB2473:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 7772               		.loc 5 62 0
 7773 1dbc F091 0000 		lds r31,ep_in_pipe_data
 7774 1dc0 B091 0000 		lds r27,ep_in_pipe_data+1
 7775               	.LBE2473:
 7776               	.LBE2472:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 7777               		.loc 3 90 0
 7778 1dc4 2091 0000 		lds r18,ep_in_data+2
 7779 1dc8 3091 0000 		lds r19,ep_in_data+2+1
 7780               	.LVL457:
 7781               	.LBB2474:
 7782               	.LBB2442:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 7783               		.loc 3 68 0
 7784 1dcc E091 0000 		lds r30,ep_in_data
 7785               	.LVL458:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7786               		.loc 3 69 0
 7787 1dd0 8E2F      		mov r24,r30
 7788 1dd2 90E0      		ldi r25,lo8(0)
 7789 1dd4 51E0      		ldi r21,lo8(1)
 7790 1dd6 8617      		cp r24,r22
 7791 1dd8 9707      		cpc r25,r23
 7792 1dda 01F4      		brne .L248
 7793 1ddc 50E0      		ldi r21,lo8(0)
 7794               	.L248:
 7795 1dde 5093 0000 		sts ep_in_data,r21
 7796               	.LBB2436:
 7797               	.LBB2437:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7798               		.loc 6 168 0
 7799 1de2 8F2F      		mov r24,r31
 7800 1de4 9B2F      		mov r25,r27
 7801               	.LBE2437:
 7802               	.LBE2436:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 7803               		.loc 3 72 0
 7804 1de6 EE23      		tst r30
 7805 1de8 01F0      		breq .+2
 7806 1dea 00C0      		rjmp .L249
 7807               	.LVL459:
 7808               	.LBB2439:
 7809               	.LBB2438:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7810               		.loc 6 168 0
 7811 1dec 8093 0000 		sts endpoints+28,r24
 7812 1df0 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7813               		.loc 6 169 0
 7814 1df4 2093 0000 		sts endpoints+26,r18
 7815 1df8 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 7816               		.loc 6 174 0
 7817 1dfc F701      		movw r30,r14
 7818               	/* #APP */
 7819               	 ;  174 "usb/usb.h" 1
 7820 1dfe 02E2      		ldi r16, 34
 7821 1e00 0693      		.dc.w 0x9306
 7822               		
 7823               	 ;  0 "" 2
 7824               	/* #NOAPP */
 7825 1e02 00C0      		rjmp .L241
 7826               	.LVL460:
 7827               	.L387:
 7828               	.LBE2438:
 7829               	.LBE2439:
 7830               	.LBE2442:
 7831               	.LBE2474:
 7832               	.LBE2477:
 7833               	.LBE2480:
 7834               	.LBE2489:
 7835               	.LBE2492:
 7836               	.LBE2495:
 7837               	.LBE2498:
 7838               	.LBE2505:
 7839               	.LBE2509:
 7840               	.LBE3142:
 7841               	.LBB3143:
 7842               	.LBB2603:
 7843               	.LBB2599:
 7844               	.LBB2587:
 7845               	.LBB2586:
 7846               	.LBB2585:
 7847               	.LBB2580:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 7848               		.loc 5 57 0
 7849 1e04 8091 0000 		lds r24,ep_in_pipe_data+4
 7850 1e08 232F      		mov r18,r19
 7851 1e0a 281B      		sub r18,r24
 7852               	.LBE2580:
 7853               	.LBE2585:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 7854               		.loc 3 127 0
 7855 1e0c 81E0      		ldi r24,lo8(1)
 7856 1e0e 1216      		cp __zero_reg__,r18
 7857 1e10 04F4      		brge .+2
 7858 1e12 00C0      		rjmp .L262
 7859 1e14 00C0      		rjmp .L349
 7860               	.LVL461:
 7861               	.L386:
 7862               	.LBE2586:
 7863               	.LBE2587:
 7864               	.LBE2599:
 7865               	.LBB2600:
 7866               	.LBB2572:
 7867               	.LBB2569:
 7868               	.LBB2566:
 7869               	.LBB2563:
 7870               	.LBB2534:
 7871               	.LBB2535:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 7872               		.loc 5 51 0
 7873 1e16 4091 0000 		lds r20,ep_in_pipe_data+4
 7874               	.LBE2535:
 7875               	.LBE2534:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 7876               		.loc 3 83 0
 7877 1e1a 1416      		cp __zero_reg__,r20
 7878 1e1c 04F0      		brlt .+2
 7879 1e1e 00C0      		rjmp .L252
 7880               	.LBB2536:
 7881               	.LBB2537:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 7882               		.loc 5 62 0
 7883 1e20 8091 0000 		lds r24,ep_in_pipe_data
 7884 1e24 9091 0000 		lds r25,ep_in_pipe_data+1
 7885               	.LVL462:
 7886               	.LBE2537:
 7887               	.LBE2536:
 7888               	.LBB2538:
 7889               	.LBB2539:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 7890               		.loc 3 68 0
 7891 1e28 2091 0000 		lds r18,ep_in_data
 7892               	.LVL463:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 7893               		.loc 3 69 0
 7894 1e2c 31E0      		ldi r19,lo8(1)
 7895 1e2e 2130      		cpi r18,lo8(1)
 7896 1e30 01F4      		brne .L253
 7897 1e32 30E0      		ldi r19,lo8(0)
 7898               	.L253:
 7899 1e34 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 7900               		.loc 3 72 0
 7901 1e38 2223      		tst r18
 7902 1e3a 01F4      		brne .L254
 7903               	.LVL464:
 7904               	.LBB2540:
 7905               	.LBB2541:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7906               		.loc 6 168 0
 7907 1e3c 8093 0000 		sts endpoints+28,r24
 7908 1e40 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7909               		.loc 6 169 0
 7910 1e44 20E4      		ldi r18,lo8(64)
 7911 1e46 30E0      		ldi r19,hi8(64)
 7912 1e48 2093 0000 		sts endpoints+26,r18
 7913 1e4c 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 7914               		.loc 6 174 0
 7915 1e50 E0E0      		ldi r30,lo8(endpoints+24)
 7916 1e52 F0E0      		ldi r31,hi8(endpoints+24)
 7917               	/* #APP */
 7918               	 ;  174 "usb/usb.h" 1
 7919 1e54 02E2      		ldi r16, 34
 7920 1e56 0693      		.dc.w 0x9306
 7921               		
 7922               	 ;  0 "" 2
 7923               	.LVL465:
 7924               	/* #NOAPP */
 7925               	.L255:
 7926               	.LBE2541:
 7927               	.LBE2540:
 7928               	.LBE2539:
 7929               	.LBE2538:
 7930               	.LBB2545:
 7931               	.LBB2546:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 7932               		.loc 5 72 0
 7933 1e58 4150      		subi r20,lo8(-(-1))
 7934 1e5a 4093 0000 		sts ep_in_pipe_data+4,r20
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 7935               		.loc 5 73 0
 7936 1e5e 805C      		subi r24,lo8(-(64))
 7937 1e60 9F4F      		sbci r25,hi8(-(64))
 7938 1e62 8093 0000 		sts ep_in_pipe_data,r24
 7939 1e66 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 7940               		.loc 5 75 0
 7941 1e6a A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 7942 1e6c 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 7943 1e6e 9A07      		cpc r25,r26
 7944 1e70 01F0      		breq .+2
 7945 1e72 00C0      		rjmp .L251
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 7946               		.loc 5 76 0
 7947 1e74 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 7948 1e76 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 7949 1e78 8093 0000 		sts ep_in_pipe_data,r24
 7950 1e7c 9093 0000 		sts ep_in_pipe_data+1,r25
 7951 1e80 00C0      		rjmp .L251
 7952               	.LVL466:
 7953               	.L249:
 7954               	.LBE2546:
 7955               	.LBE2545:
 7956               	.LBE2563:
 7957               	.LBE2566:
 7958               	.LBE2569:
 7959               	.LBE2572:
 7960               	.LBE2600:
 7961               	.LBE2603:
 7962               	.LBE3143:
 7963               	.LBB3144:
 7964               	.LBB2510:
 7965               	.LBB2506:
 7966               	.LBB2499:
 7967               	.LBB2496:
 7968               	.LBB2493:
 7969               	.LBB2490:
 7970               	.LBB2481:
 7971               	.LBB2478:
 7972               	.LBB2475:
 7973               	.LBB2443:
 7974               	.LBB2440:
 7975               	.LBB2441:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 7976               		.loc 6 168 0
 7977 1e82 8093 0000 		sts endpoints+20,r24
 7978 1e86 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 7979               		.loc 6 169 0
 7980 1e8a 2093 0000 		sts endpoints+18,r18
 7981 1e8e 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 7982               		.loc 6 176 0
 7983 1e92 F701      		movw r30,r14
 7984               	.LVL467:
 7985               	/* #APP */
 7986               	 ;  176 "usb/usb.h" 1
 7987 1e94 04E1      		ldi r16, 20
 7988 1e96 0693      		.dc.w 0x9306
 7989               		
 7990               	 ;  0 "" 2
 7991               	/* #NOAPP */
 7992 1e98 00C0      		rjmp .L241
 7993               	.LVL468:
 7994               	.L254:
 7995               	.LBE2441:
 7996               	.LBE2440:
 7997               	.LBE2443:
 7998               	.LBE2475:
 7999               	.LBE2478:
 8000               	.LBE2481:
 8001               	.LBE2490:
 8002               	.LBE2493:
 8003               	.LBE2496:
 8004               	.LBE2499:
 8005               	.LBE2506:
 8006               	.LBE2510:
 8007               	.LBE3144:
 8008               	.LBB3145:
 8009               	.LBB2604:
 8010               	.LBB2601:
 8011               	.LBB2573:
 8012               	.LBB2570:
 8013               	.LBB2567:
 8014               	.LBB2564:
 8015               	.LBB2547:
 8016               	.LBB2544:
 8017               	.LBB2542:
 8018               	.LBB2543:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8019               		.loc 6 168 0
 8020 1e9a 8093 0000 		sts endpoints+20,r24
 8021 1e9e 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8022               		.loc 6 169 0
 8023 1ea2 20E4      		ldi r18,lo8(64)
 8024 1ea4 30E0      		ldi r19,hi8(64)
 8025               	.LVL469:
 8026 1ea6 2093 0000 		sts endpoints+18,r18
 8027 1eaa 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 8028               		.loc 6 176 0
 8029 1eae E0E0      		ldi r30,lo8(endpoints+24)
 8030 1eb0 F0E0      		ldi r31,hi8(endpoints+24)
 8031               	/* #APP */
 8032               	 ;  176 "usb/usb.h" 1
 8033 1eb2 04E1      		ldi r16, 20
 8034 1eb4 0693      		.dc.w 0x9306
 8035               		
 8036               	 ;  0 "" 2
 8037               	/* #NOAPP */
 8038 1eb6 00C0      		rjmp .L255
 8039               	.LVL470:
 8040               	.L252:
 8041               	.LBE2543:
 8042               	.LBE2542:
 8043               	.LBE2544:
 8044               	.LBE2547:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 8045               		.loc 3 87 0
 8046 1eb8 8091 0000 		lds r24,ep_in_data+1
 8047 1ebc 8130      		cpi r24,lo8(1)
 8048 1ebe 01F0      		breq .L401
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 8049               		.loc 3 91 0
 8050 1ec0 8230      		cpi r24,lo8(2)
 8051 1ec2 01F0      		breq .+2
 8052 1ec4 00C0      		rjmp .L251
 8053               	.LVL471:
 8054               	.LBB2548:
 8055               	.LBB2549:
 8056               	.LBB2550:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 8057               		.loc 6 228 0
 8058 1ec6 8091 0000 		lds r24,endpoints+24
 8059 1eca 8670      		andi r24,lo8(6)
 8060               	.LBE2550:
 8061               	.LBE2549:
 8062               	.LBE2548:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 8063               		.loc 3 91 0
 8064 1ecc 8630      		cpi r24,lo8(6)
 8065 1ece 01F0      		breq .+2
 8066 1ed0 00C0      		rjmp .L251
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 8067               		.loc 3 92 0
 8068 1ed2 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 8069               		.loc 3 93 0
 8070 1ed6 1092 0000 		sts ep_in_data+2,__zero_reg__
 8071 1eda 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 8072               	.LBB2551:
 8073               	.LBB2552:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 8074               		.loc 5 90 0
 8075 1ede 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 8076               		.loc 5 91 0
 8077 1ee2 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 8078 1ee4 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 8079 1ee6 8093 0000 		sts ep_in_pipe_data+2,r24
 8080 1eea 9093 0000 		sts ep_in_pipe_data+2+1,r25
 8081 1eee 8093 0000 		sts ep_in_pipe_data,r24
 8082 1ef2 9093 0000 		sts ep_in_pipe_data+1,r25
 8083               	.LVL472:
 8084 1ef6 00C0      		rjmp .L251
 8085               	.LVL473:
 8086               	.L401:
 8087               	.LBE2552:
 8088               	.LBE2551:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 8089               		.loc 3 88 0
 8090 1ef8 82E0      		ldi r24,lo8(2)
 8091 1efa 8093 0000 		sts ep_in_data+1,r24
 8092               	.LBB2553:
 8093               	.LBB2554:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 8094               		.loc 5 62 0
 8095 1efe 6091 0000 		lds r22,ep_in_pipe_data
 8096 1f02 4091 0000 		lds r20,ep_in_pipe_data+1
 8097               	.LBE2554:
 8098               	.LBE2553:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 8099               		.loc 3 90 0
 8100 1f06 8091 0000 		lds r24,ep_in_data+2
 8101 1f0a 9091 0000 		lds r25,ep_in_data+2+1
 8102               	.LVL474:
 8103               	.LBB2555:
 8104               	.LBB2556:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 8105               		.loc 3 68 0
 8106 1f0e 2091 0000 		lds r18,ep_in_data
 8107               	.LVL475:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 8108               		.loc 3 69 0
 8109 1f12 31E0      		ldi r19,lo8(1)
 8110 1f14 2130      		cpi r18,lo8(1)
 8111 1f16 01F4      		brne .L258
 8112 1f18 30E0      		ldi r19,lo8(0)
 8113               	.L258:
 8114 1f1a 3093 0000 		sts ep_in_data,r19
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 8115               		.loc 3 72 0
 8116 1f1e 2223      		tst r18
 8117 1f20 01F0      		breq .+2
 8118 1f22 00C0      		rjmp .L259
 8119               	.LVL476:
 8120               	.LBB2557:
 8121               	.LBB2558:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8122               		.loc 6 168 0
 8123 1f24 262F      		mov r18,r22
 8124 1f26 342F      		mov r19,r20
 8125 1f28 2093 0000 		sts endpoints+28,r18
 8126 1f2c 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8127               		.loc 6 169 0
 8128 1f30 8093 0000 		sts endpoints+26,r24
 8129 1f34 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8130               		.loc 6 174 0
 8131 1f38 E0E0      		ldi r30,lo8(endpoints+24)
 8132 1f3a F0E0      		ldi r31,hi8(endpoints+24)
 8133               	/* #APP */
 8134               	 ;  174 "usb/usb.h" 1
 8135 1f3c 02E2      		ldi r16, 34
 8136 1f3e 0693      		.dc.w 0x9306
 8137               		
 8138               	 ;  0 "" 2
 8139               	/* #NOAPP */
 8140 1f40 00C0      		rjmp .L251
 8141               	.LVL477:
 8142               	.L389:
 8143               	.LBE2558:
 8144               	.LBE2557:
 8145               	.LBE2556:
 8146               	.LBE2555:
 8147               	.LBE2564:
 8148               	.LBE2567:
 8149               	.LBE2570:
 8150               	.LBE2573:
 8151               	.LBE2601:
 8152               	.LBE2604:
 8153               	.LBE3145:
 8154               	.LBB3146:
 8155               	.LBB2718:
 8156               	.LBB2713:
 8157               	.LBB2626:
 8158               	.LBB2624:
 8159               	.LBB2622:
 8160               	.LBB2617:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 8161               		.loc 5 57 0
 8162 1f42 8091 0000 		lds r24,ep_in_pipe_data+4
 8163 1f46 372D      		mov r19,r7
 8164 1f48 381B      		sub r19,r24
 8165               	.LBE2617:
 8166               	.LBE2622:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 8167               		.loc 3 127 0
 8168 1f4a 81E0      		ldi r24,lo8(1)
 8169 1f4c 1316      		cp __zero_reg__,r19
 8170 1f4e 04F4      		brge .+2
 8171 1f50 00C0      		rjmp .L271
 8172 1f52 00C0      		rjmp .L350
 8173               	.LVL478:
 8174               	.L392:
 8175               	.LBE2624:
 8176               	.LBE2626:
 8177               	.LBE2713:
 8178               	.LBE2718:
 8179               	.LBE3146:
 8180               	.LBB3147:
 8181               	.LBB2822:
 8182               	.LBB2816:
 8183               	.LBB2804:
 8184               	.LBB2803:
 8185               	.LBB2802:
 8186               	.LBB2797:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 8187               		.loc 5 57 0
 8188 1f54 8091 0000 		lds r24,ep_in_pipe_data+4
 8189 1f58 232F      		mov r18,r19
 8190 1f5a 281B      		sub r18,r24
 8191               	.LBE2797:
 8192               	.LBE2802:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 8193               		.loc 3 127 0
 8194 1f5c 81E0      		ldi r24,lo8(1)
 8195 1f5e 1216      		cp __zero_reg__,r18
 8196 1f60 04F4      		brge .+2
 8197 1f62 00C0      		rjmp .L297
 8198 1f64 00C0      		rjmp .L351
 8199               	.LVL479:
 8200               	.L394:
 8201               	.LBE2803:
 8202               	.LBE2804:
 8203               	.LBE2816:
 8204               	.LBE2822:
 8205               	.LBE3147:
 8206               	.LBB3148:
 8207               	.LBB2938:
 8208               	.LBB2933:
 8209               	.LBB2846:
 8210               	.LBB2844:
 8211               	.LBB2842:
 8212               	.LBB2837:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 8213               		.loc 5 57 0
 8214 1f66 8091 0000 		lds r24,ep_in_pipe_data+4
 8215 1f6a 372D      		mov r19,r7
 8216 1f6c 381B      		sub r19,r24
 8217               	.LBE2837:
 8218               	.LBE2842:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 8219               		.loc 3 127 0
 8220 1f6e 81E0      		ldi r24,lo8(1)
 8221 1f70 1316      		cp __zero_reg__,r19
 8222 1f72 04F4      		brge .+2
 8223 1f74 00C0      		rjmp .L304
 8224 1f76 00C0      		rjmp .L352
 8225               	.LVL480:
 8226               	.L399:
 8227               	.LBE2844:
 8228               	.LBE2846:
 8229               	.LBE2933:
 8230               	.LBE2938:
 8231               	.LBE3148:
 8232               	.LBB3149:
 8233               	.LBB3136:
 8234               	.LBB3130:
 8235               	.LBB3118:
 8236               	.LBB3117:
 8237               	.LBB3116:
 8238               	.LBB3111:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 8239               		.loc 5 57 0
 8240 1f78 8091 0000 		lds r24,ep_in_pipe_data+4
 8241 1f7c 232F      		mov r18,r19
 8242 1f7e 281B      		sub r18,r24
 8243               	.LBE3111:
 8244               	.LBE3116:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 8245               		.loc 3 127 0
 8246 1f80 81E0      		ldi r24,lo8(1)
 8247 1f82 1216      		cp __zero_reg__,r18
 8248 1f84 04F4      		brge .+2
 8249 1f86 00C0      		rjmp .L345
 8250 1f88 00C0      		rjmp .L354
 8251               	.LVL481:
 8252               	.L397:
 8253               	.LBE3117:
 8254               	.LBE3118:
 8255               	.LBE3130:
 8256               	.LBE3136:
 8257               	.LBE3149:
 8258               	.LBB3150:
 8259               	.LBB3035:
 8260               	.LBB3030:
 8261               	.LBB3018:
 8262               	.LBB3017:
 8263               	.LBB3016:
 8264               	.LBB3011:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 8265               		.loc 5 57 0
 8266 1f8a 8091 0000 		lds r24,ep_in_pipe_data+4
 8267 1f8e 232F      		mov r18,r19
 8268 1f90 281B      		sub r18,r24
 8269               	.LBE3011:
 8270               	.LBE3016:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 8271               		.loc 3 127 0
 8272 1f92 81E0      		ldi r24,lo8(1)
 8273 1f94 1216      		cp __zero_reg__,r18
 8274 1f96 04F4      		brge .+2
 8275 1f98 00C0      		rjmp .L330
 8276 1f9a 00C0      		rjmp .L353
 8277               	.LVL482:
 8278               	.L395:
 8279               	.LBE3017:
 8280               	.LBE3018:
 8281               	.LBE3030:
 8282               	.LBE3035:
 8283               	.LBE3150:
 8284               	.LBB3151:
 8285               	.LBB2939:
 8286               	.LBB2934:
 8287               	.LBB2927:
 8288               	.LBB2924:
 8289               	.LBB2921:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 8290               		.loc 3 177 0
 8291 1f9c AFB7      		in r26,__SREG__
 8292               	.LVL483:
 8293               	.LBB2911:
 8294               	.LBB2912:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 8295               		.loc 4 50 0
 8296               	/* #APP */
 8297               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 8298 1f9e F894      		cli
 8299               	 ;  0 "" 2
 8300               	.LVL484:
 8301               	/* #NOAPP */
 8302               	.LBE2912:
 8303               	.LBE2911:
 8304               		.loc 3 178 0
 8305 1fa0 1092 0000 		sts ep_in_data+2,__zero_reg__
 8306 1fa4 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 8307               	.LVL485:
 8308               	.LBB2913:
 8309               	.LBB2914:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 8310               		.loc 5 81 0
 8311 1fa8 8091 0000 		lds r24,ep_in_pipe_data+4
 8312 1fac 8F5F      		subi r24,lo8(-(1))
 8313 1fae 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 8314               		.loc 5 82 0
 8315 1fb2 8091 0000 		lds r24,ep_in_pipe_data+2
 8316 1fb6 9091 0000 		lds r25,ep_in_pipe_data+2+1
 8317 1fba 805C      		subi r24,lo8(-(64))
 8318 1fbc 9F4F      		sbci r25,hi8(-(64))
 8319 1fbe 8093 0000 		sts ep_in_pipe_data+2,r24
 8320 1fc2 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 8321               		.loc 5 84 0
 8322 1fc6 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 8323 1fc8 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 8324 1fca 9F07      		cpc r25,r31
 8325 1fcc 01F4      		brne .L308
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 8326               		.loc 5 85 0
 8327 1fce 8092 0000 		sts ep_in_pipe_data+2,r8
 8328 1fd2 9092 0000 		sts ep_in_pipe_data+2+1,r9
 8329               	.L308:
 8330               	.LVL486:
 8331               	.LBE2914:
 8332               	.LBE2913:
 8333               	.LBB2915:
 8334               	.LBB2907:
 8335               	.LBB2903:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 8336               		.loc 3 80 0
 8337 1fd6 4FB7      		in r20,__SREG__
 8338               	.LVL487:
 8339               	.LBB2881:
 8340               	.LBB2882:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 8341               		.loc 4 50 0
 8342               	/* #APP */
 8343               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 8344 1fd8 F894      		cli
 8345               	 ;  0 "" 2
 8346               	.LVL488:
 8347               	/* #NOAPP */
 8348               	.LBE2882:
 8349               	.LBE2881:
 8350               	.LBB2883:
 8351               	.LBB2856:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 8352               		.loc 6 220 0
 8353 1fda 8091 0000 		lds r24,endpoints+24
 8354 1fde 8670      		andi r24,lo8(6)
 8355               	.LBE2856:
 8356               	.LBE2883:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 8357               		.loc 3 82 0
 8358 1fe0 01F4      		brne .L402
 8359               	.LVL489:
 8360               	.L309:
 8361               	.LBB2884:
 8362               	.LBB2885:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 8363               		.loc 4 70 0
 8364 1fe2 4FBF      		out __SREG__,r20
 8365               		.loc 4 71 0
 8366               	.LVL490:
 8367               	.LBE2885:
 8368               	.LBE2884:
 8369               	.LBE2903:
 8370               	.LBE2907:
 8371               	.LBE2915:
 8372               	.LBB2916:
 8373               	.LBB2917:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 8374               		.loc 4 70 0
 8375 1fe4 AFBF      		out __SREG__,r26
 8376               		.loc 4 71 0
 8377 1fe6 00C0      		rjmp .L307
 8378               	.LVL491:
 8379               	.L402:
 8380               	.LBE2917:
 8381               	.LBE2916:
 8382               	.LBB2918:
 8383               	.LBB2908:
 8384               	.LBB2904:
 8385               	.LBB2886:
 8386               	.LBB2887:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 8387               		.loc 5 51 0
 8388 1fe8 5091 0000 		lds r21,ep_in_pipe_data+4
 8389               	.LBE2887:
 8390               	.LBE2886:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 8391               		.loc 3 83 0
 8392 1fec 1516      		cp __zero_reg__,r21
 8393 1fee 04F0      		brlt .+2
 8394 1ff0 00C0      		rjmp .L310
 8395               	.LBB2888:
 8396               	.LBB2889:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 8397               		.loc 5 62 0
 8398 1ff2 2091 0000 		lds r18,ep_in_pipe_data
 8399 1ff6 3091 0000 		lds r19,ep_in_pipe_data+1
 8400               	.LVL492:
 8401               	.LBE2889:
 8402               	.LBE2888:
 8403               	.LBB2890:
 8404               	.LBB2879:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 8405               		.loc 3 68 0
 8406 1ffa E091 0000 		lds r30,ep_in_data
 8407               	.LVL493:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 8408               		.loc 3 69 0
 8409 1ffe 8E2F      		mov r24,r30
 8410 2000 90E0      		ldi r25,lo8(0)
 8411 2002 F1E0      		ldi r31,lo8(1)
 8412 2004 8617      		cp r24,r22
 8413 2006 9707      		cpc r25,r23
 8414 2008 01F4      		brne .L311
 8415 200a F0E0      		ldi r31,lo8(0)
 8416               	.L311:
 8417 200c F093 0000 		sts ep_in_data,r31
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 8418               		.loc 3 72 0
 8419 2010 EE23      		tst r30
 8420 2012 01F4      		brne .L312
 8421               	.LVL494:
 8422               	.LBB2876:
 8423               	.LBB2877:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8424               		.loc 6 168 0
 8425 2014 2093 0000 		sts endpoints+28,r18
 8426 2018 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8427               		.loc 6 169 0
 8428 201c C092 0000 		sts endpoints+26,r12
 8429 2020 D092 0000 		sts endpoints+26+1,r13
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8430               		.loc 6 174 0
 8431 2024 F701      		movw r30,r14
 8432               	/* #APP */
 8433               	 ;  174 "usb/usb.h" 1
 8434 2026 02E2      		ldi r16, 34
 8435 2028 0693      		.dc.w 0x9306
 8436               		
 8437               	 ;  0 "" 2
 8438               	.LVL495:
 8439               	/* #NOAPP */
 8440               	.L313:
 8441               	.LBE2877:
 8442               	.LBE2876:
 8443               	.LBE2879:
 8444               	.LBE2890:
 8445               	.LBB2891:
 8446               	.LBB2892:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 8447               		.loc 5 72 0
 8448 202a 5150      		subi r21,lo8(-(-1))
 8449 202c 5093 0000 		sts ep_in_pipe_data+4,r21
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 8450               		.loc 5 73 0
 8451 2030 C901      		movw r24,r18
 8452 2032 805C      		subi r24,lo8(-(64))
 8453 2034 9F4F      		sbci r25,hi8(-(64))
 8454 2036 8093 0000 		sts ep_in_pipe_data,r24
 8455 203a 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 8456               		.loc 5 75 0
 8457 203e F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 8458 2040 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 8459 2042 9F07      		cpc r25,r31
 8460 2044 01F4      		brne .L309
 8461               	.LBE2892:
 8462               	.LBE2891:
 8463               	.LBB2893:
 8464               	.LBB2859:
 8465               		.loc 5 91 0
 8466 2046 8092 0000 		sts ep_in_pipe_data,r8
 8467 204a 9092 0000 		sts ep_in_pipe_data+1,r9
 8468               	.LVL496:
 8469 204e 00C0      		rjmp .L309
 8470               	.LVL497:
 8471               	.L312:
 8472               	.LBE2859:
 8473               	.LBE2893:
 8474               	.LBB2894:
 8475               	.LBB2880:
 8476               	.LBB2878:
 8477               	.LBB2875:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8478               		.loc 6 168 0
 8479 2050 2093 0000 		sts endpoints+20,r18
 8480 2054 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8481               		.loc 6 169 0
 8482 2058 C092 0000 		sts endpoints+18,r12
 8483 205c D092 0000 		sts endpoints+18+1,r13
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 8484               		.loc 6 176 0
 8485 2060 F701      		movw r30,r14
 8486               	/* #APP */
 8487               	 ;  176 "usb/usb.h" 1
 8488 2062 04E1      		ldi r16, 20
 8489 2064 0693      		.dc.w 0x9306
 8490               		
 8491               	 ;  0 "" 2
 8492               	/* #NOAPP */
 8493 2066 00C0      		rjmp .L313
 8494               	.LVL498:
 8495               	.L310:
 8496               	.LBE2875:
 8497               	.LBE2878:
 8498               	.LBE2880:
 8499               	.LBE2894:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 8500               		.loc 3 87 0
 8501 2068 8091 0000 		lds r24,ep_in_data+1
 8502 206c 8130      		cpi r24,lo8(1)
 8503 206e 01F4      		brne .+2
 8504 2070 00C0      		rjmp .L403
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 8505               		.loc 3 91 0
 8506 2072 8230      		cpi r24,lo8(2)
 8507 2074 01F0      		breq .+2
 8508 2076 00C0      		rjmp .L309
 8509               	.LVL499:
 8510               	.LBB2895:
 8511               	.LBB2896:
 8512               	.LBB2897:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 8513               		.loc 6 228 0
 8514 2078 8091 0000 		lds r24,endpoints+24
 8515 207c 8670      		andi r24,lo8(6)
 8516               	.LBE2897:
 8517               	.LBE2896:
 8518               	.LBE2895:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 8519               		.loc 3 91 0
 8520 207e 8630      		cpi r24,lo8(6)
 8521 2080 01F0      		breq .+2
 8522 2082 00C0      		rjmp .L309
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 8523               		.loc 3 92 0
 8524 2084 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 8525               		.loc 3 93 0
 8526 2088 1092 0000 		sts ep_in_data+2,__zero_reg__
 8527 208c 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 8528               	.LBB2898:
 8529               	.LBB2860:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 8530               		.loc 5 90 0
 8531 2090 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 8532               		.loc 5 91 0
 8533 2094 8092 0000 		sts ep_in_pipe_data+2,r8
 8534 2098 9092 0000 		sts ep_in_pipe_data+2+1,r9
 8535 209c 8092 0000 		sts ep_in_pipe_data,r8
 8536 20a0 9092 0000 		sts ep_in_pipe_data+1,r9
 8537               	.LVL500:
 8538 20a4 00C0      		rjmp .L309
 8539               	.LVL501:
 8540               	.L390:
 8541               	.LBE2860:
 8542               	.LBE2898:
 8543               	.LBE2904:
 8544               	.LBE2908:
 8545               	.LBE2918:
 8546               	.LBE2921:
 8547               	.LBE2924:
 8548               	.LBE2927:
 8549               	.LBE2934:
 8550               	.LBE2939:
 8551               	.LBE3151:
 8552               	.LBB3152:
 8553               	.LBB2719:
 8554               	.LBB2714:
 8555               	.LBB2707:
 8556               	.LBB2704:
 8557               	.LBB2701:
 177:usb/usb_pipe.h **** 		ATOMIC_BLOCK(PIPE_ATOMIC){
 8558               		.loc 3 177 0
 8559 20a6 AFB7      		in r26,__SREG__
 8560               	.LVL502:
 8561               	.LBB2691:
 8562               	.LBB2692:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 8563               		.loc 4 50 0
 8564               	/* #APP */
 8565               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 8566 20a8 F894      		cli
 8567               	 ;  0 "" 2
 8568               	.LVL503:
 8569               	/* #NOAPP */
 8570               	.LBE2692:
 8571               	.LBE2691:
 8572               		.loc 3 178 0
 8573 20aa 1092 0000 		sts ep_in_data+2,__zero_reg__
 8574 20ae 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 8575               	.LVL504:
 8576               	.LBB2693:
 8577               	.LBB2694:
  81:usb/pipe.h    **** 	pipe->data->count += 1;
 8578               		.loc 5 81 0
 8579 20b2 8091 0000 		lds r24,ep_in_pipe_data+4
 8580 20b6 8F5F      		subi r24,lo8(-(1))
 8581 20b8 8093 0000 		sts ep_in_pipe_data+4,r24
  82:usb/pipe.h    **** 	pipe->data->write_ptr += pipe->size;
 8582               		.loc 5 82 0
 8583 20bc 8091 0000 		lds r24,ep_in_pipe_data+2
 8584 20c0 9091 0000 		lds r25,ep_in_pipe_data+2+1
 8585 20c4 805C      		subi r24,lo8(-(64))
 8586 20c6 9F4F      		sbci r25,hi8(-(64))
 8587 20c8 8093 0000 		sts ep_in_pipe_data+2,r24
 8588 20cc 9093 0000 		sts ep_in_pipe_data+2+1,r25
  84:usb/pipe.h    **** 	if (pipe->data->write_ptr == &pipe->buffer[pipe->slots*pipe->size])
 8589               		.loc 5 84 0
 8590 20d0 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 8591 20d2 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 8592 20d4 9F07      		cpc r25,r31
 8593 20d6 01F4      		brne .L275
  85:usb/pipe.h    **** 		pipe->data->write_ptr = &pipe->buffer[0];
 8594               		.loc 5 85 0
 8595 20d8 8092 0000 		sts ep_in_pipe_data+2,r8
 8596 20dc 9092 0000 		sts ep_in_pipe_data+2+1,r9
 8597               	.L275:
 8598               	.LVL505:
 8599               	.LBE2694:
 8600               	.LBE2693:
 8601               	.LBB2695:
 8602               	.LBB2687:
 8603               	.LBB2683:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 8604               		.loc 3 80 0
 8605 20e0 4FB7      		in r20,__SREG__
 8606               	.LVL506:
 8607               	.LBB2661:
 8608               	.LBB2662:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 8609               		.loc 4 50 0
 8610               	/* #APP */
 8611               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 8612 20e2 F894      		cli
 8613               	 ;  0 "" 2
 8614               	.LVL507:
 8615               	/* #NOAPP */
 8616               	.LBE2662:
 8617               	.LBE2661:
 8618               	.LBB2663:
 8619               	.LBB2636:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 8620               		.loc 6 220 0
 8621 20e4 8091 0000 		lds r24,endpoints+24
 8622 20e8 8670      		andi r24,lo8(6)
 8623               	.LBE2636:
 8624               	.LBE2663:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 8625               		.loc 3 82 0
 8626 20ea 01F4      		brne .L404
 8627               	.LVL508:
 8628               	.L276:
 8629               	.LBB2664:
 8630               	.LBB2665:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 8631               		.loc 4 70 0
 8632 20ec 4FBF      		out __SREG__,r20
 8633               		.loc 4 71 0
 8634               	.LVL509:
 8635               	.LBE2665:
 8636               	.LBE2664:
 8637               	.LBE2683:
 8638               	.LBE2687:
 8639               	.LBE2695:
 8640               	.LBB2696:
 8641               	.LBB2697:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 8642               		.loc 4 70 0
 8643 20ee AFBF      		out __SREG__,r26
 8644               		.loc 4 71 0
 8645 20f0 00C0      		rjmp .L274
 8646               	.LVL510:
 8647               	.L404:
 8648               	.LBE2697:
 8649               	.LBE2696:
 8650               	.LBB2698:
 8651               	.LBB2688:
 8652               	.LBB2684:
 8653               	.LBB2666:
 8654               	.LBB2667:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 8655               		.loc 5 51 0
 8656 20f2 5091 0000 		lds r21,ep_in_pipe_data+4
 8657               	.LBE2667:
 8658               	.LBE2666:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 8659               		.loc 3 83 0
 8660 20f6 1516      		cp __zero_reg__,r21
 8661 20f8 04F0      		brlt .+2
 8662 20fa 00C0      		rjmp .L277
 8663               	.LBB2668:
 8664               	.LBB2669:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 8665               		.loc 5 62 0
 8666 20fc 2091 0000 		lds r18,ep_in_pipe_data
 8667 2100 3091 0000 		lds r19,ep_in_pipe_data+1
 8668               	.LVL511:
 8669               	.LBE2669:
 8670               	.LBE2668:
 8671               	.LBB2670:
 8672               	.LBB2659:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 8673               		.loc 3 68 0
 8674 2104 E091 0000 		lds r30,ep_in_data
 8675               	.LVL512:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 8676               		.loc 3 69 0
 8677 2108 8E2F      		mov r24,r30
 8678 210a 90E0      		ldi r25,lo8(0)
 8679 210c F1E0      		ldi r31,lo8(1)
 8680 210e 8617      		cp r24,r22
 8681 2110 9707      		cpc r25,r23
 8682 2112 01F4      		brne .L278
 8683 2114 F0E0      		ldi r31,lo8(0)
 8684               	.L278:
 8685 2116 F093 0000 		sts ep_in_data,r31
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 8686               		.loc 3 72 0
 8687 211a EE23      		tst r30
 8688 211c 01F4      		brne .L279
 8689               	.LVL513:
 8690               	.LBB2656:
 8691               	.LBB2657:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8692               		.loc 6 168 0
 8693 211e 2093 0000 		sts endpoints+28,r18
 8694 2122 3093 0000 		sts endpoints+28+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8695               		.loc 6 169 0
 8696 2126 C092 0000 		sts endpoints+26,r12
 8697 212a D092 0000 		sts endpoints+26+1,r13
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8698               		.loc 6 174 0
 8699 212e F701      		movw r30,r14
 8700               	/* #APP */
 8701               	 ;  174 "usb/usb.h" 1
 8702 2130 02E2      		ldi r16, 34
 8703 2132 0693      		.dc.w 0x9306
 8704               		
 8705               	 ;  0 "" 2
 8706               	.LVL514:
 8707               	/* #NOAPP */
 8708               	.L280:
 8709               	.LBE2657:
 8710               	.LBE2656:
 8711               	.LBE2659:
 8712               	.LBE2670:
 8713               	.LBB2671:
 8714               	.LBB2672:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 8715               		.loc 5 72 0
 8716 2134 5150      		subi r21,lo8(-(-1))
 8717 2136 5093 0000 		sts ep_in_pipe_data+4,r21
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 8718               		.loc 5 73 0
 8719 213a C901      		movw r24,r18
 8720 213c 805C      		subi r24,lo8(-(64))
 8721 213e 9F4F      		sbci r25,hi8(-(64))
 8722 2140 8093 0000 		sts ep_in_pipe_data,r24
 8723 2144 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 8724               		.loc 5 75 0
 8725 2148 F0E0      		ldi r31,hi8(ep_in_pipe_buffer+512)
 8726 214a 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 8727 214c 9F07      		cpc r25,r31
 8728 214e 01F4      		brne .L276
 8729               	.LBE2672:
 8730               	.LBE2671:
 8731               	.LBB2673:
 8732               	.LBB2639:
 8733               		.loc 5 91 0
 8734 2150 8092 0000 		sts ep_in_pipe_data,r8
 8735 2154 9092 0000 		sts ep_in_pipe_data+1,r9
 8736               	.LVL515:
 8737 2158 00C0      		rjmp .L276
 8738               	.LVL516:
 8739               	.L279:
 8740               	.LBE2639:
 8741               	.LBE2673:
 8742               	.LBB2674:
 8743               	.LBB2660:
 8744               	.LBB2658:
 8745               	.LBB2655:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8746               		.loc 6 168 0
 8747 215a 2093 0000 		sts endpoints+20,r18
 8748 215e 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8749               		.loc 6 169 0
 8750 2162 C092 0000 		sts endpoints+18,r12
 8751 2166 D092 0000 		sts endpoints+18+1,r13
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 8752               		.loc 6 176 0
 8753 216a F701      		movw r30,r14
 8754               	/* #APP */
 8755               	 ;  176 "usb/usb.h" 1
 8756 216c 04E1      		ldi r16, 20
 8757 216e 0693      		.dc.w 0x9306
 8758               		
 8759               	 ;  0 "" 2
 8760               	/* #NOAPP */
 8761 2170 00C0      		rjmp .L280
 8762               	.LVL517:
 8763               	.L277:
 8764               	.LBE2655:
 8765               	.LBE2658:
 8766               	.LBE2660:
 8767               	.LBE2674:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 8768               		.loc 3 87 0
 8769 2172 8091 0000 		lds r24,ep_in_data+1
 8770 2176 8130      		cpi r24,lo8(1)
 8771 2178 01F4      		brne .+2
 8772 217a 00C0      		rjmp .L405
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 8773               		.loc 3 91 0
 8774 217c 8230      		cpi r24,lo8(2)
 8775 217e 01F0      		breq .+2
 8776 2180 00C0      		rjmp .L276
 8777               	.LVL518:
 8778               	.LBB2675:
 8779               	.LBB2676:
 8780               	.LBB2677:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 8781               		.loc 6 228 0
 8782 2182 8091 0000 		lds r24,endpoints+24
 8783 2186 8670      		andi r24,lo8(6)
 8784               	.LBE2677:
 8785               	.LBE2676:
 8786               	.LBE2675:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 8787               		.loc 3 91 0
 8788 2188 8630      		cpi r24,lo8(6)
 8789 218a 01F0      		breq .+2
 8790 218c 00C0      		rjmp .L276
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 8791               		.loc 3 92 0
 8792 218e 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 8793               		.loc 3 93 0
 8794 2192 1092 0000 		sts ep_in_data+2,__zero_reg__
 8795 2196 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 8796               	.LBB2678:
 8797               	.LBB2640:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 8798               		.loc 5 90 0
 8799 219a 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 8800               		.loc 5 91 0
 8801 219e 8092 0000 		sts ep_in_pipe_data+2,r8
 8802 21a2 9092 0000 		sts ep_in_pipe_data+2+1,r9
 8803 21a6 8092 0000 		sts ep_in_pipe_data,r8
 8804 21aa 9092 0000 		sts ep_in_pipe_data+1,r9
 8805               	.LVL519:
 8806 21ae 00C0      		rjmp .L276
 8807               	.LVL520:
 8808               	.L403:
 8809               	.LBE2640:
 8810               	.LBE2678:
 8811               	.LBE2684:
 8812               	.LBE2688:
 8813               	.LBE2698:
 8814               	.LBE2701:
 8815               	.LBE2704:
 8816               	.LBE2707:
 8817               	.LBE2714:
 8818               	.LBE2719:
 8819               	.LBE3152:
 8820               	.LBB3153:
 8821               	.LBB2940:
 8822               	.LBB2935:
 8823               	.LBB2928:
 8824               	.LBB2925:
 8825               	.LBB2922:
 8826               	.LBB2919:
 8827               	.LBB2909:
 8828               	.LBB2905:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 8829               		.loc 3 88 0
 8830 21b0 1093 0000 		sts ep_in_data+1,r17
 8831               	.LBB2899:
 8832               	.LBB2900:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 8833               		.loc 5 62 0
 8834 21b4 F091 0000 		lds r31,ep_in_pipe_data
 8835 21b8 B091 0000 		lds r27,ep_in_pipe_data+1
 8836               	.LBE2900:
 8837               	.LBE2899:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 8838               		.loc 3 90 0
 8839 21bc 2091 0000 		lds r18,ep_in_data+2
 8840 21c0 3091 0000 		lds r19,ep_in_data+2+1
 8841               	.LVL521:
 8842               	.LBB2901:
 8843               	.LBB2869:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 8844               		.loc 3 68 0
 8845 21c4 E091 0000 		lds r30,ep_in_data
 8846               	.LVL522:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 8847               		.loc 3 69 0
 8848 21c8 8E2F      		mov r24,r30
 8849 21ca 90E0      		ldi r25,lo8(0)
 8850               	.LVL523:
 8851 21cc 51E0      		ldi r21,lo8(1)
 8852 21ce 8617      		cp r24,r22
 8853 21d0 9707      		cpc r25,r23
 8854 21d2 01F4      		brne .L316
 8855 21d4 50E0      		ldi r21,lo8(0)
 8856               	.L316:
 8857 21d6 5093 0000 		sts ep_in_data,r21
 8858               	.LBB2863:
 8859               	.LBB2864:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8860               		.loc 6 168 0
 8861 21da 8F2F      		mov r24,r31
 8862 21dc 9B2F      		mov r25,r27
 8863               	.LBE2864:
 8864               	.LBE2863:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 8865               		.loc 3 72 0
 8866 21de EE23      		tst r30
 8867 21e0 01F0      		breq .+2
 8868 21e2 00C0      		rjmp .L317
 8869               	.LVL524:
 8870               	.LBB2866:
 8871               	.LBB2865:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8872               		.loc 6 168 0
 8873 21e4 8093 0000 		sts endpoints+28,r24
 8874 21e8 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8875               		.loc 6 169 0
 8876 21ec 2093 0000 		sts endpoints+26,r18
 8877 21f0 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8878               		.loc 6 174 0
 8879 21f4 F701      		movw r30,r14
 8880               	/* #APP */
 8881               	 ;  174 "usb/usb.h" 1
 8882 21f6 02E2      		ldi r16, 34
 8883 21f8 0693      		.dc.w 0x9306
 8884               		
 8885               	 ;  0 "" 2
 8886               	.LVL525:
 8887               	/* #NOAPP */
 8888 21fa 00C0      		rjmp .L309
 8889               	.LVL526:
 8890               	.L405:
 8891               	.LBE2865:
 8892               	.LBE2866:
 8893               	.LBE2869:
 8894               	.LBE2901:
 8895               	.LBE2905:
 8896               	.LBE2909:
 8897               	.LBE2919:
 8898               	.LBE2922:
 8899               	.LBE2925:
 8900               	.LBE2928:
 8901               	.LBE2935:
 8902               	.LBE2940:
 8903               	.LBE3153:
 8904               	.LBB3154:
 8905               	.LBB2720:
 8906               	.LBB2715:
 8907               	.LBB2708:
 8908               	.LBB2705:
 8909               	.LBB2702:
 8910               	.LBB2699:
 8911               	.LBB2689:
 8912               	.LBB2685:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 8913               		.loc 3 88 0
 8914 21fc 1093 0000 		sts ep_in_data+1,r17
 8915               	.LBB2679:
 8916               	.LBB2680:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 8917               		.loc 5 62 0
 8918 2200 F091 0000 		lds r31,ep_in_pipe_data
 8919 2204 B091 0000 		lds r27,ep_in_pipe_data+1
 8920               	.LBE2680:
 8921               	.LBE2679:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 8922               		.loc 3 90 0
 8923 2208 2091 0000 		lds r18,ep_in_data+2
 8924 220c 3091 0000 		lds r19,ep_in_data+2+1
 8925               	.LVL527:
 8926               	.LBB2681:
 8927               	.LBB2649:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 8928               		.loc 3 68 0
 8929 2210 E091 0000 		lds r30,ep_in_data
 8930               	.LVL528:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 8931               		.loc 3 69 0
 8932 2214 8E2F      		mov r24,r30
 8933 2216 90E0      		ldi r25,lo8(0)
 8934               	.LVL529:
 8935 2218 51E0      		ldi r21,lo8(1)
 8936 221a 8617      		cp r24,r22
 8937 221c 9707      		cpc r25,r23
 8938 221e 01F4      		brne .L283
 8939 2220 50E0      		ldi r21,lo8(0)
 8940               	.L283:
 8941 2222 5093 0000 		sts ep_in_data,r21
 8942               	.LBB2643:
 8943               	.LBB2644:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8944               		.loc 6 168 0
 8945 2226 8F2F      		mov r24,r31
 8946 2228 9B2F      		mov r25,r27
 8947               	.LBE2644:
 8948               	.LBE2643:
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 8949               		.loc 3 72 0
 8950 222a EE23      		tst r30
 8951 222c 01F0      		breq .+2
 8952 222e 00C0      		rjmp .L284
 8953               	.LVL530:
 8954               	.LBB2646:
 8955               	.LBB2645:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 8956               		.loc 6 168 0
 8957 2230 8093 0000 		sts endpoints+28,r24
 8958 2234 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 8959               		.loc 6 169 0
 8960 2238 2093 0000 		sts endpoints+26,r18
 8961 223c 3093 0000 		sts endpoints+26+1,r19
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 8962               		.loc 6 174 0
 8963 2240 F701      		movw r30,r14
 8964               	/* #APP */
 8965               	 ;  174 "usb/usb.h" 1
 8966 2242 02E2      		ldi r16, 34
 8967 2244 0693      		.dc.w 0x9306
 8968               		
 8969               	 ;  0 "" 2
 8970               	.LVL531:
 8971               	/* #NOAPP */
 8972 2246 00C0      		rjmp .L276
 8973               	.LVL532:
 8974               	.L393:
 8975               	.LBE2645:
 8976               	.LBE2646:
 8977               	.LBE2649:
 8978               	.LBE2681:
 8979               	.LBE2685:
 8980               	.LBE2689:
 8981               	.LBE2699:
 8982               	.LBE2702:
 8983               	.LBE2705:
 8984               	.LBE2708:
 8985               	.LBE2715:
 8986               	.LBE2720:
 8987               	.LBE3154:
 8988               	.LBB3155:
 8989               	.LBB2944:
 265:main.c        ****         uart_putchar('\r', USART); 
 8990               		.loc 1 265 0
 8991 2248 8DE0      		ldi r24,lo8(13)
 8992 224a 6983      		std Y+1,r22
 8993 224c 7A83      		std Y+2,r23
 8994 224e 0E94 0000 		call uart_putchar.constprop.10
 8995 2252 7A81      		ldd r23,Y+2
 8996 2254 6981      		ldd r22,Y+1
 8997 2256 00C0      		rjmp .L357
 8998               	.LVL533:
 8999               	.L388:
 9000               	.LBE2944:
 9001               	.LBE3155:
 9002               	.LBB3156:
 9003               	.LBB2724:
 9004 2258 8DE0      		ldi r24,lo8(13)
 9005 225a 6983      		std Y+1,r22
 9006 225c 7A83      		std Y+2,r23
 9007 225e 0E94 0000 		call uart_putchar.constprop.10
 9008 2262 7A81      		ldd r23,Y+2
 9009 2264 6981      		ldd r22,Y+1
 9010 2266 00C0      		rjmp .L358
 9011               	.LVL534:
 9012               	.L396:
 9013               	.LBE2724:
 9014               	.LBE3156:
 9015               	.LBB3157:
 9016               	.LBB3036:
 9017               	.LBB3031:
 9018               	.LBB3002:
 9019               	.LBB2998:
 9020               	.LBB2994:
 9021               	.LBB2990:
 9022               	.LBB2963:
 9023               	.LBB2964:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 9024               		.loc 5 51 0
 9025 2268 3091 0000 		lds r19,ep_in_pipe_data+4
 9026               	.LBE2964:
 9027               	.LBE2963:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 9028               		.loc 3 83 0
 9029 226c 1316      		cp __zero_reg__,r19
 9030 226e 04F0      		brlt .+2
 9031 2270 00C0      		rjmp .L320
 9032               	.LBB2965:
 9033               	.LBB2966:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 9034               		.loc 5 62 0
 9035 2272 8091 0000 		lds r24,ep_in_pipe_data
 9036 2276 9091 0000 		lds r25,ep_in_pipe_data+1
 9037               	.LVL535:
 9038               	.LBE2966:
 9039               	.LBE2965:
 9040               	.LBB2967:
 9041               	.LBB2968:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 9042               		.loc 3 68 0
 9043 227a 4091 0000 		lds r20,ep_in_data
 9044               	.LVL536:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 9045               		.loc 3 69 0
 9046 227e 51E0      		ldi r21,lo8(1)
 9047 2280 4130      		cpi r20,lo8(1)
 9048 2282 01F4      		brne .L321
 9049 2284 50E0      		ldi r21,lo8(0)
 9050               	.L321:
 9051 2286 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 9052               		.loc 3 72 0
 9053 228a 4423      		tst r20
 9054 228c 01F0      		breq .+2
 9055 228e 00C0      		rjmp .L322
 9056               	.LVL537:
 9057               	.LBB2969:
 9058               	.LBB2970:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9059               		.loc 6 168 0
 9060 2290 8093 0000 		sts endpoints+28,r24
 9061 2294 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9062               		.loc 6 169 0
 9063 2298 40E4      		ldi r20,lo8(64)
 9064 229a 50E0      		ldi r21,hi8(64)
 9065 229c 4093 0000 		sts endpoints+26,r20
 9066 22a0 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 9067               		.loc 6 174 0
 9068 22a4 E0E0      		ldi r30,lo8(endpoints+24)
 9069 22a6 F0E0      		ldi r31,hi8(endpoints+24)
 9070               	.LVL538:
 9071               	/* #APP */
 9072               	 ;  174 "usb/usb.h" 1
 9073 22a8 02E2      		ldi r16, 34
 9074 22aa 0693      		.dc.w 0x9306
 9075               		
 9076               	 ;  0 "" 2
 9077               	.LVL539:
 9078               	/* #NOAPP */
 9079               	.L323:
 9080               	.LBE2970:
 9081               	.LBE2969:
 9082               	.LBE2968:
 9083               	.LBE2967:
 9084               	.LBB2974:
 9085               	.LBB2975:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 9086               		.loc 5 72 0
 9087 22ac 3150      		subi r19,lo8(-(-1))
 9088 22ae 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 9089               		.loc 5 73 0
 9090 22b2 805C      		subi r24,lo8(-(64))
 9091 22b4 9F4F      		sbci r25,hi8(-(64))
 9092 22b6 8093 0000 		sts ep_in_pipe_data,r24
 9093 22ba 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 9094               		.loc 5 75 0
 9095 22be A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 9096 22c0 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 9097 22c2 9A07      		cpc r25,r26
 9098 22c4 01F0      		breq .+2
 9099 22c6 00C0      		rjmp .L319
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 9100               		.loc 5 76 0
 9101 22c8 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 9102 22ca 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 9103 22cc 8093 0000 		sts ep_in_pipe_data,r24
 9104 22d0 9093 0000 		sts ep_in_pipe_data+1,r25
 9105 22d4 00C0      		rjmp .L319
 9106               	.LVL540:
 9107               	.L398:
 9108               	.LBE2975:
 9109               	.LBE2974:
 9110               	.LBE2990:
 9111               	.LBE2994:
 9112               	.LBE2998:
 9113               	.LBE3002:
 9114               	.LBE3031:
 9115               	.LBE3036:
 9116               	.LBE3157:
 9117               	.LBB3158:
 9118               	.LBB3137:
 9119               	.LBB3131:
 9120               	.LBB3101:
 9121               	.LBB3096:
 9122               	.LBB3091:
 9123               	.LBB3086:
 9124               	.LBB3057:
 9125               	.LBB3058:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 9126               		.loc 5 51 0
 9127 22d6 3091 0000 		lds r19,ep_in_pipe_data+4
 9128               	.LBE3058:
 9129               	.LBE3057:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 9130               		.loc 3 83 0
 9131 22da 1316      		cp __zero_reg__,r19
 9132 22dc 04F0      		brlt .+2
 9133 22de 00C0      		rjmp .L335
 9134               	.LBB3059:
 9135               	.LBB3060:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 9136               		.loc 5 62 0
 9137 22e0 8091 0000 		lds r24,ep_in_pipe_data
 9138 22e4 9091 0000 		lds r25,ep_in_pipe_data+1
 9139               	.LVL541:
 9140               	.LBE3060:
 9141               	.LBE3059:
 9142               	.LBB3061:
 9143               	.LBB3062:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 9144               		.loc 3 68 0
 9145 22e8 4091 0000 		lds r20,ep_in_data
 9146               	.LVL542:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 9147               		.loc 3 69 0
 9148 22ec 51E0      		ldi r21,lo8(1)
 9149 22ee 4130      		cpi r20,lo8(1)
 9150 22f0 01F4      		brne .L336
 9151 22f2 50E0      		ldi r21,lo8(0)
 9152               	.L336:
 9153 22f4 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 9154               		.loc 3 72 0
 9155 22f8 4423      		tst r20
 9156 22fa 01F0      		breq .+2
 9157 22fc 00C0      		rjmp .L337
 9158               	.LVL543:
 9159               	.LBB3063:
 9160               	.LBB3064:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9161               		.loc 6 168 0
 9162 22fe 8093 0000 		sts endpoints+28,r24
 9163 2302 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9164               		.loc 6 169 0
 9165 2306 40E4      		ldi r20,lo8(64)
 9166 2308 50E0      		ldi r21,hi8(64)
 9167 230a 4093 0000 		sts endpoints+26,r20
 9168 230e 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 9169               		.loc 6 174 0
 9170 2312 E0E0      		ldi r30,lo8(endpoints+24)
 9171 2314 F0E0      		ldi r31,hi8(endpoints+24)
 9172               	.LVL544:
 9173               	/* #APP */
 9174               	 ;  174 "usb/usb.h" 1
 9175 2316 02E2      		ldi r16, 34
 9176 2318 0693      		.dc.w 0x9306
 9177               		
 9178               	 ;  0 "" 2
 9179               	.LVL545:
 9180               	/* #NOAPP */
 9181               	.L338:
 9182               	.LBE3064:
 9183               	.LBE3063:
 9184               	.LBE3062:
 9185               	.LBE3061:
 9186               	.LBB3068:
 9187               	.LBB3069:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 9188               		.loc 5 72 0
 9189 231a 3150      		subi r19,lo8(-(-1))
 9190 231c 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 9191               		.loc 5 73 0
 9192 2320 805C      		subi r24,lo8(-(64))
 9193 2322 9F4F      		sbci r25,hi8(-(64))
 9194 2324 8093 0000 		sts ep_in_pipe_data,r24
 9195 2328 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 9196               		.loc 5 75 0
 9197 232c A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 9198 232e 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 9199 2330 9A07      		cpc r25,r26
 9200 2332 01F0      		breq .+2
 9201 2334 00C0      		rjmp .L334
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 9202               		.loc 5 76 0
 9203 2336 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 9204 2338 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 9205 233a 8093 0000 		sts ep_in_pipe_data,r24
 9206 233e 9093 0000 		sts ep_in_pipe_data+1,r25
 9207 2342 00C0      		rjmp .L334
 9208               	.LVL546:
 9209               	.L391:
 9210               	.LBE3069:
 9211               	.LBE3068:
 9212               	.LBE3086:
 9213               	.LBE3091:
 9214               	.LBE3096:
 9215               	.LBE3101:
 9216               	.LBE3131:
 9217               	.LBE3137:
 9218               	.LBE3158:
 9219               	.LBB3159:
 9220               	.LBB2823:
 9221               	.LBB2817:
 9222               	.LBB2787:
 9223               	.LBB2782:
 9224               	.LBB2777:
 9225               	.LBB2772:
 9226               	.LBB2743:
 9227               	.LBB2744:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 9228               		.loc 5 51 0
 9229 2344 3091 0000 		lds r19,ep_in_pipe_data+4
 9230               	.LBE2744:
 9231               	.LBE2743:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 9232               		.loc 3 83 0
 9233 2348 1316      		cp __zero_reg__,r19
 9234 234a 04F0      		brlt .+2
 9235 234c 00C0      		rjmp .L287
 9236               	.LBB2745:
 9237               	.LBB2746:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 9238               		.loc 5 62 0
 9239 234e 8091 0000 		lds r24,ep_in_pipe_data
 9240 2352 9091 0000 		lds r25,ep_in_pipe_data+1
 9241               	.LVL547:
 9242               	.LBE2746:
 9243               	.LBE2745:
 9244               	.LBB2747:
 9245               	.LBB2748:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 9246               		.loc 3 68 0
 9247 2356 4091 0000 		lds r20,ep_in_data
 9248               	.LVL548:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 9249               		.loc 3 69 0
 9250 235a 51E0      		ldi r21,lo8(1)
 9251 235c 4130      		cpi r20,lo8(1)
 9252 235e 01F4      		brne .L288
 9253 2360 50E0      		ldi r21,lo8(0)
 9254               	.L288:
 9255 2362 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 9256               		.loc 3 72 0
 9257 2366 4423      		tst r20
 9258 2368 01F0      		breq .+2
 9259 236a 00C0      		rjmp .L289
 9260               	.LVL549:
 9261               	.LBB2749:
 9262               	.LBB2750:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9263               		.loc 6 168 0
 9264 236c 8093 0000 		sts endpoints+28,r24
 9265 2370 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9266               		.loc 6 169 0
 9267 2374 40E4      		ldi r20,lo8(64)
 9268 2376 50E0      		ldi r21,hi8(64)
 9269 2378 4093 0000 		sts endpoints+26,r20
 9270 237c 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 9271               		.loc 6 174 0
 9272 2380 E0E0      		ldi r30,lo8(endpoints+24)
 9273 2382 F0E0      		ldi r31,hi8(endpoints+24)
 9274               	.LVL550:
 9275               	/* #APP */
 9276               	 ;  174 "usb/usb.h" 1
 9277 2384 02E2      		ldi r16, 34
 9278 2386 0693      		.dc.w 0x9306
 9279               		
 9280               	 ;  0 "" 2
 9281               	.LVL551:
 9282               	/* #NOAPP */
 9283               	.L290:
 9284               	.LBE2750:
 9285               	.LBE2749:
 9286               	.LBE2748:
 9287               	.LBE2747:
 9288               	.LBB2754:
 9289               	.LBB2755:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 9290               		.loc 5 72 0
 9291 2388 3150      		subi r19,lo8(-(-1))
 9292 238a 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 9293               		.loc 5 73 0
 9294 238e 805C      		subi r24,lo8(-(64))
 9295 2390 9F4F      		sbci r25,hi8(-(64))
 9296 2392 8093 0000 		sts ep_in_pipe_data,r24
 9297 2396 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 9298               		.loc 5 75 0
 9299 239a A0E0      		ldi r26,hi8(ep_in_pipe_buffer+512)
 9300 239c 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 9301 239e 9A07      		cpc r25,r26
 9302 23a0 01F0      		breq .+2
 9303 23a2 00C0      		rjmp .L286
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 9304               		.loc 5 76 0
 9305 23a4 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 9306 23a6 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 9307 23a8 8093 0000 		sts ep_in_pipe_data,r24
 9308 23ac 9093 0000 		sts ep_in_pipe_data+1,r25
 9309 23b0 00C0      		rjmp .L286
 9310               	.LVL552:
 9311               	.L284:
 9312               	.LBE2755:
 9313               	.LBE2754:
 9314               	.LBE2772:
 9315               	.LBE2777:
 9316               	.LBE2782:
 9317               	.LBE2787:
 9318               	.LBE2817:
 9319               	.LBE2823:
 9320               	.LBE3159:
 9321               	.LBB3160:
 9322               	.LBB2721:
 9323               	.LBB2716:
 9324               	.LBB2709:
 9325               	.LBB2706:
 9326               	.LBB2703:
 9327               	.LBB2700:
 9328               	.LBB2690:
 9329               	.LBB2686:
 9330               	.LBB2682:
 9331               	.LBB2650:
 9332               	.LBB2647:
 9333               	.LBB2648:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9334               		.loc 6 168 0
 9335 23b2 8093 0000 		sts endpoints+20,r24
 9336 23b6 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9337               		.loc 6 169 0
 9338 23ba 2093 0000 		sts endpoints+18,r18
 9339 23be 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 9340               		.loc 6 176 0
 9341 23c2 F701      		movw r30,r14
 9342               	.LVL553:
 9343               	/* #APP */
 9344               	 ;  176 "usb/usb.h" 1
 9345 23c4 04E1      		ldi r16, 20
 9346 23c6 0693      		.dc.w 0x9306
 9347               		
 9348               	 ;  0 "" 2
 9349               	.LVL554:
 9350               	/* #NOAPP */
 9351 23c8 00C0      		rjmp .L276
 9352               	.LVL555:
 9353               	.L317:
 9354               	.LBE2648:
 9355               	.LBE2647:
 9356               	.LBE2650:
 9357               	.LBE2682:
 9358               	.LBE2686:
 9359               	.LBE2690:
 9360               	.LBE2700:
 9361               	.LBE2703:
 9362               	.LBE2706:
 9363               	.LBE2709:
 9364               	.LBE2716:
 9365               	.LBE2721:
 9366               	.LBE3160:
 9367               	.LBB3161:
 9368               	.LBB2941:
 9369               	.LBB2936:
 9370               	.LBB2929:
 9371               	.LBB2926:
 9372               	.LBB2923:
 9373               	.LBB2920:
 9374               	.LBB2910:
 9375               	.LBB2906:
 9376               	.LBB2902:
 9377               	.LBB2870:
 9378               	.LBB2867:
 9379               	.LBB2868:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9380               		.loc 6 168 0
 9381 23ca 8093 0000 		sts endpoints+20,r24
 9382 23ce 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9383               		.loc 6 169 0
 9384 23d2 2093 0000 		sts endpoints+18,r18
 9385 23d6 3093 0000 		sts endpoints+18+1,r19
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 9386               		.loc 6 176 0
 9387 23da F701      		movw r30,r14
 9388               	.LVL556:
 9389               	/* #APP */
 9390               	 ;  176 "usb/usb.h" 1
 9391 23dc 04E1      		ldi r16, 20
 9392 23de 0693      		.dc.w 0x9306
 9393               		
 9394               	 ;  0 "" 2
 9395               	.LVL557:
 9396               	/* #NOAPP */
 9397 23e0 00C0      		rjmp .L309
 9398               	.LVL558:
 9399               	.L289:
 9400               	.LBE2868:
 9401               	.LBE2867:
 9402               	.LBE2870:
 9403               	.LBE2902:
 9404               	.LBE2906:
 9405               	.LBE2910:
 9406               	.LBE2920:
 9407               	.LBE2923:
 9408               	.LBE2926:
 9409               	.LBE2929:
 9410               	.LBE2936:
 9411               	.LBE2941:
 9412               	.LBE3161:
 9413               	.LBB3162:
 9414               	.LBB2824:
 9415               	.LBB2818:
 9416               	.LBB2788:
 9417               	.LBB2783:
 9418               	.LBB2778:
 9419               	.LBB2773:
 9420               	.LBB2756:
 9421               	.LBB2753:
 9422               	.LBB2751:
 9423               	.LBB2752:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9424               		.loc 6 168 0
 9425 23e2 8093 0000 		sts endpoints+20,r24
 9426 23e6 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9427               		.loc 6 169 0
 9428 23ea 40E4      		ldi r20,lo8(64)
 9429 23ec 50E0      		ldi r21,hi8(64)
 9430               	.LVL559:
 9431 23ee 4093 0000 		sts endpoints+18,r20
 9432 23f2 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 9433               		.loc 6 176 0
 9434 23f6 E0E0      		ldi r30,lo8(endpoints+24)
 9435 23f8 F0E0      		ldi r31,hi8(endpoints+24)
 9436               	/* #APP */
 9437               	 ;  176 "usb/usb.h" 1
 9438 23fa 04E1      		ldi r16, 20
 9439 23fc 0693      		.dc.w 0x9306
 9440               		
 9441               	 ;  0 "" 2
 9442               	/* #NOAPP */
 9443 23fe 00C0      		rjmp .L290
 9444               	.LVL560:
 9445               	.L337:
 9446               	.LBE2752:
 9447               	.LBE2751:
 9448               	.LBE2753:
 9449               	.LBE2756:
 9450               	.LBE2773:
 9451               	.LBE2778:
 9452               	.LBE2783:
 9453               	.LBE2788:
 9454               	.LBE2818:
 9455               	.LBE2824:
 9456               	.LBE3162:
 9457               	.LBB3163:
 9458               	.LBB3138:
 9459               	.LBB3132:
 9460               	.LBB3102:
 9461               	.LBB3097:
 9462               	.LBB3092:
 9463               	.LBB3087:
 9464               	.LBB3070:
 9465               	.LBB3067:
 9466               	.LBB3065:
 9467               	.LBB3066:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9468               		.loc 6 168 0
 9469 2400 8093 0000 		sts endpoints+20,r24
 9470 2404 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9471               		.loc 6 169 0
 9472 2408 40E4      		ldi r20,lo8(64)
 9473 240a 50E0      		ldi r21,hi8(64)
 9474               	.LVL561:
 9475 240c 4093 0000 		sts endpoints+18,r20
 9476 2410 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 9477               		.loc 6 176 0
 9478 2414 E0E0      		ldi r30,lo8(endpoints+24)
 9479 2416 F0E0      		ldi r31,hi8(endpoints+24)
 9480               	/* #APP */
 9481               	 ;  176 "usb/usb.h" 1
 9482 2418 04E1      		ldi r16, 20
 9483 241a 0693      		.dc.w 0x9306
 9484               		
 9485               	 ;  0 "" 2
 9486               	/* #NOAPP */
 9487 241c 00C0      		rjmp .L338
 9488               	.LVL562:
 9489               	.L322:
 9490               	.LBE3066:
 9491               	.LBE3065:
 9492               	.LBE3067:
 9493               	.LBE3070:
 9494               	.LBE3087:
 9495               	.LBE3092:
 9496               	.LBE3097:
 9497               	.LBE3102:
 9498               	.LBE3132:
 9499               	.LBE3138:
 9500               	.LBE3163:
 9501               	.LBB3164:
 9502               	.LBB3037:
 9503               	.LBB3032:
 9504               	.LBB3003:
 9505               	.LBB2999:
 9506               	.LBB2995:
 9507               	.LBB2991:
 9508               	.LBB2976:
 9509               	.LBB2973:
 9510               	.LBB2971:
 9511               	.LBB2972:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9512               		.loc 6 168 0
 9513 241e 8093 0000 		sts endpoints+20,r24
 9514 2422 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9515               		.loc 6 169 0
 9516 2426 40E4      		ldi r20,lo8(64)
 9517 2428 50E0      		ldi r21,hi8(64)
 9518               	.LVL563:
 9519 242a 4093 0000 		sts endpoints+18,r20
 9520 242e 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 9521               		.loc 6 176 0
 9522 2432 E0E0      		ldi r30,lo8(endpoints+24)
 9523 2434 F0E0      		ldi r31,hi8(endpoints+24)
 9524               	/* #APP */
 9525               	 ;  176 "usb/usb.h" 1
 9526 2436 04E1      		ldi r16, 20
 9527 2438 0693      		.dc.w 0x9306
 9528               		
 9529               	 ;  0 "" 2
 9530               	/* #NOAPP */
 9531 243a 00C0      		rjmp .L323
 9532               	.LVL564:
 9533               	.L335:
 9534               	.LBE2972:
 9535               	.LBE2971:
 9536               	.LBE2973:
 9537               	.LBE2976:
 9538               	.LBE2991:
 9539               	.LBE2995:
 9540               	.LBE2999:
 9541               	.LBE3003:
 9542               	.LBE3032:
 9543               	.LBE3037:
 9544               	.LBE3164:
 9545               	.LBB3165:
 9546               	.LBB3139:
 9547               	.LBB3133:
 9548               	.LBB3103:
 9549               	.LBB3098:
 9550               	.LBB3093:
 9551               	.LBB3088:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 9552               		.loc 3 87 0
 9553 243c 8091 0000 		lds r24,ep_in_data+1
 9554 2440 8130      		cpi r24,lo8(1)
 9555 2442 01F4      		brne .+2
 9556 2444 00C0      		rjmp .L406
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 9557               		.loc 3 91 0
 9558 2446 8230      		cpi r24,lo8(2)
 9559 2448 01F0      		breq .+2
 9560 244a 00C0      		rjmp .L334
 9561               	.LVL565:
 9562               	.LBB3071:
 9563               	.LBB3072:
 9564               	.LBB3073:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 9565               		.loc 6 228 0
 9566 244c 8091 0000 		lds r24,endpoints+24
 9567 2450 8670      		andi r24,lo8(6)
 9568               	.LBE3073:
 9569               	.LBE3072:
 9570               	.LBE3071:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 9571               		.loc 3 91 0
 9572 2452 8630      		cpi r24,lo8(6)
 9573 2454 01F0      		breq .+2
 9574 2456 00C0      		rjmp .L334
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 9575               		.loc 3 92 0
 9576 2458 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 9577               		.loc 3 93 0
 9578 245c 1092 0000 		sts ep_in_data+2,__zero_reg__
 9579 2460 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 9580               	.LBB3074:
 9581               	.LBB3075:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 9582               		.loc 5 90 0
 9583 2464 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 9584               		.loc 5 91 0
 9585 2468 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 9586 246a 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 9587 246c 8093 0000 		sts ep_in_pipe_data+2,r24
 9588 2470 9093 0000 		sts ep_in_pipe_data+2+1,r25
 9589 2474 8093 0000 		sts ep_in_pipe_data,r24
 9590 2478 9093 0000 		sts ep_in_pipe_data+1,r25
 9591               	.LVL566:
 9592 247c 00C0      		rjmp .L334
 9593               	.LVL567:
 9594               	.L320:
 9595               	.LBE3075:
 9596               	.LBE3074:
 9597               	.LBE3088:
 9598               	.LBE3093:
 9599               	.LBE3098:
 9600               	.LBE3103:
 9601               	.LBE3133:
 9602               	.LBE3139:
 9603               	.LBE3165:
 9604               	.LBB3166:
 9605               	.LBB3038:
 9606               	.LBB3033:
 9607               	.LBB3004:
 9608               	.LBB3000:
 9609               	.LBB2996:
 9610               	.LBB2992:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 9611               		.loc 3 87 0
 9612 247e 8091 0000 		lds r24,ep_in_data+1
 9613 2482 8130      		cpi r24,lo8(1)
 9614 2484 01F4      		brne .+2
 9615 2486 00C0      		rjmp .L407
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 9616               		.loc 3 91 0
 9617 2488 8230      		cpi r24,lo8(2)
 9618 248a 01F0      		breq .+2
 9619 248c 00C0      		rjmp .L319
 9620               	.LVL568:
 9621               	.LBB2977:
 9622               	.LBB2978:
 9623               	.LBB2979:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 9624               		.loc 6 228 0
 9625 248e 8091 0000 		lds r24,endpoints+24
 9626 2492 8670      		andi r24,lo8(6)
 9627               	.LBE2979:
 9628               	.LBE2978:
 9629               	.LBE2977:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 9630               		.loc 3 91 0
 9631 2494 8630      		cpi r24,lo8(6)
 9632 2496 01F0      		breq .+2
 9633 2498 00C0      		rjmp .L319
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 9634               		.loc 3 92 0
 9635 249a 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 9636               		.loc 3 93 0
 9637 249e 1092 0000 		sts ep_in_data+2,__zero_reg__
 9638 24a2 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 9639               	.LBB2980:
 9640               	.LBB2981:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 9641               		.loc 5 90 0
 9642 24a6 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 9643               		.loc 5 91 0
 9644 24aa 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 9645 24ac 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 9646 24ae 8093 0000 		sts ep_in_pipe_data+2,r24
 9647 24b2 9093 0000 		sts ep_in_pipe_data+2+1,r25
 9648 24b6 8093 0000 		sts ep_in_pipe_data,r24
 9649 24ba 9093 0000 		sts ep_in_pipe_data+1,r25
 9650               	.LVL569:
 9651 24be 00C0      		rjmp .L319
 9652               	.LVL570:
 9653               	.L287:
 9654               	.LBE2981:
 9655               	.LBE2980:
 9656               	.LBE2992:
 9657               	.LBE2996:
 9658               	.LBE3000:
 9659               	.LBE3004:
 9660               	.LBE3033:
 9661               	.LBE3038:
 9662               	.LBE3166:
 9663               	.LBB3167:
 9664               	.LBB2825:
 9665               	.LBB2819:
 9666               	.LBB2789:
 9667               	.LBB2784:
 9668               	.LBB2779:
 9669               	.LBB2774:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 9670               		.loc 3 87 0
 9671 24c0 8091 0000 		lds r24,ep_in_data+1
 9672 24c4 8130      		cpi r24,lo8(1)
 9673 24c6 01F4      		brne .+2
 9674 24c8 00C0      		rjmp .L408
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 9675               		.loc 3 91 0
 9676 24ca 8230      		cpi r24,lo8(2)
 9677 24cc 01F0      		breq .+2
 9678 24ce 00C0      		rjmp .L286
 9679               	.LVL571:
 9680               	.LBB2757:
 9681               	.LBB2758:
 9682               	.LBB2759:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 9683               		.loc 6 228 0
 9684 24d0 8091 0000 		lds r24,endpoints+24
 9685 24d4 8670      		andi r24,lo8(6)
 9686               	.LBE2759:
 9687               	.LBE2758:
 9688               	.LBE2757:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 9689               		.loc 3 91 0
 9690 24d6 8630      		cpi r24,lo8(6)
 9691 24d8 01F0      		breq .+2
 9692 24da 00C0      		rjmp .L286
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 9693               		.loc 3 92 0
 9694 24dc 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 9695               		.loc 3 93 0
 9696 24e0 1092 0000 		sts ep_in_data+2,__zero_reg__
 9697 24e4 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 9698               	.LBB2760:
 9699               	.LBB2761:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 9700               		.loc 5 90 0
 9701 24e8 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 9702               		.loc 5 91 0
 9703 24ec 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 9704 24ee 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 9705 24f0 8093 0000 		sts ep_in_pipe_data+2,r24
 9706 24f4 9093 0000 		sts ep_in_pipe_data+2+1,r25
 9707 24f8 8093 0000 		sts ep_in_pipe_data,r24
 9708 24fc 9093 0000 		sts ep_in_pipe_data+1,r25
 9709               	.LVL572:
 9710 2500 00C0      		rjmp .L286
 9711               	.LVL573:
 9712               	.L406:
 9713               	.LBE2761:
 9714               	.LBE2760:
 9715               	.LBE2774:
 9716               	.LBE2779:
 9717               	.LBE2784:
 9718               	.LBE2789:
 9719               	.LBE2819:
 9720               	.LBE2825:
 9721               	.LBE3167:
 9722               	.LBB3168:
 9723               	.LBB3140:
 9724               	.LBB3134:
 9725               	.LBB3104:
 9726               	.LBB3099:
 9727               	.LBB3094:
 9728               	.LBB3089:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 9729               		.loc 3 88 0
 9730 2502 82E0      		ldi r24,lo8(2)
 9731 2504 8093 0000 		sts ep_in_data+1,r24
 9732               	.LBB3076:
 9733               	.LBB3077:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 9734               		.loc 5 62 0
 9735 2508 6091 0000 		lds r22,ep_in_pipe_data
 9736 250c 3091 0000 		lds r19,ep_in_pipe_data+1
 9737               	.LBE3077:
 9738               	.LBE3076:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 9739               		.loc 3 90 0
 9740 2510 4091 0000 		lds r20,ep_in_data+2
 9741 2514 5091 0000 		lds r21,ep_in_data+2+1
 9742               	.LVL574:
 9743               	.LBB3078:
 9744               	.LBB3079:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 9745               		.loc 3 68 0
 9746 2518 8091 0000 		lds r24,ep_in_data
 9747               	.LVL575:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 9748               		.loc 3 69 0
 9749 251c 91E0      		ldi r25,lo8(1)
 9750               	.LVL576:
 9751 251e 8130      		cpi r24,lo8(1)
 9752 2520 01F4      		brne .L341
 9753 2522 90E0      		ldi r25,lo8(0)
 9754               	.L341:
 9755 2524 9093 0000 		sts ep_in_data,r25
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 9756               		.loc 3 72 0
 9757 2528 8823      		tst r24
 9758 252a 01F4      		brne .L342
 9759               	.LVL577:
 9760               	.LBB3080:
 9761               	.LBB3081:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9762               		.loc 6 168 0
 9763 252c 862F      		mov r24,r22
 9764 252e 932F      		mov r25,r19
 9765 2530 8093 0000 		sts endpoints+28,r24
 9766 2534 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9767               		.loc 6 169 0
 9768 2538 4093 0000 		sts endpoints+26,r20
 9769 253c 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 9770               		.loc 6 174 0
 9771 2540 E0E0      		ldi r30,lo8(endpoints+24)
 9772 2542 F0E0      		ldi r31,hi8(endpoints+24)
 9773               	.LVL578:
 9774               	/* #APP */
 9775               	 ;  174 "usb/usb.h" 1
 9776 2544 02E2      		ldi r16, 34
 9777 2546 0693      		.dc.w 0x9306
 9778               		
 9779               	 ;  0 "" 2
 9780               	/* #NOAPP */
 9781 2548 00C0      		rjmp .L334
 9782               	.LVL579:
 9783               	.L408:
 9784               	.LBE3081:
 9785               	.LBE3080:
 9786               	.LBE3079:
 9787               	.LBE3078:
 9788               	.LBE3089:
 9789               	.LBE3094:
 9790               	.LBE3099:
 9791               	.LBE3104:
 9792               	.LBE3134:
 9793               	.LBE3140:
 9794               	.LBE3168:
 9795               	.LBB3169:
 9796               	.LBB2826:
 9797               	.LBB2820:
 9798               	.LBB2790:
 9799               	.LBB2785:
 9800               	.LBB2780:
 9801               	.LBB2775:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 9802               		.loc 3 88 0
 9803 254a 82E0      		ldi r24,lo8(2)
 9804 254c 8093 0000 		sts ep_in_data+1,r24
 9805               	.LBB2762:
 9806               	.LBB2763:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 9807               		.loc 5 62 0
 9808 2550 6091 0000 		lds r22,ep_in_pipe_data
 9809 2554 3091 0000 		lds r19,ep_in_pipe_data+1
 9810               	.LBE2763:
 9811               	.LBE2762:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 9812               		.loc 3 90 0
 9813 2558 8091 0000 		lds r24,ep_in_data+2
 9814 255c 9091 0000 		lds r25,ep_in_data+2+1
 9815               	.LVL580:
 9816               	.LBB2764:
 9817               	.LBB2765:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 9818               		.loc 3 68 0
 9819 2560 4091 0000 		lds r20,ep_in_data
 9820               	.LVL581:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 9821               		.loc 3 69 0
 9822 2564 51E0      		ldi r21,lo8(1)
 9823 2566 4130      		cpi r20,lo8(1)
 9824 2568 01F4      		brne .L293
 9825 256a 50E0      		ldi r21,lo8(0)
 9826               	.L293:
 9827 256c 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 9828               		.loc 3 72 0
 9829 2570 4423      		tst r20
 9830 2572 01F4      		brne .L294
 9831               	.LVL582:
 9832               	.LBB2766:
 9833               	.LBB2767:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9834               		.loc 6 168 0
 9835 2574 462F      		mov r20,r22
 9836 2576 532F      		mov r21,r19
 9837 2578 4093 0000 		sts endpoints+28,r20
 9838 257c 5093 0000 		sts endpoints+28+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9839               		.loc 6 169 0
 9840 2580 8093 0000 		sts endpoints+26,r24
 9841 2584 9093 0000 		sts endpoints+26+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 9842               		.loc 6 174 0
 9843 2588 E0E0      		ldi r30,lo8(endpoints+24)
 9844 258a F0E0      		ldi r31,hi8(endpoints+24)
 9845               	.LVL583:
 9846               	/* #APP */
 9847               	 ;  174 "usb/usb.h" 1
 9848 258c 02E2      		ldi r16, 34
 9849 258e 0693      		.dc.w 0x9306
 9850               		
 9851               	 ;  0 "" 2
 9852               	/* #NOAPP */
 9853 2590 00C0      		rjmp .L286
 9854               	.LVL584:
 9855               	.L342:
 9856               	.LBE2767:
 9857               	.LBE2766:
 9858               	.LBE2765:
 9859               	.LBE2764:
 9860               	.LBE2775:
 9861               	.LBE2780:
 9862               	.LBE2785:
 9863               	.LBE2790:
 9864               	.LBE2820:
 9865               	.LBE2826:
 9866               	.LBE3169:
 9867               	.LBB3170:
 9868               	.LBB3141:
 9869               	.LBB3135:
 9870               	.LBB3105:
 9871               	.LBB3100:
 9872               	.LBB3095:
 9873               	.LBB3090:
 9874               	.LBB3085:
 9875               	.LBB3084:
 9876               	.LBB3082:
 9877               	.LBB3083:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9878               		.loc 6 168 0
 9879 2592 862F      		mov r24,r22
 9880               	.LVL585:
 9881 2594 932F      		mov r25,r19
 9882 2596 8093 0000 		sts endpoints+20,r24
 9883 259a 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9884               		.loc 6 169 0
 9885 259e 4093 0000 		sts endpoints+18,r20
 9886 25a2 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 9887               		.loc 6 176 0
 9888 25a6 E0E0      		ldi r30,lo8(endpoints+24)
 9889 25a8 F0E0      		ldi r31,hi8(endpoints+24)
 9890               	/* #APP */
 9891               	 ;  176 "usb/usb.h" 1
 9892 25aa 04E1      		ldi r16, 20
 9893 25ac 0693      		.dc.w 0x9306
 9894               		
 9895               	 ;  0 "" 2
 9896               	/* #NOAPP */
 9897 25ae 00C0      		rjmp .L334
 9898               	.LVL586:
 9899               	.L294:
 9900               	.LBE3083:
 9901               	.LBE3082:
 9902               	.LBE3084:
 9903               	.LBE3085:
 9904               	.LBE3090:
 9905               	.LBE3095:
 9906               	.LBE3100:
 9907               	.LBE3105:
 9908               	.LBE3135:
 9909               	.LBE3141:
 9910               	.LBE3170:
 9911               	.LBB3171:
 9912               	.LBB2827:
 9913               	.LBB2821:
 9914               	.LBB2791:
 9915               	.LBB2786:
 9916               	.LBB2781:
 9917               	.LBB2776:
 9918               	.LBB2771:
 9919               	.LBB2770:
 9920               	.LBB2768:
 9921               	.LBB2769:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9922               		.loc 6 168 0
 9923 25b0 462F      		mov r20,r22
 9924               	.LVL587:
 9925 25b2 532F      		mov r21,r19
 9926 25b4 4093 0000 		sts endpoints+20,r20
 9927 25b8 5093 0000 		sts endpoints+20+1,r21
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9928               		.loc 6 169 0
 9929 25bc 8093 0000 		sts endpoints+18,r24
 9930 25c0 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 9931               		.loc 6 176 0
 9932 25c4 E0E0      		ldi r30,lo8(endpoints+24)
 9933 25c6 F0E0      		ldi r31,hi8(endpoints+24)
 9934               	/* #APP */
 9935               	 ;  176 "usb/usb.h" 1
 9936 25c8 04E1      		ldi r16, 20
 9937 25ca 0693      		.dc.w 0x9306
 9938               		
 9939               	 ;  0 "" 2
 9940               	/* #NOAPP */
 9941 25cc 00C0      		rjmp .L286
 9942               	.LVL588:
 9943               	.L259:
 9944               	.LBE2769:
 9945               	.LBE2768:
 9946               	.LBE2770:
 9947               	.LBE2771:
 9948               	.LBE2776:
 9949               	.LBE2781:
 9950               	.LBE2786:
 9951               	.LBE2791:
 9952               	.LBE2821:
 9953               	.LBE2827:
 9954               	.LBE3171:
 9955               	.LBB3172:
 9956               	.LBB2605:
 9957               	.LBB2602:
 9958               	.LBB2574:
 9959               	.LBB2571:
 9960               	.LBB2568:
 9961               	.LBB2565:
 9962               	.LBB2562:
 9963               	.LBB2561:
 9964               	.LBB2559:
 9965               	.LBB2560:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 9966               		.loc 6 168 0
 9967 25ce 262F      		mov r18,r22
 9968               	.LVL589:
 9969 25d0 342F      		mov r19,r20
 9970 25d2 2093 0000 		sts endpoints+20,r18
 9971 25d6 3093 0000 		sts endpoints+20+1,r19
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 9972               		.loc 6 169 0
 9973 25da 8093 0000 		sts endpoints+18,r24
 9974 25de 9093 0000 		sts endpoints+18+1,r25
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 9975               		.loc 6 176 0
 9976 25e2 E0E0      		ldi r30,lo8(endpoints+24)
 9977 25e4 F0E0      		ldi r31,hi8(endpoints+24)
 9978               	/* #APP */
 9979               	 ;  176 "usb/usb.h" 1
 9980 25e6 04E1      		ldi r16, 20
 9981 25e8 0693      		.dc.w 0x9306
 9982               		
 9983               	 ;  0 "" 2
 9984               	/* #NOAPP */
 9985 25ea 00C0      		rjmp .L251
 9986               	.LVL590:
 9987               	.L407:
 9988               	.LBE2560:
 9989               	.LBE2559:
 9990               	.LBE2561:
 9991               	.LBE2562:
 9992               	.LBE2565:
 9993               	.LBE2568:
 9994               	.LBE2571:
 9995               	.LBE2574:
 9996               	.LBE2602:
 9997               	.LBE2605:
 9998               	.LBE3172:
 9999               	.LBB3173:
 10000               	.LBB3039:
 10001               	.LBB3034:
 10002               	.LBB3005:
 10003               	.LBB3001:
 10004               	.LBB2997:
 10005               	.LBB2993:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 10006               		.loc 3 88 0
 10007 25ec 82E0      		ldi r24,lo8(2)
 10008 25ee 8093 0000 		sts ep_in_data+1,r24
 10009               	.LBB2982:
 10010               	.LBB2983:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 10011               		.loc 5 62 0
 10012 25f2 6091 0000 		lds r22,ep_in_pipe_data
 10013 25f6 3091 0000 		lds r19,ep_in_pipe_data+1
 10014               	.LBE2983:
 10015               	.LBE2982:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 10016               		.loc 3 90 0
 10017 25fa 4091 0000 		lds r20,ep_in_data+2
 10018 25fe 5091 0000 		lds r21,ep_in_data+2+1
 10019               	.LVL591:
 10020               	.LBB2984:
 10021               	.LBB2985:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 10022               		.loc 3 68 0
 10023 2602 8091 0000 		lds r24,ep_in_data
 10024               	.LVL592:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 10025               		.loc 3 69 0
 10026 2606 91E0      		ldi r25,lo8(1)
 10027 2608 8130      		cpi r24,lo8(1)
 10028 260a 01F4      		brne .L326
 10029 260c 90E0      		ldi r25,lo8(0)
 10030               	.L326:
 10031 260e 9093 0000 		sts ep_in_data,r25
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 10032               		.loc 3 72 0
 10033 2612 8823      		tst r24
 10034 2614 01F4      		brne .L327
 10035               	.LVL593:
 10036               	.LBB2986:
 10037               	.LBB2987:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10038               		.loc 6 168 0
 10039 2616 862F      		mov r24,r22
 10040 2618 932F      		mov r25,r19
 10041 261a 8093 0000 		sts endpoints+28,r24
 10042 261e 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10043               		.loc 6 169 0
 10044 2622 4093 0000 		sts endpoints+26,r20
 10045 2626 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10046               		.loc 6 174 0
 10047 262a E0E0      		ldi r30,lo8(endpoints+24)
 10048 262c F0E0      		ldi r31,hi8(endpoints+24)
 10049               	.LVL594:
 10050               	/* #APP */
 10051               	 ;  174 "usb/usb.h" 1
 10052 262e 02E2      		ldi r16, 34
 10053 2630 0693      		.dc.w 0x9306
 10054               		
 10055               	 ;  0 "" 2
 10056               	/* #NOAPP */
 10057 2632 00C0      		rjmp .L319
 10058               	.LVL595:
 10059               	.L327:
 10060               	.LBE2987:
 10061               	.LBE2986:
 10062               	.LBB2988:
 10063               	.LBB2989:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10064               		.loc 6 168 0
 10065 2634 862F      		mov r24,r22
 10066 2636 932F      		mov r25,r19
 10067 2638 8093 0000 		sts endpoints+20,r24
 10068 263c 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10069               		.loc 6 169 0
 10070 2640 4093 0000 		sts endpoints+18,r20
 10071 2644 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 10072               		.loc 6 176 0
 10073 2648 E0E0      		ldi r30,lo8(endpoints+24)
 10074 264a F0E0      		ldi r31,hi8(endpoints+24)
 10075               	/* #APP */
 10076               	 ;  176 "usb/usb.h" 1
 10077 264c 04E1      		ldi r16, 20
 10078 264e 0693      		.dc.w 0x9306
 10079               		
 10080               	 ;  0 "" 2
 10081               	/* #NOAPP */
 10082 2650 00C0      		rjmp .L319
 10083               	.LBE2989:
 10084               	.LBE2988:
 10085               	.LBE2985:
 10086               	.LBE2984:
 10087               	.LBE2993:
 10088               	.LBE2997:
 10089               	.LBE3001:
 10090               	.LBE3005:
 10091               	.LBE3034:
 10092               	.LBE3039:
 10093               	.LBE3173:
 10094               		.cfi_endproc
 10095               	.LFE73:
 10097               		.data
 10098               	.LC6:
 10099 005d 2B31 3231 		.string	"+12153166262"
 10099      3533 3136 
 10099      3632 3632 
 10099      00
 10100               		.section	.text.startup,"ax",@progbits
 10101               	.global	main
 10103               	main:
 10104               	.LFB74:
 348:main.c        **** int main(void){
 10105               		.loc 1 348 0
 10106               		.cfi_startproc
 10107               	/* prologue: function */
 10108               	/* frame size = 0 */
 10109               	/* stack size = 0 */
 10110               	.L__stack_usage = 0
 351:main.c        **** 	USB_ConfigureClock();
 10111               		.loc 1 351 0
 10112 0000 0E94 0000 		call USB_ConfigureClock
 352:main.c        **** 	USB_Init();
 10113               		.loc 1 352 0
 10114 0004 0E94 0000 		call USB_Init
 353:main.c        **** 	USB.INTCTRLA = USB_BUSEVIE_bm | USB_INTLVL_MED_gc;
 10115               		.loc 1 353 0
 10116 0008 E0EC      		ldi r30,lo8(1216)
 10117 000a F4E0      		ldi r31,hi8(1216)
 10118 000c 82E4      		ldi r24,lo8(66)
 10119 000e 8087      		std Z+8,r24
 354:main.c        **** 	USB.INTCTRLB = USB_TRNIE_bm | USB_SETUPIE_bm;
 10120               		.loc 1 354 0
 10121 0010 83E0      		ldi r24,lo8(3)
 10122 0012 8187      		std Z+9,r24
 355:main.c        **** 	PMIC.CTRL = PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm;
 10123               		.loc 1 355 0
 10124 0014 E0EA      		ldi r30,lo8(160)
 10125 0016 F0E0      		ldi r31,hi8(160)
 10126 0018 8283      		std Z+2,r24
 356:main.c        **** 	sei();
 10127               		.loc 1 356 0
 10128               	/* #APP */
 10129               	 ;  356 "main.c" 1
 10130 001a 7894      		sei
 10131               	 ;  0 "" 2
 10132               	/* #NOAPP */
 10133               	.LBB3260:
 10134               	.LBB3261:
 121:main.c        ****   PORTD.DIRSET = PIN3_bm; 
 10135               		.loc 1 121 0
 10136 001c E0E6      		ldi r30,lo8(1632)
 10137 001e F6E0      		ldi r31,hi8(1632)
 10138 0020 98E0      		ldi r25,lo8(8)
 10139 0022 9183      		std Z+1,r25
 124:main.c        ****   PORTD.OUTSET = PIN3_bm; 
 10140               		.loc 1 124 0
 10141 0024 9583      		std Z+5,r25
 10142               	.LVL596:
 128:main.c        ****   USARTD0_BAUDCTRLA = BSEL & 0XFF;
 10143               		.loc 1 128 0
 10144 0026 96E0      		ldi r25,lo8(6)
 10145 0028 9093 A609 		sts 2470,r25
 129:main.c        ****   USARTD0_BAUDCTRLB = (BSCALE << 4) | (BSEL & 0xF000) >> 8;
 10146               		.loc 1 129 0
 10147 002c 1092 A709 		sts 2471,__zero_reg__
 133:main.c        ****   USARTD0.CTRLA = 0x00;
 10148               		.loc 1 133 0
 10149 0030 E0EA      		ldi r30,lo8(2464)
 10150 0032 F9E0      		ldi r31,hi8(2464)
 10151 0034 1382      		std Z+3,__zero_reg__
 136:main.c        ****   USARTD0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;  
 10152               		.loc 1 136 0
 10153 0036 98E1      		ldi r25,lo8(24)
 10154 0038 9483      		std Z+4,r25
 140:main.c        ****   USARTD0.CTRLC = 0x03;  
 10155               		.loc 1 140 0
 10156 003a 8583      		std Z+5,r24
 10157               	.LVL597:
 10158               	.LBE3261:
 10159               	.LBE3260:
 10160               	.LBB3262:
 10161               	.LBB3263:
 10162               	.LBB3264:
 10163               	.LBB3265:
 110:usb/usb_pipe.h **** 	p->data->flush = 1;
 10164               		.loc 3 110 0
 10165 003c 81E0      		ldi r24,lo8(1)
 10166 003e 8093 0000 		sts ep_in_data+1,r24
 10167               	.LVL598:
 10168               	.LBB3266:
 10169               	.LBB3267:
 10170               	.LBB3268:
  80:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 10171               		.loc 3 80 0
 10172 0042 2FB7      		in r18,__SREG__
 10173               	.LVL599:
 10174               	.LBB3269:
 10175               	.LBB3270:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 10176               		.loc 4 50 0
 10177               	/* #APP */
 10178               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 10179 0044 F894      		cli
 10180               	 ;  0 "" 2
 10181               	.LVL600:
 10182               	/* #NOAPP */
 10183               	.LBE3270:
 10184               	.LBE3269:
 10185               	.LBB3271:
 10186               	.LBB3272:
 220:usb/usb.h     **** 	return e->STATUS & (USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 10187               		.loc 6 220 0
 10188 0046 8091 0000 		lds r24,endpoints+24
 10189 004a 8670      		andi r24,lo8(6)
 10190               	.LBE3272:
 10191               	.LBE3271:
  82:usb/usb_pipe.h **** 			if (USB_ep_ready(p->ep)){
 10192               		.loc 3 82 0
 10193 004c 01F4      		brne .+2
 10194 004e 00C0      		rjmp .L435
 10195               	.LBB3273:
 10196               	.LBB3274:
  51:usb/pipe.h    **** 	return pipe->data->count - pipe->reserve_read;
 10197               		.loc 5 51 0
 10198 0050 3091 0000 		lds r19,ep_in_pipe_data+4
 10199               	.LBE3274:
 10200               	.LBE3273:
  83:usb/usb_pipe.h **** 				if (pipe_can_read(p->pipe) >= 1){
 10201               		.loc 3 83 0
 10202 0054 1316      		cp __zero_reg__,r19
 10203 0056 04F0      		brlt .+2
 10204 0058 00C0      		rjmp .L411
 10205               	.LBB3275:
 10206               	.LBB3276:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 10207               		.loc 5 62 0
 10208 005a 8091 0000 		lds r24,ep_in_pipe_data
 10209 005e 9091 0000 		lds r25,ep_in_pipe_data+1
 10210               	.LVL601:
 10211               	.LBE3276:
 10212               	.LBE3275:
 10213               	.LBB3277:
 10214               	.LBB3278:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 10215               		.loc 3 68 0
 10216 0062 4091 0000 		lds r20,ep_in_data
 10217               	.LVL602:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 10218               		.loc 3 69 0
 10219 0066 51E0      		ldi r21,lo8(1)
 10220 0068 4130      		cpi r20,lo8(1)
 10221 006a 01F4      		brne .L412
 10222 006c 50E0      		ldi r21,lo8(0)
 10223               	.L412:
 10224 006e 5093 0000 		sts ep_in_data,r21
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 10225               		.loc 3 72 0
 10226 0072 4423      		tst r20
 10227 0074 01F0      		breq .+2
 10228 0076 00C0      		rjmp .L413
 10229               	.LVL603:
 10230               	.LBB3279:
 10231               	.LBB3280:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10232               		.loc 6 168 0
 10233 0078 8093 0000 		sts endpoints+28,r24
 10234 007c 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10235               		.loc 6 169 0
 10236 0080 40E4      		ldi r20,lo8(64)
 10237 0082 50E0      		ldi r21,hi8(64)
 10238 0084 4093 0000 		sts endpoints+26,r20
 10239 0088 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10240               		.loc 6 174 0
 10241 008c E0E0      		ldi r30,lo8(endpoints+24)
 10242 008e F0E0      		ldi r31,hi8(endpoints+24)
 10243               	/* #APP */
 10244               	 ;  174 "usb/usb.h" 1
 10245 0090 02E2      		ldi r16, 34
 10246 0092 0693      		.dc.w 0x9306
 10247               		
 10248               	 ;  0 "" 2
 10249               	.LVL604:
 10250               	/* #NOAPP */
 10251               	.L414:
 10252               	.LBE3280:
 10253               	.LBE3279:
 10254               	.LBE3278:
 10255               	.LBE3277:
 10256               	.LBB3284:
 10257               	.LBB3285:
  72:usb/pipe.h    **** 	pipe->data->count -= 1;
 10258               		.loc 5 72 0
 10259 0094 3150      		subi r19,lo8(-(-1))
 10260 0096 3093 0000 		sts ep_in_pipe_data+4,r19
  73:usb/pipe.h    **** 	pipe->data->read_ptr += pipe->size;
 10261               		.loc 5 73 0
 10262 009a 805C      		subi r24,lo8(-(64))
 10263 009c 9F4F      		sbci r25,hi8(-(64))
 10264 009e 8093 0000 		sts ep_in_pipe_data,r24
 10265 00a2 9093 0000 		sts ep_in_pipe_data+1,r25
  75:usb/pipe.h    **** 	if (pipe->data->read_ptr == &pipe->buffer[pipe->slots*pipe->size])
 10266               		.loc 5 75 0
 10267 00a6 30E0      		ldi r19,hi8(ep_in_pipe_buffer+512)
 10268 00a8 8030      		cpi r24,lo8(ep_in_pipe_buffer+512)
 10269 00aa 9307      		cpc r25,r19
 10270 00ac 01F4      		brne .+2
 10271 00ae 00C0      		rjmp .L432
 10272               	.LVL605:
 10273               	.L436:
 10274 00b0 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 10275 00b2 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 10276               	.LVL606:
 10277               	.L410:
 10278               	.LBE3285:
 10279               	.LBE3284:
 10280               	.LBB3287:
 10281               	.LBB3288:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 10282               		.loc 4 70 0
 10283 00b4 2FBF      		out __SREG__,r18
 10284               		.loc 4 71 0
 10285               	.LBE3288:
 10286               	.LBE3287:
 10287               	.LBE3268:
 10288               	.LBE3267:
 10289               	.LBE3266:
 10290               	.LBE3265:
 10291               	.LBE3264:
  27:Framework.h   ****     USB.INTFLAGSBSET = USB_TRNIF_bm;
 10292               		.loc 2 27 0
 10293 00b6 22E0      		ldi r18,lo8(2)
 10294               	.LVL607:
 10295 00b8 A0EC      		ldi r26,lo8(1216)
 10296 00ba B4E0      		ldi r27,hi8(1216)
 10297 00bc 1D96      		adiw r26,13
 10298 00be 2C93      		st X,r18
 10299 00c0 1D97      		sbiw r26,13
 10300               	.LBB3310:
 10301               	.LBB3311:
 10302               	.LBB3312:
 10303               	.LBB3313:
 10304               	.LBB3314:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 10305               		.loc 5 57 0
 10306 00c2 36E0      		ldi r19,lo8(6)
 10307               	.L419:
 10308               	.LVL608:
 10309               	.LBE3314:
 10310               	.LBE3313:
 123:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 10311               		.loc 3 123 0
 10312 00c4 4FB7      		in r20,__SREG__
 10313               	.LVL609:
 10314               	.LBB3316:
 10315               	.LBB3317:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 10316               		.loc 4 50 0
 10317               	/* #APP */
 10318               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 10319 00c6 F894      		cli
 10320               	 ;  0 "" 2
 10321               	.LVL610:
 10322               	/* #NOAPP */
 10323               	.LBE3317:
 10324               	.LBE3316:
 124:usb/usb_pipe.h **** 		if (p->features&PIPE_ENABLE_FLUSH && p->data->flush){
 10325               		.loc 3 124 0
 10326 00c8 2091 0000 		lds r18,ep_in_data+1
 10327 00cc 2223      		tst r18
 10328 00ce 01F0      		breq .L437
 10329               	.L425:
 125:usb/usb_pipe.h **** 			r = false;
 10330               		.loc 3 125 0
 10331 00d0 20E0      		ldi r18,lo8(0)
 10332               	.L421:
 10333               	.LBB3318:
 10334               	.LBB3319:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 10335               		.loc 4 70 0
 10336 00d2 4FBF      		out __SREG__,r20
 10337               		.loc 4 71 0
 10338               	.LBE3319:
 10339               	.LBE3318:
 10340               	.LBE3312:
 10341               	.LBE3311:
 10342               	.LBE3310:
  28:Framework.h   ****     while (!usb_pipe_can_write(&ep_in)){
 10343               		.loc 2 28 0
 10344 00d4 2223      		tst r18
 10345 00d6 01F4      		brne .L420
  29:Framework.h   ****         if (timeout_or_sampling_no_longer_enabled){
 10346               		.loc 2 29 0
 10347 00d8 2091 0000 		lds r18,timeout_or_sampling_no_longer_enabled
 10348 00dc 2223      		tst r18
 10349 00de 01F0      		breq .L419
 10350               	.LVL611:
 10351               	.LBB3323:
 10352               	.LBB3324:
 10353               	.LBB3325:
  54:usb/usb_pipe.h **** 	ATOMIC_BLOCK(PIPE_ATOMIC){
 10354               		.loc 3 54 0
 10355 00e0 2FB7      		in r18,__SREG__
 10356               	.LVL612:
 10357               	.LBB3326:
 10358               	.LBB3327:
  50:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     cli();
 10359               		.loc 4 50 0
 10360               	/* #APP */
 10361               	 ;  50 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h" 1
 10362 00e2 F894      		cli
 10363               	 ;  0 "" 2
 10364               	.LVL613:
 10365               	/* #NOAPP */
 10366               	.LBE3327:
 10367               	.LBE3326:
 10368               	.LBB3328:
 10369               	.LBB3329:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 10370               		.loc 5 90 0
 10371 00e4 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 10372               		.loc 5 91 0
 10373 00e8 8093 0000 		sts ep_in_pipe_data+2,r24
 10374 00ec 9093 0000 		sts ep_in_pipe_data+2+1,r25
 10375 00f0 8093 0000 		sts ep_in_pipe_data,r24
 10376 00f4 9093 0000 		sts ep_in_pipe_data+1,r25
 10377               	.LVL614:
 10378               	.LBE3329:
 10379               	.LBE3328:
 10380               	.LBB3330:
 10381               	.LBB3331:
 158:usb/usb.h     **** 		LASR16(&e->STATUS, USB_EP_BUSNACK0_bm | USB_EP_BUSNACK1_bm);
 10382               		.loc 6 158 0
 10383               	/* #APP */
 10384               	 ;  158 "usb/usb.h" 1
 10385 00f8 06E0      		ldi r16, 6
 10386 00fa 0593      		.dc.w 0x9305
 10387               		
 10388               	 ;  0 "" 2
 159:usb/usb.h     **** 		LACR16(&e->STATUS, USB_EP_BANK_bm);
 10389               		.loc 6 159 0
 10390               	 ;  159 "usb/usb.h" 1
 10391 00fc 08E0      		ldi r16, 8
 10392 00fe 0693      		.dc.w 0x9306
 10393               		
 10394               	 ;  0 "" 2
 10395               	/* #NOAPP */
 10396               	.LBE3331:
 10397               	.LBE3330:
  57:usb/usb_pipe.h **** 		p->data->flush = 0;
 10398               		.loc 3 57 0
 10399 0100 1092 0000 		sts ep_in_data+1,__zero_reg__
  58:usb/usb_pipe.h **** 		p->data->packet_offset = 0;
 10400               		.loc 3 58 0
 10401 0104 1092 0000 		sts ep_in_data+2,__zero_reg__
 10402 0108 1092 0000 		sts ep_in_data+2+1,__zero_reg__
  59:usb/usb_pipe.h **** 		p->data->bank = 0;
 10403               		.loc 3 59 0
 10404 010c 1092 0000 		sts ep_in_data,__zero_reg__
 10405               	.LVL615:
 10406               	.LBB3332:
 10407               	.LBB3333:
  70:/usr/lib/gcc/avr/4.6.2/../../../avr/include/util/atomic.h ****     SREG = *__s;
 10408               		.loc 4 70 0
 10409 0110 2FBF      		out __SREG__,r18
 10410               		.loc 4 71 0
 10411               	.LVL616:
 10412               	.L420:
 10413               	.LBE3333:
 10414               	.LBE3332:
 10415               	.LBE3325:
 10416               	.LBE3324:
 10417               	.LBE3323:
 10418               	.LBE3263:
 10419               	.LBE3262:
 371:main.c        ****   char* text_message = parse_nmea();
 10420               		.loc 1 371 0
 10421 0112 0E94 0000 		call parse_nmea
 10422               	.LVL617:
 10423 0116 EC01      		movw r28,r24
 10424               	.LVL618:
 374:main.c        ****   send_message(phonenumber, text_message);
 10425               		.loc 1 374 0
 10426 0118 80E0      		ldi r24,lo8(.LC6)
 10427 011a 90E0      		ldi r25,hi8(.LC6)
 10428               	.LVL619:
 10429 011c BE01      		movw r22,r28
 10430 011e 0E94 0000 		call send_message
 375:main.c        ****   send_message(twilio_number, text_message);
 10431               		.loc 1 375 0
 10432 0122 8091 0000 		lds r24,twilio_number
 10433 0126 9091 0000 		lds r25,twilio_number+1
 10434 012a BE01      		movw r22,r28
 10435 012c 0E94 0000 		call send_message
 10436               	.L424:
 10437 0130 00C0      		rjmp .L424
 10438               	.LVL620:
 10439               	.L437:
 10440               	.LBB3337:
 10441               	.LBB3336:
 10442               	.LBB3334:
 10443               	.LBB3322:
 10444               	.LBB3321:
 10445               	.LBB3320:
 10446               	.LBB3315:
  57:usb/pipe.h    **** 	return (int8_t)pipe->slots - pipe->data->count - pipe->reserve_write;
 10447               		.loc 5 57 0
 10448 0132 2091 0000 		lds r18,ep_in_pipe_data+4
 10449 0136 532F      		mov r21,r19
 10450 0138 521B      		sub r21,r18
 10451               	.LBE3315:
 10452               	.LBE3320:
 127:usb/usb_pipe.h **** 			r = pipe_can_write(p->pipe) > 0;
 10453               		.loc 3 127 0
 10454 013a 21E0      		ldi r18,lo8(1)
 10455 013c 1516      		cp __zero_reg__,r21
 10456 013e 04F4      		brge .+2
 10457 0140 00C0      		rjmp .L421
 10458 0142 00C0      		rjmp .L425
 10459               	.LVL621:
 10460               	.L411:
 10461               	.LBE3321:
 10462               	.LBE3322:
 10463               	.LBE3334:
 10464               	.LBB3335:
 10465               	.LBB3309:
 10466               	.LBB3308:
 10467               	.LBB3307:
 10468               	.LBB3306:
  87:usb/usb_pipe.h **** 					if (p->data->flush == 1){
 10469               		.loc 3 87 0
 10470 0144 8091 0000 		lds r24,ep_in_data+1
 10471 0148 8130      		cpi r24,lo8(1)
 10472 014a 01F0      		breq .L438
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 10473               		.loc 3 91 0
 10474 014c 8230      		cpi r24,lo8(2)
 10475 014e 01F0      		breq .L433
 10476               	.L435:
 10477 0150 E0E0      		ldi r30,lo8(endpoints+24)
 10478 0152 F0E0      		ldi r31,hi8(endpoints+24)
 10479 0154 00C0      		rjmp .L436
 10480               	.L433:
 10481               	.LVL622:
 10482               	.LBB3289:
 10483               	.LBB3290:
 10484               	.LBB3291:
 228:usb/usb.h     **** 		return (e->STATUS & mask) == mask;
 10485               		.loc 6 228 0
 10486 0156 8091 0000 		lds r24,endpoints+24
 10487 015a 8670      		andi r24,lo8(6)
 10488               	.LBE3291:
 10489               	.LBE3290:
 10490               	.LBE3289:
  91:usb/usb_pipe.h **** 					}else if (p->data->flush == 2 && USB_ep_empty(p->ep)){
 10491               		.loc 3 91 0
 10492 015c 8630      		cpi r24,lo8(6)
 10493 015e 01F4      		brne .L435
  92:usb/usb_pipe.h **** 						p->data->flush = 0;
 10494               		.loc 3 92 0
 10495 0160 1092 0000 		sts ep_in_data+1,__zero_reg__
  93:usb/usb_pipe.h **** 						p->data->packet_offset = 0;
 10496               		.loc 3 93 0
 10497 0164 1092 0000 		sts ep_in_data+2,__zero_reg__
 10498 0168 1092 0000 		sts ep_in_data+2+1,__zero_reg__
 10499               	.LBB3292:
 10500               	.LBB3293:
  90:usb/pipe.h    **** 	pipe->data->count = 0;
 10501               		.loc 5 90 0
 10502 016c 1092 0000 		sts ep_in_pipe_data+4,__zero_reg__
 10503               		.loc 5 91 0
 10504 0170 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 10505 0172 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 10506 0174 8093 0000 		sts ep_in_pipe_data+2,r24
 10507 0178 9093 0000 		sts ep_in_pipe_data+2+1,r25
 10508 017c 8093 0000 		sts ep_in_pipe_data,r24
 10509 0180 9093 0000 		sts ep_in_pipe_data+1,r25
 10510               	.LVL623:
 10511 0184 E0E0      		ldi r30,lo8(endpoints+24)
 10512 0186 F0E0      		ldi r31,hi8(endpoints+24)
 10513 0188 00C0      		rjmp .L410
 10514               	.LVL624:
 10515               	.L438:
 10516               	.LBE3293:
 10517               	.LBE3292:
  88:usb/usb_pipe.h **** 						p->data->flush = 2;
 10518               		.loc 3 88 0
 10519 018a 82E0      		ldi r24,lo8(2)
 10520 018c 8093 0000 		sts ep_in_data+1,r24
 10521               	.LBB3294:
 10522               	.LBB3295:
  62:usb/pipe.h    **** 	return pipe->data->read_ptr;
 10523               		.loc 5 62 0
 10524 0190 6091 0000 		lds r22,ep_in_pipe_data
 10525 0194 3091 0000 		lds r19,ep_in_pipe_data+1
 10526               	.LBE3295:
 10527               	.LBE3294:
  90:usb/usb_pipe.h **** 						_usb_pipe_ep_start(p, pipe_read_ptr(p->pipe), p->data->packet_offset);
 10528               		.loc 3 90 0
 10529 0198 4091 0000 		lds r20,ep_in_data+2
 10530 019c 5091 0000 		lds r21,ep_in_data+2+1
 10531               	.LVL625:
 10532               	.LBB3296:
 10533               	.LBB3297:
  68:usb/usb_pipe.h **** 		bank = p->data->bank;
 10534               		.loc 3 68 0
 10535 01a0 8091 0000 		lds r24,ep_in_data
 10536               	.LVL626:
  69:usb/usb_pipe.h **** 		p->data->bank ^= 1;
 10537               		.loc 3 69 0
 10538 01a4 91E0      		ldi r25,lo8(1)
 10539 01a6 8130      		cpi r24,lo8(1)
 10540 01a8 01F4      		brne .L417
 10541 01aa 90E0      		ldi r25,lo8(0)
 10542               	.L417:
 10543 01ac 9093 0000 		sts ep_in_data,r25
  72:usb/usb_pipe.h **** 	if (bank == 0){ // Helps the optimzer constant-fold, since the multiply is expensive
 10544               		.loc 3 72 0
 10545 01b0 8823      		tst r24
 10546 01b2 01F4      		brne .L418
 10547               	.LVL627:
 10548               	.LBB3298:
 10549               	.LBB3299:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10550               		.loc 6 168 0
 10551 01b4 862F      		mov r24,r22
 10552 01b6 932F      		mov r25,r19
 10553 01b8 8093 0000 		sts endpoints+28,r24
 10554 01bc 9093 0000 		sts endpoints+28+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10555               		.loc 6 169 0
 10556 01c0 4093 0000 		sts endpoints+26,r20
 10557 01c4 5093 0000 		sts endpoints+26+1,r21
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10558               		.loc 6 174 0
 10559 01c8 E0E0      		ldi r30,lo8(endpoints+24)
 10560 01ca F0E0      		ldi r31,hi8(endpoints+24)
 10561               	.LVL628:
 10562               	/* #APP */
 10563               	 ;  174 "usb/usb.h" 1
 10564 01cc 02E2      		ldi r16, 34
 10565 01ce 0693      		.dc.w 0x9306
 10566               		
 10567               	 ;  0 "" 2
 10568               	/* #NOAPP */
 10569 01d0 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 10570 01d2 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 10571 01d4 00C0      		rjmp .L410
 10572               	.LVL629:
 10573               	.L432:
 10574               	.LBE3299:
 10575               	.LBE3298:
 10576               	.LBE3297:
 10577               	.LBE3296:
 10578               	.LBB3303:
 10579               	.LBB3286:
  76:usb/pipe.h    **** 		pipe->data->read_ptr = &pipe->buffer[0];
 10580               		.loc 5 76 0
 10581 01d6 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 10582 01d8 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 10583 01da 8093 0000 		sts ep_in_pipe_data,r24
 10584 01de 9093 0000 		sts ep_in_pipe_data+1,r25
 10585 01e2 00C0      		rjmp .L410
 10586               	.LVL630:
 10587               	.L413:
 10588               	.LBE3286:
 10589               	.LBE3303:
 10590               	.LBB3304:
 10591               	.LBB3283:
 10592               	.LBB3281:
 10593               	.LBB3282:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10594               		.loc 6 168 0
 10595 01e4 8093 0000 		sts endpoints+20,r24
 10596 01e8 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10597               		.loc 6 169 0
 10598 01ec 40E4      		ldi r20,lo8(64)
 10599 01ee 50E0      		ldi r21,hi8(64)
 10600 01f0 4093 0000 		sts endpoints+18,r20
 10601 01f4 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 10602               		.loc 6 176 0
 10603 01f8 E0E0      		ldi r30,lo8(endpoints+24)
 10604 01fa F0E0      		ldi r31,hi8(endpoints+24)
 10605               	/* #APP */
 10606               	 ;  176 "usb/usb.h" 1
 10607 01fc 04E1      		ldi r16, 20
 10608 01fe 0693      		.dc.w 0x9306
 10609               		
 10610               	 ;  0 "" 2
 10611               	/* #NOAPP */
 10612 0200 00C0      		rjmp .L414
 10613               	.LVL631:
 10614               	.L418:
 10615               	.LBE3282:
 10616               	.LBE3281:
 10617               	.LBE3283:
 10618               	.LBE3304:
 10619               	.LBB3305:
 10620               	.LBB3302:
 10621               	.LBB3300:
 10622               	.LBB3301:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10623               		.loc 6 168 0
 10624 0202 862F      		mov r24,r22
 10625               	.LVL632:
 10626 0204 932F      		mov r25,r19
 10627 0206 8093 0000 		sts endpoints+20,r24
 10628 020a 9093 0000 		sts endpoints+20+1,r25
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10629               		.loc 6 169 0
 10630 020e 4093 0000 		sts endpoints+18,r20
 10631 0212 5093 0000 		sts endpoints+18+1,r21
 176:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK1_bm | USB_EP_TRNCOMPL1_bm);
 10632               		.loc 6 176 0
 10633 0216 E0E0      		ldi r30,lo8(endpoints+24)
 10634 0218 F0E0      		ldi r31,hi8(endpoints+24)
 10635               	/* #APP */
 10636               	 ;  176 "usb/usb.h" 1
 10637 021a 04E1      		ldi r16, 20
 10638 021c 0693      		.dc.w 0x9306
 10639               		
 10640               	 ;  0 "" 2
 10641               	/* #NOAPP */
 10642 021e 80E0      		ldi r24,lo8(ep_in_pipe_buffer)
 10643 0220 90E0      		ldi r25,hi8(ep_in_pipe_buffer)
 10644 0222 00C0      		rjmp .L410
 10645               	.LBE3301:
 10646               	.LBE3300:
 10647               	.LBE3302:
 10648               	.LBE3305:
 10649               	.LBE3306:
 10650               	.LBE3307:
 10651               	.LBE3308:
 10652               	.LBE3309:
 10653               	.LBE3335:
 10654               	.LBE3336:
 10655               	.LBE3337:
 10656               		.cfi_endproc
 10657               	.LFE74:
 10659               		.text
 10660               	.global	EVENT_USB_Device_ControlRequest
 10662               	EVENT_USB_Device_ControlRequest:
 10663               	.LFB75:
 399:main.c        **** bool EVENT_USB_Device_ControlRequest(USB_Request_Header_t* req){
 10664               		.loc 1 399 0
 10665               		.cfi_startproc
 10666               	.LVL633:
 10667 2652 0F93      		push r16
 10668               	.LCFI112:
 10669               		.cfi_def_cfa_offset 3
 10670               		.cfi_offset 16, -2
 10671 2654 1F93      		push r17
 10672               	.LCFI113:
 10673               		.cfi_def_cfa_offset 4
 10674               		.cfi_offset 17, -3
 10675 2656 CF93      		push r28
 10676               	.LCFI114:
 10677               		.cfi_def_cfa_offset 5
 10678               		.cfi_offset 28, -4
 10679 2658 DF93      		push r29
 10680               	.LCFI115:
 10681               		.cfi_def_cfa_offset 6
 10682               		.cfi_offset 29, -5
 10683               	/* prologue: function */
 10684               	/* frame size = 0 */
 10685               	/* stack size = 4 */
 10686               	.L__stack_usage = 4
 10687 265a 9C01      		movw r18,r24
 10688               	.LVL634:
 459:main.c        **** 	return false;
 10689               		.loc 1 459 0
 10690 265c A0E0      		ldi r26,lo8(ep0_buf_in)
 10691 265e B0E0      		ldi r27,hi8(ep0_buf_in)
 399:main.c        **** bool EVENT_USB_Device_ControlRequest(USB_Request_Header_t* req){
 10692               		.loc 1 399 0
 10693 2660 8D01      		movw r16,r26
 10694 2662 80E0      		ldi r24,lo8(ep0_buf_in+64)
 10695 2664 90E0      		ldi r25,hi8(ep0_buf_in+64)
 10696               	.LVL635:
 10697 2666 FD01      		movw r30,r26
 10698               	.LVL636:
 10699               	.L440:
 10700               	.LBB3338:
 401:main.c        **** 	for (uint8_t i = 0; i < 64; i++) ep0_buf_in[i] = 0;
 10701               		.loc 1 401 0 discriminator 2
 10702 2668 1192      		st Z+,__zero_reg__
 10703 266a 40E0      		ldi r20,hi8(ep0_buf_in+64)
 10704 266c E030      		cpi r30,lo8(ep0_buf_in+64)
 10705 266e F407      		cpc r31,r20
 10706 2670 01F4      		brne .L440
 10707               	.LBE3338:
 402:main.c        **** 	usb_cmd = 0;
 10708               		.loc 1 402 0
 10709 2672 1092 0000 		sts usb_cmd,__zero_reg__
 403:main.c        **** 	if ((req->bmRequestType & CONTROL_REQTYPE_TYPE) == REQTYPE_VENDOR){
 10710               		.loc 1 403 0
 10711 2676 F901      		movw r30,r18
 10712 2678 C081      		ld r28,Z
 10713 267a D0E0      		ldi r29,lo8(0)
 10714 267c C076      		andi r28,lo8(96)
 10715 267e D070      		andi r29,hi8(96)
 10716 2680 C034      		cpi r28,64
 10717 2682 D105      		cpc r29,__zero_reg__
 10718 2684 01F0      		breq .L464
 10719               	.L458:
 459:main.c        **** 	return false;
 10720               		.loc 1 459 0
 10721 2686 80E0      		ldi r24,lo8(0)
 10722               	.LVL637:
 10723               	.L441:
 10724               	/* epilogue start */
 460:main.c        **** }
 10725               		.loc 1 460 0
 10726 2688 DF91      		pop r29
 10727 268a CF91      		pop r28
 10728 268c 1F91      		pop r17
 10729 268e 0F91      		pop r16
 10730 2690 0895      		ret
 10731               	.LVL638:
 10732               	.L464:
 404:main.c        **** 		switch(req->bRequest){
 10733               		.loc 1 404 0
 10734 2692 4181      		ldd r20,Z+1
 10735 2694 4631      		cpi r20,lo8(22)
 10736 2696 01F4      		brne .+2
 10737 2698 00C0      		rjmp .L446
 10738 269a 4731      		cpi r20,lo8(23)
 10739 269c 00F0      		brlo .L465
 10740 269e 4B3B      		cpi r20,lo8(-69)
 10741 26a0 01F4      		brne .+2
 10742 26a2 00C0      		rjmp .L448
 10743 26a4 4C3B      		cpi r20,lo8(-68)
 10744 26a6 00F0      		brlo .+2
 10745 26a8 00C0      		rjmp .L453
 10746 26aa 4731      		cpi r20,lo8(23)
 10747 26ac 01F4      		brne .L458
 10748               	.LBB3339:
 435:main.c        **** 				addr = (uint16_t *) req->wIndex;
 10749               		.loc 1 435 0
 10750 26ae 0480      		ldd __tmp_reg__,Z+4
 10751 26b0 F581      		ldd r31,Z+5
 10752 26b2 E02D      		mov r30,__tmp_reg__
 10753               	.LVL639:
 436:main.c        **** 				ep0_buf_in[0] = *addr & 0xFF;
 10754               		.loc 1 436 0
 10755 26b4 8081      		ld r24,Z
 10756 26b6 8093 0000 		sts ep0_buf_in,r24
 437:main.c        **** 				ep0_buf_in[1] = *addr >> 8;
 10757               		.loc 1 437 0
 10758 26ba 8181      		ldd r24,Z+1
 10759 26bc 8093 0000 		sts ep0_buf_in+1,r24
 10760               	.LVL640:
 10761               	.LBB3340:
 10762               	.LBB3341:
 10763               	.LBB3342:
 10764               	.LBB3343:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10765               		.loc 6 168 0
 10766 26c0 0093 0000 		sts endpoints+12,r16
 10767 26c4 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10768               		.loc 6 169 0
 10769 26c8 82E0      		ldi r24,lo8(2)
 10770 26ca 90E0      		ldi r25,hi8(2)
 10771 26cc 8093 0000 		sts endpoints+10,r24
 10772 26d0 9093 0000 		sts endpoints+10+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10773               		.loc 6 174 0
 10774 26d4 E0E0      		ldi r30,lo8(endpoints+8)
 10775 26d6 F0E0      		ldi r31,hi8(endpoints+8)
 10776               	/* #APP */
 10777               	 ;  174 "usb/usb.h" 1
 10778 26d8 02E2      		ldi r16, 34
 10779 26da 0693      		.dc.w 0x9306
 10780               		
 10781               	 ;  0 "" 2
 10782               	/* #NOAPP */
 10783               	.LBE3343:
 10784               	.LBE3342:
 10785               	.LBE3341:
 10786               	.LBE3340:
 10787               	.LBE3339:
 439:main.c        **** 				return true;
 10788               		.loc 1 439 0
 10789 26dc 81E0      		ldi r24,lo8(1)
 10790 26de 00C0      		rjmp .L441
 10791               	.LVL641:
 10792               	.L465:
 404:main.c        **** 		switch(req->bRequest){
 10793               		.loc 1 404 0
 10794 26e0 4230      		cpi r20,lo8(2)
 10795 26e2 01F4      		brne .+2
 10796 26e4 00C0      		rjmp .L443
 10797 26e6 4330      		cpi r20,lo8(3)
 10798 26e8 00F4      		brsh .L452
 10799 26ea 4423      		tst r20
 10800 26ec 01F4      		brne .L458
 406:main.c        **** 				if (req->wIndex == 0){
 10801               		.loc 1 406 0
 10802 26ee 8481      		ldd r24,Z+4
 10803 26f0 9581      		ldd r25,Z+5
 10804 26f2 0097      		sbiw r24,0
 10805 26f4 01F4      		brne .+2
 10806 26f6 00C0      		rjmp .L466
 408:main.c        **** 				}else if (req->wIndex == 1){
 10807               		.loc 1 408 0
 10808 26f8 8130      		cpi r24,1
 10809 26fa 9105      		cpc r25,__zero_reg__
 10810 26fc 01F4      		brne .+2
 10811 26fe 00C0      		rjmp .L467
 411:main.c        **** 				return true;
 10812               		.loc 1 411 0
 10813 2700 81E0      		ldi r24,lo8(1)
 10814 2702 00C0      		rjmp .L441
 10815               	.L452:
 404:main.c        **** 		switch(req->bRequest){
 10816               		.loc 1 404 0
 10817 2704 4830      		cpi r20,lo8(8)
 10818 2706 01F0      		breq .L444
 10819 2708 4930      		cpi r20,lo8(9)
 10820 270a 01F0      		breq .+2
 10821 270c 00C0      		rjmp .L458
 426:main.c        **** 				ep0_buf_in[0] = * ((uint8_t *) req->wIndex);
 10822               		.loc 1 426 0
 10823 270e 0480      		ldd __tmp_reg__,Z+4
 10824 2710 F581      		ldd r31,Z+5
 10825 2712 E02D      		mov r30,__tmp_reg__
 10826 2714 8081      		ld r24,Z
 10827 2716 8093 0000 		sts ep0_buf_in,r24
 10828               	.LVL642:
 10829               	.LBB3344:
 10830               	.LBB3345:
 10831               	.LBB3346:
 10832               	.LBB3347:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10833               		.loc 6 168 0
 10834 271a 0093 0000 		sts endpoints+12,r16
 10835 271e 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10836               		.loc 6 169 0
 10837 2722 81E0      		ldi r24,lo8(1)
 10838 2724 90E0      		ldi r25,hi8(1)
 10839 2726 8093 0000 		sts endpoints+10,r24
 10840 272a 9093 0000 		sts endpoints+10+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10841               		.loc 6 174 0
 10842 272e E0E0      		ldi r30,lo8(endpoints+8)
 10843 2730 F0E0      		ldi r31,hi8(endpoints+8)
 10844               	.LVL643:
 10845               	/* #APP */
 10846               	 ;  174 "usb/usb.h" 1
 10847 2732 02E2      		ldi r16, 34
 10848 2734 0693      		.dc.w 0x9306
 10849               		
 10850               	 ;  0 "" 2
 10851               	/* #NOAPP */
 10852               	.LBE3347:
 10853               	.LBE3346:
 10854               	.LBE3345:
 10855               	.LBE3344:
 428:main.c        **** 				return true;
 10856               		.loc 1 428 0
 10857 2736 81E0      		ldi r24,lo8(1)
 10858 2738 00C0      		rjmp .L441
 10859               	.LVL644:
 10860               	.L453:
 404:main.c        **** 		switch(req->bRequest){
 10861               		.loc 1 404 0
 10862 273a 403E      		cpi r20,lo8(-32)
 10863 273c 01F0      		breq .L449
 10864 273e 413E      		cpi r20,lo8(-31)
 10865 2740 01F0      		breq .+2
 10866 2742 00C0      		rjmp .L458
 448:main.c        **** 				usb_cmd = req->bRequest;
 10867               		.loc 1 448 0
 10868 2744 4093 0000 		sts usb_cmd,r20
 449:main.c        **** 				cmd_data = req->wIndex;
 10869               		.loc 1 449 0
 10870 2748 8481      		ldd r24,Z+4
 10871 274a 8093 0000 		sts cmd_data,r24
 10872               	.LVL645:
 10873               	.L463:
 10874               	.LBB3348:
 10875               	.LBB3349:
 10876               	.LBB3350:
 10877               	.LBB3351:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10878               		.loc 6 168 0
 10879 274e 0093 0000 		sts endpoints+12,r16
 10880 2752 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10881               		.loc 6 169 0
 10882 2756 1092 0000 		sts endpoints+10,__zero_reg__
 10883 275a 1092 0000 		sts endpoints+10+1,__zero_reg__
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10884               		.loc 6 174 0
 10885 275e E0E0      		ldi r30,lo8(endpoints+8)
 10886 2760 F0E0      		ldi r31,hi8(endpoints+8)
 10887               	.LVL646:
 10888               	/* #APP */
 10889               	 ;  174 "usb/usb.h" 1
 10890 2762 02E2      		ldi r16, 34
 10891 2764 0693      		.dc.w 0x9306
 10892               		
 10893               	 ;  0 "" 2
 10894               	/* #NOAPP */
 10895               	.LBE3351:
 10896               	.LBE3350:
 10897               	.LBE3349:
 10898               	.LBE3348:
 432:main.c        **** 				return true;
 10899               		.loc 1 432 0
 10900 2766 81E0      		ldi r24,lo8(1)
 10901               	/* epilogue start */
 460:main.c        **** }
 10902               		.loc 1 460 0
 10903 2768 DF91      		pop r29
 10904 276a CF91      		pop r28
 10905 276c 1F91      		pop r17
 10906 276e 0F91      		pop r16
 10907 2770 0895      		ret
 10908               	.LVL647:
 10909               	.L444:
 422:main.c        **** 				* ((uint8_t *) req->wIndex) = req->wValue;
 10910               		.loc 1 422 0
 10911 2772 D901      		movw r26,r18
 10912 2774 0480      		ldd __tmp_reg__,Z+4
 10913 2776 F581      		ldd r31,Z+5
 10914 2778 E02D      		mov r30,__tmp_reg__
 10915 277a 1296      		adiw r26,2
 10916 277c 8C91      		ld r24,X
 10917 277e 1297      		sbiw r26,2
 10918 2780 8083      		st Z,r24
 10919               	.LVL648:
 10920 2782 00C0      		rjmp .L463
 10921               	.LVL649:
 10922               	.L449:
 442:main.c        **** 				eeprom_read_block(ep0_buf_in, (void*)(req->wIndex*64), 64);
 10923               		.loc 1 442 0
 10924 2784 F901      		movw r30,r18
 10925 2786 6481      		ldd r22,Z+4
 10926 2788 7581      		ldd r23,Z+5
 10927 278a 0024      		clr __tmp_reg__
 10928 278c 7695      		lsr r23
 10929 278e 6795      		ror r22
 10930 2790 0794      		ror __tmp_reg__
 10931 2792 7695      		lsr r23
 10932 2794 6795      		ror r22
 10933 2796 0794      		ror __tmp_reg__
 10934 2798 762F      		mov r23,r22
 10935 279a 602D      		mov r22,__tmp_reg__
 10936 279c 80E0      		ldi r24,lo8(ep0_buf_in)
 10937 279e 90E0      		ldi r25,hi8(ep0_buf_in)
 10938 27a0 40E4      		ldi r20,lo8(64)
 10939 27a2 50E0      		ldi r21,hi8(64)
 10940 27a4 0E94 0000 		call __eerd_block_x32a4u
 10941               	.LVL650:
 10942               	.LBB3352:
 10943               	.LBB3353:
 10944               	.LBB3354:
 10945               	.LBB3355:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10946               		.loc 6 168 0
 10947 27a8 0093 0000 		sts endpoints+12,r16
 10948 27ac 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10949               		.loc 6 169 0
 10950 27b0 C093 0000 		sts endpoints+10,r28
 10951 27b4 D093 0000 		sts endpoints+10+1,r29
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10952               		.loc 6 174 0
 10953 27b8 E0E0      		ldi r30,lo8(endpoints+8)
 10954 27ba F0E0      		ldi r31,hi8(endpoints+8)
 10955               	.LVL651:
 10956               	/* #APP */
 10957               	 ;  174 "usb/usb.h" 1
 10958 27bc 02E2      		ldi r16, 34
 10959 27be 0693      		.dc.w 0x9306
 10960               		
 10961               	 ;  0 "" 2
 10962               	/* #NOAPP */
 10963               	.LBE3355:
 10964               	.LBE3354:
 10965               	.LBE3353:
 10966               	.LBE3352:
 444:main.c        **** 				return true;
 10967               		.loc 1 444 0
 10968 27c0 81E0      		ldi r24,lo8(1)
 10969 27c2 00C0      		rjmp .L441
 10970               	.LVL652:
 10971               	.L448:
 10972               	.LBB3356:
 10973               	.LBB3357:
 330:usb/usb.h     **** 		USB_ep0_enableOut();
 331:usb/usb.h     **** 	}
 332:usb/usb.h     **** }
 333:usb/usb.h     **** 
 334:usb/usb.h     **** static inline void USB_enter_bootloader(void){
 335:usb/usb.h     **** 	cli();
 10974               		.loc 6 335 0
 10975               	/* #APP */
 10976               	 ;  335 "usb/usb.h" 1
 10977 27c4 F894      		cli
 10978               	 ;  0 "" 2
 10979               	.LVL653:
 10980               	/* #NOAPP */
 10981               	.LBB3358:
 10982               	.LBB3359:
 10983               	.LBB3360:
 10984               	.LBB3361:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 10985               		.loc 6 168 0
 10986 27c6 0093 0000 		sts endpoints+12,r16
 10987 27ca 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 10988               		.loc 6 169 0
 10989 27ce 1092 0000 		sts endpoints+10,__zero_reg__
 10990 27d2 1092 0000 		sts endpoints+10+1,__zero_reg__
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 10991               		.loc 6 174 0
 10992 27d6 E0E0      		ldi r30,lo8(endpoints+8)
 10993 27d8 F0E0      		ldi r31,hi8(endpoints+8)
 10994               	.LVL654:
 10995               	/* #APP */
 10996               	 ;  174 "usb/usb.h" 1
 10997 27da 02E2      		ldi r16, 34
 10998 27dc 0693      		.dc.w 0x9306
 10999               		
 11000               	 ;  0 "" 2
 11001               	/* #NOAPP */
 11002               	.LBE3361:
 11003               	.LBE3360:
 11004               	.LBE3359:
 11005               	.LBE3358:
 11006               	.LBB3362:
 11007               	.LBB3363:
 280:usb/usb.h     **** 	LACR16(&endpoints[0].out.STATUS, USB_EP_SETUP_bm | USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm | USB_
 11008               		.loc 6 280 0
 11009 27de 3897      		sbiw r30,8
 11010               	.LVL655:
 11011               	/* #APP */
 11012               	 ;  280 "usb/usb.h" 1
 11013 27e0 02E7      		ldi r16, 114
 11014 27e2 0693      		.dc.w 0x9306
 11015               		
 11016               	 ;  0 "" 2
 11017               	.LVL656:
 11018               	/* #NOAPP */
 11019               	.L456:
 11020               	.LBE3363:
 11021               	.LBE3362:
 11022               	.LBB3364:
 11023               	.LBB3365:
 11024               	.LBB3366:
 11025               	.LBB3367:
 202:usb/usb.h     **** 		return e->STATUS & USB_EP_TRNCOMPL0_bm;
 11026               		.loc 6 202 0
 11027 27e4 8091 0000 		lds r24,endpoints
 11028               	.LBE3367:
 11029               	.LBE3366:
 253:usb/usb.h     **** 	while (!USB_ep_done(ep)){};
 11030               		.loc 6 253 0
 11031 27e8 85FF      		sbrs r24,5
 11032 27ea 00C0      		rjmp .L456
 11033               	.LVL657:
 11034               	.LBE3365:
 11035               	.LBE3364:
 11036               	.LBB3368:
 11037               	.LBB3369:
 11038               		.loc 7 164 0
 11039 27ec 8FEF      		 ldi r24,lo8(63999)
 11040 27ee 99EF      	    ldi r25,hi8(63999)
 11041 27f0 A0E0      	    ldi r26,hlo8(63999)
 11042 27f2 8150      	    1:subi r24,1
 11043 27f4 9040      	    sbci r25,0
 11044 27f6 A040      	    sbci r26,0
 11045 27f8 01F4      	    brne 1b
 11046 27fa 00C0      		rjmp .
 11047 27fc 0000      		nop
 11048               	.LBE3369:
 11049               	.LBE3368:
 11050               	.LBB3370:
 11051               	.LBB3371:
 296:usb/usb.h     **** 	USB.CTRLB &= ~USB_ATTACH_bm;
 11052               		.loc 6 296 0
 11053 27fe 8091 C104 		lds r24,1217
 11054 2802 8E7F      		andi r24,lo8(-2)
 11055 2804 E0EC      		ldi r30,lo8(1216)
 11056 2806 F4E0      		ldi r31,hi8(1216)
 11057               	.LVL658:
 11058 2808 8183      		std Z+1,r24
 11059               	.LVL659:
 11060               	.LBE3371:
 11061               	.LBE3370:
 11062               	.LBB3372:
 11063               	.LBB3373:
 11064               		.loc 7 164 0
 11065 280a 8FEF      		 ldi r24,lo8(639999)
 11066 280c 93EC      	    ldi r25,hi8(639999)
 11067 280e A9E0      	    ldi r26,hlo8(639999)
 11068 2810 8150      	    1:subi r24,1
 11069 2812 9040      	    sbci r25,0
 11070 2814 A040      	    sbci r26,0
 11071 2816 01F4      	    brne 1b
 11072 2818 00C0      		rjmp .
 11073 281a 0000      		nop
 11074               	.LVL660:
 11075               	.LBE3373:
 11076               	.LBE3372:
 336:usb/usb.h     **** 	USB_ep0_send(0);
 337:usb/usb.h     **** 	USB_ep0_enableOut();
 338:usb/usb.h     **** 	USB_ep_wait(0x00); // Wait for the status stage to complete
 339:usb/usb.h     **** 	_delay_ms(10);
 340:usb/usb.h     **** 	USB_Detach();
 341:usb/usb.h     **** 	_delay_ms(100);
 342:usb/usb.h     **** 	void (*enter_bootloader)(void) = (void*) 0x47fc /*0x8ff8/2*/;
 343:usb/usb.h     **** 	enter_bootloader();
 11077               		.loc 6 343 0
 11078 281c ECEF      		ldi r30,lo8(18428)
 11079 281e F7E4      		ldi r31,hi8(18428)
 11080 2820 0995      		icall
 11081               	.LVL661:
 11082               	.LBE3357:
 11083               	.LBE3356:
 456:main.c        **** 				return true;
 11084               		.loc 1 456 0
 11085 2822 81E0      		ldi r24,lo8(1)
 11086 2824 00C0      		rjmp .L441
 11087               	.LVL662:
 11088               	.L443:
 11089               	.LBB3374:
 414:main.c        **** 					int l = strlen(message);
 11090               		.loc 1 414 0
 11091 2826 3091 0000 		lds r19,message
 11092 282a 2091 0000 		lds r18,message+1
 11093               	.LVL663:
 11094 282e C32F      		mov r28,r19
 11095 2830 D22F      		mov r29,r18
 11096 2832 FE01      		movw r30,r28
 11097               	.LVL664:
 11098 2834 0190      		ld __tmp_reg__,Z+
 11099 2836 0020      		tst __tmp_reg__
 11100 2838 01F4      		brne .-6
 11101 283a 3197      		sbiw r30,1
 11102 283c E31B      		sub r30,r19
 11103               	.LVL665:
 11104               	.L455:
 11105               	.LBB3375:
 416:main.c        **** 						ep0_buf_in[i] = message[i];
 11106               		.loc 1 416 0 discriminator 2
 11107 283e 2991      		ld r18,Y+
 11108 2840 2D93      		st X+,r18
 415:main.c        **** 					for (uint8_t i=0; i<64; i++) {
 11109               		.loc 1 415 0 discriminator 2
 11110 2842 8A17      		cp r24,r26
 11111 2844 9B07      		cpc r25,r27
 11112 2846 01F4      		brne .L455
 11113               	.LVL666:
 11114               	.LBE3375:
 11115               	.LBB3376:
 11116               	.LBB3377:
 247:usb/usb.h     **** 	USB_ep_in_start(0x80, ep0_buf_in, size);
 11117               		.loc 6 247 0
 11118 2848 8E2F      		mov r24,r30
 11119 284a 90E0      		ldi r25,lo8(0)
 11120               	.LVL667:
 11121               	.LBB3378:
 11122               	.LBB3379:
 11123               	.LBB3380:
 168:usb/usb.h     **** 	b->DATAPTR = (unsigned) addr;
 11124               		.loc 6 168 0
 11125 284c 0093 0000 		sts endpoints+12,r16
 11126 2850 1093 0000 		sts endpoints+12+1,r17
 169:usb/usb.h     **** 	if (ep & USB_EP_IN) b->CNT = size;
 11127               		.loc 6 169 0
 11128 2854 8093 0000 		sts endpoints+10,r24
 11129 2858 9093 0000 		sts endpoints+10+1,r25
 174:usb/usb.h     **** 		LACR16(&(e->STATUS), USB_EP_BUSNACK0_bm | USB_EP_TRNCOMPL0_bm);
 11130               		.loc 6 174 0
 11131 285c E0E0      		ldi r30,lo8(endpoints+8)
 11132 285e F0E0      		ldi r31,hi8(endpoints+8)
 11133               	.LVL668:
 11134               	/* #APP */
 11135               	 ;  174 "usb/usb.h" 1
 11136 2860 02E2      		ldi r16, 34
 11137 2862 0693      		.dc.w 0x9306
 11138               		
 11139               	 ;  0 "" 2
 11140               	/* #NOAPP */
 11141               	.LBE3380:
 11142               	.LBE3379:
 11143               	.LBE3378:
 11144               	.LBE3377:
 11145               	.LBE3376:
 419:main.c        **** 					return true;
 11146               		.loc 1 419 0
 11147 2864 81E0      		ldi r24,lo8(1)
 11148               	.LVL669:
 11149 2866 00C0      		rjmp .L441
 11150               	.LVL670:
 11151               	.L446:
 11152               	.LBE3374:
 430:main.c        **** 				* ((uint16_t *) req->wIndex) = req->wValue;
 11153               		.loc 1 430 0
 11154 2868 F901      		movw r30,r18
 11155 286a 8281      		ldd r24,Z+2
 11156 286c 9381      		ldd r25,Z+3
 11157 286e 0480      		ldd __tmp_reg__,Z+4
 11158 2870 F581      		ldd r31,Z+5
 11159 2872 E02D      		mov r30,__tmp_reg__
 11160 2874 8083      		st Z,r24
 11161 2876 9183      		std Z+1,r25
 11162 2878 00C0      		rjmp .L463
 11163               	.L467:
 409:main.c        **** 					USB_ep0_send_progmem((uint8_t*)fwversion, sizeof(fwversion));
 11164               		.loc 1 409 0
 11165 287a 80E0      		ldi r24,lo8(fwversion)
 11166 287c 90E0      		ldi r25,hi8(fwversion)
 11167 287e 6BE0      		ldi r22,lo8(11)
 11168 2880 70E0      		ldi r23,hi8(11)
 11169 2882 0E94 0000 		call USB_ep0_send_progmem
 11170               	.LVL671:
 411:main.c        **** 				return true;
 11171               		.loc 1 411 0
 11172 2886 81E0      		ldi r24,lo8(1)
 11173 2888 00C0      		rjmp .L441
 11174               	.LVL672:
 11175               	.L466:
 407:main.c        **** 					USB_ep0_send_progmem((uint8_t*)hwversion, sizeof(hwversion));
 11176               		.loc 1 407 0
 11177 288a 80E0      		ldi r24,lo8(hwversion)
 11178 288c 90E0      		ldi r25,hi8(hwversion)
 11179 288e 6BE0      		ldi r22,lo8(11)
 11180 2890 70E0      		ldi r23,hi8(11)
 11181 2892 0E94 0000 		call USB_ep0_send_progmem
 11182               	.LVL673:
 411:main.c        **** 				return true;
 11183               		.loc 1 411 0
 11184 2896 81E0      		ldi r24,lo8(1)
 11185 2898 00C0      		rjmp .L441
 11186               		.cfi_endproc
 11187               	.LFE75:
 11189               	.global	EVENT_USB_Device_ControlOUT
 11191               	EVENT_USB_Device_ControlOUT:
 11192               	.LFB76:
 462:main.c        **** void EVENT_USB_Device_ControlOUT(uint8_t* buf, uint8_t count){
 11193               		.loc 1 462 0
 11194               		.cfi_startproc
 11195               	.LVL674:
 11196               	/* prologue: function */
 11197               	/* frame size = 0 */
 11198               	/* stack size = 0 */
 11199               	.L__stack_usage = 0
 11200 289a 462F      		mov r20,r22
 463:main.c        **** 	switch (usb_cmd){
 11201               		.loc 1 463 0
 11202 289c 2091 0000 		lds r18,usb_cmd
 11203 28a0 213E      		cpi r18,lo8(-31)
 11204 28a2 01F0      		breq .L471
 11205               	.LVL675:
 11206 28a4 0895      		ret
 11207               	.L471:
 11208               		.loc 1 465 0
 11209 28a6 2091 0000 		lds r18,cmd_data
 11210 28aa 30E0      		ldi r19,lo8(0)
 11211 28ac 0024      		clr __tmp_reg__
 11212 28ae 3695      		lsr r19
 11213 28b0 2795      		ror r18
 11214 28b2 0794      		ror __tmp_reg__
 11215 28b4 3695      		lsr r19
 11216 28b6 2795      		ror r18
 11217 28b8 0794      		ror __tmp_reg__
 11218 28ba 322F      		mov r19,r18
 11219 28bc 202D      		mov r18,__tmp_reg__
 11220 28be B901      		movw r22,r18
 11221 28c0 50E0      		ldi r21,lo8(0)
 11222 28c2 0E94 0000 		call __eeupd_block_x32a4u
 11223               	.LVL676:
 11224 28c6 0895      		ret
 11225               		.cfi_endproc
 11226               	.LFE76:
 11228               	.global	cmd_data
 11229               	.global	cmd_data
 11230               		.section .bss
 11233               	cmd_data:
 11234 0000 00        		.skip 1,0
 11235               	.global	usb_cmd
 11236               	.global	usb_cmd
 11239               	usb_cmd:
 11240 0001 00        		.skip 1,0
 11241               	.global	fwversion
 11242               		.section	.progmem.data,"a",@progbits
 11245               	fwversion:
 11246 0000 4657 5F56 		.string	"FW_VERSION"
 11246      4552 5349 
 11246      4F4E 00
 11247               	.global	hwversion
 11250               	hwversion:
 11251 000b 4857 5F56 		.string	"HW_VERSION"
 11251      4552 5349 
 11251      4F4E 00
 11252               		.comm message,2,1
 11253               	.global	updating
 11254               	.global	updating
 11255               		.section .bss
 11258               	updating:
 11259 0002 00        		.skip 1,0
 11260               	.global	twilio_number
 11261               		.data
 11262               	.LC7:
 11263 006a 2B31 3330 		.string	"+13042493059"
 11263      3432 3439 
 11263      3330 3539 
 11263      00
 11266               	twilio_number:
 11267 0077 0000      		.word	.LC7
 11268               	.global	max_dist
 11271               	max_dist:
 11272 0079 CD        		.byte	-51
 11273 007a CC        		.byte	-52
 11274 007b 4C        		.byte	76
 11275 007c 3E        		.byte	62
 11276               	.global	lng
 11279               	lng:
 11280 007d 7D        		.byte	125
 11281 007e 87        		.byte	-121
 11282 007f 8E        		.byte	-114
 11283 0080 C2        		.byte	-62
 11284               	.global	lat
 11287               	lat:
 11288 0081 C6        		.byte	-58
 11289 0082 2B        		.byte	43
 11290 0083 29        		.byte	41
 11291 0084 42        		.byte	66
 11292               	.global	timeout_or_sampling_no_longer_enabled
 11293               	.global	timeout_or_sampling_no_longer_enabled
 11294               		.section .bss
 11297               	timeout_or_sampling_no_longer_enabled:
 11298 0003 00        		.skip 1,0
 11299               	.global	ep_in_data
 11300               	.global	ep_in_data
 11303               	ep_in_data:
 11304 0004 0000 0000 		.skip 4,0
 11305               	.global	ep_in_pipe_data
 11306               		.data
 11309               	ep_in_pipe_data:
 11310 0085 0000      		.word	ep_in_pipe_buffer
 11311 0087 0000      		.word	ep_in_pipe_buffer
 11312 0089 00        		.byte	0
 11313               		.comm ep_in_pipe_buffer,512,1
 11314               		.text
 11315               	.Letext0:
 11316               		.file 8 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/stdint.h"
 11317               		.file 9 "/usr/lib/gcc/avr/4.6.2/../../../avr/include/avr/iox32a4u.h"
 11318               		.file 10 "usb/StdRequestType.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc86JUMW.s:2      *ABS*:000000000000003f __SREG__
     /tmp/cc86JUMW.s:3      *ABS*:000000000000003e __SP_H__
     /tmp/cc86JUMW.s:4      *ABS*:000000000000003d __SP_L__
     /tmp/cc86JUMW.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/cc86JUMW.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc86JUMW.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc86JUMW.s:14     .text:0000000000000000 uart_putchar.constprop.10
     /tmp/cc86JUMW.s:59     .text:0000000000000026 EVENT_USB_Device_ConfigurationChanged
     /tmp/cc86JUMW.s:11309  .data:0000000000000085 ep_in_pipe_data
                            *COM*:0000000000000200 ep_in_pipe_buffer
     /tmp/cc86JUMW.s:11303  .bss:0000000000000004 ep_in_data
     /tmp/cc86JUMW.s:152    .text:0000000000000074 __vector_125
     /tmp/cc86JUMW.s:290    .text:00000000000000fe __vector_126
     /tmp/cc86JUMW.s:11239  .bss:0000000000000001 usb_cmd
     /tmp/cc86JUMW.s:11233  .bss:0000000000000000 cmd_data
     /tmp/cc86JUMW.s:825    .text:0000000000000310 send_string
     /tmp/cc86JUMW.s:1451   .text:0000000000000546 turn_on_gps
     /tmp/cc86JUMW.s:1490   .text:0000000000000564 wake_up_gps
     /tmp/cc86JUMW.s:1506   .text:0000000000000566 gps_init
     /tmp/cc86JUMW.s:1570   .text:00000000000005a4 wake_up_gprs
     /tmp/cc86JUMW.s:1586   .text:00000000000005a6 gprs_init
     /tmp/cc86JUMW.s:1625   .text:00000000000005ca concat
     /tmp/cc86JUMW.s:1723   .text:0000000000000636 parse_nmea_string
     /tmp/cc86JUMW.s:1849   .text:00000000000006d2 distance
     /tmp/cc86JUMW.s:11287  .data:0000000000000081 lat
     /tmp/cc86JUMW.s:11279  .data:000000000000007d lng
     /tmp/cc86JUMW.s:2143   .text:0000000000000892 parse_nmea
     /tmp/cc86JUMW.s:11271  .data:0000000000000079 max_dist
     /tmp/cc86JUMW.s:11297  .bss:0000000000000003 timeout_or_sampling_no_longer_enabled
     /tmp/cc86JUMW.s:5760   .text:0000000000001716 uart_putchar
     /tmp/cc86JUMW.s:5805   .text:0000000000001736 uart_getchar
     /tmp/cc86JUMW.s:5839   .text:0000000000001742 send_message
     /tmp/cc86JUMW.s:10103  .text.startup:0000000000000000 main
     /tmp/cc86JUMW.s:11266  .data:0000000000000077 twilio_number
     /tmp/cc86JUMW.s:10662  .text:0000000000002652 EVENT_USB_Device_ControlRequest
                            *COM*:0000000000000002 message
     /tmp/cc86JUMW.s:11245  .progmem.data:0000000000000000 fwversion
     /tmp/cc86JUMW.s:11250  .progmem.data:000000000000000b hwversion
     /tmp/cc86JUMW.s:11191  .text:000000000000289a EVENT_USB_Device_ControlOUT
     /tmp/cc86JUMW.s:11258  .bss:0000000000000002 updating

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
endpoints
USB_Init
USB_HandleSetup
ep0_buf_out
__eeupd_block_x32a4u
malloc
strcpy
strcat
strtok
atof
__divsf3
__subsf3
__mulsf3
sin
cos
__addsf3
sqrt
atan2
__gtsf2
sprintf
USB_ConfigureClock
ep0_buf_in
__eerd_block_x32a4u
USB_ep0_send_progmem
